{"id":"636fc5605a5190dd0177604049293a38","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.6.0;\npragma experimental ABIEncoderV2;\n\nlibrary LzLib {\n    // LayerZero communication\n    struct CallParams {\n        address payable refundAddress;\n        address zroPaymentAddress;\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n\n    struct AirdropParams {\n        uint airdropAmount;\n        bytes32 airdropAddress;\n    }\n\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\n        } else {\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\n        }\n    }\n\n    // Build Adapter Params\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\n        // txType 1\n        // bytes  [2       32      ]\n        // fields [txType  extraGas]\n        return abi.encodePacked(uint16(1), _uaGas);\n    }\n\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\n        require(_params.airdropAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(_params.airdropAddress != bytes32(0x0), \"Airdrop address must be set\");\n\n        // txType 2\n        // bytes  [2       32        32            bytes[]         ]\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\n    }\n\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    // Decode Adapter Params\n    function decodeAdapterParams(bytes memory _adapterParams)\n        internal\n        pure\n        returns (\n            uint16 txType,\n            uint uaGas,\n            uint airdropAmount,\n            address payable airdropAddress\n        )\n    {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            txType := mload(add(_adapterParams, 2))\n            uaGas := mload(add(_adapterParams, 34))\n        }\n        require(txType == 1 || txType == 2, \"Unsupported txType\");\n        require(uaGas > 0, \"Gas too low\");\n\n        if (txType == 2) {\n            assembly {\n                airdropAmount := mload(add(_adapterParams, 66))\n                airdropAddress := mload(add(_adapterParams, 86))\n            }\n        }\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\n        return address(uint160(uint(_bytes32Address)));\n    }\n\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\n        return bytes32(uint(uint160(_address)));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/bridge/interfaces/ITokenBridge.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity >=0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\";\r\n\r\ninterface ITokenBridge {\r\n    enum PacketType {\r\n        SEND_TO,\r\n        RECEIVE_FROM\r\n    }\r\n\r\n    function sendTokenToDest(\r\n        uint16 _toLzDestChain,\r\n        address _tokenIn,\r\n        uint _amountIn,\r\n        address _tokenOut,\r\n        address _toAddress,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    function sendETHToDest(\r\n        uint16 _toLzDestChain,\r\n        address _toAddress,\r\n        uint _amountIn,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    function quoteForSend(\r\n        uint16 _toLzDestChain,\r\n        LzLib.CallParams calldata _callParams, \r\n        bytes calldata _adapterParams\r\n    ) external view returns (uint nativeFee, uint zroFee);\r\n\r\n    event Send(address indexed token, address indexed from, address indexed to, uint amountLD);\r\n    event Receive(address indexed token, address indexed to, uint amountLD);\r\n    event RegisterToken(address token);\r\n    event SetBridgeBP(uint bridgeFeeBP);\r\n    event SetWETH(address weth);\r\n    event SetGlobalPause(bool paused);\r\n    event SetTokenPause(address token, bool paused);\r\n    event SetLocalChainId(uint16 localChainId);\r\n    event SetAptosChainId(uint16 aptosChainId);\r\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\r\n    event WithdrawFee(address indexed token, address to, uint amountLD);\r\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\r\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\r\n}\r\n"},"contracts/bridge/interfaces/IWETH.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n\r\n    function transfer(address to, uint value) external returns (bool);\r\n\r\n    function withdraw(uint) external;\r\n\r\n    function approve(address to, uint value) external returns (bool);\r\n}\r\n"},"contracts/bridge/libraries/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\r\n/*\r\n * @title Solidity Bytes Arrays Utils\r\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\r\n *\r\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\r\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\r\n */\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nlibrary BytesLib {\r\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\r\n        bytes memory tempBytes;\r\n\r\n        assembly {\r\n            // Get a location of some free memory and store it in tempBytes as\r\n            // Solidity does for memory variables.\r\n            tempBytes := mload(0x40)\r\n\r\n            // Store the length of the first bytes array at the beginning of\r\n            // the memory for tempBytes.\r\n            let length := mload(_preBytes)\r\n            mstore(tempBytes, length)\r\n\r\n            // Maintain a memory counter for the current write location in the\r\n            // temp bytes array by adding the 32 bytes for the array length to\r\n            // the starting location.\r\n            let mc := add(tempBytes, 0x20)\r\n            // Stop copying when the memory counter reaches the length of the\r\n            // first bytes array.\r\n            let end := add(mc, length)\r\n\r\n            for {\r\n                // Initialize a copy counter to the start of the _preBytes data,\r\n                // 32 bytes into its memory.\r\n                let cc := add(_preBytes, 0x20)\r\n            } lt(mc, end) {\r\n                // Increase both counters by 32 bytes each iteration.\r\n                mc := add(mc, 0x20)\r\n                cc := add(cc, 0x20)\r\n            } {\r\n                // Write the _preBytes data into the tempBytes memory 32 bytes\r\n                // at a time.\r\n                mstore(mc, mload(cc))\r\n            }\r\n\r\n            // Add the length of _postBytes to the current length of tempBytes\r\n            // and store it as the new length in the first 32 bytes of the\r\n            // tempBytes memory.\r\n            length := mload(_postBytes)\r\n            mstore(tempBytes, add(length, mload(tempBytes)))\r\n\r\n            // Move the memory counter back from a multiple of 0x20 to the\r\n            // actual end of the _preBytes data.\r\n            mc := end\r\n            // Stop copying when the memory counter reaches the new combined\r\n            // length of the arrays.\r\n            end := add(mc, length)\r\n\r\n            for {\r\n                let cc := add(_postBytes, 0x20)\r\n            } lt(mc, end) {\r\n                mc := add(mc, 0x20)\r\n                cc := add(cc, 0x20)\r\n            } {\r\n                mstore(mc, mload(cc))\r\n            }\r\n\r\n            // Update the free-memory pointer by padding our last write location\r\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\r\n            // next 32 byte block, then round down to the nearest multiple of\r\n            // 32. If the sum of the length of the two arrays is zero then add\r\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\r\n            mstore(\r\n                0x40,\r\n                and(\r\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\r\n                    not(31) // Round down to the nearest 32 bytes.\r\n                )\r\n            )\r\n        }\r\n\r\n        return tempBytes;\r\n    }\r\n\r\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\r\n        assembly {\r\n            // Read the first 32 bytes of _preBytes storage, which is the length\r\n            // of the array. (We don't need to use the offset into the slot\r\n            // because arrays use the entire slot.)\r\n            let fslot := sload(_preBytes.slot)\r\n            // Arrays of 31 bytes or less have an even value in their slot,\r\n            // while longer arrays have an odd value. The actual length is\r\n            // the slot divided by two for odd values, and the lowest order\r\n            // byte divided by two for even values.\r\n            // If the slot is even, bitwise and the slot with 255 and divide by\r\n            // two to get the length. If the slot is odd, bitwise and the slot\r\n            // with -1 and divide by two.\r\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\r\n            let mlength := mload(_postBytes)\r\n            let newlength := add(slength, mlength)\r\n            // slength can contain both the length and contents of the array\r\n            // if length < 32 bytes so let's prepare for that\r\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\r\n            switch add(lt(slength, 32), lt(newlength, 32))\r\n            case 2 {\r\n                // Since the new array still fits in the slot, we just need to\r\n                // update the contents of the slot.\r\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\r\n                sstore(\r\n                    _preBytes.slot,\r\n                    // all the modifications to the slot are inside this\r\n                    // next block\r\n                    add(\r\n                        // we can just add to the slot contents because the\r\n                        // bytes we want to change are the LSBs\r\n                        fslot,\r\n                        add(\r\n                            mul(\r\n                                div(\r\n                                    // load the bytes from memory\r\n                                    mload(add(_postBytes, 0x20)),\r\n                                    // zero all bytes to the right\r\n                                    exp(0x100, sub(32, mlength))\r\n                                ),\r\n                                // and now shift left the number of bytes to\r\n                                // leave space for the length in the slot\r\n                                exp(0x100, sub(32, newlength))\r\n                            ),\r\n                            // increase length by the double of the memory\r\n                            // bytes length\r\n                            mul(mlength, 2)\r\n                        )\r\n                    )\r\n                )\r\n            }\r\n            case 1 {\r\n                // The stored value fits in the slot, but the combined value\r\n                // will exceed it.\r\n                // get the keccak hash to get the contents of the array\r\n                mstore(0x0, _preBytes.slot)\r\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\r\n\r\n                // save new length\r\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\r\n\r\n                // The contents of the _postBytes array start 32 bytes into\r\n                // the structure. Our first read should obtain the `submod`\r\n                // bytes that can fit into the unused space in the last word\r\n                // of the stored array. To get this, we read 32 bytes starting\r\n                // from `submod`, so the data we read overlaps with the array\r\n                // contents by `submod` bytes. Masking the lowest-order\r\n                // `submod` bytes allows us to add that value directly to the\r\n                // stored value.\r\n\r\n                let submod := sub(32, slength)\r\n                let mc := add(_postBytes, submod)\r\n                let end := add(_postBytes, mlength)\r\n                let mask := sub(exp(0x100, submod), 1)\r\n\r\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\r\n\r\n                for {\r\n                    mc := add(mc, 0x20)\r\n                    sc := add(sc, 1)\r\n                } lt(mc, end) {\r\n                    sc := add(sc, 1)\r\n                    mc := add(mc, 0x20)\r\n                } {\r\n                    sstore(sc, mload(mc))\r\n                }\r\n\r\n                mask := exp(0x100, sub(mc, end))\r\n\r\n                sstore(sc, mul(div(mload(mc), mask), mask))\r\n            }\r\n            default {\r\n                // get the keccak hash to get the contents of the array\r\n                mstore(0x0, _preBytes.slot)\r\n                // Start copying to the last used word of the stored array.\r\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\r\n\r\n                // save new length\r\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\r\n\r\n                // Copy over the first `submod` bytes of the new data as in\r\n                // case 1 above.\r\n                let slengthmod := mod(slength, 32)\r\n                let mlengthmod := mod(mlength, 32)\r\n                let submod := sub(32, slengthmod)\r\n                let mc := add(_postBytes, submod)\r\n                let end := add(_postBytes, mlength)\r\n                let mask := sub(exp(0x100, submod), 1)\r\n\r\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\r\n\r\n                for {\r\n                    sc := add(sc, 1)\r\n                    mc := add(mc, 0x20)\r\n                } lt(mc, end) {\r\n                    sc := add(sc, 1)\r\n                    mc := add(mc, 0x20)\r\n                } {\r\n                    sstore(sc, mload(mc))\r\n                }\r\n\r\n                mask := exp(0x100, sub(mc, end))\r\n\r\n                sstore(sc, mul(div(mload(mc), mask), mask))\r\n            }\r\n        }\r\n    }\r\n\r\n    function slice(\r\n        bytes memory _bytes,\r\n        uint _start,\r\n        uint _length\r\n    ) internal pure returns (bytes memory) {\r\n        require(_length + 31 >= _length, \"slice_overflow\");\r\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\r\n\r\n        bytes memory tempBytes;\r\n\r\n        assembly {\r\n            switch iszero(_length)\r\n            case 0 {\r\n                // Get a location of some free memory and store it in tempBytes as\r\n                // Solidity does for memory variables.\r\n                tempBytes := mload(0x40)\r\n\r\n                // The first word of the slice result is potentially a partial\r\n                // word read from the original array. To read it, we calculate\r\n                // the length of that partial word and start copying that many\r\n                // bytes into the array. The first word we copy will start with\r\n                // data we don't care about, but the last `lengthmod` bytes will\r\n                // land at the beginning of the contents of the new array. When\r\n                // we're done copying, we overwrite the full first word with\r\n                // the actual length of the slice.\r\n                let lengthmod := and(_length, 31)\r\n\r\n                // The multiplication in the next line is necessary\r\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\r\n                // the following copy loop was copying the origin's length\r\n                // and then ending prematurely not copying everything it should.\r\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\r\n                let end := add(mc, _length)\r\n\r\n                for {\r\n                    // The multiplication in the next line has the same exact purpose\r\n                    // as the one above.\r\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\r\n                } lt(mc, end) {\r\n                    mc := add(mc, 0x20)\r\n                    cc := add(cc, 0x20)\r\n                } {\r\n                    mstore(mc, mload(cc))\r\n                }\r\n\r\n                mstore(tempBytes, _length)\r\n\r\n                //update free-memory pointer\r\n                //allocating the array padded to 32 bytes like the compiler does now\r\n                mstore(0x40, and(add(mc, 31), not(31)))\r\n            }\r\n            //if we want a zero-length slice let's just return a zero-length array\r\n            default {\r\n                tempBytes := mload(0x40)\r\n                //zero out the 32 bytes slice we are about to return\r\n                //we need to do it because Solidity does not garbage collect\r\n                mstore(tempBytes, 0)\r\n\r\n                mstore(0x40, add(tempBytes, 0x20))\r\n            }\r\n        }\r\n\r\n        return tempBytes;\r\n    }\r\n\r\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\r\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\r\n        address tempAddress;\r\n\r\n        assembly {\r\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\r\n        }\r\n\r\n        return tempAddress;\r\n    }\r\n\r\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\r\n        require(_bytes.length >= _start + 1, \"toUint8_outOfBounds\");\r\n        uint8 tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0x1), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\r\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\r\n        uint16 tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0x2), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\r\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\r\n        uint32 tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0x4), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\r\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\r\n        uint64 tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0x8), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\r\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\r\n        uint96 tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0xc), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\r\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\r\n        uint128 tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0x10), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\r\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\r\n        uint tempUint;\r\n\r\n        assembly {\r\n            tempUint := mload(add(add(_bytes, 0x20), _start))\r\n        }\r\n\r\n        return tempUint;\r\n    }\r\n\r\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\r\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\r\n        bytes32 tempBytes32;\r\n\r\n        assembly {\r\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\r\n        }\r\n\r\n        return tempBytes32;\r\n    }\r\n\r\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\r\n        bool success = true;\r\n\r\n        assembly {\r\n            let length := mload(_preBytes)\r\n\r\n            // if lengths don't match the arrays are not equal\r\n            switch eq(length, mload(_postBytes))\r\n            case 1 {\r\n                // cb is a circuit breaker in the for loop since there's\r\n                //  no said feature for inline assembly loops\r\n                // cb = 1 - don't breaker\r\n                // cb = 0 - break\r\n                let cb := 1\r\n\r\n                let mc := add(_preBytes, 0x20)\r\n                let end := add(mc, length)\r\n\r\n                for {\r\n                    let cc := add(_postBytes, 0x20)\r\n                    // the next line is the loop condition:\r\n                    // while(uint256(mc < end) + cb == 2)\r\n                } eq(add(lt(mc, end), cb), 2) {\r\n                    mc := add(mc, 0x20)\r\n                    cc := add(cc, 0x20)\r\n                } {\r\n                    // if any of these checks fails then arrays are not equal\r\n                    if iszero(eq(mload(mc), mload(cc))) {\r\n                        // unsuccess:\r\n                        success := 0\r\n                        cb := 0\r\n                    }\r\n                }\r\n            }\r\n            default {\r\n                // unsuccess:\r\n                success := 0\r\n            }\r\n        }\r\n\r\n        return success;\r\n    }\r\n\r\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\r\n        bool success = true;\r\n\r\n        assembly {\r\n            // we know _preBytes_offset is 0\r\n            let fslot := sload(_preBytes.slot)\r\n            // Decode the length of the stored array like in concatStorage().\r\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\r\n            let mlength := mload(_postBytes)\r\n\r\n            // if lengths don't match the arrays are not equal\r\n            switch eq(slength, mlength)\r\n            case 1 {\r\n                // slength can contain both the length and contents of the array\r\n                // if length < 32 bytes so let's prepare for that\r\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\r\n                if iszero(iszero(slength)) {\r\n                    switch lt(slength, 32)\r\n                    case 1 {\r\n                        // blank the last byte which is the length\r\n                        fslot := mul(div(fslot, 0x100), 0x100)\r\n\r\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\r\n                            // unsuccess:\r\n                            success := 0\r\n                        }\r\n                    }\r\n                    default {\r\n                        // cb is a circuit breaker in the for loop since there's\r\n                        //  no said feature for inline assembly loops\r\n                        // cb = 1 - don't breaker\r\n                        // cb = 0 - break\r\n                        let cb := 1\r\n\r\n                        // get the keccak hash to get the contents of the array\r\n                        mstore(0x0, _preBytes.slot)\r\n                        let sc := keccak256(0x0, 0x20)\r\n\r\n                        let mc := add(_postBytes, 0x20)\r\n                        let end := add(mc, mlength)\r\n\r\n                        // the next line is the loop condition:\r\n                        // while(uint256(mc < end) + cb == 2)\r\n                        for {\r\n\r\n                        } eq(add(lt(mc, end), cb), 2) {\r\n                            sc := add(sc, 1)\r\n                            mc := add(mc, 0x20)\r\n                        } {\r\n                            if iszero(eq(sload(sc), mload(mc))) {\r\n                                // unsuccess:\r\n                                success := 0\r\n                                cb := 0\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            default {\r\n                // unsuccess:\r\n                success := 0\r\n            }\r\n        }\r\n\r\n        return success;\r\n    }\r\n}\r\n"},"contracts/bridge/libraries/ExcessivelySafeCall.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\r\npragma solidity >=0.7.6;\r\n\r\nlibrary ExcessivelySafeCall {\r\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\r\n\r\n    /// @notice Use when you _really_ really _really_ don't trust the called\r\n    /// contract. This prevents the called contract from causing reversion of\r\n    /// the caller in as many ways as we can.\r\n    /// @dev The main difference between this and a solidity low-level call is\r\n    /// that we limit the number of bytes that the callee can cause to be\r\n    /// copied to caller memory. This prevents stupid things like malicious\r\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\r\n    /// to memory.\r\n    /// @param _target The address to call\r\n    /// @param _gas The amount of gas to forward to the remote contract\r\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\r\n    /// to memory.\r\n    /// @param _calldata The data to send to the remote contract\r\n    /// @return success and returndata, as `.call()`. Returndata is capped to\r\n    /// `_maxCopy` bytes.\r\n    function excessivelySafeCall(\r\n        address _target,\r\n        uint _gas,\r\n        uint16 _maxCopy,\r\n        bytes memory _calldata\r\n    ) internal returns (bool, bytes memory) {\r\n        // set up for assembly call\r\n        uint _toCopy;\r\n        bool _success;\r\n        bytes memory _returnData = new bytes(_maxCopy);\r\n        // dispatch message to recipient\r\n        // by assembly calling \"handle\" function\r\n        // we call via assembly to avoid memcopying a very large returndata\r\n        // returned by a malicious contract\r\n        assembly {\r\n            _success := call(\r\n                _gas, // gas\r\n                _target, // recipient\r\n                0, // ether value\r\n                add(_calldata, 0x20), // inloc\r\n                mload(_calldata), // inlen\r\n                0, // outloc\r\n                0 // outlen\r\n            )\r\n            // limit our copy to 256 bytes\r\n            _toCopy := returndatasize()\r\n            if gt(_toCopy, _maxCopy) {\r\n                _toCopy := _maxCopy\r\n            }\r\n            // Store the length of the copied bytes\r\n            mstore(_returnData, _toCopy)\r\n            // copy the bytes from returndata[0:_toCopy]\r\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\r\n        }\r\n        return (_success, _returnData);\r\n    }\r\n\r\n    /// @notice Use when you _really_ really _really_ don't trust the called\r\n    /// contract. This prevents the called contract from causing reversion of\r\n    /// the caller in as many ways as we can.\r\n    /// @dev The main difference between this and a solidity low-level call is\r\n    /// that we limit the number of bytes that the callee can cause to be\r\n    /// copied to caller memory. This prevents stupid things like malicious\r\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\r\n    /// to memory.\r\n    /// @param _target The address to call\r\n    /// @param _gas The amount of gas to forward to the remote contract\r\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\r\n    /// to memory.\r\n    /// @param _calldata The data to send to the remote contract\r\n    /// @return success and returndata, as `.call()`. Returndata is capped to\r\n    /// `_maxCopy` bytes.\r\n    function excessivelySafeStaticCall(\r\n        address _target,\r\n        uint _gas,\r\n        uint16 _maxCopy,\r\n        bytes memory _calldata\r\n    ) internal view returns (bool, bytes memory) {\r\n        // set up for assembly call\r\n        uint _toCopy;\r\n        bool _success;\r\n        bytes memory _returnData = new bytes(_maxCopy);\r\n        // dispatch message to recipient\r\n        // by assembly calling \"handle\" function\r\n        // we call via assembly to avoid memcopying a very large returndata\r\n        // returned by a malicious contract\r\n        assembly {\r\n            _success := staticcall(\r\n                _gas, // gas\r\n                _target, // recipient\r\n                add(_calldata, 0x20), // inloc\r\n                mload(_calldata), // inlen\r\n                0, // outloc\r\n                0 // outlen\r\n            )\r\n            // limit our copy to 256 bytes\r\n            _toCopy := returndatasize()\r\n            if gt(_toCopy, _maxCopy) {\r\n                _toCopy := _maxCopy\r\n            }\r\n            // Store the length of the copied bytes\r\n            mstore(_returnData, _toCopy)\r\n            // copy the bytes from returndata[0:_toCopy]\r\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\r\n        }\r\n        return (_success, _returnData);\r\n    }\r\n\r\n    /**\r\n     * @notice Swaps function selectors in encoded contract calls\r\n     * @dev Allows reuse of encoded calldata for functions with identical\r\n     * argument types but different names. It simply swaps out the first 4 bytes\r\n     * for the new selector. This function modifies memory in place, and should\r\n     * only be used with caution.\r\n     * @param _newSelector The new 4-byte selector\r\n     * @param _buf The encoded contract args\r\n     */\r\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\r\n        require(_buf.length >= 4);\r\n        uint _mask = LOW_28_MASK;\r\n        assembly {\r\n            // load the first word of\r\n            let _word := mload(add(_buf, 0x20))\r\n            // mask out the top 4 bytes\r\n            // /x\r\n            _word := and(_word, _mask)\r\n            _word := or(_newSelector, _word)\r\n            mstore(add(_buf, 0x20), _word)\r\n        }\r\n    }\r\n}\r\n"},"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.5.0;\r\n\r\nimport \"./ILayerZeroUserApplicationConfig.sol\";\r\n\r\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\r\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\r\n    // @param _dstChainId - the destination chain identifier\r\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\r\n    // @param _payload - a custom bytes payload to send to the destination contract\r\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\r\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\r\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\r\n    function send(\r\n        uint16 _dstChainId,\r\n        bytes calldata _destination,\r\n        bytes calldata _payload,\r\n        address payable _refundAddress,\r\n        address _zroPaymentAddress,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    // @notice used by the messaging library to publish verified payload\r\n    // @param _srcChainId - the source chain identifier\r\n    // @param _srcAddress - the source contract (as bytes) at the source chain\r\n    // @param _dstAddress - the address on destination chain\r\n    // @param _nonce - the unbound message ordering nonce\r\n    // @param _gasLimit - the gas limit for external contract execution\r\n    // @param _payload - verified payload to send to the destination contract\r\n    function receivePayload(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress,\r\n        address _dstAddress,\r\n        uint64 _nonce,\r\n        uint _gasLimit,\r\n        bytes calldata _payload\r\n    ) external;\r\n\r\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\r\n    // @param _srcChainId - the source chain identifier\r\n    // @param _srcAddress - the source chain contract address\r\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\r\n\r\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\r\n    // @param _srcAddress - the source chain contract address\r\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\r\n\r\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\r\n    // @param _dstChainId - the destination chain identifier\r\n    // @param _userApplication - the user app address on this EVM chain\r\n    // @param _payload - the custom message to send over LayerZero\r\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\r\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\r\n    function estimateFees(\r\n        uint16 _dstChainId,\r\n        address _userApplication,\r\n        bytes calldata _payload,\r\n        bool _payInZRO,\r\n        bytes calldata _adapterParam\r\n    ) external view returns (uint nativeFee, uint zroFee);\r\n\r\n    // @notice get this Endpoint's immutable source identifier\r\n    function getChainId() external view returns (uint16);\r\n\r\n    // @notice the interface to retry failed message on this Endpoint destination\r\n    // @param _srcChainId - the source chain identifier\r\n    // @param _srcAddress - the source chain contract address\r\n    // @param _payload - the payload to be retried\r\n    function retryPayload(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress,\r\n        bytes calldata _payload\r\n    ) external;\r\n\r\n    // @notice query if any STORED payload (message blocking) at the endpoint.\r\n    // @param _srcChainId - the source chain identifier\r\n    // @param _srcAddress - the source chain contract address\r\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\r\n\r\n    // @notice query if the _libraryAddress is valid for sending msgs.\r\n    // @param _userApplication - the user app address on this EVM chain\r\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\r\n\r\n    // @notice query if the _libraryAddress is valid for receiving msgs.\r\n    // @param _userApplication - the user app address on this EVM chain\r\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\r\n\r\n    // @notice query if the non-reentrancy guard for send() is on\r\n    // @return true if the guard is on. false otherwise\r\n    function isSendingPayload() external view returns (bool);\r\n\r\n    // @notice query if the non-reentrancy guard for receive() is on\r\n    // @return true if the guard is on. false otherwise\r\n    function isReceivingPayload() external view returns (bool);\r\n\r\n    // @notice get the configuration of the LayerZero messaging library of the specified version\r\n    // @param _version - messaging library version\r\n    // @param _chainId - the chainId for the pending config change\r\n    // @param _userApplication - the contract address of the user application\r\n    // @param _configType - type of configuration. every messaging library has its own convention.\r\n    function getConfig(\r\n        uint16 _version,\r\n        uint16 _chainId,\r\n        address _userApplication,\r\n        uint _configType\r\n    ) external view returns (bytes memory);\r\n\r\n    // @notice get the send() LayerZero messaging library version\r\n    // @param _userApplication - the contract address of the user application\r\n    function getSendVersion(address _userApplication) external view returns (uint16);\r\n\r\n    // @notice get the lzReceive() LayerZero messaging library version\r\n    // @param _userApplication - the contract address of the user application\r\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\r\n}\r\n"},"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface ILayerZeroReceiver {\r\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\r\n    // @param _srcChainId - the source endpoint identifier\r\n    // @param _srcAddress - the source sending contract address from the source chain\r\n    // @param _nonce - the ordered message nonce\r\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\r\n    function lzReceive(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress,\r\n        uint64 _nonce,\r\n        bytes calldata _payload\r\n    ) external;\r\n}\r\n"},"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface ILayerZeroUserApplicationConfig {\r\n    // @notice set the configuration of the LayerZero messaging library of the specified version\r\n    // @param _version - messaging library version\r\n    // @param _chainId - the chainId for the pending config change\r\n    // @param _configType - type of configuration. every messaging library has its own convention.\r\n    // @param _config - configuration in the bytes. can encode arbitrary content.\r\n    function setConfig(\r\n        uint16 _version,\r\n        uint16 _chainId,\r\n        uint _configType,\r\n        bytes calldata _config\r\n    ) external;\r\n\r\n    // @notice set the send() LayerZero messaging library version to _version\r\n    // @param _version - new messaging library version\r\n    function setSendVersion(uint16 _version) external;\r\n\r\n    // @notice set the lzReceive() LayerZero messaging library version to _version\r\n    // @param _version - new messaging library version\r\n    function setReceiveVersion(uint16 _version) external;\r\n\r\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\r\n    // @param _srcChainId - the chainId of the source chain\r\n    // @param _srcAddress - the contract address of the source contract at the source chain\r\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\r\n}\r\n"},"contracts/bridge/lzApp/LzApp.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"./interfaces/ILayerZeroReceiver.sol\";\r\nimport \"./interfaces/ILayerZeroUserApplicationConfig.sol\";\r\nimport \"./interfaces/ILayerZeroEndpoint.sol\";\r\nimport \"../libraries/BytesLib.sol\";\r\n\r\n/*\r\n * a generic LzReceiver implementation\r\n */\r\nabstract contract LzApp is Initializable, OwnableUpgradeable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\r\n    using BytesLib for bytes;\r\n\r\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\r\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\r\n\r\n    ILayerZeroEndpoint public lzEndpoint;\r\n    mapping(uint16 => bytes) public trustedRemoteLookup;\r\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\r\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\r\n    address public precrime;\r\n\r\n    event SetPrecrime(address precrime);\r\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\r\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\r\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\r\n\r\n    function __LzApp_init(address _endpoint) internal onlyInitializing {\r\n        __Ownable_init();\r\n        __LzApp_init_unchained(_endpoint);\r\n    }\r\n\r\n    function __LzApp_init_unchained(address _endpoint) internal onlyInitializing {\r\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\r\n    }\r\n\r\n    function lzReceive(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress,\r\n        uint64 _nonce,\r\n        bytes calldata _payload\r\n    ) public virtual override {\r\n        // lzReceive must be called by the endpoint for security\r\n        require(_msgSender() == address(lzEndpoint), \"LzApp: invalid endpoint caller\");\r\n\r\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\r\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\r\n        require(\r\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\r\n            \"LzApp: invalid source sending contract\"\r\n        );\r\n\r\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\r\n    }\r\n\r\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\r\n    function _blockingLzReceive(\r\n        uint16 _srcChainId,\r\n        bytes memory _srcAddress,\r\n        uint64 _nonce,\r\n        bytes memory _payload\r\n    ) internal virtual;\r\n\r\n    function _lzSend(\r\n        uint16 _dstChainId,\r\n        bytes memory _payload,\r\n        address payable _refundAddress,\r\n        address _zroPaymentAddress,\r\n        bytes memory _adapterParams,\r\n        uint _nativeFee\r\n    ) internal virtual {\r\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\r\n        require(trustedRemote.length != 0, \"LzApp: destination chain is not a trusted source\");\r\n        _checkPayloadSize(_dstChainId, _payload.length);\r\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\r\n    }\r\n\r\n    function _checkGasLimit(\r\n        uint16 _dstChainId,\r\n        uint16 _type,\r\n        bytes memory _adapterParams,\r\n        uint _extraGas\r\n    ) internal view virtual {\r\n        uint providedGasLimit = _getGasLimit(_adapterParams);\r\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\r\n        require(minGasLimit > 0, \"LzApp: minGasLimit not set\");\r\n        require(providedGasLimit >= minGasLimit + _extraGas, \"LzApp: gas limit is too low\");\r\n    }\r\n\r\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\r\n        require(_adapterParams.length >= 34, \"LzApp: invalid adapterParams\");\r\n        assembly {\r\n            gasLimit := mload(add(_adapterParams, 34))\r\n        }\r\n    }\r\n\r\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\r\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\r\n        if (payloadSizeLimit == 0) {\r\n            // use default if not set\r\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\r\n        }\r\n        require(_payloadSize <= payloadSizeLimit, \"LzApp: payload size is too large\");\r\n    }\r\n\r\n    //---------------------------UserApplication config----------------------------------------\r\n    function getConfig(\r\n        uint16 _version,\r\n        uint16 _chainId,\r\n        address,\r\n        uint _configType\r\n    ) external view returns (bytes memory) {\r\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\r\n    }\r\n\r\n    // generic config for LayerZero user Application\r\n    function setConfig(\r\n        uint16 _version,\r\n        uint16 _chainId,\r\n        uint _configType,\r\n        bytes calldata _config\r\n    ) external override onlyOwner {\r\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\r\n    }\r\n\r\n    function setSendVersion(uint16 _version) external override onlyOwner {\r\n        lzEndpoint.setSendVersion(_version);\r\n    }\r\n\r\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\r\n        lzEndpoint.setReceiveVersion(_version);\r\n    }\r\n\r\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\r\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\r\n    }\r\n\r\n    // _path = abi.encodePacked(remoteAddress, localAddress)\r\n    // this function set the trusted path for the cross-chain communication\r\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\r\n        trustedRemoteLookup[_remoteChainId] = _path;\r\n        emit SetTrustedRemote(_remoteChainId, _path);\r\n    }\r\n\r\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\r\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\r\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\r\n    }\r\n\r\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\r\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\r\n        require(path.length != 0, \"LzApp: no trusted path record\");\r\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\r\n    }\r\n\r\n    function setPrecrime(address _precrime) external onlyOwner {\r\n        precrime = _precrime;\r\n        emit SetPrecrime(_precrime);\r\n    }\r\n\r\n    function setMinDstGas(\r\n        uint16 _dstChainId,\r\n        uint16 _packetType,\r\n        uint _minGas\r\n    ) external onlyOwner {\r\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\r\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\r\n    }\r\n\r\n    // if the size is 0, it means default size limit\r\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\r\n        payloadSizeLimitLookup[_dstChainId] = _size;\r\n    }\r\n\r\n    //--------------------------- VIEW FUNCTION ----------------------------------------\r\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\r\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\r\n        return keccak256(trustedSource) == keccak256(_srcAddress);\r\n    }\r\n}\r\n"},"contracts/bridge/lzApp/NonblockingLzApp.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"./LzApp.sol\";\r\nimport \"../libraries/ExcessivelySafeCall.sol\";\r\n\r\n/*\r\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\r\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\r\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\r\n */\r\nabstract contract NonblockingLzApp is Initializable, LzApp {\r\n    using ExcessivelySafeCall for address;\r\n\r\n    function __NonblockingLzApp_init(address _endpoint) internal onlyInitializing {\r\n        __NonblockingLzApp_init_unchained(_endpoint);\r\n    }\r\n\r\n    function __NonblockingLzApp_init_unchained(address _endpoint) internal onlyInitializing {\r\n        __LzApp_init(_endpoint);\r\n    }\r\n\r\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\r\n\r\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\r\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\r\n\r\n    // overriding the virtual function in LzReceiver\r\n    function _blockingLzReceive(\r\n        uint16 _srcChainId,\r\n        bytes memory _srcAddress,\r\n        uint64 _nonce,\r\n        bytes memory _payload\r\n    ) internal virtual override {\r\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\r\n            gasleft(),\r\n            150,\r\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\r\n        );\r\n        // try-catch all errors/exceptions\r\n        if (!success) {\r\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\r\n        }\r\n    }\r\n\r\n    function _storeFailedMessage(\r\n        uint16 _srcChainId,\r\n        bytes memory _srcAddress,\r\n        uint64 _nonce,\r\n        bytes memory _payload,\r\n        bytes memory _reason\r\n    ) internal virtual {\r\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\r\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\r\n    }\r\n\r\n    function nonblockingLzReceive(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress,\r\n        uint64 _nonce,\r\n        bytes calldata _payload\r\n    ) public virtual {\r\n        // only internal transaction\r\n        require(_msgSender() == address(this), \"NonblockingLzApp: caller must be LzApp\");\r\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\r\n    }\r\n\r\n    //@notice override this function\r\n    function _nonblockingLzReceive(\r\n        uint16 _srcChainId,\r\n        bytes memory _srcAddress,\r\n        uint64 _nonce,\r\n        bytes memory _payload\r\n    ) internal virtual;\r\n\r\n    function retryMessage(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress,\r\n        uint64 _nonce,\r\n        bytes calldata _payload\r\n    ) public payable virtual {\r\n        // assert there is message to retry\r\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\r\n        require(payloadHash != bytes32(0), \"NonblockingLzApp: no stored message\");\r\n        require(keccak256(_payload) == payloadHash, \"NonblockingLzApp: invalid payload\");\r\n        // clear the stored message\r\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\r\n        // execute the message. revert if it fails again\r\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\r\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\r\n    }\r\n}\r\n"},"contracts/bridge/TokenBridge.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity 0.8.20;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\nimport \"./lzApp/NonblockingLzApp.sol\";\r\nimport \"./interfaces/IWETH.sol\";\r\nimport \"./interfaces/ITokenBridge.sol\";\r\nimport \"../token/interfaces/IExchange.sol\";\r\nimport \"../token/interfaces/IToken.sol\";\r\n\r\n// Mumbai (Polygon Testnet)\r\n// chainId: 10109\r\n// endpoint: 0xf69186dfBa60DdB133E91E9A4B5673624293d8F8\r\n\r\n// Fantom (Testnet)\r\n// chainId: 10112\r\n// endpoint: 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf\r\n\r\n// BNB Chain (Testnet)\r\n// chainId: 10102\r\n// endpoint: 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1\r\n\r\n// Sepolia (Testnet)\r\n// chainId: 10161\r\n// endpoint: 0xae92d5aD7583AD66E49A0c67BAd18F6ba52dDDc1\r\n\r\ncontract TokenBridge is \r\n    UUPSUpgradeable, \r\n    OwnableUpgradeable, \r\n    ReentrancyGuardUpgradeable,\r\n    NonblockingLzApp,\r\n    ITokenBridge\r\n{\r\n    using SafeERC20 for IERC20;\r\n\r\n    uint public constant BP_DENOMINATOR = 10000;\r\n    uint8 public constant SHARED_DECIMALS = 6;\r\n\r\n    uint16 public toLzChainId;\r\n\r\n    uint public bridgeFeeBP;\r\n\r\n    mapping(address => uint) public tvlSDs; // token address => tvl\r\n    mapping(address => bool) public supportedTokens;\r\n    mapping(address => bool) public pausedTokens; // token address => paused\r\n    mapping(uint => address) public priceFeed; // chain id => ETH-USD address\r\n    mapping(uint16 => bool) public enableChain; // whether lzDestchain id is enabled or not\r\n    \r\n    address public weth;\r\n\r\n    bool public useCustomAdapterParams;\r\n    bool public globalPaused;\r\n    bool public emergencyWithdrawEnabled;\r\n    uint public emergencyWithdrawTime;\r\n\r\n    AggregatorV3Interface public dataFeed;\r\n\r\n    modifier whenNotPaused(address _token) {\r\n        require(!globalPaused && !pausedTokens[_token], \"TokenBridge: paused\");\r\n        _;\r\n    }\r\n\r\n    modifier emergencyWithdrawUnlocked() {\r\n        require(emergencyWithdrawEnabled && block.timestamp >= emergencyWithdrawTime, \"TokenBridge: emergency withdraw locked\");\r\n        _;\r\n    }\r\n\r\n    function initialize(\r\n        address _layerZeroEndpoint\r\n    ) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init();\r\n        __NonblockingLzApp_init(_layerZeroEndpoint);\r\n        __ReentrancyGuard_init();\r\n        __Bridge_init_unchained();\r\n    }\r\n\r\n\tfunction _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n\tfunction __Bridge_init_unchained() internal initializer {\r\n        priceFeed[11155111] = 0x694AA1769357215DE4FAC081bf1f309aDC325306; // ETH-USD\r\n        priceFeed[97] = 0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526; // BNB-USD\r\n        priceFeed[4002] = 0xB8C458C957a6e6ca7Cc53eD95bEA548c52AFaA24; // FTM-USD\r\n        priceFeed[80001] = 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada; // MATIC-USD\r\n\r\n        uint cid = getChainID();\r\n        dataFeed = AggregatorV3Interface(priceFeed[cid]);\r\n\t}\r\n\r\n    function sendTokenToDest(\r\n        uint16 _toLzDestChain,\r\n        address _tokenIn,\r\n        uint _amountIn,\r\n        address _tokenOut,\r\n        address _toAddress,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable override whenNotPaused(_tokenIn) nonReentrant {\r\n        require(\r\n            supportedTokens[_tokenIn] && supportedTokens[_tokenOut], \r\n            \"TokenBridge: input token and output token are not supported\"\r\n        );\r\n        // lock token\r\n        _amountIn = _lockTokenFrom(_tokenIn, msg.sender, _amountIn);\r\n        uint _priceFeedIn = calcInTokenPrice(_tokenIn, _amountIn);\r\n        // add tvl\r\n        require(_amountIn > 0, \"TokenBridge: amountIn must be greater than 0\");\r\n        tvlSDs[_tokenIn] += _amountIn;\r\n        // send to remote destination chain\r\n        _sendToken(\r\n            _toLzDestChain, _priceFeedIn, _tokenOut, _toAddress, \r\n            _callParams, _adapterParams, msg.value\r\n        );\r\n        emit Send(_tokenIn, msg.sender, _toAddress, _amountIn);\r\n    }\r\n\r\n    function sendETHToDest(\r\n        uint16 _toLzDestChain,\r\n        address _toAddress,\r\n        uint _amountIn,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable override whenNotPaused(weth) nonReentrant {\r\n        address _weth = weth; // save gas\r\n        require(_weth != address(0) && supportedTokens[_weth], \"TokenBridge: ETH is not supported\");\r\n        require(_amountIn > 0, \"TokenBridge: amount must be greater than 0\");\r\n        require(msg.value >= _amountIn, \"TokenBridge: fee not enough\");\r\n\r\n        // wrap eth and add tvl\r\n        IWETH(_weth).deposit{value: _amountIn}();\r\n        tvlSDs[_weth] += _amountIn;\r\n\r\n        int np = getChainlinkDataFeedLatestAnswer();\r\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\r\n        // send to remote destination chain\r\n        _sendToken(\r\n            _toLzDestChain, pn * _amountIn, address(0x0), _toAddress,\r\n            _callParams, _adapterParams, msg.value - _amountIn\r\n        );\r\n        emit Send(address(0), msg.sender, _toAddress, _amountIn);\r\n    }\r\n\r\n    function quoteForSend(\r\n        uint16 _toLzDestChain,\r\n        LzLib.CallParams calldata _callParams, \r\n        bytes calldata _adapterParams\r\n    ) external view override returns(uint nativeFee, uint zroFee) {\r\n        _checkAdapterParams(_adapterParams);\r\n        bytes memory payload = _encodeSendPayload(0, address(0), address(0));\r\n        bool payInZRO = _callParams.zroPaymentAddress != address(0);\r\n        return\r\n            lzEndpoint.estimateFees(_toLzDestChain, address(this), payload, payInZRO, _adapterParams);\r\n    }\r\n\r\n    function _sendToken(\r\n        uint16 _toLzDestChain,\r\n        uint _priceFeedIn,\r\n        address _tokenOut,\r\n        address _toAddress,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams,\r\n        uint _fee\r\n    ) internal {\r\n        _checkAdapterParams(_adapterParams);\r\n        bytes memory payload = _encodeSendPayload(_priceFeedIn, _tokenOut, _toAddress);\r\n        _lzSend(\r\n            _toLzDestChain,\r\n            payload,\r\n            _callParams.refundAddress,\r\n            _callParams.zroPaymentAddress,\r\n            _adapterParams,\r\n            _fee\r\n        );\r\n        toLzChainId = _toLzDestChain;\r\n    }\r\n\r\n    function trustAddress(uint16 _lzDestChainId, address _otherContract) public onlyOwner {\r\n        require(enableChain[_lzDestChainId], \"TokenBridge: this dest chain id is not enabled\");\r\n        trustedRemoteLookup[_lzDestChainId] = abi.encodePacked(_otherContract, address(this));\r\n    }\r\n\r\n    function setEnableChain(uint16 _lzDestChainId, bool enable) external onlyOwner {\r\n        enableChain[_lzDestChainId] = enable;\r\n    }\r\n\r\n    function setBridgeFeeBP(uint _bridgeFeeBP) external onlyOwner {\r\n        require(_bridgeFeeBP <= BP_DENOMINATOR, \"TokenBridge: bridge fee > 100%\");\r\n        bridgeFeeBP = _bridgeFeeBP;\r\n        emit SetBridgeBP(_bridgeFeeBP);\r\n    }\r\n\r\n    function setWETH(address _weth) external onlyOwner {\r\n        require(_weth != address(0), \"TokenBridge: invalid token address\");\r\n        weth = _weth;\r\n        emit SetWETH(_weth);\r\n    }\r\n\r\n    function setGlobalPause(bool _paused) external onlyOwner {\r\n        globalPaused = _paused;\r\n        emit SetGlobalPause(_paused);\r\n    }\r\n\r\n    function setTokenPause(address _token, bool _paused) external onlyOwner {\r\n        pausedTokens[_token] = _paused;\r\n        emit SetTokenPause(_token, _paused);\r\n    }\r\n\r\n    function setUseCustomAdapterParams(bool _useCustomAdapterParams) external onlyOwner {\r\n        useCustomAdapterParams = _useCustomAdapterParams;\r\n        emit SetUseCustomAdapterParams(_useCustomAdapterParams);\r\n    }\r\n\r\n    function withdrawFee(\r\n        address _token,\r\n        address _to,\r\n        uint _amountLD\r\n    ) public onlyOwner {\r\n        uint feeLD = accruedFeeLD(_token);\r\n        require(_amountLD <= feeLD, \"TokenBridge: fee not enough\");\r\n\r\n        IERC20(_token).safeTransfer(_to, _amountLD);\r\n        emit WithdrawFee(_token, _to, _amountLD);\r\n    }\r\n\r\n    function withdrawTVL(\r\n        address _token,\r\n        address _to,\r\n        uint _amount\r\n    ) public onlyOwner emergencyWithdrawUnlocked {\r\n        tvlSDs[_token] -= _amount;\r\n        IERC20(_token).safeTransfer(_to, _amount);\r\n        emit WithdrawTVL(_token, _to, _amount);\r\n    }\r\n\r\n    function withdrawEmergency(address _token, address _to) external onlyOwner {\r\n        // modifier redundant for extra safety\r\n        withdrawFee(_token, _to, accruedFeeLD(_token));\r\n        withdrawTVL(_token, _to, tvlSDs[_token]);\r\n    }\r\n\r\n    function enableEmergencyWithdraw(bool enabled) external onlyOwner {\r\n        emergencyWithdrawEnabled = enabled;\r\n        emergencyWithdrawTime = enabled ? block.timestamp + 1 weeks : 0; // overrides existing lock time\r\n        emit EnableEmergencyWithdraw(enabled, emergencyWithdrawTime);\r\n    }\r\n\r\n    // override the renounce ownership inherited by zeppelin ownable\r\n    function renounceOwnership() public override onlyOwner {}\r\n\r\n    // receive ETH from WETH\r\n    receive() external payable {}\r\n\r\n    function accruedFeeLD(address _token) public view returns (uint) {\r\n        return IERC20(_token).balanceOf(address(this)) - tvlSDs[_token];\r\n    }\r\n\r\n    // ---------------------- internal functions ----------------------\r\n    function _nonblockingLzReceive(\r\n        uint16 _srcLzChainId,\r\n        bytes memory,\r\n        uint64,\r\n        bytes memory _payload\r\n    ) internal override {\r\n        require(enableChain[_srcLzChainId], \"TokenBridge: invalid source chain id\");\r\n\r\n        (uint priceFeedIn, address tokenOut, address to, bool unwrap) = _decodeReceivePayload(_payload);\r\n        address token;\r\n        uint amountOut;\r\n        if(unwrap) {\r\n            token = weth;\r\n            amountOut = calaOutEthAmount(priceFeedIn);\r\n        } else {\r\n            token = tokenOut;\r\n            address pair = IToken(token).pair();\r\n            require(pair != address(0x0), \"TokenBridge: tokenOut has invalid liquidity pool\");\r\n            amountOut = calcOutTokenAmount(priceFeedIn, token);\r\n        }\r\n        require(!globalPaused && !pausedTokens[token], \"TokenBridge: paused\");\r\n        require(supportedTokens[token], \"TokenBridge: token is not supported\");\r\n\r\n        // sub tvl\r\n        uint tvlSD = tvlSDs[token];\r\n        require(tvlSD >= amountOut, \"TokenBridge: insufficient liquidity\");\r\n        tvlSDs[token] = tvlSD - amountOut;\r\n\r\n        // pay fee\r\n        (amountOut, ) = bridgeFeeBP > 0 ? _payFee(amountOut) : (amountOut, 0);\r\n\r\n        // redeem token to receiver\r\n        if (token == weth && unwrap) {\r\n            _redeemETHTo(weth, payable(to), amountOut);\r\n            emit Receive(address(0), to, amountOut);\r\n        } else {\r\n            to = to == address(0) ? address(0xdEaD) : to; // avoid failure in safeTransfer()\r\n            IERC20(token).safeTransfer(to, amountOut);\r\n            emit Receive(token, to, amountOut);\r\n        }\r\n    }\r\n\r\n    function _redeemETHTo(\r\n        address _weth,\r\n        address payable _to,\r\n        uint _amount\r\n    ) internal {\r\n        IWETH(_weth).withdraw(_amount);\r\n        _to.transfer(_amount);\r\n    }\r\n\r\n    function _lockTokenFrom(\r\n        address _tokenIn,\r\n        address _from,\r\n        uint _amountIn\r\n    ) internal returns (uint) {\r\n        // support token with transfer fee\r\n        uint balanceBefore = IERC20(_tokenIn).balanceOf(address(this));\r\n        IERC20(_tokenIn).safeTransferFrom(_from, address(this), _amountIn);\r\n        uint balanceAfter = IERC20(_tokenIn).balanceOf(address(this));\r\n        return balanceAfter - balanceBefore;\r\n    }\r\n\r\n    /**\r\n     * Returns the ETH/USD latest answer.\r\n     */\r\n    function getChainlinkDataFeedLatestAnswer() public view returns (int) {\r\n        // prettier-ignore\r\n        (\r\n            /* uint80 roundID */,\r\n            int answer,\r\n            /*uint startedAt*/,\r\n            /*uint timeStamp*/,\r\n            /*uint80 answeredInRound*/\r\n        ) = dataFeed.latestRoundData();\r\n        return answer;\r\n        // (answer < 0)? type(uint).max - uint(answer) + 1 : uint(answer);\r\n    }\r\n\r\n    function getChainID() public view returns (uint) {\r\n        uint id;\r\n        assembly {\r\n            id := chainid()\r\n        }\r\n        return id;\r\n    }\r\n\r\n    function calcInTokenPrice( address _tokenIn, uint _amount )\r\n        internal view returns (uint) \r\n    {\r\n        address pair = IToken(_tokenIn).pair();\r\n        require(pair != address(0x0), \"TokenBrige: token pair is not created\");\r\n        int np = getChainlinkDataFeedLatestAnswer(); // price of native coin\r\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\r\n        IPancakeSwapPair tokenPair = IPancakeSwapPair(pair);\r\n        (uint112 r0, uint112 r1, ) = tokenPair.getReserves();\r\n        uint price = tokenPair.token0() == _tokenIn? \r\n                        uint(r0) * _amount * pn / uint(r1): \r\n                        uint(r1) * _amount * pn / uint(r0);\r\n        return price;\r\n    }\r\n\r\n    function calcOutTokenAmount(\r\n        uint priceFeedIn, \r\n        address tokenOut\r\n    )  internal view returns(uint) {\r\n        address pair = IToken(tokenOut).pair();\r\n        int np = getChainlinkDataFeedLatestAnswer(); // price of native coin\r\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\r\n        IPancakeSwapPair tokenPair = IPancakeSwapPair(pair);\r\n        (uint112 r0, uint112 r1, ) = tokenPair.getReserves();\r\n        uint amountOut = (tokenPair.token0() == tokenOut)?\r\n                            priceFeedIn * uint(r1) / uint(r0) / pn:\r\n                            priceFeedIn * uint(r0) / uint(r1) / pn;\r\n        return amountOut * 10**_tokenDecimals(tokenOut);\r\n    }\r\n\r\n    function calaOutEthAmount(uint priceFeedIn) internal view returns(uint)\r\n    {\r\n        int np = getChainlinkDataFeedLatestAnswer(); // price of native coin\r\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\r\n        return priceFeedIn * 1e18 / pn;\r\n    }\r\n\r\n    function _tokenDecimals(address _token) internal view returns (uint8) {\r\n        (bool success, bytes memory data) = _token.staticcall(\r\n            abi.encodeWithSignature(\"decimals()\")\r\n        );\r\n        require(success, \"TokenBridge: failed to get token decimals\");\r\n        return abi.decode(data, (uint8));\r\n    }\r\n\r\n    function _payFee(uint _amountIn) \r\n        internal view returns \r\n        (uint amountAfterFee, uint fee) \r\n    {\r\n        fee = (_amountIn * bridgeFeeBP) / BP_DENOMINATOR;\r\n        amountAfterFee = _amountIn - fee;\r\n    }\r\n\r\n    // send payload: packet type(1) + remote token(32) + receiver(32) + amount(8)\r\n    function _encodeSendPayload(\r\n        uint _price,\r\n        address _token,\r\n        address _reciever\r\n    ) internal pure returns (bytes memory) {\r\n        bytes32 tokenBytes32 = LzLib.addressToBytes32(_token);\r\n        bytes32 recieverBytes32 = LzLib.addressToBytes32(_reciever);\r\n        return\r\n            abi.encodePacked(uint8(PacketType.SEND_TO), _price, tokenBytes32, recieverBytes32);\r\n    }\r\n\r\n    // receive payload: packet type(1) + remote token(32) + receiver(32) + amount(8) + unwrap flag(1)\r\n    function _decodeReceivePayload(bytes memory _payload)\r\n        internal pure returns (\r\n            uint price,\r\n            address token,\r\n            address reciever,\r\n            bool unwrap\r\n        )\r\n    {\r\n        require(_payload.length == 98, \"TokenBridge: invalid payload length\");\r\n        PacketType packetType = PacketType(uint8(_payload[0]));\r\n        require(packetType == PacketType.RECEIVE_FROM, \"TokenBridge: unknown packet type\");\r\n        assembly {\r\n            price := mload(add(_payload, 33))\r\n            token := mload(add(_payload, 65))\r\n            reciever := mload(add(_payload, 97))\r\n        }\r\n        unwrap = uint8(_payload[97]) == 1;\r\n    }\r\n\r\n    function _checkAdapterParams(bytes calldata _adapterParams) internal view {\r\n        if (useCustomAdapterParams && toLzChainId > 0) {\r\n            _checkGasLimit(toLzChainId, uint16(PacketType.SEND_TO), _adapterParams, 0);\r\n        } else {\r\n            require(_adapterParams.length == 0, \"TokenBridge: _adapterParams must be empty.\");\r\n        }\r\n    }\r\n}"},"contracts/token/interfaces/IExchange.sol":{"content":"\r\n//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ninterface IPancakeSwapFactory {\r\n\t\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n\t\tfunction feeTo() external view returns (address);\r\n\t\tfunction feeToSetter() external view returns (address);\r\n\r\n\t\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\r\n\t\tfunction allPairs(uint) external view returns (address pair);\r\n\t\tfunction allPairsLength() external view returns (uint);\r\n\r\n\t\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n\t\tfunction setFeeTo(address) external;\r\n\t\tfunction setFeeToSetter(address) external;\r\n}\r\n\r\ninterface IPancakeSwapPair {\r\n\t\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n\t\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\r\n\t\tfunction name() external pure returns (string memory);\r\n\t\tfunction symbol() external pure returns (string memory);\r\n\t\tfunction decimals() external pure returns (uint8);\r\n\t\tfunction totalSupply() external view returns (uint);\r\n\t\tfunction balanceOf(address owner) external view returns (uint);\r\n\t\tfunction allowance(address owner, address spender) external view returns (uint);\r\n\r\n\t\tfunction approve(address spender, uint value) external returns (bool);\r\n\t\tfunction transfer(address to, uint value) external returns (bool);\r\n\t\tfunction transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n\t\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\t\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\t\tfunction nonces(address owner) external view returns (uint);\r\n\r\n\t\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n\t\tevent Mint(address indexed sender, uint amount0, uint amount1);\r\n\t\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n\t\tevent Swap(\r\n\t\t\t\taddress indexed sender,\r\n\t\t\t\tuint amount0In,\r\n\t\t\t\tuint amount1In,\r\n\t\t\t\tuint amount0Out,\r\n\t\t\t\tuint amount1Out,\r\n\t\t\t\taddress indexed to\r\n\t\t);\r\n\t\tevent Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n\t\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\r\n\t\tfunction factory() external view returns (address);\r\n\t\tfunction token0() external view returns (address);\r\n\t\tfunction token1() external view returns (address);\r\n\t\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n\t\tfunction price0CumulativeLast() external view returns (uint);\r\n\t\tfunction price1CumulativeLast() external view returns (uint);\r\n\t\tfunction kLast() external view returns (uint);\r\n\r\n\t\tfunction mint(address to) external returns (uint liquidity);\r\n\t\tfunction burn(address to) external returns (uint amount0, uint amount1);\r\n\t\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n\t\tfunction skim(address to) external;\r\n\t\tfunction sync() external;\r\n\r\n\t\tfunction initialize(address, address) external;\r\n}\r\n\r\ninterface IPancakeSwapRouter{\r\n\t\tfunction factory() external pure returns (address);\r\n\t\tfunction WETH() external pure returns (address);\r\n\r\n\t\tfunction addLiquidity(\r\n\t\t\t\taddress tokenA,\r\n\t\t\t\taddress tokenB,\r\n\t\t\t\tuint amountADesired,\r\n\t\t\t\tuint amountBDesired,\r\n\t\t\t\tuint amountAMin,\r\n\t\t\t\tuint amountBMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint amountA, uint amountB, uint liquidity);\r\n\t\tfunction addLiquidityETH(\r\n\t\t\t\taddress token,\r\n\t\t\t\tuint amountTokenDesired,\r\n\t\t\t\tuint amountTokenMin,\r\n\t\t\t\tuint amountETHMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n\t\tfunction removeLiquidity(\r\n\t\t\t\taddress tokenA,\r\n\t\t\t\taddress tokenB,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountAMin,\r\n\t\t\t\tuint amountBMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint amountA, uint amountB);\r\n\t\tfunction removeLiquidityETH(\r\n\t\t\t\taddress token,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountTokenMin,\r\n\t\t\t\tuint amountETHMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint amountToken, uint amountETH);\r\n\t\tfunction removeLiquidityWithPermit(\r\n\t\t\t\taddress tokenA,\r\n\t\t\t\taddress tokenB,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountAMin,\r\n\t\t\t\tuint amountBMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline,\r\n\t\t\t\tbool approveMax, uint8 v, bytes32 r, bytes32 s\r\n\t\t) external returns (uint amountA, uint amountB);\r\n\t\tfunction removeLiquidityETHWithPermit(\r\n\t\t\t\taddress token,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountTokenMin,\r\n\t\t\t\tuint amountETHMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline,\r\n\t\t\t\tbool approveMax, uint8 v, bytes32 r, bytes32 s\r\n\t\t) external returns (uint amountToken, uint amountETH);\r\n\t\tfunction swapExactTokensForTokens(\r\n\t\t\t\tuint amountIn,\r\n\t\t\t\tuint amountOutMin,\r\n\t\t\t\taddress[] calldata path,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint[] memory amounts);\r\n\t\tfunction swapTokensForExactTokens(\r\n\t\t\t\tuint amountOut,\r\n\t\t\t\tuint amountInMax,\r\n\t\t\t\taddress[] calldata path,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint[] memory amounts);\r\n\t\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\tpayable\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\t\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\t\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\t\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\tpayable\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\r\n\t\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n\t\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n\t\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n\t\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n\t\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n\t\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\r\n\t\t\taddress token,\r\n\t\t\tuint liquidity,\r\n\t\t\tuint amountTokenMin,\r\n\t\t\tuint amountETHMin,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external returns (uint amountETH);\r\n\t\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n\t\t\taddress token,\r\n\t\t\tuint liquidity,\r\n\t\t\tuint amountTokenMin,\r\n\t\t\tuint amountETHMin,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline,\r\n\t\t\tbool approveMax, uint8 v, bytes32 r, bytes32 s\r\n\t\t) external returns (uint amountETH);\r\n\t\r\n\t\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n\t\t\tuint amountIn,\r\n\t\t\tuint amountOutMin,\r\n\t\t\taddress[] calldata path,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external;\r\n\t\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n\t\t\tuint amountOutMin,\r\n\t\t\taddress[] calldata path,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external payable;\r\n\t\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n\t\t\tuint amountIn,\r\n\t\t\tuint amountOutMin,\r\n\t\t\taddress[] calldata path,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external;\r\n}"},"contracts/token/interfaces/IToken.sol":{"content":"\r\n//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ninterface IToken {\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n\tfunction decimals() external view returns (uint8);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction name() external view returns (string memory);\r\n\tfunction totalSupply() external view returns (uint256);\r\n\tfunction balanceOf(address) external view returns (uint256);\r\n\tfunction leftTime() external view returns(uint);\r\n    function router() external view returns(address);\r\n    function pair() external view returns(address);\r\n\r\n\tfunction transfer(address, uint256) external returns (bool);\r\n\tfunction allowance(address, address) external view returns (uint256);\r\n\r\n\tfunction approve(address, uint256) external returns (bool);\r\n\tfunction transferFrom(address, address, uint256) external returns (bool);\r\n\r\n\tfunction increaseAllowance(address, uint256) external returns (bool);\r\n\tfunction decreaseAllowance(address, uint256) external returns (bool);\r\n\r\n\tfunction burn(uint256) external;\r\n\tfunction faucet() external ;\r\n\tfunction setInitialAddresses(address) external;\r\n    function addLiquidity(uint256) external;    \r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":1},"evmVersion":"berlin","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:0","nodeType":"VariableDeclaration","scope":31,"src":"289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"355:7:0","nodeType":"VariableDeclaration","scope":31,"src":"348:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"377:6:0","nodeType":"VariableDeclaration","scope":31,"src":"370:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:0","nodeType":"VariableDeclaration","scope":31,"src":"391:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:0","nodeType":"VariableDeclaration","scope":31,"src":"416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:0","nodeType":"VariableDeclaration","scope":31,"src":"441:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:0"},"scope":45,"src":"267:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"498:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"550:7:0","nodeType":"VariableDeclaration","scope":44,"src":"543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"572:6:0","nodeType":"VariableDeclaration","scope":44,"src":"565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:0","nodeType":"VariableDeclaration","scope":44,"src":"586:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:0","nodeType":"VariableDeclaration","scope":44,"src":"611:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:0","nodeType":"VariableDeclaration","scope":44,"src":"636:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:0"},"scope":45,"src":"474:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:610:0","usedErrors":[],"usedEvents":[]}],"src":"32:636:0"},"id":0},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","exportedSymbols":{"LzLib":[270]},"id":271,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"38:24:1"},{"id":48,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"63:33:1"},{"abstract":false,"baseContracts":[],"canonicalName":"LzLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":270,"linearizedBaseContracts":[270],"name":"LzLib","nameLocation":"106:5:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LzLib.CallParams","id":53,"members":[{"constant":false,"id":50,"mutability":"mutable","name":"refundAddress","nameLocation":"193:13:1","nodeType":"VariableDeclaration","scope":53,"src":"177:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"177:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"zroPaymentAddress","nameLocation":"224:17:1","nodeType":"VariableDeclaration","scope":53,"src":"216:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CallParams","nameLocation":"156:10:1","nodeType":"StructDefinition","scope":270,"src":"149:99:1","visibility":"public"},{"canonicalName":"LzLib.AirdropParams","id":58,"members":[{"constant":false,"id":55,"mutability":"mutable","name":"airdropAmount","nameLocation":"402:13:1","nodeType":"VariableDeclaration","scope":58,"src":"397:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint","nodeType":"ElementaryTypeName","src":"397:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"airdropAddress","nameLocation":"433:14:1","nodeType":"VariableDeclaration","scope":58,"src":"425:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56,"name":"bytes32","nodeType":"ElementaryTypeName","src":"425:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"AirdropParams","nameLocation":"373:13:1","nodeType":"StructDefinition","scope":270,"src":"366:88:1","visibility":"public"},{"body":{"id":96,"nodeType":"Block","src":"600:284:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":68,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"614:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"629:13:1","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":55,"src":"614:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"614:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":72,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"651:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":73,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"666:14:1","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":57,"src":"651:29:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"692:3:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":75,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"684:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":74,"name":"bytes32","nodeType":"ElementaryTypeName","src":"684:7:1","typeDescriptions":{}}},"id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"684:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"651:45:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"614:82:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":94,"nodeType":"Block","src":"783:95:1","statements":[{"expression":{"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":87,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"797:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":89,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"839:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":90,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"852:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}],"id":88,"name":"buildAirdropAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"813:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_AirdropParams_$58_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,struct LzLib.AirdropParams memory) pure returns (bytes memory)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"813:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"797:70:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":93,"nodeType":"ExpressionStatement","src":"797:70:1"}]},"id":95,"nodeType":"IfStatement","src":"610:268:1","trueBody":{"id":86,"nodeType":"Block","src":"698:79:1","statements":[{"expression":{"id":84,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":80,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"712:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":82,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"754:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":81,"name":"buildDefaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"728:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"712:54:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":85,"nodeType":"ExpressionStatement","src":"712:54:1"}]}}]},"id":97,"implemented":true,"kind":"function","modifiers":[],"name":"buildAdapterParams","nameLocation":"469:18:1","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"_airdropParams","nameLocation":"515:14:1","nodeType":"VariableDeclaration","scope":97,"src":"488:41:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":60,"nodeType":"UserDefinedTypeName","pathNode":{"id":59,"name":"LzLib.AirdropParams","nameLocations":["488:5:1","494:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"488:19:1"},"referencedDeclaration":58,"src":"488:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"_uaGasLimit","nameLocation":"536:11:1","nodeType":"VariableDeclaration","scope":97,"src":"531:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint","nodeType":"ElementaryTypeName","src":"531:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:61:1"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"adapterParams","nameLocation":"585:13:1","nodeType":"VariableDeclaration","scope":97,"src":"572:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":65,"name":"bytes","nodeType":"ElementaryTypeName","src":"572:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"571:28:1"},"scope":270,"src":"460:424:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"1003:153:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1131:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":106,"name":"uint16","nodeType":"ElementaryTypeName","src":"1131:6:1","typeDescriptions":{}}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1131:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":110,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"1142:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":104,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1114:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1118:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"1114:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":103,"id":112,"nodeType":"Return","src":"1107:42:1"}]},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"buildDefaultAdapterParams","nameLocation":"927:25:1","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"_uaGas","nameLocation":"958:6:1","nodeType":"VariableDeclaration","scope":114,"src":"953:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint","nodeType":"ElementaryTypeName","src":"953:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:13:1"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":114,"src":"989:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":101,"name":"bytes","nodeType":"ElementaryTypeName","src":"989:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"988:14:1"},"scope":270,"src":"918:238:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"1277:438:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":125,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1295:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:13:1","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":55,"src":"1295:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1319:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1295:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""},"value":"Airdrop amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1287:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1287:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"1287:75:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":133,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1380:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1388:14:1","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":57,"src":"1380:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1414:3:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1406:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1406:7:1","typeDescriptions":{}}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1406:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1380:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f702061646472657373206d75737420626520736574","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1420:29:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""},"value":"Airdrop address must be set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""}],"id":132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1372:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"1372:78:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"32","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1650:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1643:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":145,"name":"uint16","nodeType":"ElementaryTypeName","src":"1643:6:1","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1643:9:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":149,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1654:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":150,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1662:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1670:13:1","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":55,"src":"1662:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":152,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1693:14:1","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":57,"src":"1685:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":143,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1626:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1630:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"1626:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1626:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":123,"id":155,"nodeType":"Return","src":"1619:89:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"buildAirdropAdapterParams","nameLocation":"1171:25:1","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"_uaGas","nameLocation":"1202:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1197:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint","nodeType":"ElementaryTypeName","src":"1197:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"_params","nameLocation":"1231:7:1","nodeType":"VariableDeclaration","scope":157,"src":"1210:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":118,"nodeType":"UserDefinedTypeName","pathNode":{"id":117,"name":"AirdropParams","nameLocations":["1210:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1210:13:1"},"referencedDeclaration":58,"src":"1210:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$58_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"}],"src":"1196:43:1"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"1263:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":121,"name":"bytes","nodeType":"ElementaryTypeName","src":"1263:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1262:14:1"},"scope":270,"src":"1162:553:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":178,"nodeType":"Block","src":"1809:192:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":165,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1827:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1842:6:1","memberName":"length","nodeType":"MemberAccess","src":"1827:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:2:1","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"1827:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":169,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1858:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1873:6:1","memberName":"length","nodeType":"MemberAccess","src":"1858:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:2:1","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"1858:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1827:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1886:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1819:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:91:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":176,"nodeType":"ExpressionStatement","src":"1819:91:1"},{"AST":{"nodeType":"YulBlock","src":"1929:66:1","statements":[{"nodeType":"YulAssignment","src":"1943:42:1","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"1965:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"1981:2:1","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:1"},"nodeType":"YulFunctionCall","src":"1961:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1955:5:1"},"nodeType":"YulFunctionCall","src":"1955:30:1"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"1943:8:1"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":159,"isOffset":false,"isSlot":false,"src":"1965:14:1","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":false,"src":"1943:8:1","valueSize":1}],"id":177,"nodeType":"InlineAssembly","src":"1920:75:1"}]},"id":179,"implemented":true,"kind":"function","modifiers":[],"name":"getGasLimit","nameLocation":"1730:11:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"_adapterParams","nameLocation":"1755:14:1","nodeType":"VariableDeclaration","scope":179,"src":"1742:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":158,"name":"bytes","nodeType":"ElementaryTypeName","src":"1742:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1741:29:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"gasLimit","nameLocation":"1799:8:1","nodeType":"VariableDeclaration","scope":179,"src":"1794:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint","nodeType":"ElementaryTypeName","src":"1794:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1793:15:1"},"scope":270,"src":"1721:280:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":230,"nodeType":"Block","src":"2282:555:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":193,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2300:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2315:6:1","memberName":"length","nodeType":"MemberAccess","src":"2300:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2325:2:1","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"2300:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":197,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2331:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:6:1","memberName":"length","nodeType":"MemberAccess","src":"2331:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2355:2:1","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"2331:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2300:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2359:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2292:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:91:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2292:91:1"},{"AST":{"nodeType":"YulBlock","src":"2402:115:1","statements":[{"nodeType":"YulAssignment","src":"2416:39:1","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2436:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"2452:1:1","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:1"},"nodeType":"YulFunctionCall","src":"2432:22:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2426:5:1"},"nodeType":"YulFunctionCall","src":"2426:29:1"},"variableNames":[{"name":"txType","nodeType":"YulIdentifier","src":"2416:6:1"}]},{"nodeType":"YulAssignment","src":"2468:39:1","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2487:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"2503:2:1","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:1"},"nodeType":"YulFunctionCall","src":"2483:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2477:5:1"},"nodeType":"YulFunctionCall","src":"2477:30:1"},"variableNames":[{"name":"uaGas","nodeType":"YulIdentifier","src":"2468:5:1"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":181,"isOffset":false,"isSlot":false,"src":"2436:14:1","valueSize":1},{"declaration":181,"isOffset":false,"isSlot":false,"src":"2487:14:1","valueSize":1},{"declaration":184,"isOffset":false,"isSlot":false,"src":"2416:6:1","valueSize":1},{"declaration":186,"isOffset":false,"isSlot":false,"src":"2468:5:1","valueSize":1}],"id":205,"nodeType":"InlineAssembly","src":"2393:124:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2534:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2534:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2549:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2559:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2549:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e737570706f7274656420747854797065","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2562:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""},"value":"Unsupported txType"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2526:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"2526:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":218,"name":"uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2601:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2609:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2601:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47617320746f6f206c6f77","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2612:13:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""},"value":"Gas too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""}],"id":217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2593:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2593:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"2593:33:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":224,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2641:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2651:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2641:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":229,"nodeType":"IfStatement","src":"2637:194:1","trueBody":{"id":228,"nodeType":"Block","src":"2654:177:1","statements":[{"AST":{"nodeType":"YulBlock","src":"2677:144:1","statements":[{"nodeType":"YulAssignment","src":"2695:47:1","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2722:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"2738:2:1","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2718:3:1"},"nodeType":"YulFunctionCall","src":"2718:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2712:5:1"},"nodeType":"YulFunctionCall","src":"2712:30:1"},"variableNames":[{"name":"airdropAmount","nodeType":"YulIdentifier","src":"2695:13:1"}]},{"nodeType":"YulAssignment","src":"2759:48:1","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2787:14:1"},{"kind":"number","nodeType":"YulLiteral","src":"2803:2:1","type":"","value":"86"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:1"},"nodeType":"YulFunctionCall","src":"2783:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2777:5:1"},"nodeType":"YulFunctionCall","src":"2777:30:1"},"variableNames":[{"name":"airdropAddress","nodeType":"YulIdentifier","src":"2759:14:1"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":181,"isOffset":false,"isSlot":false,"src":"2722:14:1","valueSize":1},{"declaration":181,"isOffset":false,"isSlot":false,"src":"2787:14:1","valueSize":1},{"declaration":190,"isOffset":false,"isSlot":false,"src":"2759:14:1","valueSize":1},{"declaration":188,"isOffset":false,"isSlot":false,"src":"2695:13:1","valueSize":1}],"id":227,"nodeType":"InlineAssembly","src":"2668:153:1"}]}}]},"id":231,"implemented":true,"kind":"function","modifiers":[],"name":"decodeAdapterParams","nameLocation":"2045:19:1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"_adapterParams","nameLocation":"2078:14:1","nodeType":"VariableDeclaration","scope":231,"src":"2065:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":180,"name":"bytes","nodeType":"ElementaryTypeName","src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2064:29:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"txType","nameLocation":"2161:6:1","nodeType":"VariableDeclaration","scope":231,"src":"2154:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":183,"name":"uint16","nodeType":"ElementaryTypeName","src":"2154:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"uaGas","nameLocation":"2186:5:1","nodeType":"VariableDeclaration","scope":231,"src":"2181:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint","nodeType":"ElementaryTypeName","src":"2181:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"airdropAmount","nameLocation":"2210:13:1","nodeType":"VariableDeclaration","scope":231,"src":"2205:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint","nodeType":"ElementaryTypeName","src":"2205:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"airdropAddress","nameLocation":"2253:14:1","nodeType":"VariableDeclaration","scope":231,"src":"2237:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"2237:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2140:137:1"},"scope":270,"src":"2036:801:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"3046:63:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":244,"name":"_bytes32Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3084:15:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3079:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":242,"name":"uint","nodeType":"ElementaryTypeName","src":"3079:4:1","typeDescriptions":{}}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3071:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":240,"name":"uint160","nodeType":"ElementaryTypeName","src":"3071:7:1","typeDescriptions":{}}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3071:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3063:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:1","typeDescriptions":{}}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":237,"id":248,"nodeType":"Return","src":"3056:46:1"}]},"id":250,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToAddress","nameLocation":"2963:16:1","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"_bytes32Address","nameLocation":"2988:15:1","nodeType":"VariableDeclaration","scope":250,"src":"2980:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2980:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2979:25:1"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"_address","nameLocation":"3036:8:1","nodeType":"VariableDeclaration","scope":250,"src":"3028:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"3028:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3027:18:1"},"scope":270,"src":"2954:155:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":268,"nodeType":"Block","src":"3207:56:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":263,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3245:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3237:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":261,"name":"uint160","nodeType":"ElementaryTypeName","src":"3237:7:1","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3232:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":259,"name":"uint","nodeType":"ElementaryTypeName","src":"3232:4:1","typeDescriptions":{}}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3224:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3224:7:1","typeDescriptions":{}}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":256,"id":267,"nodeType":"Return","src":"3217:39:1"}]},"id":269,"implemented":true,"kind":"function","modifiers":[],"name":"addressToBytes32","nameLocation":"3124:16:1","nodeType":"FunctionDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"_address","nameLocation":"3149:8:1","nodeType":"VariableDeclaration","scope":269,"src":"3141:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3140:18:1"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"_bytes32Address","nameLocation":"3190:15:1","nodeType":"VariableDeclaration","scope":269,"src":"3182:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3182:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3181:25:1"},"scope":270,"src":"3115:148:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":271,"src":"98:3167:1","usedErrors":[],"usedEvents":[]}],"src":"38:3228:1"},"id":1},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1486],"ContextUpgradeable":[1528],"Initializable":[936],"OwnableUpgradeable":[402]},"id":403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":272,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":403,"sourceUnit":1529,"src":"127:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":403,"sourceUnit":937,"src":"169:42:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":276,"name":"Initializable","nameLocations":["748:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"748:13:2"},"id":277,"nodeType":"InheritanceSpecifier","src":"748:13:2"},{"baseName":{"id":278,"name":"ContextUpgradeable","nameLocations":["763:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1528,"src":"763:18:2"},"id":279,"nodeType":"InheritanceSpecifier","src":"763:18:2"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"213:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":402,"linearizedBaseContracts":[402,1528,936],"name":"OwnableUpgradeable","nameLocation":"726:18:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":281,"mutability":"mutable","name":"_owner","nameLocation":"804:6:2","nodeType":"VariableDeclaration","scope":402,"src":"788:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":287,"name":"OwnershipTransferred","nameLocation":"823:20:2","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:2","nodeType":"VariableDeclaration","scope":287,"src":"844:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:2","nodeType":"VariableDeclaration","scope":287,"src":"875:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:2"},"src":"817:84:2"},{"body":{"id":296,"nodeType":"Block","src":"1055:43:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":293,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"1065:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"1065:26:2"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"907:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":297,"implemented":true,"kind":"function","modifiers":[{"id":291,"kind":"modifierInvocation","modifierName":{"id":290,"name":"onlyInitializing","nameLocations":["1038:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1038:16:2"},"nodeType":"ModifierInvocation","src":"1038:16:2"}],"name":"__Ownable_init","nameLocation":"1012:14:2","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"1026:2:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"1055:0:2"},"scope":402,"src":"1003:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":307,"nodeType":"Block","src":"1166:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1195:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":302,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1176:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"ExpressionStatement","src":"1176:32:2"}]},"id":308,"implemented":true,"kind":"function","modifiers":[{"id":300,"kind":"modifierInvocation","modifierName":{"id":299,"name":"onlyInitializing","nameLocations":["1149:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1149:16:2"},"nodeType":"ModifierInvocation","src":"1149:16:2"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:2","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"1137:2:2"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"1166:0:2"},"scope":402,"src":"1104:111:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":315,"nodeType":"Block","src":"1324:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1334:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"ExpressionStatement","src":"1334:13:2"},{"id":314,"nodeType":"PlaceholderStatement","src":"1357:1:2"}]},"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"1221:77:2","text":" @dev Throws if called by any account other than the owner."},"id":316,"name":"onlyOwner","nameLocation":"1312:9:2","nodeType":"ModifierDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[],"src":"1321:2:2"},"src":"1303:62:2","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"1496:30:2","statements":[{"expression":{"id":322,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"1513:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":321,"id":323,"nodeType":"Return","src":"1506:13:2"}]},"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"1371:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":325,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:2","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"1455:2:2"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"1487:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:2"},"scope":402,"src":"1441:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":338,"nodeType":"Block","src":"1644:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"1662:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":332,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1673:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"1654:68:2"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"1532:62:2","text":" @dev Throws if the sender is not the owner."},"id":339,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:2","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[],"src":"1619:2:2"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[],"src":"1644:0:2"},"scope":402,"src":"1599:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":352,"nodeType":"Block","src":"2118:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:2","typeDescriptions":{}}},"id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":345,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2128:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"ExpressionStatement","src":"2128:30:2"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"1735:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":353,"implemented":true,"kind":"function","modifiers":[{"id":343,"kind":"modifierInvocation","modifierName":{"id":342,"name":"onlyOwner","nameLocations":["2108:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"2108:9:2"},"nodeType":"ModifierInvocation","src":"2108:9:2"}],"name":"renounceOwnership","nameLocation":"2073:17:2","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"2090:2:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"2118:0:2"},"scope":402,"src":"2064:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":375,"nodeType":"Block","src":"2384:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"2402:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:2","typeDescriptions":{}}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"2394:73:2"},{"expression":{"arguments":[{"id":372,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"2496:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":371,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2477:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"ExpressionStatement","src":"2477:28:2"}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2171:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":376,"implemented":true,"kind":"function","modifiers":[{"id":359,"kind":"modifierInvocation","modifierName":{"id":358,"name":"onlyOwner","nameLocations":["2374:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"2374:9:2"},"nodeType":"ModifierInvocation","src":"2374:9:2"}],"name":"transferOwnership","nameLocation":"2323:17:2","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:2","nodeType":"VariableDeclaration","scope":376,"src":"2341:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:2"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2384:0:2"},"scope":402,"src":"2314:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":395,"nodeType":"Block","src":"2729:124:2","statements":[{"assignments":[383],"declarations":[{"constant":false,"id":383,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:2","nodeType":"VariableDeclaration","scope":395,"src":"2739:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":385,"initialValue":{"id":384,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2758:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:2"},{"expression":{"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":386,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2774:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":387,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2783:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":389,"nodeType":"ExpressionStatement","src":"2774:17:2"},{"eventCall":{"arguments":[{"id":391,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2827:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":392,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2837:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":390,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2806:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"EmitStatement","src":"2801:45:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"2518:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":396,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:2","nodeType":"VariableDeclaration","scope":396,"src":"2694:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:2"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2729:0:2"},"scope":402,"src":"2666:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"2859:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":401,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:2","nodeType":"VariableDeclaration","scope":402,"src":"3118:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"length":{"hexValue":"3439","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":403,"src":"708:2438:2","usedErrors":[],"usedEvents":[287,782]}],"src":"102:3045:2"},"id":2},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[423]},"id":424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":404,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"132:133:3","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":423,"linearizedBaseContracts":[423],"name":"IERC1967Upgradeable","nameLocation":"276:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"302:68:3","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":410,"name":"Upgraded","nameLocation":"381:8:3","nodeType":"EventDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:3","nodeType":"VariableDeclaration","scope":410,"src":"390:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:3"},"src":"375:47:3"},{"anonymous":false,"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"428:67:3","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":417,"name":"AdminChanged","nameLocation":"506:12:3","nodeType":"EventDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:3","nodeType":"VariableDeclaration","scope":417,"src":"519:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:3","nodeType":"VariableDeclaration","scope":417,"src":"542:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:3"},"src":"500:60:3"},{"anonymous":false,"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"566:59:3","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":422,"name":"BeaconUpgraded","nameLocation":"636:14:3","nodeType":"EventDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:3","nodeType":"VariableDeclaration","scope":422,"src":"651:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:3"},"src":"630:45:3"}],"scope":424,"src":"266:411:3","usedErrors":[],"usedEvents":[410,417,422]}],"src":"107:571:3"},"id":3},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[433]},"id":434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":425,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"138:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":433,"linearizedBaseContracts":[433],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"387:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":432,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:4","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"852:2:4"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"878:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:4"},"scope":433,"src":"830:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":434,"src":"342:547:4","usedErrors":[],"usedEvents":[]}],"src":"113:777:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1486],"ERC1967UpgradeUpgradeable":[757],"IBeaconUpgradeable":[767],"IERC1822ProxiableUpgradeable":[433],"IERC1967Upgradeable":[423],"Initializable":[936],"StorageSlotUpgradeable":[1638]},"id":758,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":435,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":768,"src":"141:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":424,"src":"184:50:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":438,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":434,"src":"235:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":1487,"src":"292:44:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":1639,"src":"337:48:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":758,"sourceUnit":937,"src":"386:36:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":443,"name":"Initializable","nameLocations":["656:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"656:13:5"},"id":444,"nodeType":"InheritanceSpecifier","src":"656:13:5"},{"baseName":{"id":445,"name":"IERC1967Upgradeable","nameLocations":["671:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":423,"src":"671:19:5"},"id":446,"nodeType":"InheritanceSpecifier","src":"671:19:5"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"424:184:5","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":757,"linearizedBaseContracts":[757,423,936],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":451,"nodeType":"Block","src":"756:7:5","statements":[]},"id":452,"implemented":true,"kind":"function","modifiers":[{"id":449,"kind":"modifierInvocation","modifierName":{"id":448,"name":"onlyInitializing","nameLocations":["739:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"739:16:5"},"nodeType":"ModifierInvocation","src":"739:16:5"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:5","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"727:2:5"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"756:0:5"},"scope":757,"src":"697:66:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"838:7:5","statements":[]},"id":458,"implemented":true,"kind":"function","modifiers":[{"id":455,"kind":"modifierInvocation","modifierName":{"id":454,"name":"onlyInitializing","nameLocations":["821:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"821:16:5"},"nodeType":"ModifierInvocation","src":"821:16:5"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:5","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"809:2:5"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"838:0:5"},"scope":757,"src":"769:76:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":461,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:5","nodeType":"VariableDeclaration","scope":757,"src":"929:108:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:5","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1044:214:5","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":465,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:5","nodeType":"VariableDeclaration","scope":757,"src":"1263:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:5","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"1519:89:5","statements":[{"expression":{"expression":{"arguments":[{"id":473,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"1574:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":471,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1536:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1638_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"1536:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1534_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"1536:65:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":470,"id":476,"nodeType":"Return","src":"1529:72:5"}]},"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"1385:67:5","text":" @dev Returns the current implementation address."},"id":478,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:5","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"1484:2:5"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"1510:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:5"},"scope":757,"src":"1457:151:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"1762:218:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":487,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"1810:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":485,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1780:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1486_$","typeString":"type(library AddressUpgradeable)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1780:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"1772:106:5"},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":495,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"1926:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":492,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1888:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1638_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"1888:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1534_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"1888:65:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":498,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"1956:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":500,"nodeType":"ExpressionStatement","src":"1888:85:5"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"1614:80:5","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":502,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:5","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:5","nodeType":"VariableDeclaration","scope":502,"src":"1727:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"1762:0:5"},"scope":757,"src":"1699:281:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":516,"nodeType":"Block","src":"2142:96:5","statements":[{"expression":{"arguments":[{"id":509,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2171:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2152:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"2152:37:5"},{"eventCall":{"arguments":[{"id":513,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2213:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":512,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2204:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"2199:32:5"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"1986:95:5","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":517,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:5","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:5","nodeType":"VariableDeclaration","scope":517,"src":"2106:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:5"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"2142:0:5"},"scope":757,"src":"2086:152:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"2470:178:5","statements":[{"expression":{"arguments":[{"id":528,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2491:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":527,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2480:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":530,"nodeType":"ExpressionStatement","src":"2480:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"2523:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:5","memberName":"length","nodeType":"MemberAccess","src":"2523:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":535,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2542:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":545,"nodeType":"IfStatement","src":"2519:123:5","trueBody":{"id":544,"nodeType":"Block","src":"2553:89:5","statements":[{"expression":{"arguments":[{"id":540,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2607:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":541,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"2626:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":537,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2567:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1486_$","typeString":"type(library AddressUpgradeable)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"2567:39:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":543,"nodeType":"ExpressionStatement","src":"2567:64:5"}]}}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"2244:123:5","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":547,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:5","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:5","nodeType":"VariableDeclaration","scope":547,"src":"2399:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"data","nameLocation":"2439:4:5","nodeType":"VariableDeclaration","scope":547,"src":"2426:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:5","nodeType":"VariableDeclaration","scope":547,"src":"2445:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:5"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"2470:0:5"},"scope":757,"src":"2372:276:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"2922:842:5","statements":[{"condition":{"expression":{"arguments":[{"id":559,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"3274:14:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":557,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"3236:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1638_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:5","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1571,"src":"3236:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1537_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1537_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"3236:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"3365:393:5","statements":[{"clauses":[{"block":{"id":582,"nodeType":"Block","src":"3470:115:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3496:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":577,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3504:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"3488:82:5"}]},"errorName":"","id":583,"nodeType":"TryCatchClause","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"slot","nameLocation":"3464:4:5","nodeType":"VariableDeclaration","scope":583,"src":"3456:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:5"},"src":"3447:138:5"},{"block":{"id":588,"nodeType":"Block","src":"3592:89:5","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":584,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"3610:56:5"}]},"errorName":"","id":589,"nodeType":"TryCatchClause","src":"3586:95:5"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":568,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3412:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":567,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3383:28:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$433_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$433","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:5","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":432,"src":"3383:61:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":590,"nodeType":"TryStatement","src":"3379:302:5"},{"expression":{"arguments":[{"id":592,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3712:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3731:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":594,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3737:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":591,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3694:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":596,"nodeType":"ExpressionStatement","src":"3694:53:5"}]},"id":598,"nodeType":"IfStatement","src":"3232:526:5","trueBody":{"id":566,"nodeType":"Block","src":"3297:62:5","statements":[{"expression":{"arguments":[{"id":563,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3330:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":562,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3311:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"3311:37:5"}]}}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"2654:161:5","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":600,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:5","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:5","nodeType":"VariableDeclaration","scope":600,"src":"2851:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"data","nameLocation":"2891:4:5","nodeType":"VariableDeclaration","scope":600,"src":"2878:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":551,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:5","nodeType":"VariableDeclaration","scope":600,"src":"2897:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:5"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"2922:0:5"},"scope":757,"src":"2820:944:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"3770:189:5","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":604,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:5","nodeType":"VariableDeclaration","scope":757,"src":"3964:106:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:5","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"4185:80:5","statements":[{"expression":{"expression":{"arguments":[{"id":612,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4240:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":610,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4202:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1638_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"4202:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1534_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"4202:56:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":609,"id":615,"nodeType":"Return","src":"4195:63:5"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"4077:50:5","text":" @dev Returns the current admin."},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:5","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"4150:2:5"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"4176:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:5"},"scope":757,"src":"4132:133:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"4392:167:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":624,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4410:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:5","typeDescriptions":{}}},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"4402:73:5"},{"expression":{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":636,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4523:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":633,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4485:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1638_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"4485:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1534_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"4485:56:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":639,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4544:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":641,"nodeType":"ExpressionStatement","src":"4485:67:5"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4271:71:5","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:5","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:5","nodeType":"VariableDeclaration","scope":643,"src":"4366:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:5"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"4392:0:5"},"scope":757,"src":"4347:212:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":659,"nodeType":"Block","src":"4719:86:5","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":650,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4747:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":652,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4760:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":649,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"4734:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"EmitStatement","src":"4729:40:5"},{"expression":{"arguments":[{"id":656,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4789:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":655,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4779:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"4779:19:5"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"4565:100:5","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:5","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:5","nodeType":"VariableDeclaration","scope":660,"src":"4692:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:5"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"4719:0:5"},"scope":757,"src":"4670:135:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"4811:232:5","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":664,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:5","nodeType":"VariableDeclaration","scope":757,"src":"5048:107:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:5","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"5272:81:5","statements":[{"expression":{"expression":{"arguments":[{"id":672,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5327:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":670,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"5289:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1638_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"5289:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1534_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"5289:57:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":669,"id":675,"nodeType":"Return","src":"5282:64:5"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"5162:51:5","text":" @dev Returns the current beacon."},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:5","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"5237:2:5"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":677,"src":"5263:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:5"},"scope":757,"src":"5218:135:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":712,"nodeType":"Block","src":"5482:368:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":686,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5530:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":684,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"5500:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1486_$","typeString":"type(library AddressUpgradeable)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"5500:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"ExpressionStatement","src":"5492:90:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":695,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5662:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":694,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5643:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$767_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$767","typeString":"contract IBeaconUpgradeable"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":766,"src":"5643:44:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":692,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"5613:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1486_$","typeString":"type(library AddressUpgradeable)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"5613:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"5592:172:5"},{"expression":{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":706,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5812:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":703,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"5774:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1638_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"5774:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1534_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"5774:57:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":709,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5834:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":711,"nodeType":"ExpressionStatement","src":"5774:69:5"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"5359:71:5","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":713,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:5","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:5","nodeType":"VariableDeclaration","scope":713,"src":"5455:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:5"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"5482:0:5"},"scope":757,"src":"5435:415:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":750,"nodeType":"Block","src":"6249:239:5","statements":[{"expression":{"arguments":[{"id":724,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6270:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"6259:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"6259:21:5"},{"eventCall":{"arguments":[{"id":728,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6310:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":727,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6295:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"EmitStatement","src":"6290:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6334:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:5","memberName":"length","nodeType":"MemberAccess","src":"6334:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":735,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6353:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":749,"nodeType":"IfStatement","src":"6330:152:5","trueBody":{"id":748,"nodeType":"Block","src":"6364:118:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":741,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6437:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":740,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6418:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$767_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$767","typeString":"contract IBeaconUpgradeable"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":766,"src":"6418:44:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6466:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":737,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"6378:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1486_$","typeString":"type(library AddressUpgradeable)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1373,"src":"6378:39:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":747,"nodeType":"ExpressionStatement","src":"6378:93:5"}]}}]},"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"5856:292:5","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":751,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:5","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:5","nodeType":"VariableDeclaration","scope":751,"src":"6186:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"data","nameLocation":"6218:4:5","nodeType":"VariableDeclaration","scope":751,"src":"6205:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":717,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:5","nodeType":"VariableDeclaration","scope":751,"src":"6224:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":719,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:5"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"6249:0:5"},"scope":757,"src":"6153:335:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"6494:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":756,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:5","nodeType":"VariableDeclaration","scope":757,"src":"6753:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":755,"length":{"hexValue":"3530","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":758,"src":"609:6172:5","usedErrors":[],"usedEvents":[410,417,422,782]}],"src":"116:6666:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[767]},"id":768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":759,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"118:79:6","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":767,"linearizedBaseContracts":[767],"name":"IBeaconUpgradeable","nameLocation":"208:18:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"233:162:6","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":766,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:6","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"423:2:6"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"449:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:6"},"scope":767,"src":"400:58:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":768,"src":"198:262:6","usedErrors":[],"usedEvents":[]}],"src":"93:368:6"},"id":6},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1486],"Initializable":[936]},"id":937,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":769,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":770,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":937,"sourceUnit":1487,"src":"138:44:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"184:2209:7","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":936,"linearizedBaseContracts":[936],"name":"Initializable","nameLocation":"2412:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"2432:109:7","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":774,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:7","nodeType":"VariableDeclaration","scope":936,"src":"2546:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":773,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"2579:91:7","text":" @dev Indicates that the contract is in the process of being initialized."},"id":777,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:7","nodeType":"VariableDeclaration","scope":936,"src":"2675:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":776,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"2708:90:7","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":782,"name":"Initialized","nameLocation":"2809:11:7","nodeType":"EventDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:7","nodeType":"VariableDeclaration","scope":782,"src":"2821:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":779,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:7"},"src":"2803:33:7"},{"body":{"id":837,"nodeType":"Block","src":"3269:483:7","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:7","nodeType":"VariableDeclaration","scope":837,"src":"3279:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":785,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":789,"initialValue":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:7","subExpression":{"id":787,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3302:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":791,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3347:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3365:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:7","subExpression":{"arguments":[{"arguments":[{"id":801,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$936","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$936","typeString":"contract Initializable"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:7","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":797,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"3388:18:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1486_$","typeString":"type(library AddressUpgradeable)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"3388:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3436:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"3325:201:7"},{"expression":{"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":814,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3536:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":817,"nodeType":"ExpressionStatement","src":"3536:16:7"},{"condition":{"id":818,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3566:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":824,"nodeType":"IfStatement","src":"3562:65:7","trueBody":{"id":823,"nodeType":"Block","src":"3582:45:7","statements":[{"expression":{"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":819,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3596:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":822,"nodeType":"ExpressionStatement","src":"3596:20:7"}]}},{"id":825,"nodeType":"PlaceholderStatement","src":"3636:1:7"},{"condition":{"id":826,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3651:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":836,"nodeType":"IfStatement","src":"3647:99:7","trueBody":{"id":835,"nodeType":"Block","src":"3667:79:7","statements":[{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":827,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3681:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"ExpressionStatement","src":"3681:21:7"},{"eventCall":{"arguments":[{"hexValue":"31","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":831,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"3721:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"EmitStatement","src":"3716:19:7"}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"2842:399:7","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":838,"name":"initializer","nameLocation":"3255:11:7","nodeType":"ModifierDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"3266:2:7"},"src":"3246:506:7","virtual":false,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"4863:255:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:7","subExpression":{"id":844,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"4882:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":846,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"4899:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":847,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4914:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"4873:99:7"},{"expression":{"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":853,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"4982:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":854,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4997:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":856,"nodeType":"ExpressionStatement","src":"4982:22:7"},{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":857,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5014:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"ExpressionStatement","src":"5014:20:7"},{"id":861,"nodeType":"PlaceholderStatement","src":"5044:1:7"},{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":862,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5055:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"nodeType":"ExpressionStatement","src":"5055:21:7"},{"eventCall":{"arguments":[{"id":867,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5103:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":866,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"5091:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"EmitStatement","src":"5086:25:7"}]},"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"3758:1062:7","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":871,"name":"reinitializer","nameLocation":"4834:13:7","nodeType":"ModifierDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"version","nameLocation":"4854:7:7","nodeType":"VariableDeclaration","scope":871,"src":"4848:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":840,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:7"},"src":"4825:293:7","virtual":false,"visibility":"internal"},{"body":{"id":880,"nodeType":"Block","src":"5356:97:7","statements":[{"expression":{"arguments":[{"id":875,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5374:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"5366:69:7"},{"id":879,"nodeType":"PlaceholderStatement","src":"5445:1:7"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"5124:199:7","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":881,"name":"onlyInitializing","nameLocation":"5337:16:7","nodeType":"ModifierDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"5353:2:7"},"src":"5328:125:7","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"5988:231:7","statements":[{"expression":{"arguments":[{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:7","subExpression":{"id":886,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"6007:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"5998:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6078:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":893,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":892,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:7","memberName":"max","nodeType":"MemberAccess","src":"6094:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"6074:139:7","trueBody":{"id":914,"nodeType":"Block","src":"6111:102:7","statements":[{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":898,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6125:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":900,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":899,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:7","memberName":"max","nodeType":"MemberAccess","src":"6140:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":905,"nodeType":"ExpressionStatement","src":"6125:30:7"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":908,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:7","memberName":"max","nodeType":"MemberAccess","src":"6186:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":906,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6174:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"EmitStatement","src":"6169:33:7"}]}}]},"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"5459:475:7","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:7","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"5968:2:7"},"returnParameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"5988:0:7"},"scope":936,"src":"5939:280:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":925,"nodeType":"Block","src":"6393:36:7","statements":[{"expression":{"id":923,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6410:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":922,"id":924,"nodeType":"Return","src":"6403:19:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"6225:99:7","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:7","nodeType":"FunctionDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"6360:2:7"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"6386:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":920,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:7"},"scope":936,"src":"6329:100:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"6601:37:7","statements":[{"expression":{"id":932,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"6618:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":931,"id":933,"nodeType":"Return","src":"6611:20:7"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"6435:105:7","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:7","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"6569:2:7"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":935,"src":"6595:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:7"},"scope":936,"src":"6545:93:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":937,"src":"2394:4246:7","usedErrors":[],"usedEvents":[782]}],"src":"113:6528:7"},"id":7},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1486],"ERC1967UpgradeUpgradeable":[757],"IBeaconUpgradeable":[767],"IERC1822ProxiableUpgradeable":[433],"IERC1967Upgradeable":[423],"Initializable":[936],"StorageSlotUpgradeable":[1638],"UUPSUpgradeable":[1072]},"id":1073,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":938,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1073,"sourceUnit":434,"src":"140:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1073,"sourceUnit":758,"src":"197:50:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1073,"sourceUnit":937,"src":"248:29:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":943,"name":"Initializable","nameLocations":["965:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"965:13:8"},"id":944,"nodeType":"InheritanceSpecifier","src":"965:13:8"},{"baseName":{"id":945,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:8"],"nodeType":"IdentifierPath","referencedDeclaration":433,"src":"980:28:8"},"id":946,"nodeType":"InheritanceSpecifier","src":"980:28:8"},{"baseName":{"id":947,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:8"],"nodeType":"IdentifierPath","referencedDeclaration":757,"src":"1010:25:8"},"id":948,"nodeType":"InheritanceSpecifier","src":"1010:25:8"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"279:648:8","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1072,"linearizedBaseContracts":[1072,757,423,433,936],"name":"UUPSUpgradeable","nameLocation":"946:15:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":953,"nodeType":"Block","src":"1102:7:8","statements":[]},"id":954,"implemented":true,"kind":"function","modifiers":[{"id":951,"kind":"modifierInvocation","modifierName":{"id":950,"name":"onlyInitializing","nameLocations":["1085:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1085:16:8"},"nodeType":"ModifierInvocation","src":"1085:16:8"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:8","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1073:2:8"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"1102:0:8"},"scope":1072,"src":"1042:67:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"1185:7:8","statements":[]},"id":960,"implemented":true,"kind":"function","modifiers":[{"id":957,"kind":"modifierInvocation","modifierName":{"id":956,"name":"onlyInitializing","nameLocations":["1168:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1168:16:8"},"nodeType":"ModifierInvocation","src":"1168:16:8"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:8","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[],"src":"1156:2:8"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"1185:0:8"},"scope":1072,"src":"1115:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"1197:87:8","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":967,"mutability":"immutable","name":"__self","nameLocation":"1315:6:8","nodeType":"VariableDeclaration","scope":1072,"src":"1289:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":965,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1072","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1072","typeString":"contract UUPSUpgradeable"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:8","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":989,"nodeType":"Block","src":"1863:205:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":973,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1072","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1072","typeString":"contract UUPSUpgradeable"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:8","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":975,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1898:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"ExpressionStatement","src":"1873:80:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":981,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"1971:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":983,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1995:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"1963:87:8"},{"id":988,"nodeType":"PlaceholderStatement","src":"2060:1:8"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"1344:493:8","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":990,"name":"onlyProxy","nameLocation":"1851:9:8","nodeType":"ModifierDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"1860:2:8"},"src":"1842:226:8","virtual":false,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"2298:120:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":996,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1072","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1072","typeString":"contract UUPSUpgradeable"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:8","typeDescriptions":{}}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":998,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2333:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"2308:92:8"},{"id":1003,"nodeType":"PlaceholderStatement","src":"2410:1:8"}]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"2074:195:8","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":1005,"name":"notDelegated","nameLocation":"2283:12:8","nodeType":"ModifierDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"2295:2:8"},"src":"2274:144:8","virtual":false,"visibility":"internal"},{"baseFunctions":[432],"body":{"id":1016,"nodeType":"Block","src":"3093:44:8","statements":[{"expression":{"id":1014,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3110:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1013,"id":1015,"nodeType":"Return","src":"3103:27:8"}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"2424:577:8","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1017,"implemented":true,"kind":"function","modifiers":[{"id":1010,"kind":"modifierInvocation","modifierName":{"id":1009,"name":"notDelegated","nameLocations":["3062:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1005,"src":"3062:12:8"},"nodeType":"ModifierInvocation","src":"3062:12:8"}],"name":"proxiableUUID","nameLocation":"3015:13:8","nodeType":"FunctionDefinition","overrides":{"id":1008,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:8"},"parameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"3028:2:8"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"3084:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:8"},"scope":1072,"src":"3006:131:8","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1038,"nodeType":"Block","src":"3458:124:8","statements":[{"expression":{"arguments":[{"id":1026,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"3486:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1025,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"3468:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"3468:36:8"},{"expression":{"arguments":[{"id":1030,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"3536:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1031,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1029,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3514:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"3514:61:8"}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"3143:239:8","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":1039,"implemented":true,"kind":"function","modifiers":[{"id":1023,"kind":"modifierInvocation","modifierName":{"id":1022,"name":"onlyProxy","nameLocations":["3448:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"3448:9:8"},"nodeType":"ModifierInvocation","src":"3448:9:8"}],"name":"upgradeTo","nameLocation":"3396:9:8","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:8","nodeType":"VariableDeclaration","scope":1039,"src":"3406:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:8"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"3458:0:8"},"scope":1072,"src":"3387:195:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1059,"nodeType":"Block","src":"4006:115:8","statements":[{"expression":{"arguments":[{"id":1050,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"4034:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1049,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"4016:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"4016:36:8"},{"expression":{"arguments":[{"id":1054,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"4084:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"4103:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1053,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4062:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"4062:52:8"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"3588:308:8","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":1060,"implemented":true,"kind":"function","modifiers":[{"id":1047,"kind":"modifierInvocation","modifierName":{"id":1046,"name":"onlyProxy","nameLocations":["3996:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"3996:9:8"},"nodeType":"ModifierInvocation","src":"3996:9:8"}],"name":"upgradeToAndCall","nameLocation":"3910:16:8","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:8","nodeType":"VariableDeclaration","scope":1060,"src":"3927:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"data","nameLocation":"3967:4:8","nodeType":"VariableDeclaration","scope":1060,"src":"3954:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:8"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"4006:0:8"},"scope":1072,"src":"3901:220:8","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"4127:397:8","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1066,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:8","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:8","nodeType":"VariableDeclaration","scope":1066,"src":"4556:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:8"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"4599:0:8"},"scope":1072,"src":"4529:71:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"4606:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1071,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:8","nodeType":"VariableDeclaration","scope":1072,"src":"4865:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1070,"length":{"hexValue":"3530","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1073,"src":"928:3965:8","usedErrors":[],"usedEvents":[410,417,422,782]}],"src":"115:4779:8"},"id":8},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1486],"Initializable":[936],"ReentrancyGuardUpgradeable":[1156]},"id":1157,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1074,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1157,"sourceUnit":937,"src":"136:42:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1077,"name":"Initializable","nameLocations":["979:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"979:13:9"},"id":1078,"nodeType":"InheritanceSpecifier","src":"979:13:9"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"180:750:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1156,"linearizedBaseContracts":[1156,936],"name":"ReentrancyGuardUpgradeable","nameLocation":"949:26:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1081,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1772:12:9","nodeType":"VariableDeclaration","scope":1156,"src":"1747:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1084,"mutability":"constant","name":"_ENTERED","nameLocation":"1819:8:9","nodeType":"VariableDeclaration","scope":1156,"src":"1794:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1086,"mutability":"mutable","name":"_status","nameLocation":"1854:7:9","nodeType":"VariableDeclaration","scope":1156,"src":"1838:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1094,"nodeType":"Block","src":"1928:51:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1091,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1938:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"ExpressionStatement","src":"1938:34:9"}]},"id":1095,"implemented":true,"kind":"function","modifiers":[{"id":1089,"kind":"modifierInvocation","modifierName":{"id":1088,"name":"onlyInitializing","nameLocations":["1911:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1911:16:9"},"nodeType":"ModifierInvocation","src":"1911:16:9"}],"name":"__ReentrancyGuard_init","nameLocation":"1877:22:9","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1899:2:9"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"1928:0:9"},"scope":1156,"src":"1868:111:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"2055:39:9","statements":[{"expression":{"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1100,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2065:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1101,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2075:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ExpressionStatement","src":"2065:22:9"}]},"id":1105,"implemented":true,"kind":"function","modifiers":[{"id":1098,"kind":"modifierInvocation","modifierName":{"id":1097,"name":"onlyInitializing","nameLocations":["2038:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"2038:16:9"},"nodeType":"ModifierInvocation","src":"2038:16:9"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1994:32:9","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"2026:2:9"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"2055:0:9"},"scope":1156,"src":"1985:109:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"2495:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1108,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"2505:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"2505:21:9"},{"id":1111,"nodeType":"PlaceholderStatement","src":"2536:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1112,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2547:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1114,"nodeType":"ExpressionStatement","src":"2547:20:9"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"2100:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1116,"name":"nonReentrant","nameLocation":"2480:12:9","nodeType":"ModifierDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"2492:2:9"},"src":"2471:103:9","virtual":false,"visibility":"internal"},{"body":{"id":1130,"nodeType":"Block","src":"2619:248:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1121,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2723:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2712:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2704:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2704:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"2704:63:9"},{"expression":{"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1127,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2852:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1129,"nodeType":"ExpressionStatement","src":"2842:18:9"}]},"id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2589:19:9","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"2608:2:9"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"2619:0:9"},"scope":1156,"src":"2580:287:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1138,"nodeType":"Block","src":"2911:171:9","statements":[{"expression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1134,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3053:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1135,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"3063:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ExpressionStatement","src":"3053:22:9"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2882:18:9","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"2900:2:9"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"2911:0:9"},"scope":1156,"src":"2873:209:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1149,"nodeType":"Block","src":"3325:43:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1146,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3353:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3342:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1144,"id":1148,"nodeType":"Return","src":"3335:26:9"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"3088:168:9","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1150,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3270:23:9","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"3293:2:9"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1150,"src":"3319:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1142,"name":"bool","nodeType":"ElementaryTypeName","src":"3319:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3318:6:9"},"scope":1156,"src":"3261:107:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"3374:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1155,"mutability":"mutable","name":"__gap","nameLocation":"3653:5:9","nodeType":"VariableDeclaration","scope":1156,"src":"3633:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1154,"length":{"hexValue":"3439","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3641:2:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3633:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1157,"src":"931:2730:9","usedErrors":[],"usedEvents":[782]}],"src":"112:3550:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1486]},"id":1487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1158,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1486,"linearizedBaseContracts":[1486],"name":"AddressUpgradeable","nameLocation":"202:18:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1173,"nodeType":"Block","src":"1489:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1167,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1713:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:10","memberName":"code","nodeType":"MemberAccess","src":"1713:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:10","memberName":"length","nodeType":"MemberAccess","src":"1713:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1166,"id":1172,"nodeType":"Return","src":"1706:30:10"}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"227:1191:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:10","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"account","nameLocation":"1451:7:10","nodeType":"VariableDeclaration","scope":1174,"src":"1443:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:10"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1174,"src":"1483:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1164,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:10"},"scope":1486,"src":"1423:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1207,"nodeType":"Block","src":"2729:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1185,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1486","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1486","typeString":"library AddressUpgradeable"}],"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:10","typeDescriptions":{}}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:10","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1188,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2772:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"2739:73:10"},{"assignments":[1194,null],"declarations":[{"constant":false,"id":1194,"mutability":"mutable","name":"success","nameLocation":"2829:7:10","nodeType":"VariableDeclaration","scope":1207,"src":"2824:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1193,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1201,"initialValue":{"arguments":[{"hexValue":"","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1195,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"2842:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:10","memberName":"call","nodeType":"MemberAccess","src":"2842:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1197,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2864:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:10"},{"expression":{"arguments":[{"id":1203,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2893:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"2885:78:10"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"1749:904:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:10","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:10","nodeType":"VariableDeclaration","scope":1208,"src":"2677:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"amount","nameLocation":"2712:6:10","nodeType":"VariableDeclaration","scope":1208,"src":"2704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:10"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"2729:0:10"},"scope":1486,"src":"2658:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"3801:96:10","statements":[{"expression":{"arguments":[{"id":1219,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3840:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"3848:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1218,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1266,1310],"referencedDeclaration":1310,"src":"3818:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1217,"id":1224,"nodeType":"Return","src":"3811:79:10"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"2976:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:10","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"target","nameLocation":"3742:6:10","nodeType":"VariableDeclaration","scope":1226,"src":"3734:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"data","nameLocation":"3763:4:10","nodeType":"VariableDeclaration","scope":1226,"src":"3750:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1212,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:10"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"3787:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1215,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:10"},"scope":1486,"src":"3712:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"4266:76:10","statements":[{"expression":{"arguments":[{"id":1239,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4305:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1240,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4313:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1242,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4322:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1238,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1266,1310],"referencedDeclaration":1310,"src":"4283:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1237,"id":1244,"nodeType":"Return","src":"4276:59:10"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"3903:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:10","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"target","nameLocation":"4158:6:10","nodeType":"VariableDeclaration","scope":1246,"src":"4150:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"data","nameLocation":"4187:4:10","nodeType":"VariableDeclaration","scope":1246,"src":"4174:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1230,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:10","nodeType":"VariableDeclaration","scope":1246,"src":"4201:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1232,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:10"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"4252:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1235,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:10"},"scope":1486,"src":"4119:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"4817:111:10","statements":[{"expression":{"arguments":[{"id":1259,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4856:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"4864:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4870:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1258,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1266,1310],"referencedDeclaration":1310,"src":"4834:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1257,"id":1264,"nodeType":"Return","src":"4827:94:10"}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"4348:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:10","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"target","nameLocation":"4743:6:10","nodeType":"VariableDeclaration","scope":1266,"src":"4735:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"data","nameLocation":"4764:4:10","nodeType":"VariableDeclaration","scope":1266,"src":"4751:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"value","nameLocation":"4778:5:10","nodeType":"VariableDeclaration","scope":1266,"src":"4770:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:10"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"4803:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:10"},"scope":1486,"src":"4704:224:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"5355:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1283,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1486","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1486","typeString":"library AddressUpgradeable"}],"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:10","typeDescriptions":{}}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:10","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5398:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"5365:81:10"},{"assignments":[1292,1294],"declarations":[{"constant":false,"id":1292,"mutability":"mutable","name":"success","nameLocation":"5462:7:10","nodeType":"VariableDeclaration","scope":1309,"src":"5457:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1291,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:10","nodeType":"VariableDeclaration","scope":1309,"src":"5471:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1301,"initialValue":{"arguments":[{"id":1299,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5524:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1295,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5498:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:10","memberName":"call","nodeType":"MemberAccess","src":"5498:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5517:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:10"},{"expression":{"arguments":[{"id":1303,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5573:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1304,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5581:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1305,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5590:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1306,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5602:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1302,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"5546:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1279,"id":1308,"nodeType":"Return","src":"5539:76:10"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"4934:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:10","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"target","nameLocation":"5224:6:10","nodeType":"VariableDeclaration","scope":1310,"src":"5216:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"data","nameLocation":"5253:4:10","nodeType":"VariableDeclaration","scope":1310,"src":"5240:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"value","nameLocation":"5275:5:10","nodeType":"VariableDeclaration","scope":1310,"src":"5267:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:10","nodeType":"VariableDeclaration","scope":1310,"src":"5290:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1274,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:10"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"5341:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:10"},"scope":1486,"src":"5176:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"5899:97:10","statements":[{"expression":{"arguments":[{"id":1321,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"5935:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5943:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1320,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1327,1356],"referencedDeclaration":1356,"src":"5916:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1319,"id":1325,"nodeType":"Return","src":"5909:80:10"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"5628:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:10","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"target","nameLocation":"5835:6:10","nodeType":"VariableDeclaration","scope":1327,"src":"5827:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"data","nameLocation":"5856:4:10","nodeType":"VariableDeclaration","scope":1327,"src":"5843:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1314,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:10"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1327,"src":"5885:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1317,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:10"},"scope":1486,"src":"5799:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1355,"nodeType":"Block","src":"6338:168:10","statements":[{"assignments":[1340,1342],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"success","nameLocation":"6354:7:10","nodeType":"VariableDeclaration","scope":1355,"src":"6349:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1339,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:10","nodeType":"VariableDeclaration","scope":1355,"src":"6363:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1347,"initialValue":{"arguments":[{"id":1345,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"6408:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1343,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6390:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:10"},{"expression":{"arguments":[{"id":1349,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6457:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6465:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1351,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"6474:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1352,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"6486:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1348,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"6430:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1338,"id":1354,"nodeType":"Return","src":"6423:76:10"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"6002:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:10","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"target","nameLocation":"6225:6:10","nodeType":"VariableDeclaration","scope":1356,"src":"6217:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"data","nameLocation":"6254:4:10","nodeType":"VariableDeclaration","scope":1356,"src":"6241:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:10","nodeType":"VariableDeclaration","scope":1356,"src":"6268:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1333,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:10"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"6324:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1336,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:10"},"scope":1486,"src":"6180:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1372,"nodeType":"Block","src":"6782:101:10","statements":[{"expression":{"arguments":[{"id":1367,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"6820:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"6828:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1366,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1373,1402],"referencedDeclaration":1402,"src":"6799:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1365,"id":1371,"nodeType":"Return","src":"6792:84:10"}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"6512:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:10","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"target","nameLocation":"6723:6:10","nodeType":"VariableDeclaration","scope":1373,"src":"6715:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"data","nameLocation":"6744:4:10","nodeType":"VariableDeclaration","scope":1373,"src":"6731:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1360,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:10"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"6768:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1363,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:10"},"scope":1486,"src":"6685:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1401,"nodeType":"Block","src":"7224:170:10","statements":[{"assignments":[1386,1388],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"success","nameLocation":"7240:7:10","nodeType":"VariableDeclaration","scope":1401,"src":"7235:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1385,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:10","nodeType":"VariableDeclaration","scope":1401,"src":"7249:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1387,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1393,"initialValue":{"arguments":[{"id":1391,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"7296:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1389,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"7276:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:10"},{"expression":{"arguments":[{"id":1395,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"7345:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1396,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7353:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1397,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7362:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1398,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"7374:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1394,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"7318:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1384,"id":1400,"nodeType":"Return","src":"7311:76:10"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"6889:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:10","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"target","nameLocation":"7116:6:10","nodeType":"VariableDeclaration","scope":1402,"src":"7108:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"data","nameLocation":"7145:4:10","nodeType":"VariableDeclaration","scope":1402,"src":"7132:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1377,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:10","nodeType":"VariableDeclaration","scope":1402,"src":"7159:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1379,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:10"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"7210:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1382,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:10"},"scope":1486,"src":"7069:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1440,"nodeType":"Block","src":"7876:434:10","statements":[{"condition":{"id":1416,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"7890:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1438,"nodeType":"Block","src":"8246:58:10","statements":[{"expression":{"arguments":[{"id":1434,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"8268:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1435,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"8280:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1433,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"8260:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"ExpressionStatement","src":"8260:33:10"}]},"id":1439,"nodeType":"IfStatement","src":"7886:418:10","trueBody":{"id":1432,"nodeType":"Block","src":"7899:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1417,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"7917:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:10","memberName":"length","nodeType":"MemberAccess","src":"7917:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1429,"nodeType":"IfStatement","src":"7913:286:10","trueBody":{"id":1428,"nodeType":"Block","src":"7941:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1423,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8143:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1422,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"8132:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"ExpressionStatement","src":"8124:60:10"}]}},{"expression":{"id":1430,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"8219:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1415,"id":1431,"nodeType":"Return","src":"8212:17:10"}]}}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"7400:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:10","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"target","nameLocation":"7735:6:10","nodeType":"VariableDeclaration","scope":1441,"src":"7727:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"success","nameLocation":"7756:7:10","nodeType":"VariableDeclaration","scope":1441,"src":"7751:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:10","nodeType":"VariableDeclaration","scope":1441,"src":"7773:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1408,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:10","nodeType":"VariableDeclaration","scope":1441,"src":"7806:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1410,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:10"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1441,"src":"7862:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1413,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:10"},"scope":1486,"src":"7682:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"8691:135:10","statements":[{"condition":{"id":1453,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"8705:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1462,"nodeType":"Block","src":"8762:58:10","statements":[{"expression":{"arguments":[{"id":1458,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"8784:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1459,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"8796:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1457,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"8776:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"ExpressionStatement","src":"8776:33:10"}]},"id":1463,"nodeType":"IfStatement","src":"8701:119:10","trueBody":{"id":1456,"nodeType":"Block","src":"8714:42:10","statements":[{"expression":{"id":1454,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"8735:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1452,"id":1455,"nodeType":"Return","src":"8728:17:10"}]}}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"8316:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:10","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"success","nameLocation":"8571:7:10","nodeType":"VariableDeclaration","scope":1465,"src":"8566:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1443,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:10","nodeType":"VariableDeclaration","scope":1465,"src":"8588:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1445,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:10","nodeType":"VariableDeclaration","scope":1465,"src":"8621:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1447,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:10"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"8677:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:10"},"scope":1486,"src":"8531:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1484,"nodeType":"Block","src":"8915:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1472,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"8991:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:10","memberName":"length","nodeType":"MemberAccess","src":"8991:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1482,"nodeType":"Block","src":"9321:45:10","statements":[{"expression":{"arguments":[{"id":1479,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9342:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1478,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1481,"nodeType":"ExpressionStatement","src":"9335:20:10"}]},"id":1483,"nodeType":"IfStatement","src":"8987:379:10","trueBody":{"id":1477,"nodeType":"Block","src":"9014:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:10"},"nodeType":"YulFunctionCall","src":"9213:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:10"},"nodeType":"YulFunctionCall","src":"9254:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:10"},"nodeType":"YulFunctionCall","src":"9247:44:10"},"nodeType":"YulExpressionStatement","src":"9247:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1467,"isOffset":false,"isSlot":false,"src":"9219:10:10","valueSize":1},{"declaration":1467,"isOffset":false,"isSlot":false,"src":"9262:10:10","valueSize":1}],"id":1476,"nodeType":"InlineAssembly","src":"9163:142:10"}]}}]},"id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:10","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:10","nodeType":"VariableDeclaration","scope":1485,"src":"8849:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1466,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:10","nodeType":"VariableDeclaration","scope":1485,"src":"8874:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1468,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:10"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[],"src":"8915:0:10"},"scope":1486,"src":"8832:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1487,"src":"194:9180:10","usedErrors":[],"usedEvents":[]}],"src":"101:9274:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1486],"ContextUpgradeable":[1528],"Initializable":[936]},"id":1529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1488,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1529,"sourceUnit":937,"src":"110:42:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1491,"name":"Initializable","nameLocations":["691:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"691:13:11"},"id":1492,"nodeType":"InheritanceSpecifier","src":"691:13:11"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"154:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1528,"linearizedBaseContracts":[1528,936],"name":"ContextUpgradeable","nameLocation":"669:18:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1497,"nodeType":"Block","src":"763:7:11","statements":[]},"id":1498,"implemented":true,"kind":"function","modifiers":[{"id":1495,"kind":"modifierInvocation","modifierName":{"id":1494,"name":"onlyInitializing","nameLocations":["746:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"746:16:11"},"nodeType":"ModifierInvocation","src":"746:16:11"}],"name":"__Context_init","nameLocation":"720:14:11","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"734:2:11"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"763:0:11"},"scope":1528,"src":"711:59:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"838:7:11","statements":[]},"id":1504,"implemented":true,"kind":"function","modifiers":[{"id":1501,"kind":"modifierInvocation","modifierName":{"id":1500,"name":"onlyInitializing","nameLocations":["821:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"821:16:11"},"nodeType":"ModifierInvocation","src":"821:16:11"}],"name":"__Context_init_unchained","nameLocation":"785:24:11","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"809:2:11"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"838:0:11"},"scope":1528,"src":"776:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1512,"nodeType":"Block","src":"912:34:11","statements":[{"expression":{"expression":{"id":1509,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:11","memberName":"sender","nodeType":"MemberAccess","src":"929:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1508,"id":1511,"nodeType":"Return","src":"922:17:11"}]},"id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:11","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"869:2:11"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1513,"src":"903:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:11"},"scope":1528,"src":"850:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"1019:32:11","statements":[{"expression":{"expression":{"id":1518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:11","memberName":"data","nodeType":"MemberAccess","src":"1036:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1517,"id":1520,"nodeType":"Return","src":"1029:15:11"}]},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:11","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"969:2:11"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"1003:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:11"},"scope":1528,"src":"952:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"1057:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1527,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:11","nodeType":"VariableDeclaration","scope":1528,"src":"1316:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"length":{"hexValue":"3530","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1529,"src":"651:693:11","usedErrors":[],"usedEvents":[782]}],"src":"86:1259:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1638]},"id":1639,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1530,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"218:1201:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1638,"linearizedBaseContracts":[1638],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1534,"members":[{"constant":false,"id":1533,"mutability":"mutable","name":"value","nameLocation":"1494:5:12","nodeType":"VariableDeclaration","scope":1534,"src":"1486:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:12","nodeType":"StructDefinition","scope":1638,"src":"1457:49:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1537,"members":[{"constant":false,"id":1536,"mutability":"mutable","name":"value","nameLocation":"1546:5:12","nodeType":"VariableDeclaration","scope":1537,"src":"1541:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:12","nodeType":"StructDefinition","scope":1638,"src":"1512:46:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1540,"members":[{"constant":false,"id":1539,"mutability":"mutable","name":"value","nameLocation":"1601:5:12","nodeType":"VariableDeclaration","scope":1540,"src":"1593:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:12","nodeType":"StructDefinition","scope":1638,"src":"1564:49:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1543,"members":[{"constant":false,"id":1542,"mutability":"mutable","name":"value","nameLocation":"1656:5:12","nodeType":"VariableDeclaration","scope":1543,"src":"1648:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:12","nodeType":"StructDefinition","scope":1638,"src":"1619:49:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":1546,"members":[{"constant":false,"id":1545,"mutability":"mutable","name":"value","nameLocation":"1709:5:12","nodeType":"VariableDeclaration","scope":1546,"src":"1702:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1544,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:12","nodeType":"StructDefinition","scope":1638,"src":"1674:47:12","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":1549,"members":[{"constant":false,"id":1548,"mutability":"mutable","name":"value","nameLocation":"1760:5:12","nodeType":"VariableDeclaration","scope":1549,"src":"1754:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1547,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:12","nodeType":"StructDefinition","scope":1638,"src":"1727:45:12","visibility":"public"},{"body":{"id":1559,"nodeType":"Block","src":"1954:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:12","statements":[{"nodeType":"YulAssignment","src":"2030:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1556,"isOffset":false,"isSlot":true,"src":"2030:6:12","suffix":"slot","valueSize":1},{"declaration":1552,"isOffset":false,"isSlot":false,"src":"2040:4:12","valueSize":1}],"id":1558,"nodeType":"InlineAssembly","src":"2007:47:12"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"1778:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1560,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:12","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"slot","nameLocation":"1902:4:12","nodeType":"VariableDeclaration","scope":1560,"src":"1894:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:12"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"r","nameLocation":"1951:1:12","nodeType":"VariableDeclaration","scope":1560,"src":"1931:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1555,"nodeType":"UserDefinedTypeName","pathNode":{"id":1554,"name":"AddressSlot","nameLocations":["1931:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"1931:11:12"},"referencedDeclaration":1534,"src":"1931:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1534_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:12"},"scope":1638,"src":"1870:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1570,"nodeType":"Block","src":"2242:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:12","statements":[{"nodeType":"YulAssignment","src":"2318:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1567,"isOffset":false,"isSlot":true,"src":"2318:6:12","suffix":"slot","valueSize":1},{"declaration":1563,"isOffset":false,"isSlot":false,"src":"2328:4:12","valueSize":1}],"id":1569,"nodeType":"InlineAssembly","src":"2295:47:12"}]},"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"2066:87:12","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:12","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"slot","nameLocation":"2190:4:12","nodeType":"VariableDeclaration","scope":1571,"src":"2182:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:12"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"r","nameLocation":"2239:1:12","nodeType":"VariableDeclaration","scope":1571,"src":"2219:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1537_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1566,"nodeType":"UserDefinedTypeName","pathNode":{"id":1565,"name":"BooleanSlot","nameLocations":["2219:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"2219:11:12"},"referencedDeclaration":1537,"src":"2219:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1537_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:12"},"scope":1638,"src":"2158:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1581,"nodeType":"Block","src":"2530:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:12","statements":[{"nodeType":"YulAssignment","src":"2606:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1578,"isOffset":false,"isSlot":true,"src":"2606:6:12","suffix":"slot","valueSize":1},{"declaration":1574,"isOffset":false,"isSlot":false,"src":"2616:4:12","valueSize":1}],"id":1580,"nodeType":"InlineAssembly","src":"2583:47:12"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"2354:87:12","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:12","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"slot","nameLocation":"2478:4:12","nodeType":"VariableDeclaration","scope":1582,"src":"2470:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:12"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"r","nameLocation":"2527:1:12","nodeType":"VariableDeclaration","scope":1582,"src":"2507:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1540_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1577,"nodeType":"UserDefinedTypeName","pathNode":{"id":1576,"name":"Bytes32Slot","nameLocations":["2507:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1540,"src":"2507:11:12"},"referencedDeclaration":1540,"src":"2507:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1540_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:12"},"scope":1638,"src":"2446:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1592,"nodeType":"Block","src":"2818:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:12","statements":[{"nodeType":"YulAssignment","src":"2894:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1589,"isOffset":false,"isSlot":true,"src":"2894:6:12","suffix":"slot","valueSize":1},{"declaration":1585,"isOffset":false,"isSlot":false,"src":"2904:4:12","valueSize":1}],"id":1591,"nodeType":"InlineAssembly","src":"2871:47:12"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"2642:87:12","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:12","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"slot","nameLocation":"2766:4:12","nodeType":"VariableDeclaration","scope":1593,"src":"2758:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:12"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"r","nameLocation":"2815:1:12","nodeType":"VariableDeclaration","scope":1593,"src":"2795:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1543_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1588,"nodeType":"UserDefinedTypeName","pathNode":{"id":1587,"name":"Uint256Slot","nameLocations":["2795:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1543,"src":"2795:11:12"},"referencedDeclaration":1543,"src":"2795:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1543_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:12"},"scope":1638,"src":"2734:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1603,"nodeType":"Block","src":"3103:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:12","statements":[{"nodeType":"YulAssignment","src":"3179:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1600,"isOffset":false,"isSlot":true,"src":"3179:6:12","suffix":"slot","valueSize":1},{"declaration":1596,"isOffset":false,"isSlot":false,"src":"3189:4:12","valueSize":1}],"id":1602,"nodeType":"InlineAssembly","src":"3156:47:12"}]},"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"2930:86:12","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:12","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"slot","nameLocation":"3052:4:12","nodeType":"VariableDeclaration","scope":1604,"src":"3044:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:12"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"r","nameLocation":"3100:1:12","nodeType":"VariableDeclaration","scope":1604,"src":"3081:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1546_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1599,"nodeType":"UserDefinedTypeName","pathNode":{"id":1598,"name":"StringSlot","nameLocations":["3081:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1546,"src":"3081:10:12"},"referencedDeclaration":1546,"src":"3081:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1546_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:12"},"scope":1638,"src":"3021:188:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1614,"nodeType":"Block","src":"3411:112:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:12","statements":[{"nodeType":"YulAssignment","src":"3487:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1611,"isOffset":false,"isSlot":true,"src":"3487:6:12","suffix":"slot","valueSize":1},{"declaration":1607,"isOffset":false,"isSlot":true,"src":"3497:10:12","suffix":"slot","valueSize":1}],"id":1613,"nodeType":"InlineAssembly","src":"3464:53:12"}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"3215:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:12","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"store","nameLocation":"3359:5:12","nodeType":"VariableDeclaration","scope":1615,"src":"3344:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1606,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:12"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"r","nameLocation":"3408:1:12","nodeType":"VariableDeclaration","scope":1615,"src":"3389:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1546_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1610,"nodeType":"UserDefinedTypeName","pathNode":{"id":1609,"name":"StringSlot","nameLocations":["3389:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1546,"src":"3389:10:12"},"referencedDeclaration":1546,"src":"3389:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1546_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:12"},"scope":1638,"src":"3321:202:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"3699:106:12","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:12","statements":[{"nodeType":"YulAssignment","src":"3775:14:12","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1622,"isOffset":false,"isSlot":true,"src":"3775:6:12","suffix":"slot","valueSize":1},{"declaration":1618,"isOffset":false,"isSlot":false,"src":"3785:4:12","valueSize":1}],"id":1624,"nodeType":"InlineAssembly","src":"3752:47:12"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"3529:85:12","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:12","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"slot","nameLocation":"3649:4:12","nodeType":"VariableDeclaration","scope":1626,"src":"3641:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:12"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"r","nameLocation":"3696:1:12","nodeType":"VariableDeclaration","scope":1626,"src":"3678:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1549_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1621,"nodeType":"UserDefinedTypeName","pathNode":{"id":1620,"name":"BytesSlot","nameLocations":["3678:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1549,"src":"3678:9:12"},"referencedDeclaration":1549,"src":"3678:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1549_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:12"},"scope":1638,"src":"3619:186:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"4002:112:12","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:12","statements":[{"nodeType":"YulAssignment","src":"4078:20:12","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:12"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1633,"isOffset":false,"isSlot":true,"src":"4078:6:12","suffix":"slot","valueSize":1},{"declaration":1629,"isOffset":false,"isSlot":true,"src":"4088:10:12","suffix":"slot","valueSize":1}],"id":1635,"nodeType":"InlineAssembly","src":"4055:53:12"}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"3811:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:12","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"store","nameLocation":"3951:5:12","nodeType":"VariableDeclaration","scope":1637,"src":"3937:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1628,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:12"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"r","nameLocation":"3999:1:12","nodeType":"VariableDeclaration","scope":1637,"src":"3981:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1549_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1632,"nodeType":"UserDefinedTypeName","pathNode":{"id":1631,"name":"BytesSlot","nameLocations":["3981:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1549,"src":"3981:9:12"},"referencedDeclaration":1549,"src":"3981:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1549_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:12"},"scope":1638,"src":"3915:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1639,"src":"1420:2696:12","usedErrors":[],"usedEvents":[]}],"src":"193:3924:12"},"id":12},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1716]},"id":1717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1640,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"131:70:13","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1716,"linearizedBaseContracts":[1716],"name":"IERC20","nameLocation":"212:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"225:158:13","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1650,"name":"Transfer","nameLocation":"394:8:13","nodeType":"EventDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:13","nodeType":"VariableDeclaration","scope":1650,"src":"403:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:13","nodeType":"VariableDeclaration","scope":1650,"src":"425:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:13","nodeType":"VariableDeclaration","scope":1650,"src":"445:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:13"},"src":"388:72:13"},{"anonymous":false,"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"466:148:13","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1659,"name":"Approval","nameLocation":"625:8:13","nodeType":"EventDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:13","nodeType":"VariableDeclaration","scope":1659,"src":"634:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1655,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:13","nodeType":"VariableDeclaration","scope":1659,"src":"657:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:13","nodeType":"VariableDeclaration","scope":1659,"src":"682:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:13"},"src":"619:78:13"},{"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"703:66:13","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1665,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:13","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"794:2:13"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"820:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:13"},"scope":1716,"src":"774:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"835:72:13","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1673,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:13","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"account","nameLocation":"939:7:13","nodeType":"VariableDeclaration","scope":1673,"src":"931:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:13"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"971:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:13"},"scope":1716,"src":"912:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"986:202:13","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1683,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:13","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"to","nameLocation":"1219:2:13","nodeType":"VariableDeclaration","scope":1683,"src":"1211:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"amount","nameLocation":"1231:6:13","nodeType":"VariableDeclaration","scope":1683,"src":"1223:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:13"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1683,"src":"1257:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1680,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:13"},"scope":1716,"src":"1193:70:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"1269:264:13","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1693,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:13","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"owner","nameLocation":"1565:5:13","nodeType":"VariableDeclaration","scope":1693,"src":"1557:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"spender","nameLocation":"1580:7:13","nodeType":"VariableDeclaration","scope":1693,"src":"1572:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:13"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"1612:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:13"},"scope":1716,"src":"1538:83:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"1627:642:13","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1703,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:13","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"spender","nameLocation":"2299:7:13","nodeType":"VariableDeclaration","scope":1703,"src":"2291:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"amount","nameLocation":"2316:6:13","nodeType":"VariableDeclaration","scope":1703,"src":"2308:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:13"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"2342:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1700,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:13"},"scope":1716,"src":"2274:74:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"2354:287:13","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1715,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:13","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"from","nameLocation":"2676:4:13","nodeType":"VariableDeclaration","scope":1715,"src":"2668:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"to","nameLocation":"2690:2:13","nodeType":"VariableDeclaration","scope":1715,"src":"2682:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"amount","nameLocation":"2702:6:13","nodeType":"VariableDeclaration","scope":1715,"src":"2694:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:13"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"2728:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1712,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:13"},"scope":1716,"src":"2646:88:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1717,"src":"202:2534:13","usedErrors":[],"usedEvents":[1650,1659]}],"src":"106:2631:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1752]},"id":1753,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1718,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"148:480:14","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1752,"linearizedBaseContracts":[1752],"name":"IERC20Permit","nameLocation":"639:12:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"658:792:14","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1737,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:14","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"owner","nameLocation":"1488:5:14","nodeType":"VariableDeclaration","scope":1737,"src":"1480:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"spender","nameLocation":"1511:7:14","nodeType":"VariableDeclaration","scope":1737,"src":"1503:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"value","nameLocation":"1536:5:14","nodeType":"VariableDeclaration","scope":1737,"src":"1528:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:14","nodeType":"VariableDeclaration","scope":1737,"src":"1551:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"v","nameLocation":"1583:1:14","nodeType":"VariableDeclaration","scope":1737,"src":"1577:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1729,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"r","nameLocation":"1602:1:14","nodeType":"VariableDeclaration","scope":1737,"src":"1594:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"s","nameLocation":"1621:1:14","nodeType":"VariableDeclaration","scope":1737,"src":"1613:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:14"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[],"src":"1637:0:14"},"scope":1752,"src":"1455:183:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"1644:294:14","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1745,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:14","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"owner","nameLocation":"1967:5:14","nodeType":"VariableDeclaration","scope":1745,"src":"1959:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:14"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"1997:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:14"},"scope":1752,"src":"1943:63:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"2012:128:14","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:14","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"2223:2:14"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"2249:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:14"},"scope":1752,"src":"2198:60:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1753,"src":"629:1631:14","usedErrors":[],"usedEvents":[]}],"src":"123:2138:14"},"id":14},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2458],"IERC20":[1716],"IERC20Permit":[1752],"SafeERC20":[2128]},"id":2129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1754,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2129,"sourceUnit":1717,"src":"140:23:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2129,"sourceUnit":1753,"src":"164:40:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2129,"sourceUnit":2459,"src":"205:36:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"243:457:15","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2128,"linearizedBaseContracts":[2128],"name":"SafeERC20","nameLocation":"709:9:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1761,"libraryName":{"id":1759,"name":"Address","nameLocations":["731:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"731:7:15"},"nodeType":"UsingForDirective","src":"725:26:15","typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1784,"nodeType":"Block","src":"1013:103:15","statements":[{"expression":{"arguments":[{"id":1773,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"1043:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"1073:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"1073:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1779,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1098:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1102:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1774,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1772,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1023:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1783,"nodeType":"ExpressionStatement","src":"1023:86:15"}]},"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"757:179:15","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:15","nodeType":"FunctionDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"token","nameLocation":"970:5:15","nodeType":"VariableDeclaration","scope":1785,"src":"963:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":1764,"nodeType":"UserDefinedTypeName","pathNode":{"id":1763,"name":"IERC20","nameLocations":["963:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"963:6:15"},"referencedDeclaration":1716,"src":"963:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"to","nameLocation":"985:2:15","nodeType":"VariableDeclaration","scope":1785,"src":"977:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"value","nameLocation":"997:5:15","nodeType":"VariableDeclaration","scope":1785,"src":"989:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:15"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"1013:0:15"},"scope":2128,"src":"941:175:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"1445:113:15","statements":[{"expression":{"arguments":[{"id":1799,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1475:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1802,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1505:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1715,"src":"1505:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1534:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1806,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1540:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1544:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1800,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1798,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1455:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1810,"nodeType":"ExpressionStatement","src":"1455:96:15"}]},"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"1122:228:15","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:15","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"token","nameLocation":"1388:5:15","nodeType":"VariableDeclaration","scope":1812,"src":"1381:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":1788,"nodeType":"UserDefinedTypeName","pathNode":{"id":1787,"name":"IERC20","nameLocations":["1381:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"1381:6:15"},"referencedDeclaration":1716,"src":"1381:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"from","nameLocation":"1403:4:15","nodeType":"VariableDeclaration","scope":1812,"src":"1395:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"to","nameLocation":"1417:2:15","nodeType":"VariableDeclaration","scope":1812,"src":"1409:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"value","nameLocation":"1429:5:15","nodeType":"VariableDeclaration","scope":1812,"src":"1421:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:15"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[],"src":"1445:0:15"},"scope":2128,"src":"1355:203:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1855,"nodeType":"Block","src":"1894:497:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2143:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1832,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2128","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2128","typeString":"library SafeERC20"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:15","typeDescriptions":{}}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1834,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2190:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1828,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2159:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"2159:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1842,"nodeType":"ExpressionStatement","src":"2121:163:15"},{"expression":{"arguments":[{"id":1844,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2314:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1847,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2344:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"2344:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:15","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1850,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2368:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2377:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1845,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1843,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"2294:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"ExpressionStatement","src":"2294:90:15"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1564:249:15","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1856,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:15","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"token","nameLocation":"1846:5:15","nodeType":"VariableDeclaration","scope":1856,"src":"1839:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":1815,"nodeType":"UserDefinedTypeName","pathNode":{"id":1814,"name":"IERC20","nameLocations":["1839:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"1839:6:15"},"referencedDeclaration":1716,"src":"1839:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"spender","nameLocation":"1861:7:15","nodeType":"VariableDeclaration","scope":1856,"src":"1853:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"value","nameLocation":"1878:5:15","nodeType":"VariableDeclaration","scope":1856,"src":"1870:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:15"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"1894:0:15"},"scope":2128,"src":"1818:573:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"2668:194:15","statements":[{"assignments":[1868],"declarations":[{"constant":false,"id":1868,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:15","nodeType":"VariableDeclaration","scope":1892,"src":"2678:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1877,"initialValue":{"arguments":[{"arguments":[{"id":1873,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2128","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2128","typeString":"library SafeERC20"}],"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:15","typeDescriptions":{}}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1875,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2732:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1869,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2701:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"2701:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:15"},{"expression":{"arguments":[{"id":1879,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2770:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1882,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2800:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"2800:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:15","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1885,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2824:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2833:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2848:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1880,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1878,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"2750:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"2750:105:15"}]},"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"2397:180:15","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:15","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"token","nameLocation":"2620:5:15","nodeType":"VariableDeclaration","scope":1893,"src":"2613:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":1859,"nodeType":"UserDefinedTypeName","pathNode":{"id":1858,"name":"IERC20","nameLocations":["2613:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"2613:6:15"},"referencedDeclaration":1716,"src":"2613:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"spender","nameLocation":"2635:7:15","nodeType":"VariableDeclaration","scope":1893,"src":"2627:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"value","nameLocation":"2652:5:15","nodeType":"VariableDeclaration","scope":1893,"src":"2644:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:15"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"2668:0:15"},"scope":2128,"src":"2582:280:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"3139:321:15","statements":[{"id":1936,"nodeType":"UncheckedBlock","src":"3149:305:15","statements":[{"assignments":[1905],"declarations":[{"constant":false,"id":1905,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:15","nodeType":"VariableDeclaration","scope":1936,"src":"3173:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1914,"initialValue":{"arguments":[{"arguments":[{"id":1910,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2128","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2128","typeString":"library SafeERC20"}],"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:15","typeDescriptions":{}}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1912,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"3227:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1906,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"3196:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"3196:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1916,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"3257:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"3273:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"ExpressionStatement","src":"3249:75:15"},{"expression":{"arguments":[{"id":1923,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"3358:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1926,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"3388:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"3388:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:15","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1929,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"3412:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"3421:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"3436:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1924,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1922,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"3338:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1935,"nodeType":"ExpressionStatement","src":"3338:105:15"}]}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"2868:180:15","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:15","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"token","nameLocation":"3091:5:15","nodeType":"VariableDeclaration","scope":1938,"src":"3084:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":1896,"nodeType":"UserDefinedTypeName","pathNode":{"id":1895,"name":"IERC20","nameLocations":["3084:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"3084:6:15"},"referencedDeclaration":1716,"src":"3084:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"spender","nameLocation":"3106:7:15","nodeType":"VariableDeclaration","scope":1938,"src":"3098:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"value","nameLocation":"3123:5:15","nodeType":"VariableDeclaration","scope":1938,"src":"3115:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:15"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"3139:0:15"},"scope":2128,"src":"3053:407:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"3856:333:15","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:15","nodeType":"VariableDeclaration","scope":1984,"src":"3866:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1959,"initialValue":{"arguments":[{"expression":{"expression":{"id":1953,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3917:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"3917:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:15","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1956,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"3941:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"3950:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1951,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:15"},{"condition":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:15","subExpression":{"arguments":[{"id":1961,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"3996:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"id":1962,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4003:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1960,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"3972:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"3967:216:15","trueBody":{"id":1982,"nodeType":"Block","src":"4018:165:15","statements":[{"expression":{"arguments":[{"id":1966,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4052:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1969,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4082:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"4082:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:15","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1972,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"4106:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1967,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1965,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"4032:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1976,"nodeType":"ExpressionStatement","src":"4032:86:15"},{"expression":{"arguments":[{"id":1978,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4152:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},{"id":1979,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4159:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1977,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"4132:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"ExpressionStatement","src":"4132:40:15"}]}}]},"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"3466:308:15","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:15","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"token","nameLocation":"3808:5:15","nodeType":"VariableDeclaration","scope":1985,"src":"3801:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":1941,"nodeType":"UserDefinedTypeName","pathNode":{"id":1940,"name":"IERC20","nameLocations":["3801:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"3801:6:15"},"referencedDeclaration":1716,"src":"3801:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"spender","nameLocation":"3823:7:15","nodeType":"VariableDeclaration","scope":1985,"src":"3815:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"value","nameLocation":"3840:5:15","nodeType":"VariableDeclaration","scope":1985,"src":"3832:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:15"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"3856:0:15"},"scope":2128,"src":"3779:410:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"4556:257:15","statements":[{"assignments":[2007],"declarations":[{"constant":false,"id":2007,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:15","nodeType":"VariableDeclaration","scope":2041,"src":"4566:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2012,"initialValue":{"arguments":[{"id":2010,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4601:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2008,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4588:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1752","typeString":"contract IERC20Permit"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:15","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"4588:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:15"},{"expression":{"arguments":[{"id":2016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4630:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2017,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"4637:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4646:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2019,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"4653:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2020,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"4663:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2021,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"4666:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2022,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"4669:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2013,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4617:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1752","typeString":"contract IERC20Permit"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:15","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1737,"src":"4617:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2024,"nodeType":"ExpressionStatement","src":"4617:54:15"},{"assignments":[2026],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:15","nodeType":"VariableDeclaration","scope":2041,"src":"4681:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"initialValue":{"arguments":[{"id":2029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4715:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2027,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4702:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1752","typeString":"contract IERC20Permit"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:15","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"4702:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"4739:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2034,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4753:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":2032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2040,"nodeType":"ExpressionStatement","src":"4731:75:15"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"4195:141:15","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:15","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"token","nameLocation":"4383:5:15","nodeType":"VariableDeclaration","scope":2042,"src":"4370:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1752","typeString":"contract IERC20Permit"},"typeName":{"id":1988,"nodeType":"UserDefinedTypeName","pathNode":{"id":1987,"name":"IERC20Permit","nameLocations":["4370:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1752,"src":"4370:12:15"},"referencedDeclaration":1752,"src":"4370:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1752","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"owner","nameLocation":"4406:5:15","nodeType":"VariableDeclaration","scope":2042,"src":"4398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"spender","nameLocation":"4429:7:15","nodeType":"VariableDeclaration","scope":2042,"src":"4421:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"4454:5:15","nodeType":"VariableDeclaration","scope":2042,"src":"4446:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:15","nodeType":"VariableDeclaration","scope":2042,"src":"4469:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"v","nameLocation":"4501:1:15","nodeType":"VariableDeclaration","scope":2042,"src":"4495:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1998,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"r","nameLocation":"4520:1:15","nodeType":"VariableDeclaration","scope":2042,"src":"4512:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"s","nameLocation":"4539:1:15","nodeType":"VariableDeclaration","scope":2042,"src":"4531:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:15"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[],"src":"4556:0:15"},"scope":2128,"src":"4341:472:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2078,"nodeType":"Block","src":"5266:572:15","statements":[{"assignments":[2052],"declarations":[{"constant":false,"id":2052,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:15","nodeType":"VariableDeclaration","scope":2078,"src":"5615:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2051,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2061,"initialValue":{"arguments":[{"id":2058,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"5669:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":2055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5649:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:15","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:15","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2218,"src":"5641:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2063,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5728:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:15","memberName":"length","nodeType":"MemberAccess","src":"5728:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2069,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5765:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2070,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:15","typeDescriptions":{}}}],"id":2072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2067,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:15","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":2062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"5720:111:15"}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"4819:372:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:15","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"token","nameLocation":"5232:5:15","nodeType":"VariableDeclaration","scope":2079,"src":"5225:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":2045,"nodeType":"UserDefinedTypeName","pathNode":{"id":2044,"name":"IERC20","nameLocations":["5225:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"5225:6:15"},"referencedDeclaration":1716,"src":"5225:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"data","nameLocation":"5252:4:15","nodeType":"VariableDeclaration","scope":2079,"src":"5239:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2047,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:15"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[],"src":"5266:0:15"},"scope":2128,"src":"5196:642:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2126,"nodeType":"Block","src":"6428:505:15","statements":[{"assignments":[2091,2093],"declarations":[{"constant":false,"id":2091,"mutability":"mutable","name":"success","nameLocation":"6729:7:15","nodeType":"VariableDeclaration","scope":2126,"src":"6724:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2090,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:15","nodeType":"VariableDeclaration","scope":2126,"src":"6738:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2092,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2101,"initialValue":{"arguments":[{"id":2099,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"6785:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2096,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"6773:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}],"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:15","typeDescriptions":{}}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:15","memberName":"call","nodeType":"MemberAccess","src":"6765:19:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:15"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"6819:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2103,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6831:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:15","memberName":"length","nodeType":"MemberAccess","src":"6831:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2109,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6868:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2110,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:15","typeDescriptions":{}}}],"id":2112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2107,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:15","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":2121,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"6919:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}],"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:15","typeDescriptions":{}}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2117,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"6892:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2458_$","typeString":"type(library Address)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:15","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"6892:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2089,"id":2125,"nodeType":"Return","src":"6800:126:15"}]},"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"5844:490:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:15","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"token","nameLocation":"6379:5:15","nodeType":"VariableDeclaration","scope":2127,"src":"6372:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"},"typeName":{"id":2082,"nodeType":"UserDefinedTypeName","pathNode":{"id":2081,"name":"IERC20","nameLocations":["6372:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"6372:6:15"},"referencedDeclaration":1716,"src":"6372:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"data","nameLocation":"6399:4:15","nodeType":"VariableDeclaration","scope":2127,"src":"6386:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2084,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:15"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2127,"src":"6422:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2087,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:15"},"scope":2128,"src":"6339:594:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2129,"src":"701:6234:15","usedErrors":[],"usedEvents":[]}],"src":"115:6821:15"},"id":15},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2458]},"id":2459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2130,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"126:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2458,"linearizedBaseContracts":[2458],"name":"Address","nameLocation":"202:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2145,"nodeType":"Block","src":"1478:254:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"1702:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:16","memberName":"code","nodeType":"MemberAccess","src":"1702:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:16","memberName":"length","nodeType":"MemberAccess","src":"1702:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2138,"id":2144,"nodeType":"Return","src":"1695:30:16"}]},"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"216:1191:16","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:16","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"account","nameLocation":"1440:7:16","nodeType":"VariableDeclaration","scope":2146,"src":"1432:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:16"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2146,"src":"1472:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2136,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:16"},"scope":2458,"src":"1412:320:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"2718:241:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2157,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2458","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2458","typeString":"library Address"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:16","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:16","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2761:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2164,"nodeType":"ExpressionStatement","src":"2728:73:16"},{"assignments":[2166,null],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"success","nameLocation":"2818:7:16","nodeType":"VariableDeclaration","scope":2179,"src":"2813:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2165,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2173,"initialValue":{"arguments":[{"hexValue":"","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2167,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2831:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:16","memberName":"call","nodeType":"MemberAccess","src":"2831:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2169,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2853:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:16"},{"expression":{"arguments":[{"id":2175,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2882:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"ExpressionStatement","src":"2874:78:16"}]},"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"1738:904:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:16","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:16","nodeType":"VariableDeclaration","scope":2180,"src":"2666:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"amount","nameLocation":"2701:6:16","nodeType":"VariableDeclaration","scope":2180,"src":"2693:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:16"},"returnParameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"2718:0:16"},"scope":2458,"src":"2647:312:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"3790:96:16","statements":[{"expression":{"arguments":[{"id":2191,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"3829:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2192,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3837:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2190,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2238,2282],"referencedDeclaration":2282,"src":"3807:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2189,"id":2196,"nodeType":"Return","src":"3800:79:16"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"2965:731:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:16","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"target","nameLocation":"3731:6:16","nodeType":"VariableDeclaration","scope":2198,"src":"3723:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"data","nameLocation":"3752:4:16","nodeType":"VariableDeclaration","scope":2198,"src":"3739:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2184,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:16"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2198,"src":"3776:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2187,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:16"},"scope":2458,"src":"3701:185:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2217,"nodeType":"Block","src":"4255:76:16","statements":[{"expression":{"arguments":[{"id":2211,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"4294:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"4302:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2214,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"4311:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2210,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2238,2282],"referencedDeclaration":2282,"src":"4272:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2209,"id":2216,"nodeType":"Return","src":"4265:59:16"}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"3892:211:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2218,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:16","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"target","nameLocation":"4147:6:16","nodeType":"VariableDeclaration","scope":2218,"src":"4139:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"data","nameLocation":"4176:4:16","nodeType":"VariableDeclaration","scope":2218,"src":"4163:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:16","nodeType":"VariableDeclaration","scope":2218,"src":"4190:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2204,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:16"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2218,"src":"4241:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:16"},"scope":2458,"src":"4108:223:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"4806:111:16","statements":[{"expression":{"arguments":[{"id":2231,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"4845:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"4853:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4859:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2230,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2238,2282],"referencedDeclaration":2282,"src":"4823:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2229,"id":2236,"nodeType":"Return","src":"4816:94:16"}]},"documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"4337:351:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:16","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"target","nameLocation":"4732:6:16","nodeType":"VariableDeclaration","scope":2238,"src":"4724:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"data","nameLocation":"4753:4:16","nodeType":"VariableDeclaration","scope":2238,"src":"4740:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"value","nameLocation":"4767:5:16","nodeType":"VariableDeclaration","scope":2238,"src":"4759:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:16"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"4792:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2227,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:16"},"scope":2458,"src":"4693:224:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2281,"nodeType":"Block","src":"5344:267:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2255,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2458","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2458","typeString":"library Address"}],"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:16","typeDescriptions":{}}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:16","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"5387:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"5354:81:16"},{"assignments":[2264,2266],"declarations":[{"constant":false,"id":2264,"mutability":"mutable","name":"success","nameLocation":"5451:7:16","nodeType":"VariableDeclaration","scope":2281,"src":"5446:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2263,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:16","nodeType":"VariableDeclaration","scope":2281,"src":"5460:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2265,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2273,"initialValue":{"arguments":[{"id":2271,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"5513:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2267,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"5487:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:16","memberName":"call","nodeType":"MemberAccess","src":"5487:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"5506:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:16"},{"expression":{"arguments":[{"id":2275,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"5562:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2276,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"5570:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2277,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"5579:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2278,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"5591:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2274,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"5535:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2251,"id":2280,"nodeType":"Return","src":"5528:76:16"}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"4923:237:16","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:16","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"target","nameLocation":"5213:6:16","nodeType":"VariableDeclaration","scope":2282,"src":"5205:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"data","nameLocation":"5242:4:16","nodeType":"VariableDeclaration","scope":2282,"src":"5229:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2242,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"value","nameLocation":"5264:5:16","nodeType":"VariableDeclaration","scope":2282,"src":"5256:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:16","nodeType":"VariableDeclaration","scope":2282,"src":"5279:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2246,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:16"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"5330:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2249,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:16"},"scope":2458,"src":"5165:446:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2298,"nodeType":"Block","src":"5888:97:16","statements":[{"expression":{"arguments":[{"id":2293,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"5924:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2294,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"5932:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2292,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2299,2328],"referencedDeclaration":2328,"src":"5905:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2291,"id":2297,"nodeType":"Return","src":"5898:80:16"}]},"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"5617:166:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2299,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:16","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"target","nameLocation":"5824:6:16","nodeType":"VariableDeclaration","scope":2299,"src":"5816:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"data","nameLocation":"5845:4:16","nodeType":"VariableDeclaration","scope":2299,"src":"5832:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:16"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2299,"src":"5874:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2289,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:16"},"scope":2458,"src":"5788:197:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2327,"nodeType":"Block","src":"6327:168:16","statements":[{"assignments":[2312,2314],"declarations":[{"constant":false,"id":2312,"mutability":"mutable","name":"success","nameLocation":"6343:7:16","nodeType":"VariableDeclaration","scope":2327,"src":"6338:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2311,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:16","nodeType":"VariableDeclaration","scope":2327,"src":"6352:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2313,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2319,"initialValue":{"arguments":[{"id":2317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6397:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2315,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6379:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:16","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:16"},{"expression":{"arguments":[{"id":2321,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6446:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2322,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"6454:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2323,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"6463:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2324,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"6475:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2320,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"6419:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2310,"id":2326,"nodeType":"Return","src":"6412:76:16"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"5991:173:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:16","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"target","nameLocation":"6214:6:16","nodeType":"VariableDeclaration","scope":2328,"src":"6206:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"data","nameLocation":"6243:4:16","nodeType":"VariableDeclaration","scope":2328,"src":"6230:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2303,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:16","nodeType":"VariableDeclaration","scope":2328,"src":"6257:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2305,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:16"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2328,"src":"6313:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2308,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:16"},"scope":2458,"src":"6169:326:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2344,"nodeType":"Block","src":"6771:101:16","statements":[{"expression":{"arguments":[{"id":2339,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"6809:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2340,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"6817:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2338,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2345,2374],"referencedDeclaration":2374,"src":"6788:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2337,"id":2343,"nodeType":"Return","src":"6781:84:16"}]},"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"6501:168:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2345,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:16","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"target","nameLocation":"6712:6:16","nodeType":"VariableDeclaration","scope":2345,"src":"6704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"data","nameLocation":"6733:4:16","nodeType":"VariableDeclaration","scope":2345,"src":"6720:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2332,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:16"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"6757:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2335,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:16"},"scope":2458,"src":"6674:198:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"7213:170:16","statements":[{"assignments":[2358,2360],"declarations":[{"constant":false,"id":2358,"mutability":"mutable","name":"success","nameLocation":"7229:7:16","nodeType":"VariableDeclaration","scope":2373,"src":"7224:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2357,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:16","nodeType":"VariableDeclaration","scope":2373,"src":"7238:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2359,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2365,"initialValue":{"arguments":[{"id":2363,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"7285:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2361,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7265:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:16","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:16","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:16"},{"expression":{"arguments":[{"id":2367,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7334:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2368,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"7342:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2369,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"7351:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2370,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"7363:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2366,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"7307:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2356,"id":2372,"nodeType":"Return","src":"7300:76:16"}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"6878:175:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:16","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"target","nameLocation":"7105:6:16","nodeType":"VariableDeclaration","scope":2374,"src":"7097:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"data","nameLocation":"7134:4:16","nodeType":"VariableDeclaration","scope":2374,"src":"7121:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2349,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:16","nodeType":"VariableDeclaration","scope":2374,"src":"7148:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:16"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2374,"src":"7199:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2354,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:16"},"scope":2458,"src":"7058:325:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2412,"nodeType":"Block","src":"7865:434:16","statements":[{"condition":{"id":2388,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"7879:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2410,"nodeType":"Block","src":"8235:58:16","statements":[{"expression":{"arguments":[{"id":2406,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8257:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2407,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"8269:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2405,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8249:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2409,"nodeType":"ExpressionStatement","src":"8249:33:16"}]},"id":2411,"nodeType":"IfStatement","src":"7875:418:16","trueBody":{"id":2404,"nodeType":"Block","src":"7888:341:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2389,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"7906:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:16","memberName":"length","nodeType":"MemberAccess","src":"7906:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2401,"nodeType":"IfStatement","src":"7902:286:16","trueBody":{"id":2400,"nodeType":"Block","src":"7930:258:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2395,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"8132:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2394,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"8121:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2399,"nodeType":"ExpressionStatement","src":"8113:60:16"}]}},{"expression":{"id":2402,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8208:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2387,"id":2403,"nodeType":"Return","src":"8201:17:16"}]}}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"7389:277:16","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:16","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"target","nameLocation":"7724:6:16","nodeType":"VariableDeclaration","scope":2413,"src":"7716:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"success","nameLocation":"7745:7:16","nodeType":"VariableDeclaration","scope":2413,"src":"7740:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2378,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:16","nodeType":"VariableDeclaration","scope":2413,"src":"7762:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2380,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:16","nodeType":"VariableDeclaration","scope":2413,"src":"7795:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2382,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:16"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2413,"src":"7851:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2385,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:16"},"scope":2458,"src":"7671:628:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"8680:135:16","statements":[{"condition":{"id":2425,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"8694:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2434,"nodeType":"Block","src":"8751:58:16","statements":[{"expression":{"arguments":[{"id":2430,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"8773:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2431,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"8785:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2429,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8765:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2433,"nodeType":"ExpressionStatement","src":"8765:33:16"}]},"id":2435,"nodeType":"IfStatement","src":"8690:119:16","trueBody":{"id":2428,"nodeType":"Block","src":"8703:42:16","statements":[{"expression":{"id":2426,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"8724:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2424,"id":2427,"nodeType":"Return","src":"8717:17:16"}]}}]},"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"8305:210:16","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:16","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"success","nameLocation":"8560:7:16","nodeType":"VariableDeclaration","scope":2437,"src":"8555:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2415,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:16","nodeType":"VariableDeclaration","scope":2437,"src":"8577:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2417,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:16","nodeType":"VariableDeclaration","scope":2437,"src":"8610:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2419,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:16"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"8666:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2422,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:16"},"scope":2458,"src":"8520:295:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"8904:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2444,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"8980:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:16","memberName":"length","nodeType":"MemberAccess","src":"8980:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2454,"nodeType":"Block","src":"9310:45:16","statements":[{"expression":{"arguments":[{"id":2451,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"9331:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2450,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2453,"nodeType":"ExpressionStatement","src":"9324:20:16"}]},"id":2455,"nodeType":"IfStatement","src":"8976:379:16","trueBody":{"id":2449,"nodeType":"Block","src":"9003:301:16","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:16","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:16"},"nodeType":"YulFunctionCall","src":"9202:17:16"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:16","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:16"},"nodeType":"YulFunctionCall","src":"9243:19:16"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:16"},"nodeType":"YulFunctionCall","src":"9236:44:16"},"nodeType":"YulExpressionStatement","src":"9236:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":2439,"isOffset":false,"isSlot":false,"src":"9208:10:16","valueSize":1},{"declaration":2439,"isOffset":false,"isSlot":false,"src":"9251:10:16","valueSize":1}],"id":2448,"nodeType":"InlineAssembly","src":"9152:142:16"}]}}]},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:16","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:16","nodeType":"VariableDeclaration","scope":2457,"src":"8838:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:16","nodeType":"VariableDeclaration","scope":2457,"src":"8863:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2440,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:16"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[],"src":"8904:0:16"},"scope":2458,"src":"8821:540:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2459,"src":"194:9169:16","usedErrors":[],"usedEvents":[]}],"src":"101:9263:16"},"id":16},"contracts/bridge/TokenBridge.sol":{"ast":{"absolutePath":"contracts/bridge/TokenBridge.sol","exportedSymbols":{"Address":[2458],"AddressUpgradeable":[1486],"AggregatorV3Interface":[45],"BytesLib":[4478],"ContextUpgradeable":[1528],"ERC1967UpgradeUpgradeable":[757],"ExcessivelySafeCall":[4575],"IBeaconUpgradeable":[767],"IERC1822ProxiableUpgradeable":[433],"IERC1967Upgradeable":[423],"IERC20":[1716],"IERC20Permit":[1752],"ILayerZeroEndpoint":[5541],"ILayerZeroReceiver":[5555],"ILayerZeroUserApplicationConfig":[5586],"IPancakeSwapFactory":[5649],"IPancakeSwapPair":[5889],"IPancakeSwapRouter":[6277],"IToken":[6412],"ITokenBridge":[4116],"IWETH":[4145],"Initializable":[936],"LzApp":[5137],"LzLib":[270],"NonblockingLzApp":[5396],"OwnableUpgradeable":[402],"ReentrancyGuardUpgradeable":[1156],"SafeERC20":[2128],"StorageSlotUpgradeable":[1638],"TokenBridge":[3988],"UUPSUpgradeable":[1072]},"id":3989,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":2460,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"38:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":1717,"src":"63:56:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":2129,"src":"121:65:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","id":2463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":271,"src":"188:73:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":46,"src":"263:76:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":403,"src":"341:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":1073,"src":"418:77:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":2467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":1157,"src":"497:85:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/lzApp/NonblockingLzApp.sol","file":"./lzApp/NonblockingLzApp.sol","id":2468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":5397,"src":"584:38:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/interfaces/IWETH.sol","file":"./interfaces/IWETH.sol","id":2469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":4146,"src":"624:32:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/interfaces/ITokenBridge.sol","file":"./interfaces/ITokenBridge.sol","id":2470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":4117,"src":"658:39:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/interfaces/IExchange.sol","file":"../token/interfaces/IExchange.sol","id":2471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":6278,"src":"699:43:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/token/interfaces/IToken.sol","file":"../token/interfaces/IToken.sol","id":2472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3989,"sourceUnit":6413,"src":"744:40:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2473,"name":"UUPSUpgradeable","nameLocations":["1226:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"1226:15:17"},"id":2474,"nodeType":"InheritanceSpecifier","src":"1226:15:17"},{"baseName":{"id":2475,"name":"OwnableUpgradeable","nameLocations":["1249:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":402,"src":"1249:18:17"},"id":2476,"nodeType":"InheritanceSpecifier","src":"1249:18:17"},{"baseName":{"id":2477,"name":"ReentrancyGuardUpgradeable","nameLocations":["1275:26:17"],"nodeType":"IdentifierPath","referencedDeclaration":1156,"src":"1275:26:17"},"id":2478,"nodeType":"InheritanceSpecifier","src":"1275:26:17"},{"baseName":{"id":2479,"name":"NonblockingLzApp","nameLocations":["1308:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":5396,"src":"1308:16:17"},"id":2480,"nodeType":"InheritanceSpecifier","src":"1308:16:17"},{"baseName":{"id":2481,"name":"ITokenBridge","nameLocations":["1331:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":4116,"src":"1331:12:17"},"id":2482,"nodeType":"InheritanceSpecifier","src":"1331:12:17"}],"canonicalName":"TokenBridge","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3988,"linearizedBaseContracts":[3988,4116,5396,5137,5586,5555,1156,402,1528,1072,757,423,433,936],"name":"TokenBridge","nameLocation":"1205:11:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2486,"libraryName":{"id":2483,"name":"SafeERC20","nameLocations":["1358:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"1358:9:17"},"nodeType":"UsingForDirective","src":"1352:27:17","typeName":{"id":2485,"nodeType":"UserDefinedTypeName","pathNode":{"id":2484,"name":"IERC20","nameLocations":["1372:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"1372:6:17"},"referencedDeclaration":1716,"src":"1372:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"abe685cd","id":2489,"mutability":"constant","name":"BP_DENOMINATOR","nameLocation":"1408:14:17","nodeType":"VariableDeclaration","scope":3988,"src":"1387:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint","nodeType":"ElementaryTypeName","src":"1387:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1425:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"97167964","id":2492,"mutability":"constant","name":"SHARED_DECIMALS","nameLocation":"1459:15:17","nodeType":"VariableDeclaration","scope":3988,"src":"1437:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2490,"name":"uint8","nodeType":"ElementaryTypeName","src":"1437:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1477:1:17","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"public"},{"constant":false,"functionSelector":"7a38d760","id":2494,"mutability":"mutable","name":"toLzChainId","nameLocation":"1501:11:17","nodeType":"VariableDeclaration","scope":3988,"src":"1487:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2493,"name":"uint16","nodeType":"ElementaryTypeName","src":"1487:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"functionSelector":"25a9f792","id":2496,"mutability":"mutable","name":"bridgeFeeBP","nameLocation":"1533:11:17","nodeType":"VariableDeclaration","scope":3988,"src":"1521:23:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint","nodeType":"ElementaryTypeName","src":"1521:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e3179c3e","id":2500,"mutability":"mutable","name":"tvlSDs","nameLocation":"1585:6:17","nodeType":"VariableDeclaration","scope":3988,"src":"1553:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2499,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"1561:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1553:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2498,"name":"uint","nodeType":"ElementaryTypeName","src":"1572:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"68c4ac26","id":2504,"mutability":"mutable","name":"supportedTokens","nameLocation":"1654:15:17","nodeType":"VariableDeclaration","scope":3988,"src":"1622:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2503,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1622:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2502,"name":"bool","nodeType":"ElementaryTypeName","src":"1641:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ee7a4596","id":2508,"mutability":"mutable","name":"pausedTokens","nameLocation":"1708:12:17","nodeType":"VariableDeclaration","scope":3988,"src":"1676:44:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2507,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1676:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2506,"name":"bool","nodeType":"ElementaryTypeName","src":"1695:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"b5f97073","id":2512,"mutability":"mutable","name":"priceFeed","nameLocation":"1786:9:17","nodeType":"VariableDeclaration","scope":3988,"src":"1754:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2511,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2509,"name":"uint","nodeType":"ElementaryTypeName","src":"1762:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1754:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"1770:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"df4bbc1c","id":2516,"mutability":"mutable","name":"enableChain","nameLocation":"1864:11:17","nodeType":"VariableDeclaration","scope":3988,"src":"1833:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bool_$","typeString":"mapping(uint16 => bool)"},"typeName":{"id":2515,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2513,"name":"uint16","nodeType":"ElementaryTypeName","src":"1841:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1833:23:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bool_$","typeString":"mapping(uint16 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2514,"name":"bool","nodeType":"ElementaryTypeName","src":"1851:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"3fc8cef3","id":2518,"mutability":"mutable","name":"weth","nameLocation":"1947:4:17","nodeType":"VariableDeclaration","scope":3988,"src":"1932:19:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ed629c5c","id":2520,"mutability":"mutable","name":"useCustomAdapterParams","nameLocation":"1972:22:17","nodeType":"VariableDeclaration","scope":3988,"src":"1960:34:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2519,"name":"bool","nodeType":"ElementaryTypeName","src":"1960:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"61a552dc","id":2522,"mutability":"mutable","name":"globalPaused","nameLocation":"2013:12:17","nodeType":"VariableDeclaration","scope":3988,"src":"2001:24:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2521,"name":"bool","nodeType":"ElementaryTypeName","src":"2001:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"5747e69f","id":2524,"mutability":"mutable","name":"emergencyWithdrawEnabled","nameLocation":"2044:24:17","nodeType":"VariableDeclaration","scope":3988,"src":"2032:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2523,"name":"bool","nodeType":"ElementaryTypeName","src":"2032:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"de9b9488","id":2526,"mutability":"mutable","name":"emergencyWithdrawTime","nameLocation":"2087:21:17","nodeType":"VariableDeclaration","scope":3988,"src":"2075:33:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint","nodeType":"ElementaryTypeName","src":"2075:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9e42ff90","id":2529,"mutability":"mutable","name":"dataFeed","nameLocation":"2146:8:17","nodeType":"VariableDeclaration","scope":3988,"src":"2117:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2528,"nodeType":"UserDefinedTypeName","pathNode":{"id":2527,"name":"AggregatorV3Interface","nameLocations":["2117:21:17"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2117:21:17"},"referencedDeclaration":45,"src":"2117:21:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"body":{"id":2545,"nodeType":"Block","src":"2202:101:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2221:13:17","subExpression":{"id":2534,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2222:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2238:21:17","subExpression":{"baseExpression":{"id":2536,"name":"pausedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2239:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2538,"indexExpression":{"id":2537,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"2252:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2239:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2221:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20706175736564","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2261:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""},"value":"TokenBridge: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""}],"id":2533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2213:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2543,"nodeType":"ExpressionStatement","src":"2213:70:17"},{"id":2544,"nodeType":"PlaceholderStatement","src":"2294:1:17"}]},"id":2546,"name":"whenNotPaused","nameLocation":"2172:13:17","nodeType":"ModifierDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"_token","nameLocation":"2194:6:17","nodeType":"VariableDeclaration","scope":2546,"src":"2186:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2530,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2185:16:17"},"src":"2163:140:17","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"2348:150:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"emergencyWithdrawEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"2367:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2550,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2395:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2401:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2395:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2552,"name":"emergencyWithdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2414:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2395:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2367:68:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20656d657267656e6379207769746864726177206c6f636b6564","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2437:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100","typeString":"literal_string \"TokenBridge: emergency withdraw locked\""},"value":"TokenBridge: emergency withdraw locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100","typeString":"literal_string \"TokenBridge: emergency withdraw locked\""}],"id":2548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2359:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:119:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2557,"nodeType":"ExpressionStatement","src":"2359:119:17"},{"id":2558,"nodeType":"PlaceholderStatement","src":"2489:1:17"}]},"id":2560,"name":"emergencyWithdrawUnlocked","nameLocation":"2320:25:17","nodeType":"ModifierDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"2345:2:17"},"src":"2311:187:17","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"2589:195:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2567,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2600:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2569,"nodeType":"ExpressionStatement","src":"2600:24:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2570,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2635:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2572,"nodeType":"ExpressionStatement","src":"2635:16:17"},{"expression":{"arguments":[{"id":2574,"name":"_layerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"2686:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2573,"name":"__NonblockingLzApp_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"2662:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"ExpressionStatement","src":"2662:43:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2577,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2716:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2716:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2579,"nodeType":"ExpressionStatement","src":"2716:24:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2580,"name":"__Bridge_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"2751:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2582,"nodeType":"ExpressionStatement","src":"2751:25:17"}]},"functionSelector":"c4d66de8","id":2584,"implemented":true,"kind":"function","modifiers":[{"id":2565,"kind":"modifierInvocation","modifierName":{"id":2564,"name":"initializer","nameLocations":["2577:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":838,"src":"2577:11:17"},"nodeType":"ModifierInvocation","src":"2577:11:17"}],"name":"initialize","nameLocation":"2515:10:17","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"_layerZeroEndpoint","nameLocation":"2544:18:17","nodeType":"VariableDeclaration","scope":2584,"src":"2536:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"2536:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2525:44:17"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[],"src":"2589:0:17"},"scope":3988,"src":"2506:278:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1066],"body":{"id":2592,"nodeType":"Block","src":"2871:2:17","statements":[]},"id":2593,"implemented":true,"kind":"function","modifiers":[{"id":2590,"kind":"modifierInvocation","modifierName":{"id":2589,"name":"onlyOwner","nameLocations":["2861:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"2861:9:17"},"nodeType":"ModifierInvocation","src":"2861:9:17"}],"name":"_authorizeUpgrade","nameLocation":"2798:17:17","nodeType":"FunctionDefinition","overrides":{"id":2588,"nodeType":"OverrideSpecifier","overrides":[],"src":"2852:8:17"},"parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"newImplementation","nameLocation":"2824:17:17","nodeType":"VariableDeclaration","scope":2593,"src":"2816:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2585,"name":"address","nodeType":"ElementaryTypeName","src":"2816:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2815:27:17"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"2871:0:17"},"scope":3988,"src":"2789:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2635,"nodeType":"Block","src":"2934:433:17","statements":[{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2598,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2945:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2600,"indexExpression":{"hexValue":"3131313535313131","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2955:8:17","typeDescriptions":{"typeIdentifier":"t_rational_11155111_by_1","typeString":"int_const 11155111"},"value":"11155111"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2945:19:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307836393441413137363933353732313544453446414330383162663166333039614443333235333036","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2967:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x694AA1769357215DE4FAC081bf1f309aDC325306"},"src":"2945:64:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2603,"nodeType":"ExpressionStatement","src":"2945:64:17"},{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2604,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3031:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2606,"indexExpression":{"hexValue":"3937","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3041:2:17","typeDescriptions":{"typeIdentifier":"t_rational_97_by_1","typeString":"int_const 97"},"value":"97"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3031:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307832353134383935633732663530443862643442344639623131313046304436624432633937353236","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3047:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526"},"src":"3031:58:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2609,"nodeType":"ExpressionStatement","src":"3031:58:17"},{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2610,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3111:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2612,"indexExpression":{"hexValue":"34303032","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3121:4:17","typeDescriptions":{"typeIdentifier":"t_rational_4002_by_1","typeString":"int_const 4002"},"value":"4002"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3111:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307842384334353843393537613665366361374363353365443935624541353438633532414661413234","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3129:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xB8C458C957a6e6ca7Cc53eD95bEA548c52AFaA24"},"src":"3111:60:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2615,"nodeType":"ExpressionStatement","src":"3111:60:17"},{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2616,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3193:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2618,"indexExpression":{"hexValue":"3830303031","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3203:5:17","typeDescriptions":{"typeIdentifier":"t_rational_80001_by_1","typeString":"int_const 80001"},"value":"80001"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3193:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307864304435653344423434444530354539463239344242306133624545614630333044453234416461","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"},"src":"3193:61:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2621,"nodeType":"ExpressionStatement","src":"3193:61:17"},{"assignments":[2623],"declarations":[{"constant":false,"id":2623,"mutability":"mutable","name":"cid","nameLocation":"3285:3:17","nodeType":"VariableDeclaration","scope":2635,"src":"3280:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint","nodeType":"ElementaryTypeName","src":"3280:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2626,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2624,"name":"getChainID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"3291:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3291:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3280:23:17"},{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2627,"name":"dataFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3314:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2629,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3347:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2631,"indexExpression":{"id":2630,"name":"cid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"3357:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3347:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2628,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"3325:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"3314:48:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2634,"nodeType":"ExpressionStatement","src":"3314:48:17"}]},"id":2636,"implemented":true,"kind":"function","modifiers":[{"id":2596,"kind":"modifierInvocation","modifierName":{"id":2595,"name":"initializer","nameLocations":["2922:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":838,"src":"2922:11:17"},"nodeType":"ModifierInvocation","src":"2922:11:17"}],"name":"__Bridge_init_unchained","nameLocation":"2887:23:17","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[],"src":"2910:2:17"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"2934:0:17"},"scope":3988,"src":"2878:489:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4013],"body":{"id":2719,"nodeType":"Block","src":"3699:748:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2661,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3732:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2663,"indexExpression":{"id":2662,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"3748:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3732:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":2664,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3761:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2666,"indexExpression":{"id":2665,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"3777:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3761:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3732:55:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e70757420746f6b656e20616e64206f757470757420746f6b656e20617265206e6f7420737570706f72746564","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3803:61:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fb79bd7615e480fca928d43131c6d74bbf06bbd0b64109fedfb9bad79eaa6e9","typeString":"literal_string \"TokenBridge: input token and output token are not supported\""},"value":"TokenBridge: input token and output token are not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fb79bd7615e480fca928d43131c6d74bbf06bbd0b64109fedfb9bad79eaa6e9","typeString":"literal_string \"TokenBridge: input token and output token are not supported\""}],"id":2660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3710:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:165:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2670,"nodeType":"ExpressionStatement","src":"3710:165:17"},{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2671,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3909:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2673,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"3936:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3946:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3950:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3946:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2676,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3958:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2672,"name":"_lockTokenFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"3921:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) returns (uint256)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3909:59:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"3909:59:17"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"_priceFeedIn","nameLocation":"3984:12:17","nodeType":"VariableDeclaration","scope":2719,"src":"3979:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint","nodeType":"ElementaryTypeName","src":"3979:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2686,"initialValue":{"arguments":[{"id":2683,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4016:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2684,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4026:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2682,"name":"calcInTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3999:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3979:57:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4075:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4087:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4075:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20616d6f756e74496e206d7573742062652067726561746572207468616e2030","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4090:46:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_780e05369a5f638bfbd2815b3c3c9d5e8c2d1ed869b73e67df825e69042cd8ef","typeString":"literal_string \"TokenBridge: amountIn must be greater than 0\""},"value":"TokenBridge: amountIn must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_780e05369a5f638bfbd2815b3c3c9d5e8c2d1ed869b73e67df825e69042cd8ef","typeString":"literal_string \"TokenBridge: amountIn must be greater than 0\""}],"id":2687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4067:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"ExpressionStatement","src":"4067:70:17"},{"expression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2694,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"4148:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2696,"indexExpression":{"id":2695,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4155:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4148:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2697,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4168:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4148:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2699,"nodeType":"ExpressionStatement","src":"4148:29:17"},{"expression":{"arguments":[{"id":2701,"name":"_toLzDestChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"4258:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2702,"name":"_priceFeedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"4274:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2703,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"4288:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2704,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"4299:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2705,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"4325:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},{"id":2706,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"4338:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4354:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4358:5:17","memberName":"value","nodeType":"MemberAccess","src":"4354:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2700,"name":"_sendToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4233:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_uint256_$_t_address_$_t_address_$_t_struct$_CallParams_$53_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,uint256,address,address,struct LzLib.CallParams calldata,bytes calldata,uint256)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4233:141:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2710,"nodeType":"ExpressionStatement","src":"4233:141:17"},{"eventCall":{"arguments":[{"id":2712,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"4395:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2713,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4405:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4409:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4405:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2715,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"4417:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2716,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4429:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"Send","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"4390:4:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4390:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2718,"nodeType":"EmitStatement","src":"4385:54:17"}]},"functionSelector":"3bd0536b","id":2720,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2655,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"3676:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2656,"kind":"modifierInvocation","modifierName":{"id":2654,"name":"whenNotPaused","nameLocations":["3662:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":2546,"src":"3662:13:17"},"nodeType":"ModifierInvocation","src":"3662:23:17"},{"id":2658,"kind":"modifierInvocation","modifierName":{"id":2657,"name":"nonReentrant","nameLocations":["3686:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"3686:12:17"},"nodeType":"ModifierInvocation","src":"3686:12:17"}],"name":"sendTokenToDest","nameLocation":"3384:15:17","nodeType":"FunctionDefinition","overrides":{"id":2653,"nodeType":"OverrideSpecifier","overrides":[],"src":"3653:8:17"},"parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"_toLzDestChain","nameLocation":"3417:14:17","nodeType":"VariableDeclaration","scope":2720,"src":"3410:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2637,"name":"uint16","nodeType":"ElementaryTypeName","src":"3410:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"_tokenIn","nameLocation":"3450:8:17","nodeType":"VariableDeclaration","scope":2720,"src":"3442:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2639,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"_amountIn","nameLocation":"3474:9:17","nodeType":"VariableDeclaration","scope":2720,"src":"3469:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint","nodeType":"ElementaryTypeName","src":"3469:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"_tokenOut","nameLocation":"3502:9:17","nodeType":"VariableDeclaration","scope":2720,"src":"3494:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"3494:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"_toAddress","nameLocation":"3530:10:17","nodeType":"VariableDeclaration","scope":2720,"src":"3522:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"3522:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"_callParams","nameLocation":"3577:11:17","nodeType":"VariableDeclaration","scope":2720,"src":"3551:37:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":2648,"nodeType":"UserDefinedTypeName","pathNode":{"id":2647,"name":"LzLib.CallParams","nameLocations":["3551:5:17","3557:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"3551:16:17"},"referencedDeclaration":53,"src":"3551:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"_adapterParams","nameLocation":"3614:14:17","nodeType":"VariableDeclaration","scope":2720,"src":"3599:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2650,"name":"bytes","nodeType":"ElementaryTypeName","src":"3599:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3399:236:17"},"returnParameters":{"id":2659,"nodeType":"ParameterList","parameters":[],"src":"3699:0:17"},"scope":3988,"src":"3375:1072:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[4027],"body":{"id":2845,"nodeType":"Block","src":"4718:835:17","statements":[{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"_weth","nameLocation":"4737:5:17","nodeType":"VariableDeclaration","scope":2845,"src":"4729:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"4729:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2743,"initialValue":{"id":2742,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"4745:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4729:20:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2745,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"4780:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4797:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4789:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"4789:7:17","typeDescriptions":{}}},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4789:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4780:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":2751,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"4803:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2753,"indexExpression":{"id":2752,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"4819:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4803:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4780:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20455448206973206e6f7420737570706f72746564","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4827:35:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e","typeString":"literal_string \"TokenBridge: ETH is not supported\""},"value":"TokenBridge: ETH is not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e","typeString":"literal_string \"TokenBridge: ETH is not supported\""}],"id":2744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4772:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4772:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"4772:91:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"4882:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4894:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4882:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20616d6f756e74206d7573742062652067726561746572207468616e2030","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4897:44:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c","typeString":"literal_string \"TokenBridge: amount must be greater than 0\""},"value":"TokenBridge: amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c","typeString":"literal_string \"TokenBridge: amount must be greater than 0\""}],"id":2758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4874:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4874:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2764,"nodeType":"ExpressionStatement","src":"4874:68:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2766,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4961:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4965:5:17","memberName":"value","nodeType":"MemberAccess","src":"4961:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2768,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"4974:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4961:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20666565206e6f7420656e6f756768","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4985:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""},"value":"TokenBridge: fee not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""}],"id":2765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4953:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4953:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2772,"nodeType":"ExpressionStatement","src":"4953:62:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2774,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"5067:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2773,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"5061:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$4145_$","typeString":"type(contract IWETH)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5061:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$4145","typeString":"contract IWETH"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5074:7:17","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":4121,"src":"5061:20:17","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2777,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5089:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5061:38:17","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5061:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2780,"nodeType":"ExpressionStatement","src":"5061:40:17"},{"expression":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2781,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5112:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2783,"indexExpression":{"id":2782,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"5119:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5112:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2784,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5129:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5112:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2786,"nodeType":"ExpressionStatement","src":"5112:26:17"},{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"np","nameLocation":"5155:2:17","nodeType":"VariableDeclaration","scope":2845,"src":"5151:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2787,"name":"int","nodeType":"ElementaryTypeName","src":"5151:3:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2791,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2789,"name":"getChainlinkDataFeedLatestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"5160:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5151:43:17"},{"assignments":[2793],"declarations":[{"constant":false,"id":2793,"mutability":"mutable","name":"pn","nameLocation":"5210:2:17","nodeType":"VariableDeclaration","scope":2845,"src":"5205:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint","nodeType":"ElementaryTypeName","src":"5205:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2815,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"5216:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5221:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5216:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5215:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2812,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"5262:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5257:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2810,"name":"uint","nodeType":"ElementaryTypeName","src":"5257:4:17","typeDescriptions":{}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5257:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5215:50:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5230:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2799,"name":"uint","nodeType":"ElementaryTypeName","src":"5230:4:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5225:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5225:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5236:3:17","memberName":"max","nodeType":"MemberAccess","src":"5225:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2805,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"5247:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5242:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2803,"name":"uint","nodeType":"ElementaryTypeName","src":"5242:4:17","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5242:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5225:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5225:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5205:60:17"},{"expression":{"arguments":[{"id":2817,"name":"_toLzDestChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5346:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"pn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"5362:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2819,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5367:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"307830","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5386:3:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5378:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"5378:7:17","typeDescriptions":{}}},"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5378:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2825,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"5392:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2826,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"5417:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},{"id":2827,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"5430:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2828,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5446:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:5:17","memberName":"value","nodeType":"MemberAccess","src":"5446:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2830,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5458:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5446:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"name":"_sendToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"5321:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_uint256_$_t_address_$_t_address_$_t_struct$_CallParams_$53_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,uint256,address,address,struct LzLib.CallParams calldata,bytes calldata,uint256)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:157:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"ExpressionStatement","src":"5321:157:17"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5507:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5499:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"5499:7:17","typeDescriptions":{}}},"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5499:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2839,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5511:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5511:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2841,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"5523:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5535:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2834,"name":"Send","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"5494:4:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5494:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2844,"nodeType":"EmitStatement","src":"5489:56:17"}]},"functionSelector":"b790d7c1","id":2846,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2735,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"4699:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2736,"kind":"modifierInvocation","modifierName":{"id":2734,"name":"whenNotPaused","nameLocations":["4685:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":2546,"src":"4685:13:17"},"nodeType":"ModifierInvocation","src":"4685:19:17"},{"id":2738,"kind":"modifierInvocation","modifierName":{"id":2737,"name":"nonReentrant","nameLocations":["4705:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"4705:12:17"},"nodeType":"ModifierInvocation","src":"4705:12:17"}],"name":"sendETHToDest","nameLocation":"4464:13:17","nodeType":"FunctionDefinition","overrides":{"id":2733,"nodeType":"OverrideSpecifier","overrides":[],"src":"4676:8:17"},"parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"_toLzDestChain","nameLocation":"4495:14:17","nodeType":"VariableDeclaration","scope":2846,"src":"4488:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2721,"name":"uint16","nodeType":"ElementaryTypeName","src":"4488:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"_toAddress","nameLocation":"4528:10:17","nodeType":"VariableDeclaration","scope":2846,"src":"4520:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"4520:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"_amountIn","nameLocation":"4554:9:17","nodeType":"VariableDeclaration","scope":2846,"src":"4549:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint","nodeType":"ElementaryTypeName","src":"4549:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"_callParams","nameLocation":"4600:11:17","nodeType":"VariableDeclaration","scope":2846,"src":"4574:37:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":2728,"nodeType":"UserDefinedTypeName","pathNode":{"id":2727,"name":"LzLib.CallParams","nameLocations":["4574:5:17","4580:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"4574:16:17"},"referencedDeclaration":53,"src":"4574:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"_adapterParams","nameLocation":"4637:14:17","nodeType":"VariableDeclaration","scope":2846,"src":"4622:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2730,"name":"bytes","nodeType":"ElementaryTypeName","src":"4622:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4477:181:17"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[],"src":"4718:0:17"},"scope":3988,"src":"4455:1098:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[4041],"body":{"id":2901,"nodeType":"Block","src":"5771:323:17","statements":[{"expression":{"arguments":[{"id":2862,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"5802:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2861,"name":"_checkAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5782:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes calldata) view"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5782:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"ExpressionStatement","src":"5782:35:17"},{"assignments":[2866],"declarations":[{"constant":false,"id":2866,"mutability":"mutable","name":"payload","nameLocation":"5841:7:17","nodeType":"VariableDeclaration","scope":2901,"src":"5828:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2865,"name":"bytes","nodeType":"ElementaryTypeName","src":"5828:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2878,"initialValue":{"arguments":[{"hexValue":"30","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5870:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5881:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5873:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"5873:7:17","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5885:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"5885:7:17","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5885:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2867,"name":"_encodeSendPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"5851:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,address) pure returns (bytes memory)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5851:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5828:68:17"},{"assignments":[2880],"declarations":[{"constant":false,"id":2880,"mutability":"mutable","name":"payInZRO","nameLocation":"5912:8:17","nodeType":"VariableDeclaration","scope":2901,"src":"5907:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2879,"name":"bool","nodeType":"ElementaryTypeName","src":"5907:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2888,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2881,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"5923:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5935:17:17","memberName":"zroPaymentAddress","nodeType":"MemberAccess","referencedDeclaration":52,"src":"5923:29:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5964:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5956:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2883,"name":"address","nodeType":"ElementaryTypeName","src":"5956:7:17","typeDescriptions":{}}},"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5956:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5923:43:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5907:59:17"},{"expression":{"arguments":[{"id":2891,"name":"_toLzDestChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6021:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":2894,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6045:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6037:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:17","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6037:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2896,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"6052:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2897,"name":"payInZRO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"6061:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2898,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"6071:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":2889,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5997:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6008:12:17","memberName":"estimateFees","nodeType":"MemberAccess","referencedDeclaration":5466,"src":"5997:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint16,address,bytes memory,bool,bytes memory) view external returns (uint256,uint256)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5997:89:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2860,"id":2900,"nodeType":"Return","src":"5977:109:17"}]},"functionSelector":"7d5f5bd4","id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"quoteForSend","nameLocation":"5570:12:17","nodeType":"FunctionDefinition","overrides":{"id":2855,"nodeType":"OverrideSpecifier","overrides":[],"src":"5725:8:17"},"parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"_toLzDestChain","nameLocation":"5600:14:17","nodeType":"VariableDeclaration","scope":2902,"src":"5593:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2847,"name":"uint16","nodeType":"ElementaryTypeName","src":"5593:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"_callParams","nameLocation":"5651:11:17","nodeType":"VariableDeclaration","scope":2902,"src":"5625:37:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":2850,"nodeType":"UserDefinedTypeName","pathNode":{"id":2849,"name":"LzLib.CallParams","nameLocations":["5625:5:17","5631:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5625:16:17"},"referencedDeclaration":53,"src":"5625:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":2853,"mutability":"mutable","name":"_adapterParams","nameLocation":"5689:14:17","nodeType":"VariableDeclaration","scope":2902,"src":"5674:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2852,"name":"bytes","nodeType":"ElementaryTypeName","src":"5674:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5582:128:17"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"nativeFee","nameLocation":"5747:9:17","nodeType":"VariableDeclaration","scope":2902,"src":"5742:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint","nodeType":"ElementaryTypeName","src":"5742:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"zroFee","nameLocation":"5763:6:17","nodeType":"VariableDeclaration","scope":2902,"src":"5758:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint","nodeType":"ElementaryTypeName","src":"5758:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5741:29:17"},"scope":3988,"src":"5561:533:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2947,"nodeType":"Block","src":"6363:394:17","statements":[{"expression":{"arguments":[{"id":2921,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"6394:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2920,"name":"_checkAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"6374:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes calldata) view"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"ExpressionStatement","src":"6374:35:17"},{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"payload","nameLocation":"6433:7:17","nodeType":"VariableDeclaration","scope":2947,"src":"6420:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2924,"name":"bytes","nodeType":"ElementaryTypeName","src":"6420:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2931,"initialValue":{"arguments":[{"id":2927,"name":"_priceFeedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"6462:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2928,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"6476:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2929,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"6487:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2926,"name":"_encodeSendPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"6443:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,address) pure returns (bytes memory)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6443:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6420:78:17"},{"expression":{"arguments":[{"id":2933,"name":"_toLzDestChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"6531:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2934,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"6560:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2935,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"6582:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6594:13:17","memberName":"refundAddress","nodeType":"MemberAccess","referencedDeclaration":50,"src":"6582:25:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":2937,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"6622:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6634:17:17","memberName":"zroPaymentAddress","nodeType":"MemberAccess","referencedDeclaration":52,"src":"6622:29:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2939,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"6666:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2940,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"6695:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2932,"name":"_lzSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"6509:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,bytes memory,address payable,address,bytes memory,uint256)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6509:201:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"ExpressionStatement","src":"6509:201:17"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"toLzChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"6721:11:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2944,"name":"_toLzDestChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"6735:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6721:28:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2946,"nodeType":"ExpressionStatement","src":"6721:28:17"}]},"id":2948,"implemented":true,"kind":"function","modifiers":[],"name":"_sendToken","nameLocation":"6111:10:17","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"_toLzDestChain","nameLocation":"6139:14:17","nodeType":"VariableDeclaration","scope":2948,"src":"6132:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2903,"name":"uint16","nodeType":"ElementaryTypeName","src":"6132:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"_priceFeedIn","nameLocation":"6169:12:17","nodeType":"VariableDeclaration","scope":2948,"src":"6164:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint","nodeType":"ElementaryTypeName","src":"6164:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"_tokenOut","nameLocation":"6200:9:17","nodeType":"VariableDeclaration","scope":2948,"src":"6192:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"6192:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2910,"mutability":"mutable","name":"_toAddress","nameLocation":"6228:10:17","nodeType":"VariableDeclaration","scope":2948,"src":"6220:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"6220:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"_callParams","nameLocation":"6275:11:17","nodeType":"VariableDeclaration","scope":2948,"src":"6249:37:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":2912,"nodeType":"UserDefinedTypeName","pathNode":{"id":2911,"name":"LzLib.CallParams","nameLocations":["6249:5:17","6255:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"6249:16:17"},"referencedDeclaration":53,"src":"6249:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"_adapterParams","nameLocation":"6312:14:17","nodeType":"VariableDeclaration","scope":2948,"src":"6297:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2914,"name":"bytes","nodeType":"ElementaryTypeName","src":"6297:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"_fee","nameLocation":"6342:4:17","nodeType":"VariableDeclaration","scope":2948,"src":"6337:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint","nodeType":"ElementaryTypeName","src":"6337:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6121:232:17"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[],"src":"6363:0:17"},"scope":3988,"src":"6102:655:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"6851:201:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2958,"name":"enableChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"6870:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bool_$","typeString":"mapping(uint16 => bool)"}},"id":2960,"indexExpression":{"id":2959,"name":"_lzDestChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"6882:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6870:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a2074686973206465737420636861696e206964206973206e6f7420656e61626c6564","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6899:48:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecd0d94b5711fe92948563c52b28b3471acc1d7d11ad6715283b8f7f1e036199","typeString":"literal_string \"TokenBridge: this dest chain id is not enabled\""},"value":"TokenBridge: this dest chain id is not enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecd0d94b5711fe92948563c52b28b3471acc1d7d11ad6715283b8f7f1e036199","typeString":"literal_string \"TokenBridge: this dest chain id is not enabled\""}],"id":2957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6862:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6862:86:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2963,"nodeType":"ExpressionStatement","src":"6862:86:17"},{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2964,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"6959:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":2966,"indexExpression":{"id":2965,"name":"_lzDestChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"6979:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6959:35:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2969,"name":"_otherContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"7014:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2972,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7038:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}],"id":2971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7030:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2970,"name":"address","nodeType":"ElementaryTypeName","src":"7030:7:17","typeDescriptions":{}}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7030:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2967,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6997:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7001:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"6997:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6997:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6959:85:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2976,"nodeType":"ExpressionStatement","src":"6959:85:17"}]},"functionSelector":"73afbcaa","id":2978,"implemented":true,"kind":"function","modifiers":[{"id":2955,"kind":"modifierInvocation","modifierName":{"id":2954,"name":"onlyOwner","nameLocations":["6841:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"6841:9:17"},"nodeType":"ModifierInvocation","src":"6841:9:17"}],"name":"trustAddress","nameLocation":"6774:12:17","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"_lzDestChainId","nameLocation":"6794:14:17","nodeType":"VariableDeclaration","scope":2978,"src":"6787:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2949,"name":"uint16","nodeType":"ElementaryTypeName","src":"6787:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"_otherContract","nameLocation":"6818:14:17","nodeType":"VariableDeclaration","scope":2978,"src":"6810:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"6810:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6786:47:17"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[],"src":"6851:0:17"},"scope":3988,"src":"6765:287:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2993,"nodeType":"Block","src":"7139:55:17","statements":[{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2987,"name":"enableChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"7150:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bool_$","typeString":"mapping(uint16 => bool)"}},"id":2989,"indexExpression":{"id":2988,"name":"_lzDestChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"7162:14:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7150:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2990,"name":"enable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7180:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7150:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2992,"nodeType":"ExpressionStatement","src":"7150:36:17"}]},"functionSelector":"59d91cd7","id":2994,"implemented":true,"kind":"function","modifiers":[{"id":2985,"kind":"modifierInvocation","modifierName":{"id":2984,"name":"onlyOwner","nameLocations":["7129:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"7129:9:17"},"nodeType":"ModifierInvocation","src":"7129:9:17"}],"name":"setEnableChain","nameLocation":"7069:14:17","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"_lzDestChainId","nameLocation":"7091:14:17","nodeType":"VariableDeclaration","scope":2994,"src":"7084:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2979,"name":"uint16","nodeType":"ElementaryTypeName","src":"7084:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"enable","nameLocation":"7112:6:17","nodeType":"VariableDeclaration","scope":2994,"src":"7107:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2981,"name":"bool","nodeType":"ElementaryTypeName","src":"7107:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7083:36:17"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[],"src":"7139:0:17"},"scope":3988,"src":"7060:134:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3016,"nodeType":"Block","src":"7264:170:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3002,"name":"_bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"7283:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3003,"name":"BP_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"7299:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7283:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a2062726964676520666565203e2031303025","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7315:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0","typeString":"literal_string \"TokenBridge: bridge fee > 100%\""},"value":"TokenBridge: bridge fee > 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0","typeString":"literal_string \"TokenBridge: bridge fee > 100%\""}],"id":3001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7275:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3007,"nodeType":"ExpressionStatement","src":"7275:73:17"},{"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3008,"name":"bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"7359:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3009,"name":"_bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"7373:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7359:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3011,"nodeType":"ExpressionStatement","src":"7359:26:17"},{"eventCall":{"arguments":[{"id":3013,"name":"_bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"7413:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3012,"name":"SetBridgeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7401:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7401:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3015,"nodeType":"EmitStatement","src":"7396:30:17"}]},"functionSelector":"000d5900","id":3017,"implemented":true,"kind":"function","modifiers":[{"id":2999,"kind":"modifierInvocation","modifierName":{"id":2998,"name":"onlyOwner","nameLocations":["7254:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"7254:9:17"},"nodeType":"ModifierInvocation","src":"7254:9:17"}],"name":"setBridgeFeeBP","nameLocation":"7211:14:17","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"_bridgeFeeBP","nameLocation":"7231:12:17","nodeType":"VariableDeclaration","scope":3017,"src":"7226:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint","nodeType":"ElementaryTypeName","src":"7226:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7225:19:17"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[],"src":"7264:0:17"},"scope":3988,"src":"7202:232:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3042,"nodeType":"Block","src":"7493:138:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7512:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7529:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7521:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"7521:7:17","typeDescriptions":{}}},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7521:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7512:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e76616c696420746f6b656e2061646472657373","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7533:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca","typeString":"literal_string \"TokenBridge: invalid token address\""},"value":"TokenBridge: invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca","typeString":"literal_string \"TokenBridge: invalid token address\""}],"id":3024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7504:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7504:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"ExpressionStatement","src":"7504:66:17"},{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3034,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"7581:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3035,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7588:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7581:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3037,"nodeType":"ExpressionStatement","src":"7581:12:17"},{"eventCall":{"arguments":[{"id":3039,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7617:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3038,"name":"SetWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"7609:7:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7609:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3041,"nodeType":"EmitStatement","src":"7604:19:17"}]},"functionSelector":"5b769f3c","id":3043,"implemented":true,"kind":"function","modifiers":[{"id":3022,"kind":"modifierInvocation","modifierName":{"id":3021,"name":"onlyOwner","nameLocations":["7483:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"7483:9:17"},"nodeType":"ModifierInvocation","src":"7483:9:17"}],"name":"setWETH","nameLocation":"7451:7:17","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"_weth","nameLocation":"7467:5:17","nodeType":"VariableDeclaration","scope":3043,"src":"7459:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"7459:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7458:15:17"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[],"src":"7493:0:17"},"scope":3988,"src":"7442:189:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3058,"nodeType":"Block","src":"7696:80:17","statements":[{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3050,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"7707:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3051,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"7722:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7707:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"ExpressionStatement","src":"7707:22:17"},{"eventCall":{"arguments":[{"id":3055,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"7760:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3054,"name":"SetGlobalPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"7745:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7745:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"EmitStatement","src":"7740:28:17"}]},"functionSelector":"69a6b3db","id":3059,"implemented":true,"kind":"function","modifiers":[{"id":3048,"kind":"modifierInvocation","modifierName":{"id":3047,"name":"onlyOwner","nameLocations":["7686:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"7686:9:17"},"nodeType":"ModifierInvocation","src":"7686:9:17"}],"name":"setGlobalPause","nameLocation":"7648:14:17","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"_paused","nameLocation":"7668:7:17","nodeType":"VariableDeclaration","scope":3059,"src":"7663:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3044,"name":"bool","nodeType":"ElementaryTypeName","src":"7663:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7662:14:17"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"7696:0:17"},"scope":3988,"src":"7639:137:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3079,"nodeType":"Block","src":"7856:95:17","statements":[{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3068,"name":"pausedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"7867:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3070,"indexExpression":{"id":3069,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"7880:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7867:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3071,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"7890:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7867:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3073,"nodeType":"ExpressionStatement","src":"7867:30:17"},{"eventCall":{"arguments":[{"id":3075,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"7927:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3076,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"7935:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3074,"name":"SetTokenPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"7913:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7913:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3078,"nodeType":"EmitStatement","src":"7908:35:17"}]},"functionSelector":"cb8d3b1f","id":3080,"implemented":true,"kind":"function","modifiers":[{"id":3066,"kind":"modifierInvocation","modifierName":{"id":3065,"name":"onlyOwner","nameLocations":["7846:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"7846:9:17"},"nodeType":"ModifierInvocation","src":"7846:9:17"}],"name":"setTokenPause","nameLocation":"7793:13:17","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"_token","nameLocation":"7815:6:17","nodeType":"VariableDeclaration","scope":3080,"src":"7807:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3060,"name":"address","nodeType":"ElementaryTypeName","src":"7807:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"_paused","nameLocation":"7828:7:17","nodeType":"VariableDeclaration","scope":3080,"src":"7823:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3062,"name":"bool","nodeType":"ElementaryTypeName","src":"7823:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7806:30:17"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[],"src":"7856:0:17"},"scope":3988,"src":"7784:167:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3095,"nodeType":"Block","src":"8043:133:17","statements":[{"expression":{"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3087,"name":"useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"8054:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3088,"name":"_useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"8079:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8054:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3090,"nodeType":"ExpressionStatement","src":"8054:48:17"},{"eventCall":{"arguments":[{"id":3092,"name":"_useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"8144:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3091,"name":"SetUseCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"8118:25:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8118:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3094,"nodeType":"EmitStatement","src":"8113:55:17"}]},"functionSelector":"eab45d9c","id":3096,"implemented":true,"kind":"function","modifiers":[{"id":3085,"kind":"modifierInvocation","modifierName":{"id":3084,"name":"onlyOwner","nameLocations":["8033:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"8033:9:17"},"nodeType":"ModifierInvocation","src":"8033:9:17"}],"name":"setUseCustomAdapterParams","nameLocation":"7968:25:17","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"_useCustomAdapterParams","nameLocation":"7999:23:17","nodeType":"VariableDeclaration","scope":3096,"src":"7994:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3081,"name":"bool","nodeType":"ElementaryTypeName","src":"7994:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7993:30:17"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[],"src":"8043:0:17"},"scope":3988,"src":"7959:217:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3134,"nodeType":"Block","src":"8301:228:17","statements":[{"assignments":[3108],"declarations":[{"constant":false,"id":3108,"mutability":"mutable","name":"feeLD","nameLocation":"8317:5:17","nodeType":"VariableDeclaration","scope":3134,"src":"8312:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint","nodeType":"ElementaryTypeName","src":"8312:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3112,"initialValue":{"arguments":[{"id":3110,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"8338:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3109,"name":"accruedFeeLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"8325:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8312:33:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"8364:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3115,"name":"feeLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"8377:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8364:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20666565206e6f7420656e6f756768","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8384:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""},"value":"TokenBridge: fee not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""}],"id":3113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8356:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8356:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"ExpressionStatement","src":"8356:58:17"},{"expression":{"arguments":[{"id":3124,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"8455:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3125,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"8460:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3121,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"8434:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3120,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"8427:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1716_$","typeString":"type(contract IERC20)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8427:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8442:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"8427:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1716_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8427:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3127,"nodeType":"ExpressionStatement","src":"8427:43:17"},{"eventCall":{"arguments":[{"id":3129,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"8498:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3130,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"8506:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3131,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"8511:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3128,"name":"WithdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"8486:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8486:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3133,"nodeType":"EmitStatement","src":"8481:40:17"}]},"functionSelector":"1095b6d7","id":3135,"implemented":true,"kind":"function","modifiers":[{"id":3105,"kind":"modifierInvocation","modifierName":{"id":3104,"name":"onlyOwner","nameLocations":["8291:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"8291:9:17"},"nodeType":"ModifierInvocation","src":"8291:9:17"}],"name":"withdrawFee","nameLocation":"8193:11:17","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"_token","nameLocation":"8223:6:17","nodeType":"VariableDeclaration","scope":3135,"src":"8215:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"8215:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"_to","nameLocation":"8248:3:17","nodeType":"VariableDeclaration","scope":3135,"src":"8240:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"8240:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"_amountLD","nameLocation":"8267:9:17","nodeType":"VariableDeclaration","scope":3135,"src":"8262:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint","nodeType":"ElementaryTypeName","src":"8262:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8204:79:17"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[],"src":"8301:0:17"},"scope":3988,"src":"8184:345:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3168,"nodeType":"Block","src":"8678:145:17","statements":[{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3148,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"8689:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3150,"indexExpression":{"id":3149,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"8696:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8689:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3151,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"8707:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8689:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3153,"nodeType":"ExpressionStatement","src":"8689:25:17"},{"expression":{"arguments":[{"id":3158,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"8753:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3159,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"8758:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3155,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"8732:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3154,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"8725:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1716_$","typeString":"type(contract IERC20)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8725:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8740:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"8725:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1716_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8725:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3161,"nodeType":"ExpressionStatement","src":"8725:41:17"},{"eventCall":{"arguments":[{"id":3163,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"8794:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3164,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"8802:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3165,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"8807:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3162,"name":"WithdrawTVL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"8782:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8782:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3167,"nodeType":"EmitStatement","src":"8777:38:17"}]},"functionSelector":"b90fc4a5","id":3169,"implemented":true,"kind":"function","modifiers":[{"id":3144,"kind":"modifierInvocation","modifierName":{"id":3143,"name":"onlyOwner","nameLocations":["8642:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"8642:9:17"},"nodeType":"ModifierInvocation","src":"8642:9:17"},{"id":3146,"kind":"modifierInvocation","modifierName":{"id":3145,"name":"emergencyWithdrawUnlocked","nameLocations":["8652:25:17"],"nodeType":"IdentifierPath","referencedDeclaration":2560,"src":"8652:25:17"},"nodeType":"ModifierInvocation","src":"8652:25:17"}],"name":"withdrawTVL","nameLocation":"8546:11:17","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"_token","nameLocation":"8576:6:17","nodeType":"VariableDeclaration","scope":3169,"src":"8568:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"8568:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"_to","nameLocation":"8601:3:17","nodeType":"VariableDeclaration","scope":3169,"src":"8593:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3138,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"_amount","nameLocation":"8620:7:17","nodeType":"VariableDeclaration","scope":3169,"src":"8615:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint","nodeType":"ElementaryTypeName","src":"8615:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8557:77:17"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[],"src":"8678:0:17"},"scope":3988,"src":"8537:286:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3194,"nodeType":"Block","src":"8906:164:17","statements":[{"expression":{"arguments":[{"id":3179,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"8977:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3180,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"8985:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3182,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"9003:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3181,"name":"accruedFeeLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"8990:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8990:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"withdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"8965:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8965:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3185,"nodeType":"ExpressionStatement","src":"8965:46:17"},{"expression":{"arguments":[{"id":3187,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"9034:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3188,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"9042:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3189,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"9047:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3191,"indexExpression":{"id":3190,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"9054:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9047:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"name":"withdrawTVL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"9022:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9022:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3193,"nodeType":"ExpressionStatement","src":"9022:40:17"}]},"functionSelector":"93f26a4c","id":3195,"implemented":true,"kind":"function","modifiers":[{"id":3176,"kind":"modifierInvocation","modifierName":{"id":3175,"name":"onlyOwner","nameLocations":["8896:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"8896:9:17"},"nodeType":"ModifierInvocation","src":"8896:9:17"}],"name":"withdrawEmergency","nameLocation":"8840:17:17","nodeType":"FunctionDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"_token","nameLocation":"8866:6:17","nodeType":"VariableDeclaration","scope":3195,"src":"8858:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"8858:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"_to","nameLocation":"8882:3:17","nodeType":"VariableDeclaration","scope":3195,"src":"8874:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"8874:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8857:29:17"},"returnParameters":{"id":3177,"nodeType":"ParameterList","parameters":[],"src":"8906:0:17"},"scope":3988,"src":"8831:239:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3221,"nodeType":"Block","src":"9144:230:17","statements":[{"expression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3202,"name":"emergencyWithdrawEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"9155:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3203,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"9182:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9155:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3205,"nodeType":"ExpressionStatement","src":"9155:34:17"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3206,"name":"emergencyWithdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"9200:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3207,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"9224:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9262:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9224:39:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3208,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9234:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9240:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"9234:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9252:7:17","subdenomination":"weeks","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"1"},"src":"9234:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9200:63:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"9200:63:17"},{"eventCall":{"arguments":[{"id":3217,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"9335:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3218,"name":"emergencyWithdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"9344:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3216,"name":"EnableEmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"9311:23:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9311:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"EmitStatement","src":"9306:60:17"}]},"functionSelector":"d71e409e","id":3222,"implemented":true,"kind":"function","modifiers":[{"id":3200,"kind":"modifierInvocation","modifierName":{"id":3199,"name":"onlyOwner","nameLocations":["9134:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"9134:9:17"},"nodeType":"ModifierInvocation","src":"9134:9:17"}],"name":"enableEmergencyWithdraw","nameLocation":"9087:23:17","nodeType":"FunctionDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"enabled","nameLocation":"9116:7:17","nodeType":"VariableDeclaration","scope":3222,"src":"9111:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3196,"name":"bool","nodeType":"ElementaryTypeName","src":"9111:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9110:14:17"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[],"src":"9144:0:17"},"scope":3988,"src":"9078:296:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[353],"body":{"id":3228,"nodeType":"Block","src":"9507:2:17","statements":[]},"functionSelector":"715018a6","id":3229,"implemented":true,"kind":"function","modifiers":[{"id":3226,"kind":"modifierInvocation","modifierName":{"id":3225,"name":"onlyOwner","nameLocations":["9497:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"9497:9:17"},"nodeType":"ModifierInvocation","src":"9497:9:17"}],"name":"renounceOwnership","nameLocation":"9461:17:17","nodeType":"FunctionDefinition","overrides":{"id":3224,"nodeType":"OverrideSpecifier","overrides":[],"src":"9488:8:17"},"parameters":{"id":3223,"nodeType":"ParameterList","parameters":[],"src":"9478:2:17"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[],"src":"9507:0:17"},"scope":3988,"src":"9452:57:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3232,"nodeType":"Block","src":"9574:2:17","statements":[]},"id":3233,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[],"src":"9554:2:17"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[],"src":"9574:0:17"},"scope":3988,"src":"9547:29:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3254,"nodeType":"Block","src":"9649:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3246,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9700:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9692:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"9692:7:17","typeDescriptions":{}}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9692:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3241,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"9674:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3240,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"9667:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1716_$","typeString":"type(contract IERC20)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9682:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"9667:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3249,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"9709:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3251,"indexExpression":{"id":3250,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"9716:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9709:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9667:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3239,"id":3253,"nodeType":"Return","src":"9660:63:17"}]},"functionSelector":"a2f27ae0","id":3255,"implemented":true,"kind":"function","modifiers":[],"name":"accruedFeeLD","nameLocation":"9593:12:17","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"_token","nameLocation":"9614:6:17","nodeType":"VariableDeclaration","scope":3255,"src":"9606:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"9606:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9605:16:17"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3255,"src":"9643:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint","nodeType":"ElementaryTypeName","src":"9643:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9642:6:17"},"scope":3988,"src":"9584:147:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[5327],"body":{"id":3443,"nodeType":"Block","src":"9971:1488:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3268,"name":"enableChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"9990:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bool_$","typeString":"mapping(uint16 => bool)"}},"id":3270,"indexExpression":{"id":3269,"name":"_srcLzChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"10002:13:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9990:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e76616c696420736f7572636520636861696e206964","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10018:38:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1","typeString":"literal_string \"TokenBridge: invalid source chain id\""},"value":"TokenBridge: invalid source chain id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1","typeString":"literal_string \"TokenBridge: invalid source chain id\""}],"id":3267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9982:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9982:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3273,"nodeType":"ExpressionStatement","src":"9982:75:17"},{"assignments":[3275,3277,3279,3281],"declarations":[{"constant":false,"id":3275,"mutability":"mutable","name":"priceFeedIn","nameLocation":"10076:11:17","nodeType":"VariableDeclaration","scope":3443,"src":"10071:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3274,"name":"uint","nodeType":"ElementaryTypeName","src":"10071:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"tokenOut","nameLocation":"10097:8:17","nodeType":"VariableDeclaration","scope":3443,"src":"10089:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"10089:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"to","nameLocation":"10115:2:17","nodeType":"VariableDeclaration","scope":3443,"src":"10107:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3278,"name":"address","nodeType":"ElementaryTypeName","src":"10107:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"unwrap","nameLocation":"10124:6:17","nodeType":"VariableDeclaration","scope":3443,"src":"10119:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3280,"name":"bool","nodeType":"ElementaryTypeName","src":"10119:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3285,"initialValue":{"arguments":[{"id":3283,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"10156:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3282,"name":"_decodeReceivePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"10134:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"function (bytes memory) pure returns (uint256,address,address,bool)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10134:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(uint256,address,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"10070:95:17"},{"assignments":[3287],"declarations":[{"constant":false,"id":3287,"mutability":"mutable","name":"token","nameLocation":"10184:5:17","nodeType":"VariableDeclaration","scope":3443,"src":"10176:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3286,"name":"address","nodeType":"ElementaryTypeName","src":"10176:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3288,"nodeType":"VariableDeclarationStatement","src":"10176:13:17"},{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"amountOut","nameLocation":"10205:9:17","nodeType":"VariableDeclaration","scope":3443,"src":"10200:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint","nodeType":"ElementaryTypeName","src":"10200:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3291,"nodeType":"VariableDeclarationStatement","src":"10200:14:17"},{"condition":{"id":3292,"name":"unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"10228:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3333,"nodeType":"Block","src":"10337:254:17","statements":[{"expression":{"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10352:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3305,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10360:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10352:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3307,"nodeType":"ExpressionStatement","src":"10352:16:17"},{"assignments":[3309],"declarations":[{"constant":false,"id":3309,"mutability":"mutable","name":"pair","nameLocation":"10391:4:17","nodeType":"VariableDeclaration","scope":3333,"src":"10383:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"10383:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3315,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3311,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10405:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3310,"name":"IToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"10398:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IToken_$6412_$","typeString":"type(contract IToken)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10398:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IToken_$6412","typeString":"contract IToken"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10412:4:17","memberName":"pair","nodeType":"MemberAccess","referencedDeclaration":6337,"src":"10398:18:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10398:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10383:35:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"10441:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10457:3:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10449:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"10449:7:17","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10449:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10441:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20746f6b656e4f75742068617320696e76616c6964206c697175696469747920706f6f6c","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10463:50:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ea1dad71f32d7c074acbeb7f7171c53f6a2b1523820b96d46aa919986cd83ef","typeString":"literal_string \"TokenBridge: tokenOut has invalid liquidity pool\""},"value":"TokenBridge: tokenOut has invalid liquidity pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ea1dad71f32d7c074acbeb7f7171c53f6a2b1523820b96d46aa919986cd83ef","typeString":"literal_string \"TokenBridge: tokenOut has invalid liquidity pool\""}],"id":3316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10433:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10433:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"10433:81:17"},{"expression":{"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3326,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"10529:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3328,"name":"priceFeedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"10560:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3329,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10573:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3327,"name":"calcOutTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"10541:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10529:50:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3332,"nodeType":"ExpressionStatement","src":"10529:50:17"}]},"id":3334,"nodeType":"IfStatement","src":"10225:366:17","trueBody":{"id":3303,"nodeType":"Block","src":"10236:95:17","statements":[{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3293,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10251:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3294,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"10259:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10251:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3296,"nodeType":"ExpressionStatement","src":"10251:12:17"},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"10278:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3299,"name":"priceFeedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"10307:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3298,"name":"calaOutEthAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"10290:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10290:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"10278:41:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10609:13:17","subExpression":{"id":3336,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"10610:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10626:20:17","subExpression":{"baseExpression":{"id":3338,"name":"pausedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"10627:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3340,"indexExpression":{"id":3339,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10640:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10627:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10609:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20706175736564","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10648:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""},"value":"TokenBridge: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""}],"id":3335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10601:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10601:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3345,"nodeType":"ExpressionStatement","src":"10601:69:17"},{"expression":{"arguments":[{"baseExpression":{"id":3347,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"10689:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3349,"indexExpression":{"id":3348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10705:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10689:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20746f6b656e206973206e6f7420737570706f72746564","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10713:37:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e","typeString":"literal_string \"TokenBridge: token is not supported\""},"value":"TokenBridge: token is not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e","typeString":"literal_string \"TokenBridge: token is not supported\""}],"id":3346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10681:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10681:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3352,"nodeType":"ExpressionStatement","src":"10681:70:17"},{"assignments":[3354],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"tvlSD","nameLocation":"10789:5:17","nodeType":"VariableDeclaration","scope":3443,"src":"10784:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint","nodeType":"ElementaryTypeName","src":"10784:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3358,"initialValue":{"baseExpression":{"id":3355,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"10797:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3357,"indexExpression":{"id":3356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10804:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10797:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10784:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"tvlSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"10829:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3361,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"10838:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e73756666696369656e74206c6971756964697479","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10849:37:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08","typeString":"literal_string \"TokenBridge: insufficient liquidity\""},"value":"TokenBridge: insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08","typeString":"literal_string \"TokenBridge: insufficient liquidity\""}],"id":3359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10821:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10821:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"ExpressionStatement","src":"10821:66:17"},{"expression":{"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3366,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"10898:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3368,"indexExpression":{"id":3367,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10905:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10898:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"tvlSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"10914:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3370,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"10922:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10914:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10898:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"nodeType":"ExpressionStatement","src":"10898:33:17"},{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3374,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"10965:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":3375,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"10964:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"10980:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10994:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10980:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":3382,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"11020:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11031:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11019:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_rational_0_by_1_$","typeString":"tuple(uint256,int_const 0)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10980:53:17","trueExpression":{"arguments":[{"id":3380,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"11006:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3379,"name":"_payFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"10998:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view returns (uint256,uint256)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10998:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"10964:69:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3387,"nodeType":"ExpressionStatement","src":"10964:69:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"11087:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3389,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"11096:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11087:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3391,"name":"unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"11104:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11087:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3441,"nodeType":"Block","src":"11241:211:17","statements":[{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"11256:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"11261:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11275:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11267:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3414,"name":"address","nodeType":"ElementaryTypeName","src":"11267:7:17","typeDescriptions":{}}},"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11267:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11261:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"11298:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11261:39:17","trueExpression":{"arguments":[{"hexValue":"307864456144","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11288:6:17","typeDescriptions":{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"},"value":"0xdEaD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"}],"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11280:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3419,"name":"address","nodeType":"ElementaryTypeName","src":"11280:7:17","typeDescriptions":{}}},"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11280:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11256:44:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3426,"nodeType":"ExpressionStatement","src":"11256:44:17"},{"expression":{"arguments":[{"id":3431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"11377:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3432,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"11381:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3428,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"11357:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3427,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"11350:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1716_$","typeString":"type(contract IERC20)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11350:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11364:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"11350:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1716_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11350:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3434,"nodeType":"ExpressionStatement","src":"11350:41:17"},{"eventCall":{"arguments":[{"id":3436,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"11419:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3437,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"11426:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3438,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"11430:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3435,"name":"Receive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"11411:7:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11411:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"EmitStatement","src":"11406:34:17"}]},"id":3442,"nodeType":"IfStatement","src":"11083:369:17","trueBody":{"id":3411,"nodeType":"Block","src":"11112:123:17","statements":[{"expression":{"arguments":[{"id":3394,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"11140:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3397,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"11154:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11146:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3395,"name":"address","nodeType":"ElementaryTypeName","src":"11146:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11146:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3399,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"11159:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3393,"name":"_redeemETHTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"11127:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address,address payable,uint256)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11127:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3401,"nodeType":"ExpressionStatement","src":"11127:42:17"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11205:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11197:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"11197:7:17","typeDescriptions":{}}},"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11197:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3407,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"11209:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3408,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"11213:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3402,"name":"Receive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"11189:7:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11189:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"EmitStatement","src":"11184:39:17"}]}}]},"id":3444,"implemented":true,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"9821:21:17","nodeType":"FunctionDefinition","overrides":{"id":3265,"nodeType":"OverrideSpecifier","overrides":[],"src":"9962:8:17"},"parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"_srcLzChainId","nameLocation":"9860:13:17","nodeType":"VariableDeclaration","scope":3444,"src":"9853:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3256,"name":"uint16","nodeType":"ElementaryTypeName","src":"9853:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3444,"src":"9884:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3258,"name":"bytes","nodeType":"ElementaryTypeName","src":"9884:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3444,"src":"9907:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3260,"name":"uint64","nodeType":"ElementaryTypeName","src":"9907:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"_payload","nameLocation":"9937:8:17","nodeType":"VariableDeclaration","scope":3444,"src":"9924:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3262,"name":"bytes","nodeType":"ElementaryTypeName","src":"9924:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9842:110:17"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[],"src":"9971:0:17"},"scope":3988,"src":"9812:1647:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"11582:81:17","statements":[{"expression":{"arguments":[{"id":3457,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3454,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"11599:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3453,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"11593:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$4145_$","typeString":"type(contract IWETH)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$4145","typeString":"contract IWETH"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11606:8:17","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":4135,"src":"11593:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3459,"nodeType":"ExpressionStatement","src":"11593:30:17"},{"expression":{"arguments":[{"id":3463,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"11647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3460,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"11634:3:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11638:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"11634:12:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11634:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3465,"nodeType":"ExpressionStatement","src":"11634:21:17"}]},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"_redeemETHTo","nameLocation":"11476:12:17","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"_weth","nameLocation":"11507:5:17","nodeType":"VariableDeclaration","scope":3467,"src":"11499:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3445,"name":"address","nodeType":"ElementaryTypeName","src":"11499:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"_to","nameLocation":"11539:3:17","nodeType":"VariableDeclaration","scope":3467,"src":"11523:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"11523:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"_amount","nameLocation":"11558:7:17","nodeType":"VariableDeclaration","scope":3467,"src":"11553:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint","nodeType":"ElementaryTypeName","src":"11553:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11488:84:17"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[],"src":"11582:0:17"},"scope":3988,"src":"11467:196:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3518,"nodeType":"Block","src":"11802:320:17","statements":[{"assignments":[3479],"declarations":[{"constant":false,"id":3479,"mutability":"mutable","name":"balanceBefore","nameLocation":"11862:13:17","nodeType":"VariableDeclaration","scope":3518,"src":"11857:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint","nodeType":"ElementaryTypeName","src":"11857:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3489,"initialValue":{"arguments":[{"arguments":[{"id":3486,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11913:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}],"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11905:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"11905:7:17","typeDescriptions":{}}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11905:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3481,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"11885:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3480,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"11878:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1716_$","typeString":"type(contract IERC20)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11878:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11895:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"11878:26:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11878:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11857:62:17"},{"expression":{"arguments":[{"id":3494,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"11964:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3497,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11979:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}],"id":3496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3495,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:17","typeDescriptions":{}}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3499,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"11986:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3491,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"11937:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3490,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"11930:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1716_$","typeString":"type(contract IERC20)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11930:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:16:17","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"11930:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1716_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1716_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11930:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3501,"nodeType":"ExpressionStatement","src":"11930:66:17"},{"assignments":[3503],"declarations":[{"constant":false,"id":3503,"mutability":"mutable","name":"balanceAfter","nameLocation":"12012:12:17","nodeType":"VariableDeclaration","scope":3518,"src":"12007:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint","nodeType":"ElementaryTypeName","src":"12007:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3513,"initialValue":{"arguments":[{"arguments":[{"id":3510,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12062:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3988","typeString":"contract TokenBridge"}],"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12054:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3508,"name":"address","nodeType":"ElementaryTypeName","src":"12054:7:17","typeDescriptions":{}}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12054:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3505,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"12034:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3504,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"12027:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1716_$","typeString":"type(contract IERC20)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12027:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1716","typeString":"contract IERC20"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12044:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"12027:26:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12027:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12007:61:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"balanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"12086:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3515,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"12101:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12086:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3477,"id":3517,"nodeType":"Return","src":"12079:35:17"}]},"id":3519,"implemented":true,"kind":"function","modifiers":[],"name":"_lockTokenFrom","nameLocation":"11680:14:17","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"_tokenIn","nameLocation":"11713:8:17","nodeType":"VariableDeclaration","scope":3519,"src":"11705:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3468,"name":"address","nodeType":"ElementaryTypeName","src":"11705:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"_from","nameLocation":"11740:5:17","nodeType":"VariableDeclaration","scope":3519,"src":"11732:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3470,"name":"address","nodeType":"ElementaryTypeName","src":"11732:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"_amountIn","nameLocation":"11761:9:17","nodeType":"VariableDeclaration","scope":3519,"src":"11756:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint","nodeType":"ElementaryTypeName","src":"11756:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11694:83:17"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3519,"src":"11796:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint","nodeType":"ElementaryTypeName","src":"11796:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11795:6:17"},"scope":3988,"src":"11671:451:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3533,"nodeType":"Block","src":"12261:354:17","statements":[{"assignments":[null,3526,null,null,null],"declarations":[null,{"constant":false,"id":3526,"mutability":"mutable","name":"answer","nameLocation":"12354:6:17","nodeType":"VariableDeclaration","scope":3533,"src":"12350:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3525,"name":"int","nodeType":"ElementaryTypeName","src":"12350:3:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":3530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3527,"name":"dataFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"12481:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12490:15:17","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"12481:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12481:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"12300:207:17"},{"expression":{"id":3531,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"12525:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3524,"id":3532,"nodeType":"Return","src":"12518:13:17"}]},"documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"12130:55:17","text":" Returns the ETH/USD latest answer."},"functionSelector":"bea4dfb5","id":3534,"implemented":true,"kind":"function","modifiers":[],"name":"getChainlinkDataFeedLatestAnswer","nameLocation":"12200:32:17","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[],"src":"12232:2:17"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3534,"src":"12256:3:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3522,"name":"int","nodeType":"ElementaryTypeName","src":"12256:3:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12255:5:17"},"scope":3988,"src":"12191:424:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3545,"nodeType":"Block","src":"12672:106:17","statements":[{"assignments":[3540],"declarations":[{"constant":false,"id":3540,"mutability":"mutable","name":"id","nameLocation":"12688:2:17","nodeType":"VariableDeclaration","scope":3545,"src":"12683:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint","nodeType":"ElementaryTypeName","src":"12683:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3541,"nodeType":"VariableDeclarationStatement","src":"12683:7:17"},{"AST":{"nodeType":"YulBlock","src":"12710:41:17","statements":[{"nodeType":"YulAssignment","src":"12725:15:17","value":{"arguments":[],"functionName":{"name":"chainid","nodeType":"YulIdentifier","src":"12731:7:17"},"nodeType":"YulFunctionCall","src":"12731:9:17"},"variableNames":[{"name":"id","nodeType":"YulIdentifier","src":"12725:2:17"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3540,"isOffset":false,"isSlot":false,"src":"12725:2:17","valueSize":1}],"id":3542,"nodeType":"InlineAssembly","src":"12701:50:17"},{"expression":{"id":3543,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"12768:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3538,"id":3544,"nodeType":"Return","src":"12761:9:17"}]},"functionSelector":"564b81ef","id":3546,"implemented":true,"kind":"function","modifiers":[],"name":"getChainID","nameLocation":"12632:10:17","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[],"src":"12642:2:17"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3546,"src":"12666:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint","nodeType":"ElementaryTypeName","src":"12666:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12665:6:17"},"scope":3988,"src":"12623:155:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3654,"nodeType":"Block","src":"12890:613:17","statements":[{"assignments":[3556],"declarations":[{"constant":false,"id":3556,"mutability":"mutable","name":"pair","nameLocation":"12909:4:17","nodeType":"VariableDeclaration","scope":3654,"src":"12901:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"12901:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3562,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3558,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"12923:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3557,"name":"IToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"12916:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IToken_$6412_$","typeString":"type(contract IToken)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IToken_$6412","typeString":"contract IToken"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12933:4:17","memberName":"pair","nodeType":"MemberAccess","referencedDeclaration":6337,"src":"12916:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12901:38:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"12958:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12974:3:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12966:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"12966:7:17","typeDescriptions":{}}},"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12966:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12958:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e42726967653a20746f6b656e2070616972206973206e6f742063726561746564","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12980:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3498c6375deb79bfc1c714cbc09be17a49e48160b4461223b50b0ea13a57c6d","typeString":"literal_string \"TokenBrige: token pair is not created\""},"value":"TokenBrige: token pair is not created"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3498c6375deb79bfc1c714cbc09be17a49e48160b4461223b50b0ea13a57c6d","typeString":"literal_string \"TokenBrige: token pair is not created\""}],"id":3563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12950:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12950:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3572,"nodeType":"ExpressionStatement","src":"12950:70:17"},{"assignments":[3574],"declarations":[{"constant":false,"id":3574,"mutability":"mutable","name":"np","nameLocation":"13035:2:17","nodeType":"VariableDeclaration","scope":3654,"src":"13031:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3573,"name":"int","nodeType":"ElementaryTypeName","src":"13031:3:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3577,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3575,"name":"getChainlinkDataFeedLatestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"13040:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13040:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"13031:43:17"},{"assignments":[3579],"declarations":[{"constant":false,"id":3579,"mutability":"mutable","name":"pn","nameLocation":"13114:2:17","nodeType":"VariableDeclaration","scope":3654,"src":"13109:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint","nodeType":"ElementaryTypeName","src":"13109:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3601,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"13120:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13125:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13120:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13119:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3598,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"13166:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13161:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3596,"name":"uint","nodeType":"ElementaryTypeName","src":"13161:4:17","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13161:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13119:50:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13134:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3585,"name":"uint","nodeType":"ElementaryTypeName","src":"13134:4:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13129:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13129:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13140:3:17","memberName":"max","nodeType":"MemberAccess","src":"13129:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3591,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"13151:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13146:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3589,"name":"uint","nodeType":"ElementaryTypeName","src":"13146:4:17","typeDescriptions":{}}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13146:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13129:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13157:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13129:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13109:60:17"},{"assignments":[3604],"declarations":[{"constant":false,"id":3604,"mutability":"mutable","name":"tokenPair","nameLocation":"13197:9:17","nodeType":"VariableDeclaration","scope":3654,"src":"13180:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"},"typeName":{"id":3603,"nodeType":"UserDefinedTypeName","pathNode":{"id":3602,"name":"IPancakeSwapPair","nameLocations":["13180:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":5889,"src":"13180:16:17"},"referencedDeclaration":5889,"src":"13180:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"visibility":"internal"}],"id":3608,"initialValue":{"arguments":[{"id":3606,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"13226:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3605,"name":"IPancakeSwapPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"13209:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPancakeSwapPair_$5889_$","typeString":"type(contract IPancakeSwapPair)"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13209:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"nodeType":"VariableDeclarationStatement","src":"13180:51:17"},{"assignments":[3610,3612,null],"declarations":[{"constant":false,"id":3610,"mutability":"mutable","name":"r0","nameLocation":"13251:2:17","nodeType":"VariableDeclaration","scope":3654,"src":"13243:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3609,"name":"uint112","nodeType":"ElementaryTypeName","src":"13243:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"r1","nameLocation":"13263:2:17","nodeType":"VariableDeclaration","scope":3654,"src":"13255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3611,"name":"uint112","nodeType":"ElementaryTypeName","src":"13255:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},null],"id":3616,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3613,"name":"tokenPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"13271:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13281:11:17","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"13271:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view external returns (uint112,uint112,uint32)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13271:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"13242:52:17"},{"assignments":[3618],"declarations":[{"constant":false,"id":3618,"mutability":"mutable","name":"price","nameLocation":"13310:5:17","nodeType":"VariableDeclaration","scope":3654,"src":"13305:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint","nodeType":"ElementaryTypeName","src":"13305:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3651,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3619,"name":"tokenPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"13318:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13328:6:17","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":5817,"src":"13318:16:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13318:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3622,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"13340:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13318:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3639,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"13443:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13438:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3637,"name":"uint","nodeType":"ElementaryTypeName","src":"13438:4:17","typeDescriptions":{}}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13438:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3641,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"13449:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13438:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3643,"name":"pn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"13459:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13438:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":3647,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"13469:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13464:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3645,"name":"uint","nodeType":"ElementaryTypeName","src":"13464:4:17","typeDescriptions":{}}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13464:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13438:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13318:154:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3626,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"13381:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13376:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3624,"name":"uint","nodeType":"ElementaryTypeName","src":"13376:4:17","typeDescriptions":{}}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13376:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3628,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"13387:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13376:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3630,"name":"pn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"13397:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13376:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":3634,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"13407:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13402:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3632,"name":"uint","nodeType":"ElementaryTypeName","src":"13402:4:17","typeDescriptions":{}}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13402:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13376:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13305:167:17"},{"expression":{"id":3652,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"13490:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3554,"id":3653,"nodeType":"Return","src":"13483:12:17"}]},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"calcInTokenPrice","nameLocation":"12795:16:17","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"_tokenIn","nameLocation":"12821:8:17","nodeType":"VariableDeclaration","scope":3655,"src":"12813:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"12813:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"_amount","nameLocation":"12836:7:17","nodeType":"VariableDeclaration","scope":3655,"src":"12831:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint","nodeType":"ElementaryTypeName","src":"12831:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12811:34:17"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"12878:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint","nodeType":"ElementaryTypeName","src":"12878:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12877:6:17"},"scope":3988,"src":"12786:717:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3760,"nodeType":"Block","src":"13630:587:17","statements":[{"assignments":[3665],"declarations":[{"constant":false,"id":3665,"mutability":"mutable","name":"pair","nameLocation":"13649:4:17","nodeType":"VariableDeclaration","scope":3760,"src":"13641:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"13641:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3671,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3667,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"13663:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3666,"name":"IToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"13656:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IToken_$6412_$","typeString":"type(contract IToken)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13656:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IToken_$6412","typeString":"contract IToken"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13673:4:17","memberName":"pair","nodeType":"MemberAccess","referencedDeclaration":6337,"src":"13656:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13656:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13641:38:17"},{"assignments":[3673],"declarations":[{"constant":false,"id":3673,"mutability":"mutable","name":"np","nameLocation":"13694:2:17","nodeType":"VariableDeclaration","scope":3760,"src":"13690:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3672,"name":"int","nodeType":"ElementaryTypeName","src":"13690:3:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3676,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3674,"name":"getChainlinkDataFeedLatestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"13699:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13699:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"13690:43:17"},{"assignments":[3678],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"pn","nameLocation":"13773:2:17","nodeType":"VariableDeclaration","scope":3760,"src":"13768:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint","nodeType":"ElementaryTypeName","src":"13768:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3700,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"13779:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13784:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13779:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13778:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3697,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"13825:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13820:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3695,"name":"uint","nodeType":"ElementaryTypeName","src":"13820:4:17","typeDescriptions":{}}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13820:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13778:50:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13793:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3684,"name":"uint","nodeType":"ElementaryTypeName","src":"13793:4:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3683,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13788:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13788:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13799:3:17","memberName":"max","nodeType":"MemberAccess","src":"13788:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3690,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"13810:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13805:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3688,"name":"uint","nodeType":"ElementaryTypeName","src":"13805:4:17","typeDescriptions":{}}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13805:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13788:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13816:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13788:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13768:60:17"},{"assignments":[3703],"declarations":[{"constant":false,"id":3703,"mutability":"mutable","name":"tokenPair","nameLocation":"13856:9:17","nodeType":"VariableDeclaration","scope":3760,"src":"13839:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"},"typeName":{"id":3702,"nodeType":"UserDefinedTypeName","pathNode":{"id":3701,"name":"IPancakeSwapPair","nameLocations":["13839:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":5889,"src":"13839:16:17"},"referencedDeclaration":5889,"src":"13839:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"visibility":"internal"}],"id":3707,"initialValue":{"arguments":[{"id":3705,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"13885:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3704,"name":"IPancakeSwapPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"13868:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPancakeSwapPair_$5889_$","typeString":"type(contract IPancakeSwapPair)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13868:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"nodeType":"VariableDeclarationStatement","src":"13839:51:17"},{"assignments":[3709,3711,null],"declarations":[{"constant":false,"id":3709,"mutability":"mutable","name":"r0","nameLocation":"13910:2:17","nodeType":"VariableDeclaration","scope":3760,"src":"13902:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3708,"name":"uint112","nodeType":"ElementaryTypeName","src":"13902:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"r1","nameLocation":"13922:2:17","nodeType":"VariableDeclaration","scope":3760,"src":"13914:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3710,"name":"uint112","nodeType":"ElementaryTypeName","src":"13914:7:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},null],"id":3715,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3712,"name":"tokenPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"13930:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13940:11:17","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"13930:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view external returns (uint112,uint112,uint32)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13930:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"13901:52:17"},{"assignments":[3717],"declarations":[{"constant":false,"id":3717,"mutability":"mutable","name":"amountOut","nameLocation":"13969:9:17","nodeType":"VariableDeclaration","scope":3760,"src":"13964:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint","nodeType":"ElementaryTypeName","src":"13964:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3751,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3718,"name":"tokenPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"13982:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapPair_$5889","typeString":"contract IPancakeSwapPair"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13992:6:17","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":5817,"src":"13982:16:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13982:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3721,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"14004:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13982:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13981:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"priceFeedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"14113:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3740,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"14132:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14127:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3738,"name":"uint","nodeType":"ElementaryTypeName","src":"14127:4:17","typeDescriptions":{}}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14127:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14113:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":3745,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"14143:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14138:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3743,"name":"uint","nodeType":"ElementaryTypeName","src":"14138:4:17","typeDescriptions":{}}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14138:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14113:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3748,"name":"pn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"14149:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14113:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13981:170:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"priceFeedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"14044:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3727,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"14063:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14058:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3725,"name":"uint","nodeType":"ElementaryTypeName","src":"14058:4:17","typeDescriptions":{}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14058:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14044:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":3732,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"14074:2:17","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14069:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3730,"name":"uint","nodeType":"ElementaryTypeName","src":"14069:4:17","typeDescriptions":{}}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14069:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14044:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3735,"name":"pn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"14080:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14044:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13964:187:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"14169:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14181:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3755,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"14200:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3754,"name":"_tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"14185:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint8_$","typeString":"function (address) view returns (uint8)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14185:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14181:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14169:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3663,"id":3759,"nodeType":"Return","src":"14162:47:17"}]},"id":3761,"implemented":true,"kind":"function","modifiers":[],"name":"calcOutTokenAmount","nameLocation":"13520:18:17","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"priceFeedIn","nameLocation":"13554:11:17","nodeType":"VariableDeclaration","scope":3761,"src":"13549:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint","nodeType":"ElementaryTypeName","src":"13549:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"tokenOut","nameLocation":"13585:8:17","nodeType":"VariableDeclaration","scope":3761,"src":"13577:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3658,"name":"address","nodeType":"ElementaryTypeName","src":"13577:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13538:62:17"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3761,"src":"13624:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint","nodeType":"ElementaryTypeName","src":"13624:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13623:6:17"},"scope":3988,"src":"13511:706:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3803,"nodeType":"Block","src":"14302:198:17","statements":[{"assignments":[3769],"declarations":[{"constant":false,"id":3769,"mutability":"mutable","name":"np","nameLocation":"14317:2:17","nodeType":"VariableDeclaration","scope":3803,"src":"14313:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3768,"name":"int","nodeType":"ElementaryTypeName","src":"14313:3:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3772,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3770,"name":"getChainlinkDataFeedLatestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"14322:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14322:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"14313:43:17"},{"assignments":[3774],"declarations":[{"constant":false,"id":3774,"mutability":"mutable","name":"pn","nameLocation":"14396:2:17","nodeType":"VariableDeclaration","scope":3803,"src":"14391:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint","nodeType":"ElementaryTypeName","src":"14391:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3796,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"14402:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14407:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14402:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14401:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3793,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"14448:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14443:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3791,"name":"uint","nodeType":"ElementaryTypeName","src":"14443:4:17","typeDescriptions":{}}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14443:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14401:50:17","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14416:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3780,"name":"uint","nodeType":"ElementaryTypeName","src":"14416:4:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14411:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14411:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14422:3:17","memberName":"max","nodeType":"MemberAccess","src":"14411:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3786,"name":"np","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"14433:2:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14428:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3784,"name":"uint","nodeType":"ElementaryTypeName","src":"14428:4:17","typeDescriptions":{}}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14428:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14411:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14439:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14411:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14391:60:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3797,"name":"priceFeedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"14469:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14483:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"14469:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3800,"name":"pn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"14490:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14469:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3767,"id":3802,"nodeType":"Return","src":"14462:30:17"}]},"id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"calaOutEthAmount","nameLocation":"14234:16:17","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"priceFeedIn","nameLocation":"14256:11:17","nodeType":"VariableDeclaration","scope":3804,"src":"14251:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint","nodeType":"ElementaryTypeName","src":"14251:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14250:18:17"},"returnParameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3804,"src":"14291:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint","nodeType":"ElementaryTypeName","src":"14291:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14290:6:17"},"scope":3988,"src":"14225:275:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3836,"nodeType":"Block","src":"14578:250:17","statements":[{"assignments":[3812,3814],"declarations":[{"constant":false,"id":3812,"mutability":"mutable","name":"success","nameLocation":"14595:7:17","nodeType":"VariableDeclaration","scope":3836,"src":"14590:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3811,"name":"bool","nodeType":"ElementaryTypeName","src":"14590:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"data","nameLocation":"14617:4:17","nodeType":"VariableDeclaration","scope":3836,"src":"14604:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3813,"name":"bytes","nodeType":"ElementaryTypeName","src":"14604:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3822,"initialValue":{"arguments":[{"arguments":[{"hexValue":"646563696d616c732829","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14681:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9","typeString":"literal_string \"decimals()\""},"value":"decimals()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9","typeString":"literal_string \"decimals()\""}],"expression":{"id":3817,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14657:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14661:19:17","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"14657:23:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14657:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3815,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"14625:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14632:10:17","memberName":"staticcall","nodeType":"MemberAccess","src":"14625:17:17","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14625:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14589:116:17"},{"expression":{"arguments":[{"id":3824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"14724:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a206661696c656420746f2067657420746f6b656e20646563696d616c73","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14733:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3","typeString":"literal_string \"TokenBridge: failed to get token decimals\""},"value":"TokenBridge: failed to get token decimals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3","typeString":"literal_string \"TokenBridge: failed to get token decimals\""}],"id":3823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14716:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14716:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3827,"nodeType":"ExpressionStatement","src":"14716:61:17"},{"expression":{"arguments":[{"id":3830,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"14806:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14813:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3831,"name":"uint8","nodeType":"ElementaryTypeName","src":"14813:5:17","typeDescriptions":{}}}],"id":3833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14812:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"expression":{"id":3828,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14795:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14799:6:17","memberName":"decode","nodeType":"MemberAccess","src":"14795:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14795:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3810,"id":3835,"nodeType":"Return","src":"14788:32:17"}]},"id":3837,"implemented":true,"kind":"function","modifiers":[],"name":"_tokenDecimals","nameLocation":"14517:14:17","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"_token","nameLocation":"14540:6:17","nodeType":"VariableDeclaration","scope":3837,"src":"14532:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"14532:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14531:16:17"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3837,"src":"14571:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3808,"name":"uint8","nodeType":"ElementaryTypeName","src":"14571:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"14570:7:17"},"scope":3988,"src":"14508:320:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3861,"nodeType":"Block","src":"14949:110:17","statements":[{"expression":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3846,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"14960:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"14967:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3848,"name":"bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"14979:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14967:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14966:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3851,"name":"BP_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"14994:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14966:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14960:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3854,"nodeType":"ExpressionStatement","src":"14960:48:17"},{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3855,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"15019:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"15036:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3857,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"15048:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15036:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15019:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"15019:32:17"}]},"id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"_payFee","nameLocation":"14845:7:17","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"_amountIn","nameLocation":"14858:9:17","nodeType":"VariableDeclaration","scope":3862,"src":"14853:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint","nodeType":"ElementaryTypeName","src":"14853:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14852:16:17"},"returnParameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"amountAfterFee","nameLocation":"14917:14:17","nodeType":"VariableDeclaration","scope":3862,"src":"14912:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint","nodeType":"ElementaryTypeName","src":"14912:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"fee","nameLocation":"14938:3:17","nodeType":"VariableDeclaration","scope":3862,"src":"14933:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint","nodeType":"ElementaryTypeName","src":"14933:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14911:31:17"},"scope":3988,"src":"14836:223:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3899,"nodeType":"Block","src":"15297:255:17","statements":[{"assignments":[3874],"declarations":[{"constant":false,"id":3874,"mutability":"mutable","name":"tokenBytes32","nameLocation":"15316:12:17","nodeType":"VariableDeclaration","scope":3899,"src":"15308:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15308:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3879,"initialValue":{"arguments":[{"id":3877,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"15354:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3875,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"15331:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$270_$","typeString":"type(library LzLib)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15337:16:17","memberName":"addressToBytes32","nodeType":"MemberAccess","referencedDeclaration":269,"src":"15331:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15331:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15308:53:17"},{"assignments":[3881],"declarations":[{"constant":false,"id":3881,"mutability":"mutable","name":"recieverBytes32","nameLocation":"15380:15:17","nodeType":"VariableDeclaration","scope":3899,"src":"15372:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15372:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3886,"initialValue":{"arguments":[{"id":3884,"name":"_reciever","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"15421:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3882,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"15398:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$270_$","typeString":"type(library LzLib)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15404:16:17","memberName":"addressToBytes32","nodeType":"MemberAccess","referencedDeclaration":269,"src":"15398:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15398:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15372:59:17"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3891,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"15485:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3995_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15496:7:17","memberName":"SEND_TO","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"15485:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}],"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15479:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3889,"name":"uint8","nodeType":"ElementaryTypeName","src":"15479:5:17","typeDescriptions":{}}},"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15479:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3894,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"15506:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3895,"name":"tokenBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"15514:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3896,"name":"recieverBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"15528:15:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3887,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15462:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15466:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"15462:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15462:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3872,"id":3898,"nodeType":"Return","src":"15442:102:17"}]},"id":3900,"implemented":true,"kind":"function","modifiers":[],"name":"_encodeSendPayload","nameLocation":"15159:18:17","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"_price","nameLocation":"15193:6:17","nodeType":"VariableDeclaration","scope":3900,"src":"15188:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint","nodeType":"ElementaryTypeName","src":"15188:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"_token","nameLocation":"15218:6:17","nodeType":"VariableDeclaration","scope":3900,"src":"15210:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"15210:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"_reciever","nameLocation":"15243:9:17","nodeType":"VariableDeclaration","scope":3900,"src":"15235:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3867,"name":"address","nodeType":"ElementaryTypeName","src":"15235:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15177:82:17"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3900,"src":"15283:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3870,"name":"bytes","nodeType":"ElementaryTypeName","src":"15283:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15282:14:17"},"scope":3988,"src":"15150:402:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3953,"nodeType":"Block","src":"15875:465:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3914,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"15894:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:6:17","memberName":"length","nodeType":"MemberAccess","src":"15894:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3938","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15913:2:17","typeDescriptions":{"typeIdentifier":"t_rational_98_by_1","typeString":"int_const 98"},"value":"98"},"src":"15894:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e76616c6964207061796c6f6164206c656e677468","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15917:37:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d","typeString":"literal_string \"TokenBridge: invalid payload length\""},"value":"TokenBridge: invalid payload length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d","typeString":"literal_string \"TokenBridge: invalid payload length\""}],"id":3913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15886:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15886:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3920,"nodeType":"ExpressionStatement","src":"15886:69:17"},{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"packetType","nameLocation":"15977:10:17","nodeType":"VariableDeclaration","scope":3953,"src":"15966:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"},"typeName":{"id":3922,"nodeType":"UserDefinedTypeName","pathNode":{"id":3921,"name":"PacketType","nameLocations":["15966:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3995,"src":"15966:10:17"},"referencedDeclaration":3995,"src":"15966:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}},"visibility":"internal"}],"id":3932,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3927,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"16007:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3929,"indexExpression":{"hexValue":"30","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16016:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16007:11:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16001:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3925,"name":"uint8","nodeType":"ElementaryTypeName","src":"16001:5:17","typeDescriptions":{}}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16001:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3924,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"15990:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3995_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15990:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}},"nodeType":"VariableDeclarationStatement","src":"15966:54:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"16039:10:17","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3935,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16053:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3995_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16064:12:17","memberName":"RECEIVE_FROM","nodeType":"MemberAccess","referencedDeclaration":3994,"src":"16053:23:17","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}},"src":"16039:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20756e6b6e6f776e207061636b65742074797065","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16078:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8","typeString":"literal_string \"TokenBridge: unknown packet type\""},"value":"TokenBridge: unknown packet type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8","typeString":"literal_string \"TokenBridge: unknown packet type\""}],"id":3933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16031:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16031:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3940,"nodeType":"ExpressionStatement","src":"16031:82:17"},{"AST":{"nodeType":"YulBlock","src":"16133:156:17","statements":[{"nodeType":"YulAssignment","src":"16148:33:17","value":{"arguments":[{"arguments":[{"name":"_payload","nodeType":"YulIdentifier","src":"16167:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"16177:2:17","type":"","value":"33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16163:3:17"},"nodeType":"YulFunctionCall","src":"16163:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16157:5:17"},"nodeType":"YulFunctionCall","src":"16157:24:17"},"variableNames":[{"name":"price","nodeType":"YulIdentifier","src":"16148:5:17"}]},{"nodeType":"YulAssignment","src":"16195:33:17","value":{"arguments":[{"arguments":[{"name":"_payload","nodeType":"YulIdentifier","src":"16214:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"16224:2:17","type":"","value":"65"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16210:3:17"},"nodeType":"YulFunctionCall","src":"16210:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16204:5:17"},"nodeType":"YulFunctionCall","src":"16204:24:17"},"variableNames":[{"name":"token","nodeType":"YulIdentifier","src":"16195:5:17"}]},{"nodeType":"YulAssignment","src":"16242:36:17","value":{"arguments":[{"arguments":[{"name":"_payload","nodeType":"YulIdentifier","src":"16264:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"16274:2:17","type":"","value":"97"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16260:3:17"},"nodeType":"YulFunctionCall","src":"16260:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16254:5:17"},"nodeType":"YulFunctionCall","src":"16254:24:17"},"variableNames":[{"name":"reciever","nodeType":"YulIdentifier","src":"16242:8:17"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3902,"isOffset":false,"isSlot":false,"src":"16167:8:17","valueSize":1},{"declaration":3902,"isOffset":false,"isSlot":false,"src":"16214:8:17","valueSize":1},{"declaration":3902,"isOffset":false,"isSlot":false,"src":"16264:8:17","valueSize":1},{"declaration":3905,"isOffset":false,"isSlot":false,"src":"16148:5:17","valueSize":1},{"declaration":3909,"isOffset":false,"isSlot":false,"src":"16242:8:17","valueSize":1},{"declaration":3907,"isOffset":false,"isSlot":false,"src":"16195:5:17","valueSize":1}],"id":3941,"nodeType":"InlineAssembly","src":"16124:165:17"},{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3942,"name":"unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"16299:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3945,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"16314:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3947,"indexExpression":{"hexValue":"3937","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16323:2:17","typeDescriptions":{"typeIdentifier":"t_rational_97_by_1","typeString":"int_const 97"},"value":"97"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16314:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16308:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3943,"name":"uint8","nodeType":"ElementaryTypeName","src":"16308:5:17","typeDescriptions":{}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16308:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16331:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16308:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16299:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3952,"nodeType":"ExpressionStatement","src":"16299:33:17"}]},"id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeReceivePayload","nameLocation":"15672:21:17","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"_payload","nameLocation":"15707:8:17","nodeType":"VariableDeclaration","scope":3954,"src":"15694:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3901,"name":"bytes","nodeType":"ElementaryTypeName","src":"15694:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15693:23:17"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"price","nameLocation":"15768:5:17","nodeType":"VariableDeclaration","scope":3954,"src":"15763:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint","nodeType":"ElementaryTypeName","src":"15763:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"token","nameLocation":"15796:5:17","nodeType":"VariableDeclaration","scope":3954,"src":"15788:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3906,"name":"address","nodeType":"ElementaryTypeName","src":"15788:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"reciever","nameLocation":"15824:8:17","nodeType":"VariableDeclaration","scope":3954,"src":"15816:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3908,"name":"address","nodeType":"ElementaryTypeName","src":"15816:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"unwrap","nameLocation":"15852:6:17","nodeType":"VariableDeclaration","scope":3954,"src":"15847:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3910,"name":"bool","nodeType":"ElementaryTypeName","src":"15847:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15748:121:17"},"scope":3988,"src":"15663:677:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3986,"nodeType":"Block","src":"16422:280:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3959,"name":"useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"16437:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"toLzChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"16463:11:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16477:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16463:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16437:41:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3984,"nodeType":"Block","src":"16587:108:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3977,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"16610:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16625:6:17","memberName":"length","nodeType":"MemberAccess","src":"16610:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16635:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16610:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a205f61646170746572506172616d73206d75737420626520656d7074792e","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16638:44:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c","typeString":"literal_string \"TokenBridge: _adapterParams must be empty.\""},"value":"TokenBridge: _adapterParams must be empty."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c","typeString":"literal_string \"TokenBridge: _adapterParams must be empty.\""}],"id":3976,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16602:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16602:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3983,"nodeType":"ExpressionStatement","src":"16602:81:17"}]},"id":3985,"nodeType":"IfStatement","src":"16433:262:17","trueBody":{"id":3975,"nodeType":"Block","src":"16480:101:17","statements":[{"expression":{"arguments":[{"id":3965,"name":"toLzChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"16510:11:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"expression":{"id":3968,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"16530:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3995_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16541:7:17","memberName":"SEND_TO","nodeType":"MemberAccess","referencedDeclaration":3993,"src":"16530:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PacketType_$3995","typeString":"enum ITokenBridge.PacketType"}],"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16523:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3966,"name":"uint16","nodeType":"ElementaryTypeName","src":"16523:6:17","typeDescriptions":{}}},"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16523:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3971,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"16551:14:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"hexValue":"30","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16567:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3964,"name":"_checkGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"16495:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint16_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,bytes memory,uint256) view"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16495:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3974,"nodeType":"ExpressionStatement","src":"16495:74:17"}]}}]},"id":3987,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAdapterParams","nameLocation":"16357:19:17","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"_adapterParams","nameLocation":"16392:14:17","nodeType":"VariableDeclaration","scope":3987,"src":"16377:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3955,"name":"bytes","nodeType":"ElementaryTypeName","src":"16377:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16376:31:17"},"returnParameters":{"id":3958,"nodeType":"ParameterList","parameters":[],"src":"16422:0:17"},"scope":3988,"src":"16348:354:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3989,"src":"1196:15509:17","usedErrors":[],"usedEvents":[287,410,417,422,782,4051,4059,4063,4067,4071,4075,4081,4085,4089,4093,4101,4109,4115,4620,4626,4632,4640,5193,5203]}],"src":"38:16667:17"},"id":17},"contracts/bridge/interfaces/ITokenBridge.sol":{"ast":{"absolutePath":"contracts/bridge/interfaces/ITokenBridge.sol","exportedSymbols":{"ITokenBridge":[4116],"LzLib":[270]},"id":4117,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3990,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"40:24:18"},{"id":3991,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"66:33:18"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","id":3992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4117,"sourceUnit":271,"src":"103:73:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ITokenBridge","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4116,"linearizedBaseContracts":[4116],"name":"ITokenBridge","nameLocation":"190:12:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ITokenBridge.PacketType","id":3995,"members":[{"id":3993,"name":"SEND_TO","nameLocation":"237:7:18","nodeType":"EnumValue","src":"237:7:18"},{"id":3994,"name":"RECEIVE_FROM","nameLocation":"255:12:18","nodeType":"EnumValue","src":"255:12:18"}],"name":"PacketType","nameLocation":"215:10:18","nodeType":"EnumDefinition","src":"210:64:18"},{"functionSelector":"3bd0536b","id":4013,"implemented":false,"kind":"function","modifiers":[],"name":"sendTokenToDest","nameLocation":"291:15:18","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"_toLzDestChain","nameLocation":"324:14:18","nodeType":"VariableDeclaration","scope":4013,"src":"317:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3996,"name":"uint16","nodeType":"ElementaryTypeName","src":"317:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"_tokenIn","nameLocation":"357:8:18","nodeType":"VariableDeclaration","scope":4013,"src":"349:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3998,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"_amountIn","nameLocation":"381:9:18","nodeType":"VariableDeclaration","scope":4013,"src":"376:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint","nodeType":"ElementaryTypeName","src":"376:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"_tokenOut","nameLocation":"409:9:18","nodeType":"VariableDeclaration","scope":4013,"src":"401:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4002,"name":"address","nodeType":"ElementaryTypeName","src":"401:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"_toAddress","nameLocation":"437:10:18","nodeType":"VariableDeclaration","scope":4013,"src":"429:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"429:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"_callParams","nameLocation":"484:11:18","nodeType":"VariableDeclaration","scope":4013,"src":"458:37:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":4007,"nodeType":"UserDefinedTypeName","pathNode":{"id":4006,"name":"LzLib.CallParams","nameLocations":["458:5:18","464:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"458:16:18"},"referencedDeclaration":53,"src":"458:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"_adapterParams","nameLocation":"521:14:18","nodeType":"VariableDeclaration","scope":4013,"src":"506:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4009,"name":"bytes","nodeType":"ElementaryTypeName","src":"506:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"306:236:18"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[],"src":"559:0:18"},"scope":4116,"src":"282:278:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"b790d7c1","id":4027,"implemented":false,"kind":"function","modifiers":[],"name":"sendETHToDest","nameLocation":"577:13:18","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"_toLzDestChain","nameLocation":"608:14:18","nodeType":"VariableDeclaration","scope":4027,"src":"601:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4014,"name":"uint16","nodeType":"ElementaryTypeName","src":"601:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"_toAddress","nameLocation":"641:10:18","nodeType":"VariableDeclaration","scope":4027,"src":"633:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"_amountIn","nameLocation":"667:9:18","nodeType":"VariableDeclaration","scope":4027,"src":"662:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint","nodeType":"ElementaryTypeName","src":"662:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"_callParams","nameLocation":"713:11:18","nodeType":"VariableDeclaration","scope":4027,"src":"687:37:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":4021,"nodeType":"UserDefinedTypeName","pathNode":{"id":4020,"name":"LzLib.CallParams","nameLocations":["687:5:18","693:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"687:16:18"},"referencedDeclaration":53,"src":"687:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"_adapterParams","nameLocation":"750:14:18","nodeType":"VariableDeclaration","scope":4027,"src":"735:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4023,"name":"bytes","nodeType":"ElementaryTypeName","src":"735:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"590:181:18"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[],"src":"788:0:18"},"scope":4116,"src":"568:221:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"7d5f5bd4","id":4041,"implemented":false,"kind":"function","modifiers":[],"name":"quoteForSend","nameLocation":"806:12:18","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"_toLzDestChain","nameLocation":"836:14:18","nodeType":"VariableDeclaration","scope":4041,"src":"829:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4028,"name":"uint16","nodeType":"ElementaryTypeName","src":"829:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"_callParams","nameLocation":"887:11:18","nodeType":"VariableDeclaration","scope":4041,"src":"861:37:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":4031,"nodeType":"UserDefinedTypeName","pathNode":{"id":4030,"name":"LzLib.CallParams","nameLocations":["861:5:18","867:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"861:16:18"},"referencedDeclaration":53,"src":"861:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$53_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"_adapterParams","nameLocation":"925:14:18","nodeType":"VariableDeclaration","scope":4041,"src":"910:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4033,"name":"bytes","nodeType":"ElementaryTypeName","src":"910:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"818:128:18"},"returnParameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"nativeFee","nameLocation":"975:9:18","nodeType":"VariableDeclaration","scope":4041,"src":"970:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint","nodeType":"ElementaryTypeName","src":"970:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"zroFee","nameLocation":"991:6:18","nodeType":"VariableDeclaration","scope":4041,"src":"986:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint","nodeType":"ElementaryTypeName","src":"986:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:29:18"},"scope":4116,"src":"797:202:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"358304737e16805ddc68ab8f04e14751a94bb8fd0a3fecc784b61d0c0789f460","id":4051,"name":"Send","nameLocation":"1013:4:18","nodeType":"EventDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1034:5:18","nodeType":"VariableDeclaration","scope":4051,"src":"1018:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4042,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4045,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1057:4:18","nodeType":"VariableDeclaration","scope":4051,"src":"1041:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4044,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4047,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1079:2:18","nodeType":"VariableDeclaration","scope":4051,"src":"1063:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4046,"name":"address","nodeType":"ElementaryTypeName","src":"1063:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4049,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1088:8:18","nodeType":"VariableDeclaration","scope":4051,"src":"1083:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint","nodeType":"ElementaryTypeName","src":"1083:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:80:18"},"src":"1007:91:18"},{"anonymous":false,"eventSelector":"fd19781f43410d9594fd4c02dd1d98dbe99099cbd222d5851a6e183c468d33ca","id":4059,"name":"Receive","nameLocation":"1110:7:18","nodeType":"EventDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1134:5:18","nodeType":"VariableDeclaration","scope":4059,"src":"1118:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4052,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4055,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1157:2:18","nodeType":"VariableDeclaration","scope":4059,"src":"1141:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4054,"name":"address","nodeType":"ElementaryTypeName","src":"1141:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4057,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1166:8:18","nodeType":"VariableDeclaration","scope":4059,"src":"1161:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint","nodeType":"ElementaryTypeName","src":"1161:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1117:58:18"},"src":"1104:72:18"},{"anonymous":false,"eventSelector":"f7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc16","id":4063,"name":"RegisterToken","nameLocation":"1188:13:18","nodeType":"EventDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1210:5:18","nodeType":"VariableDeclaration","scope":4063,"src":"1202:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4060,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1201:15:18"},"src":"1182:35:18"},{"anonymous":false,"eventSelector":"9a749c8193bfd56b2b2a05c0bd18fbb0f69801a3fd6576c40b90537fd0fc3854","id":4067,"name":"SetBridgeBP","nameLocation":"1229:11:18","nodeType":"EventDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"indexed":false,"mutability":"mutable","name":"bridgeFeeBP","nameLocation":"1246:11:18","nodeType":"VariableDeclaration","scope":4067,"src":"1241:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint","nodeType":"ElementaryTypeName","src":"1241:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:18:18"},"src":"1223:36:18"},{"anonymous":false,"eventSelector":"e390bcec6614d6b1f8ae47a4d9d46531ce328e3d293ecd6ddd015cb01eff0300","id":4071,"name":"SetWETH","nameLocation":"1271:7:18","nodeType":"EventDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"indexed":false,"mutability":"mutable","name":"weth","nameLocation":"1287:4:18","nodeType":"VariableDeclaration","scope":4071,"src":"1279:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4068,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1278:14:18"},"src":"1265:28:18"},{"anonymous":false,"eventSelector":"5362d4bd13945e8d116b90d83a7050fa61ceb02bb79bfae783377adb46916d94","id":4075,"name":"SetGlobalPause","nameLocation":"1305:14:18","nodeType":"EventDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"1325:6:18","nodeType":"VariableDeclaration","scope":4075,"src":"1320:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4072,"name":"bool","nodeType":"ElementaryTypeName","src":"1320:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1319:13:18"},"src":"1299:34:18"},{"anonymous":false,"eventSelector":"b1656bd3b50ddb6b12ef259c86e9cb359952b53c4403cfb5a83e23c515a35e22","id":4081,"name":"SetTokenPause","nameLocation":"1345:13:18","nodeType":"EventDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1367:5:18","nodeType":"VariableDeclaration","scope":4081,"src":"1359:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4076,"name":"address","nodeType":"ElementaryTypeName","src":"1359:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4079,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"1379:6:18","nodeType":"VariableDeclaration","scope":4081,"src":"1374:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4078,"name":"bool","nodeType":"ElementaryTypeName","src":"1374:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1358:28:18"},"src":"1339:48:18"},{"anonymous":false,"eventSelector":"f5d18385702760f931e7395b5deb636c964542a4284bf07dca2adbd0d7e21614","id":4085,"name":"SetLocalChainId","nameLocation":"1399:15:18","nodeType":"EventDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"indexed":false,"mutability":"mutable","name":"localChainId","nameLocation":"1422:12:18","nodeType":"VariableDeclaration","scope":4085,"src":"1415:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4082,"name":"uint16","nodeType":"ElementaryTypeName","src":"1415:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1414:21:18"},"src":"1393:43:18"},{"anonymous":false,"eventSelector":"6a9ea26cc7efedf0df6fd048e06f3de4be1a978bb5d440277147c76e1c0eb75a","id":4089,"name":"SetAptosChainId","nameLocation":"1448:15:18","nodeType":"EventDefinition","parameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"indexed":false,"mutability":"mutable","name":"aptosChainId","nameLocation":"1471:12:18","nodeType":"VariableDeclaration","scope":4089,"src":"1464:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4086,"name":"uint16","nodeType":"ElementaryTypeName","src":"1464:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1463:21:18"},"src":"1442:43:18"},{"anonymous":false,"eventSelector":"1584ad594a70cbe1e6515592e1272a987d922b097ead875069cebe8b40c004a4","id":4093,"name":"SetUseCustomAdapterParams","nameLocation":"1497:25:18","nodeType":"EventDefinition","parameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"indexed":false,"mutability":"mutable","name":"useCustomAdapterParams","nameLocation":"1528:22:18","nodeType":"VariableDeclaration","scope":4093,"src":"1523:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4090,"name":"bool","nodeType":"ElementaryTypeName","src":"1523:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1522:29:18"},"src":"1491:61:18"},{"anonymous":false,"eventSelector":"f15a0a3784dea9b4fe33bc98e2450745e262d310237b2868ea8ef56967ff3ecb","id":4101,"name":"WithdrawFee","nameLocation":"1564:11:18","nodeType":"EventDefinition","parameters":{"id":4100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1592:5:18","nodeType":"VariableDeclaration","scope":4101,"src":"1576:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4094,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4097,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1607:2:18","nodeType":"VariableDeclaration","scope":4101,"src":"1599:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4099,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1616:8:18","nodeType":"VariableDeclaration","scope":4101,"src":"1611:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint","nodeType":"ElementaryTypeName","src":"1611:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1575:50:18"},"src":"1558:68:18"},{"anonymous":false,"eventSelector":"49507695f37b729944475cf3388760a14760fef784b7ab5ca8863a5f3f8be6bd","id":4109,"name":"WithdrawTVL","nameLocation":"1638:11:18","nodeType":"EventDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1666:5:18","nodeType":"VariableDeclaration","scope":4109,"src":"1650:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4102,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4105,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1681:2:18","nodeType":"VariableDeclaration","scope":4109,"src":"1673:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4104,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4107,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1690:8:18","nodeType":"VariableDeclaration","scope":4109,"src":"1685:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint","nodeType":"ElementaryTypeName","src":"1685:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1649:50:18"},"src":"1632:68:18"},{"anonymous":false,"eventSelector":"27a37fc51e6c5d14309bbed3a54787c8788223b5d9cd5fe10605661665dd8415","id":4115,"name":"EnableEmergencyWithdraw","nameLocation":"1712:23:18","nodeType":"EventDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"1741:7:18","nodeType":"VariableDeclaration","scope":4115,"src":"1736:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4110,"name":"bool","nodeType":"ElementaryTypeName","src":"1736:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4113,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"1755:10:18","nodeType":"VariableDeclaration","scope":4115,"src":"1750:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint","nodeType":"ElementaryTypeName","src":"1750:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1735:31:18"},"src":"1706:61:18"}],"scope":4117,"src":"180:1590:18","usedErrors":[],"usedEvents":[4051,4059,4063,4067,4071,4075,4081,4085,4089,4093,4101,4109,4115]}],"src":"40:1732:18"},"id":18},"contracts/bridge/interfaces/IWETH.sol":{"ast":{"absolutePath":"contracts/bridge/interfaces/IWETH.sol","exportedSymbols":{"IWETH":[4145]},"id":4146,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":4118,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"40:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4145,"linearizedBaseContracts":[4145],"name":"IWETH","nameLocation":"78:5:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":4121,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"100:7:19","nodeType":"FunctionDefinition","parameters":{"id":4119,"nodeType":"ParameterList","parameters":[],"src":"107:2:19"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[],"src":"126:0:19"},"scope":4145,"src":"91:36:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":4130,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"144:8:19","nodeType":"FunctionDefinition","parameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"to","nameLocation":"161:2:19","nodeType":"VariableDeclaration","scope":4130,"src":"153:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4122,"name":"address","nodeType":"ElementaryTypeName","src":"153:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"value","nameLocation":"170:5:19","nodeType":"VariableDeclaration","scope":4130,"src":"165:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint","nodeType":"ElementaryTypeName","src":"165:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"152:24:19"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"195:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4127,"name":"bool","nodeType":"ElementaryTypeName","src":"195:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"194:6:19"},"scope":4145,"src":"135:66:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":4135,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"218:8:19","nodeType":"FunctionDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4135,"src":"227:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint","nodeType":"ElementaryTypeName","src":"227:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:6:19"},"returnParameters":{"id":4134,"nodeType":"ParameterList","parameters":[],"src":"241:0:19"},"scope":4145,"src":"209:33:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":4144,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"259:7:19","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"to","nameLocation":"275:2:19","nodeType":"VariableDeclaration","scope":4144,"src":"267:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4136,"name":"address","nodeType":"ElementaryTypeName","src":"267:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4139,"mutability":"mutable","name":"value","nameLocation":"284:5:19","nodeType":"VariableDeclaration","scope":4144,"src":"279:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint","nodeType":"ElementaryTypeName","src":"279:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"266:24:19"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4144,"src":"309:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4141,"name":"bool","nodeType":"ElementaryTypeName","src":"309:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"308:6:19"},"scope":4145,"src":"250:65:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4146,"src":"68:250:19","usedErrors":[],"usedEvents":[]}],"src":"40:280:19"},"id":19},"contracts/bridge/libraries/BytesLib.sol":{"ast":{"absolutePath":"contracts/bridge/libraries/BytesLib.sol","exportedSymbols":{"BytesLib":[4478]},"id":4479,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":4147,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"344:31:20"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4478,"linearizedBaseContracts":[4478],"name":"BytesLib","nameLocation":"387:8:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4162,"nodeType":"Block","src":"505:2937:20","statements":[{"assignments":[4157],"declarations":[{"constant":false,"id":4157,"mutability":"mutable","name":"tempBytes","nameLocation":"529:9:20","nodeType":"VariableDeclaration","scope":4162,"src":"516:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4156,"name":"bytes","nodeType":"ElementaryTypeName","src":"516:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4158,"nodeType":"VariableDeclarationStatement","src":"516:22:20"},{"AST":{"nodeType":"YulBlock","src":"560:2846:20","statements":[{"nodeType":"YulAssignment","src":"707:24:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"726:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"720:5:20"},"nodeType":"YulFunctionCall","src":"720:11:20"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"707:9:20"}]},{"nodeType":"YulVariableDeclaration","src":"867:30:20","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"887:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"881:5:20"},"nodeType":"YulFunctionCall","src":"881:16:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"871:6:20","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"918:9:20"},{"name":"length","nodeType":"YulIdentifier","src":"929:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"911:6:20"},"nodeType":"YulFunctionCall","src":"911:25:20"},"nodeType":"YulExpressionStatement","src":"911:25:20"},{"nodeType":"YulVariableDeclaration","src":"1151:30:20","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1165:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1176:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1161:3:20"},"nodeType":"YulFunctionCall","src":"1161:20:20"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1155:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1309:26:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1324:2:20"},{"name":"length","nodeType":"YulIdentifier","src":"1328:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1320:3:20"},"nodeType":"YulFunctionCall","src":"1320:15:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1313:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1722:166:20","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1859:2:20"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1869:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:20"},"nodeType":"YulFunctionCall","src":"1863:9:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:20"},"nodeType":"YulFunctionCall","src":"1852:21:20"},"nodeType":"YulExpressionStatement","src":"1852:21:20"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1551:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"1555:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1548:2:20"},"nodeType":"YulFunctionCall","src":"1548:11:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1560:161:20","statements":[{"nodeType":"YulAssignment","src":"1650:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1660:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"1664:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1656:3:20"},"nodeType":"YulFunctionCall","src":"1656:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1650:2:20"}]},{"nodeType":"YulAssignment","src":"1687:19:20","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1697:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"1701:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:20"},"nodeType":"YulFunctionCall","src":"1693:13:20"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1687:2:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1355:192:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1502:30:20","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1516:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1527:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1512:3:20"},"nodeType":"YulFunctionCall","src":"1512:20:20"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1506:2:20","type":""}]}]},"src":"1351:537:20"},{"nodeType":"YulAssignment","src":"2094:27:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2110:10:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2104:5:20"},"nodeType":"YulFunctionCall","src":"2104:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2094:6:20"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2142:9:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2157:6:20"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2171:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2165:5:20"},"nodeType":"YulFunctionCall","src":"2165:16:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:20"},"nodeType":"YulFunctionCall","src":"2153:29:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2135:6:20"},"nodeType":"YulFunctionCall","src":"2135:48:20"},"nodeType":"YulExpressionStatement","src":"2135:48:20"},{"nodeType":"YulAssignment","src":"2325:9:20","value":{"name":"end","nodeType":"YulIdentifier","src":"2331:3:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2325:2:20"}]},{"nodeType":"YulAssignment","src":"2464:22:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2475:2:20"},{"name":"length","nodeType":"YulIdentifier","src":"2479:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2471:3:20"},"nodeType":"YulFunctionCall","src":"2471:15:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2464:3:20"}]},{"body":{"nodeType":"YulBlock","src":"2675:55:20","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2701:2:20"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2711:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2705:5:20"},"nodeType":"YulFunctionCall","src":"2705:9:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2694:6:20"},"nodeType":"YulFunctionCall","src":"2694:21:20"},"nodeType":"YulExpressionStatement","src":"2694:21:20"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2575:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"2579:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2572:2:20"},"nodeType":"YulFunctionCall","src":"2572:11:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2584:90:20","statements":[{"nodeType":"YulAssignment","src":"2603:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2613:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"2617:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2609:3:20"},"nodeType":"YulFunctionCall","src":"2609:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2603:2:20"}]},{"nodeType":"YulAssignment","src":"2640:19:20","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2650:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"2654:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2646:3:20"},"nodeType":"YulFunctionCall","src":"2646:13:20"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2640:2:20"}]}]},"pre":{"nodeType":"YulBlock","src":"2506:65:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2525:31:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2539:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"2551:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:20"},"nodeType":"YulFunctionCall","src":"2535:21:20"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2529:2:20","type":""}]}]},"src":"2502:228:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3187:4:20","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3244:3:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3260:6:20"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3274:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3268:5:20"},"nodeType":"YulFunctionCall","src":"3268:16:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3256:3:20"},"nodeType":"YulFunctionCall","src":"3256:29:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3249:6:20"},"nodeType":"YulFunctionCall","src":"3249:37:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3240:3:20"},"nodeType":"YulFunctionCall","src":"3240:47:20"},{"kind":"number","nodeType":"YulLiteral","src":"3289:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3236:3:20"},"nodeType":"YulFunctionCall","src":"3236:56:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3315:3:20"},"nodeType":"YulFunctionCall","src":"3315:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3210:3:20"},"nodeType":"YulFunctionCall","src":"3210:170:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:20"},"nodeType":"YulFunctionCall","src":"3162:233:20"},"nodeType":"YulExpressionStatement","src":"3162:233:20"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4151,"isOffset":false,"isSlot":false,"src":"2110:10:20","valueSize":1},{"declaration":4151,"isOffset":false,"isSlot":false,"src":"2539:10:20","valueSize":1},{"declaration":4149,"isOffset":false,"isSlot":false,"src":"1516:9:20","valueSize":1},{"declaration":4149,"isOffset":false,"isSlot":false,"src":"3274:9:20","valueSize":1},{"declaration":4149,"isOffset":false,"isSlot":false,"src":"887:9:20","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"1165:9:20","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"2142:9:20","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"2171:9:20","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"707:9:20","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"918:9:20","valueSize":1}],"id":4159,"nodeType":"InlineAssembly","src":"551:2855:20"},{"expression":{"id":4160,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"3425:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4155,"id":4161,"nodeType":"Return","src":"3418:16:20"}]},"id":4163,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"412:6:20","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"_preBytes","nameLocation":"432:9:20","nodeType":"VariableDeclaration","scope":4163,"src":"419:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4148,"name":"bytes","nodeType":"ElementaryTypeName","src":"419:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"_postBytes","nameLocation":"456:10:20","nodeType":"VariableDeclaration","scope":4163,"src":"443:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4150,"name":"bytes","nodeType":"ElementaryTypeName","src":"443:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"418:49:20"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4163,"src":"491:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4153,"name":"bytes","nodeType":"ElementaryTypeName","src":"491:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"490:14:20"},"scope":4478,"src":"403:3039:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4171,"nodeType":"Block","src":"3532:5931:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3552:5904:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3779:34:20","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3798:14:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3792:5:20"},"nodeType":"YulFunctionCall","src":"3792:21:20"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3783:5:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4314:76:20","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4337:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4352:5:20","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4370:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4377:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4366:3:20"},"nodeType":"YulFunctionCall","src":"4366:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4359:6:20"},"nodeType":"YulFunctionCall","src":"4359:21:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4348:3:20"},"nodeType":"YulFunctionCall","src":"4348:33:20"},{"kind":"number","nodeType":"YulLiteral","src":"4383:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4344:3:20"},"nodeType":"YulFunctionCall","src":"4344:41:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4333:3:20"},"nodeType":"YulFunctionCall","src":"4333:53:20"},{"kind":"number","nodeType":"YulLiteral","src":"4388:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4329:3:20"},"nodeType":"YulFunctionCall","src":"4329:61:20"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4318:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4404:32:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4425:10:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4419:5:20"},"nodeType":"YulFunctionCall","src":"4419:17:20"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4408:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4450:38:20","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4471:7:20"},{"name":"mlength","nodeType":"YulIdentifier","src":"4480:7:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4467:3:20"},"nodeType":"YulFunctionCall","src":"4467:21:20"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4454:9:20","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4826:1515:20","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"5112:14:20"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5430:5:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5653:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"5665:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5649:3:20"},"nodeType":"YulFunctionCall","src":"5649:21:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5643:5:20"},"nodeType":"YulFunctionCall","src":"5643:28:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5782:5:20","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5793:2:20","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5797:7:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5789:3:20"},"nodeType":"YulFunctionCall","src":"5789:16:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5778:3:20"},"nodeType":"YulFunctionCall","src":"5778:28:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5534:3:20"},"nodeType":"YulFunctionCall","src":"5534:307:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6033:5:20","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6044:2:20","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"6048:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6040:3:20"},"nodeType":"YulFunctionCall","src":"6040:18:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"6029:3:20"},"nodeType":"YulFunctionCall","src":"6029:30:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5496:3:20"},"nodeType":"YulFunctionCall","src":"5496:594:20"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6246:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"6255:1:20","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6242:3:20"},"nodeType":"YulFunctionCall","src":"6242:15:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5462:3:20"},"nodeType":"YulFunctionCall","src":"5462:822:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5258:3:20"},"nodeType":"YulFunctionCall","src":"5258:1049:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5083:6:20"},"nodeType":"YulFunctionCall","src":"5083:1243:20"},"nodeType":"YulExpressionStatement","src":"5083:1243:20"}]},"nodeType":"YulCase","src":"4819:1522:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4824:1:20","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6362:1764:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6575:3:20","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6580:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6568:6:20"},"nodeType":"YulFunctionCall","src":"6568:27:20"},"nodeType":"YulExpressionStatement","src":"6568:27:20"},{"nodeType":"YulVariableDeclaration","src":"6613:53:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6637:3:20","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6642:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6627:9:20"},"nodeType":"YulFunctionCall","src":"6627:20:20"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6653:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"6662:2:20","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6649:3:20"},"nodeType":"YulFunctionCall","src":"6649:16:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6623:3:20"},"nodeType":"YulFunctionCall","src":"6623:43:20"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6617:2:20","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6729:14:20"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6753:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6764:1:20","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6749:3:20"},"nodeType":"YulFunctionCall","src":"6749:17:20"},{"kind":"number","nodeType":"YulLiteral","src":"6768:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6745:3:20"},"nodeType":"YulFunctionCall","src":"6745:25:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6722:6:20"},"nodeType":"YulFunctionCall","src":"6722:49:20"},"nodeType":"YulExpressionStatement","src":"6722:49:20"},{"nodeType":"YulVariableDeclaration","src":"7370:30:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7388:2:20","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7392:7:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7384:3:20"},"nodeType":"YulFunctionCall","src":"7384:16:20"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7374:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7418:33:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7432:10:20"},{"name":"submod","nodeType":"YulIdentifier","src":"7444:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7428:3:20"},"nodeType":"YulFunctionCall","src":"7428:23:20"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7422:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7469:35:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7484:10:20"},{"name":"mlength","nodeType":"YulIdentifier","src":"7496:7:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7480:3:20"},"nodeType":"YulFunctionCall","src":"7480:24:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7473:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7522:38:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7542:5:20","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7549:6:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7538:3:20"},"nodeType":"YulFunctionCall","src":"7538:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"7558:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7534:3:20"},"nodeType":"YulFunctionCall","src":"7534:26:20"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7526:4:20","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7587:2:20"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7599:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"7606:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7595:3:20"},"nodeType":"YulFunctionCall","src":"7595:78:20"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7685:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7679:5:20"},"nodeType":"YulFunctionCall","src":"7679:9:20"},{"name":"mask","nodeType":"YulIdentifier","src":"7690:4:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7675:3:20"},"nodeType":"YulFunctionCall","src":"7675:20:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7591:3:20"},"nodeType":"YulFunctionCall","src":"7591:105:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7580:6:20"},"nodeType":"YulFunctionCall","src":"7580:117:20"},"nodeType":"YulExpressionStatement","src":"7580:117:20"},{"body":{"nodeType":"YulBlock","src":"7933:63:20","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7963:2:20"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7973:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7967:5:20"},"nodeType":"YulFunctionCall","src":"7967:9:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7956:6:20"},"nodeType":"YulFunctionCall","src":"7956:21:20"},"nodeType":"YulExpressionStatement","src":"7956:21:20"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7824:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"7828:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7821:2:20"},"nodeType":"YulFunctionCall","src":"7821:11:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7833:99:20","statements":[{"nodeType":"YulAssignment","src":"7856:16:20","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7866:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"7870:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7862:3:20"},"nodeType":"YulFunctionCall","src":"7862:10:20"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7856:2:20"}]},{"nodeType":"YulAssignment","src":"7894:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7904:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"7908:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7900:3:20"},"nodeType":"YulFunctionCall","src":"7900:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7894:2:20"}]}]},"pre":{"nodeType":"YulBlock","src":"7721:99:20","statements":[{"nodeType":"YulAssignment","src":"7744:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7754:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"7758:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7750:3:20"},"nodeType":"YulFunctionCall","src":"7750:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7744:2:20"}]},{"nodeType":"YulAssignment","src":"7785:16:20","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7795:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"7799:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:20"},"nodeType":"YulFunctionCall","src":"7791:10:20"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7785:2:20"}]}]},"src":"7717:279:20"},{"nodeType":"YulAssignment","src":"8016:32:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8028:5:20","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8039:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"8043:3:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8035:3:20"},"nodeType":"YulFunctionCall","src":"8035:12:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8024:3:20"},"nodeType":"YulFunctionCall","src":"8024:24:20"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"8016:4:20"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8075:2:20"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8093:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8087:5:20"},"nodeType":"YulFunctionCall","src":"8087:9:20"},{"name":"mask","nodeType":"YulIdentifier","src":"8098:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8083:3:20"},"nodeType":"YulFunctionCall","src":"8083:20:20"},{"name":"mask","nodeType":"YulIdentifier","src":"8105:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8079:3:20"},"nodeType":"YulFunctionCall","src":"8079:31:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8068:6:20"},"nodeType":"YulFunctionCall","src":"8068:43:20"},"nodeType":"YulExpressionStatement","src":"8068:43:20"}]},"nodeType":"YulCase","src":"6355:1771:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6360:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8148:1297:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8247:3:20","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8252:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8240:6:20"},"nodeType":"YulFunctionCall","src":"8240:27:20"},"nodeType":"YulExpressionStatement","src":"8240:27:20"},{"nodeType":"YulVariableDeclaration","src":"8362:53:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8386:3:20","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8391:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8376:9:20"},"nodeType":"YulFunctionCall","src":"8376:20:20"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8402:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"8411:2:20","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8398:3:20"},"nodeType":"YulFunctionCall","src":"8398:16:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8372:3:20"},"nodeType":"YulFunctionCall","src":"8372:43:20"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8366:2:20","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8478:14:20"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8502:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8513:1:20","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8498:3:20"},"nodeType":"YulFunctionCall","src":"8498:17:20"},{"kind":"number","nodeType":"YulLiteral","src":"8517:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8494:3:20"},"nodeType":"YulFunctionCall","src":"8494:25:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8471:6:20"},"nodeType":"YulFunctionCall","src":"8471:49:20"},"nodeType":"YulExpressionStatement","src":"8471:49:20"},{"nodeType":"YulVariableDeclaration","src":"8651:34:20","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8673:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"8682:2:20","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8669:3:20"},"nodeType":"YulFunctionCall","src":"8669:16:20"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8655:10:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8703:34:20","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8725:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"8734:2:20","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8721:3:20"},"nodeType":"YulFunctionCall","src":"8721:16:20"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8707:10:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8755:33:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8773:2:20","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8777:10:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8769:3:20"},"nodeType":"YulFunctionCall","src":"8769:19:20"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8759:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8806:33:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8820:10:20"},{"name":"submod","nodeType":"YulIdentifier","src":"8832:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8816:3:20"},"nodeType":"YulFunctionCall","src":"8816:23:20"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8810:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8857:35:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8872:10:20"},{"name":"mlength","nodeType":"YulIdentifier","src":"8884:7:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8868:3:20"},"nodeType":"YulFunctionCall","src":"8868:24:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8861:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8910:38:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8930:5:20","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8937:6:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8926:3:20"},"nodeType":"YulFunctionCall","src":"8926:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"8946:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8922:3:20"},"nodeType":"YulFunctionCall","src":"8922:26:20"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8914:4:20","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8975:2:20"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8989:2:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8983:5:20"},"nodeType":"YulFunctionCall","src":"8983:9:20"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9004:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8998:5:20"},"nodeType":"YulFunctionCall","src":"8998:9:20"},{"name":"mask","nodeType":"YulIdentifier","src":"9009:4:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8994:3:20"},"nodeType":"YulFunctionCall","src":"8994:20:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8979:3:20"},"nodeType":"YulFunctionCall","src":"8979:36:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8968:6:20"},"nodeType":"YulFunctionCall","src":"8968:48:20"},"nodeType":"YulExpressionStatement","src":"8968:48:20"},{"body":{"nodeType":"YulBlock","src":"9252:63:20","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9282:2:20"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9292:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9286:5:20"},"nodeType":"YulFunctionCall","src":"9286:9:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9275:6:20"},"nodeType":"YulFunctionCall","src":"9275:21:20"},"nodeType":"YulExpressionStatement","src":"9275:21:20"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9143:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"9147:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9140:2:20"},"nodeType":"YulFunctionCall","src":"9140:11:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9152:99:20","statements":[{"nodeType":"YulAssignment","src":"9175:16:20","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9185:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"9189:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9181:3:20"},"nodeType":"YulFunctionCall","src":"9181:10:20"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9175:2:20"}]},{"nodeType":"YulAssignment","src":"9213:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9223:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"9227:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9219:3:20"},"nodeType":"YulFunctionCall","src":"9219:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9213:2:20"}]}]},"pre":{"nodeType":"YulBlock","src":"9040:99:20","statements":[{"nodeType":"YulAssignment","src":"9063:16:20","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9073:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"9077:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9069:3:20"},"nodeType":"YulFunctionCall","src":"9069:10:20"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9063:2:20"}]},{"nodeType":"YulAssignment","src":"9101:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9111:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"9115:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9107:3:20"},"nodeType":"YulFunctionCall","src":"9107:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9101:2:20"}]}]},"src":"9036:279:20"},{"nodeType":"YulAssignment","src":"9335:32:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9347:5:20","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9358:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"9362:3:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9354:3:20"},"nodeType":"YulFunctionCall","src":"9354:12:20"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9343:3:20"},"nodeType":"YulFunctionCall","src":"9343:24:20"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9335:4:20"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9394:2:20"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9412:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9406:5:20"},"nodeType":"YulFunctionCall","src":"9406:9:20"},{"name":"mask","nodeType":"YulIdentifier","src":"9417:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9402:3:20"},"nodeType":"YulFunctionCall","src":"9402:20:20"},{"name":"mask","nodeType":"YulIdentifier","src":"9424:4:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9398:3:20"},"nodeType":"YulFunctionCall","src":"9398:31:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9387:6:20"},"nodeType":"YulFunctionCall","src":"9387:43:20"},"nodeType":"YulExpressionStatement","src":"9387:43:20"}]},"nodeType":"YulCase","src":"8140:1305:20","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4773:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"4782:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4770:2:20"},"nodeType":"YulFunctionCall","src":"4770:15:20"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4790:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4801:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4787:2:20"},"nodeType":"YulFunctionCall","src":"4787:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4766:3:20"},"nodeType":"YulFunctionCall","src":"4766:39:20"},"nodeType":"YulSwitch","src":"4759:4686:20"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4167,"isOffset":false,"isSlot":false,"src":"4425:10:20","valueSize":1},{"declaration":4167,"isOffset":false,"isSlot":false,"src":"5653:10:20","valueSize":1},{"declaration":4167,"isOffset":false,"isSlot":false,"src":"7432:10:20","valueSize":1},{"declaration":4167,"isOffset":false,"isSlot":false,"src":"7484:10:20","valueSize":1},{"declaration":4167,"isOffset":false,"isSlot":false,"src":"8820:10:20","valueSize":1},{"declaration":4167,"isOffset":false,"isSlot":false,"src":"8872:10:20","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":true,"src":"3798:14:20","suffix":"slot","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":true,"src":"5112:14:20","suffix":"slot","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":true,"src":"6580:14:20","suffix":"slot","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":true,"src":"6729:14:20","suffix":"slot","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":true,"src":"8252:14:20","suffix":"slot","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":true,"src":"8478:14:20","suffix":"slot","valueSize":1}],"id":4170,"nodeType":"InlineAssembly","src":"3543:5913:20"}]},"id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3459:13:20","nodeType":"FunctionDefinition","parameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"_preBytes","nameLocation":"3487:9:20","nodeType":"VariableDeclaration","scope":4172,"src":"3473:23:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4164,"name":"bytes","nodeType":"ElementaryTypeName","src":"3473:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"_postBytes","nameLocation":"3511:10:20","nodeType":"VariableDeclaration","scope":4172,"src":"3498:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4166,"name":"bytes","nodeType":"ElementaryTypeName","src":"3498:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3472:50:20"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[],"src":"3532:0:20"},"scope":4478,"src":"3450:6013:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4208,"nodeType":"Block","src":"9605:2699:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"9624:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9634:2:20","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9624:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4187,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"9640:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9624:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9649:16:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":4183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9616:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9616:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4191,"nodeType":"ExpressionStatement","src":"9616:50:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4193,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"9685:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9692:6:20","memberName":"length","nodeType":"MemberAccess","src":"9685:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"9702:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4196,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"9711:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9702:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9685:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9720:19:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":4192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9677:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9677:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4201,"nodeType":"ExpressionStatement","src":"9677:63:20"},{"assignments":[4203],"declarations":[{"constant":false,"id":4203,"mutability":"mutable","name":"tempBytes","nameLocation":"9766:9:20","nodeType":"VariableDeclaration","scope":4208,"src":"9753:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4202,"name":"bytes","nodeType":"ElementaryTypeName","src":"9753:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4204,"nodeType":"VariableDeclarationStatement","src":"9753:22:20"},{"AST":{"nodeType":"YulBlock","src":"9797:2471:20","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9855:1998:20","statements":[{"nodeType":"YulAssignment","src":"10014:24:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10033:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10027:5:20"},"nodeType":"YulFunctionCall","src":"10027:11:20"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10014:9:20"}]},{"nodeType":"YulVariableDeclaration","src":"10672:33:20","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10693:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"10702:2:20","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10689:3:20"},"nodeType":"YulFunctionCall","src":"10689:16:20"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10676:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11032:70:20","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11050:9:20"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11061:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11046:3:20"},"nodeType":"YulFunctionCall","src":"11046:25:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11077:4:20","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11090:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11083:6:20"},"nodeType":"YulFunctionCall","src":"11083:17:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11073:3:20"},"nodeType":"YulFunctionCall","src":"11073:28:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11042:3:20"},"nodeType":"YulFunctionCall","src":"11042:60:20"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"11036:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11120:27:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11135:2:20"},{"name":"_length","nodeType":"YulIdentifier","src":"11139:7:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11131:3:20"},"nodeType":"YulFunctionCall","src":"11131:16:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"11124:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11538:63:20","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11568:2:20"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11578:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11572:5:20"},"nodeType":"YulFunctionCall","src":"11572:9:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11561:6:20"},"nodeType":"YulFunctionCall","src":"11561:21:20"},"nodeType":"YulExpressionStatement","src":"11561:21:20"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11426:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"11430:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11423:2:20"},"nodeType":"YulFunctionCall","src":"11423:11:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11435:102:20","statements":[{"nodeType":"YulAssignment","src":"11458:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11468:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"11472:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11464:3:20"},"nodeType":"YulFunctionCall","src":"11464:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11458:2:20"}]},{"nodeType":"YulAssignment","src":"11499:19:20","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11509:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"11513:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11505:3:20"},"nodeType":"YulFunctionCall","src":"11505:13:20"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11499:2:20"}]}]},"pre":{"nodeType":"YulBlock","src":"11171:251:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11323:80:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11345:6:20"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11353:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11341:3:20"},"nodeType":"YulFunctionCall","src":"11341:22:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11369:4:20","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11382:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11375:6:20"},"nodeType":"YulFunctionCall","src":"11375:17:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11365:3:20"},"nodeType":"YulFunctionCall","src":"11365:28:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11337:3:20"},"nodeType":"YulFunctionCall","src":"11337:57:20"},{"name":"_start","nodeType":"YulIdentifier","src":"11396:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:20"},"nodeType":"YulFunctionCall","src":"11333:70:20"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11327:2:20","type":""}]}]},"src":"11167:434:20"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11628:9:20"},{"name":"_length","nodeType":"YulIdentifier","src":"11639:7:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11621:6:20"},"nodeType":"YulFunctionCall","src":"11621:26:20"},"nodeType":"YulExpressionStatement","src":"11621:26:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11806:4:20","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11820:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"11824:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:20"},"nodeType":"YulFunctionCall","src":"11816:11:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11833:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11829:3:20"},"nodeType":"YulFunctionCall","src":"11829:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11812:3:20"},"nodeType":"YulFunctionCall","src":"11812:25:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11799:6:20"},"nodeType":"YulFunctionCall","src":"11799:39:20"},"nodeType":"YulExpressionStatement","src":"11799:39:20"}]},"nodeType":"YulCase","src":"9848:2005:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9853:1:20","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11959:298:20","statements":[{"nodeType":"YulAssignment","src":"11978:24:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11997:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11991:5:20"},"nodeType":"YulFunctionCall","src":"11991:11:20"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11978:9:20"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12175:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12186:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12168:6:20"},"nodeType":"YulFunctionCall","src":"12168:20:20"},"nodeType":"YulExpressionStatement","src":"12168:20:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12215:4:20","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12225:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12236:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12221:3:20"},"nodeType":"YulFunctionCall","src":"12221:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12208:6:20"},"nodeType":"YulFunctionCall","src":"12208:34:20"},"nodeType":"YulExpressionStatement","src":"12208:34:20"}]},"nodeType":"YulCase","src":"11951:306:20","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9826:7:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9819:6:20"},"nodeType":"YulFunctionCall","src":"9819:15:20"},"nodeType":"YulSwitch","src":"9812:2445:20"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4174,"isOffset":false,"isSlot":false,"src":"11345:6:20","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"10693:7:20","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"11139:7:20","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"11639:7:20","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"9826:7:20","valueSize":1},{"declaration":4176,"isOffset":false,"isSlot":false,"src":"11396:6:20","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"10014:9:20","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"11050:9:20","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"11628:9:20","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"11978:9:20","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"12175:9:20","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"12225:9:20","valueSize":1}],"id":4205,"nodeType":"InlineAssembly","src":"9788:2480:20"},{"expression":{"id":4206,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"12287:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4182,"id":4207,"nodeType":"Return","src":"12280:16:20"}]},"id":4209,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9480:5:20","nodeType":"FunctionDefinition","parameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"_bytes","nameLocation":"9509:6:20","nodeType":"VariableDeclaration","scope":4209,"src":"9496:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4173,"name":"bytes","nodeType":"ElementaryTypeName","src":"9496:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"_start","nameLocation":"9531:6:20","nodeType":"VariableDeclaration","scope":4209,"src":"9526:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint","nodeType":"ElementaryTypeName","src":"9526:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"_length","nameLocation":"9553:7:20","nodeType":"VariableDeclaration","scope":4209,"src":"9548:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint","nodeType":"ElementaryTypeName","src":"9548:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9485:82:20"},"returnParameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4209,"src":"9591:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4180,"name":"bytes","nodeType":"ElementaryTypeName","src":"9591:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9590:14:20"},"scope":4478,"src":"9471:2833:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4234,"nodeType":"Block","src":"12397:275:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4219,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"12416:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12423:6:20","memberName":"length","nodeType":"MemberAccess","src":"12416:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4221,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"12433:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12442:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12433:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12416:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12446:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":4218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12408:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4227,"nodeType":"ExpressionStatement","src":"12408:62:20"},{"assignments":[4229],"declarations":[{"constant":false,"id":4229,"mutability":"mutable","name":"tempAddress","nameLocation":"12489:11:20","nodeType":"VariableDeclaration","scope":4234,"src":"12481:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4228,"name":"address","nodeType":"ElementaryTypeName","src":"12481:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4230,"nodeType":"VariableDeclarationStatement","src":"12481:19:20"},{"AST":{"nodeType":"YulBlock","src":"12522:112:20","statements":[{"nodeType":"YulAssignment","src":"12537:86:20","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12570:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12578:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12566:3:20"},"nodeType":"YulFunctionCall","src":"12566:17:20"},{"name":"_start","nodeType":"YulIdentifier","src":"12585:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12562:3:20"},"nodeType":"YulFunctionCall","src":"12562:30:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12556:5:20"},"nodeType":"YulFunctionCall","src":"12556:37:20"},{"kind":"number","nodeType":"YulLiteral","src":"12595:27:20","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12552:3:20"},"nodeType":"YulFunctionCall","src":"12552:71:20"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12537:11:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4211,"isOffset":false,"isSlot":false,"src":"12570:6:20","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"12585:6:20","valueSize":1},{"declaration":4229,"isOffset":false,"isSlot":false,"src":"12537:11:20","valueSize":1}],"id":4231,"nodeType":"InlineAssembly","src":"12513:121:20"},{"expression":{"id":4232,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"12653:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4217,"id":4233,"nodeType":"Return","src":"12646:18:20"}]},"id":4235,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"12321:9:20","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"_bytes","nameLocation":"12344:6:20","nodeType":"VariableDeclaration","scope":4235,"src":"12331:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4210,"name":"bytes","nodeType":"ElementaryTypeName","src":"12331:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"_start","nameLocation":"12357:6:20","nodeType":"VariableDeclaration","scope":4235,"src":"12352:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint","nodeType":"ElementaryTypeName","src":"12352:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12330:34:20"},"returnParameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4235,"src":"12388:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"12388:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12387:9:20"},"scope":4478,"src":"12312:360:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"12761:226:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4245,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"12780:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12787:6:20","memberName":"length","nodeType":"MemberAccess","src":"12780:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"12797:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12806:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12797:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12780:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12809:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":4244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12772:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12772:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4253,"nodeType":"ExpressionStatement","src":"12772:59:20"},{"assignments":[4255],"declarations":[{"constant":false,"id":4255,"mutability":"mutable","name":"tempUint","nameLocation":"12848:8:20","nodeType":"VariableDeclaration","scope":4260,"src":"12842:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4254,"name":"uint8","nodeType":"ElementaryTypeName","src":"12842:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4256,"nodeType":"VariableDeclarationStatement","src":"12842:14:20"},{"AST":{"nodeType":"YulBlock","src":"12878:74:20","statements":[{"nodeType":"YulAssignment","src":"12893:48:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12919:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12927:3:20","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12915:3:20"},"nodeType":"YulFunctionCall","src":"12915:16:20"},{"name":"_start","nodeType":"YulIdentifier","src":"12933:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12911:3:20"},"nodeType":"YulFunctionCall","src":"12911:29:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12905:5:20"},"nodeType":"YulFunctionCall","src":"12905:36:20"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12893:8:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4237,"isOffset":false,"isSlot":false,"src":"12919:6:20","valueSize":1},{"declaration":4239,"isOffset":false,"isSlot":false,"src":"12933:6:20","valueSize":1},{"declaration":4255,"isOffset":false,"isSlot":false,"src":"12893:8:20","valueSize":1}],"id":4257,"nodeType":"InlineAssembly","src":"12869:83:20"},{"expression":{"id":4258,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"12971:8:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4243,"id":4259,"nodeType":"Return","src":"12964:15:20"}]},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"12689:7:20","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"_bytes","nameLocation":"12710:6:20","nodeType":"VariableDeclaration","scope":4261,"src":"12697:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4236,"name":"bytes","nodeType":"ElementaryTypeName","src":"12697:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"_start","nameLocation":"12723:6:20","nodeType":"VariableDeclaration","scope":4261,"src":"12718:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint","nodeType":"ElementaryTypeName","src":"12718:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12696:34:20"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"12754:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4241,"name":"uint8","nodeType":"ElementaryTypeName","src":"12754:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12753:7:20"},"scope":4478,"src":"12680:307:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4286,"nodeType":"Block","src":"13078:228:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4271,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"13097:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13104:6:20","memberName":"length","nodeType":"MemberAccess","src":"13097:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"13114:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13123:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13114:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13097:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13126:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":4270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13089:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13089:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4279,"nodeType":"ExpressionStatement","src":"13089:60:20"},{"assignments":[4281],"declarations":[{"constant":false,"id":4281,"mutability":"mutable","name":"tempUint","nameLocation":"13167:8:20","nodeType":"VariableDeclaration","scope":4286,"src":"13160:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4280,"name":"uint16","nodeType":"ElementaryTypeName","src":"13160:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":4282,"nodeType":"VariableDeclarationStatement","src":"13160:15:20"},{"AST":{"nodeType":"YulBlock","src":"13197:74:20","statements":[{"nodeType":"YulAssignment","src":"13212:48:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13238:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13246:3:20","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13234:3:20"},"nodeType":"YulFunctionCall","src":"13234:16:20"},{"name":"_start","nodeType":"YulIdentifier","src":"13252:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13230:3:20"},"nodeType":"YulFunctionCall","src":"13230:29:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13224:5:20"},"nodeType":"YulFunctionCall","src":"13224:36:20"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13212:8:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4263,"isOffset":false,"isSlot":false,"src":"13238:6:20","valueSize":1},{"declaration":4265,"isOffset":false,"isSlot":false,"src":"13252:6:20","valueSize":1},{"declaration":4281,"isOffset":false,"isSlot":false,"src":"13212:8:20","valueSize":1}],"id":4283,"nodeType":"InlineAssembly","src":"13188:83:20"},{"expression":{"id":4284,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"13290:8:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4269,"id":4285,"nodeType":"Return","src":"13283:15:20"}]},"id":4287,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"13004:8:20","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"_bytes","nameLocation":"13026:6:20","nodeType":"VariableDeclaration","scope":4287,"src":"13013:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4262,"name":"bytes","nodeType":"ElementaryTypeName","src":"13013:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"_start","nameLocation":"13039:6:20","nodeType":"VariableDeclaration","scope":4287,"src":"13034:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint","nodeType":"ElementaryTypeName","src":"13034:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13012:34:20"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4287,"src":"13070:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4267,"name":"uint16","nodeType":"ElementaryTypeName","src":"13070:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13069:8:20"},"scope":4478,"src":"12995:311:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4312,"nodeType":"Block","src":"13397:228:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4297,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"13416:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13423:6:20","memberName":"length","nodeType":"MemberAccess","src":"13416:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"13433:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13442:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13433:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13416:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13445:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":4296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13408:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13408:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4305,"nodeType":"ExpressionStatement","src":"13408:60:20"},{"assignments":[4307],"declarations":[{"constant":false,"id":4307,"mutability":"mutable","name":"tempUint","nameLocation":"13486:8:20","nodeType":"VariableDeclaration","scope":4312,"src":"13479:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4306,"name":"uint32","nodeType":"ElementaryTypeName","src":"13479:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4308,"nodeType":"VariableDeclarationStatement","src":"13479:15:20"},{"AST":{"nodeType":"YulBlock","src":"13516:74:20","statements":[{"nodeType":"YulAssignment","src":"13531:48:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13557:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13565:3:20","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13553:3:20"},"nodeType":"YulFunctionCall","src":"13553:16:20"},{"name":"_start","nodeType":"YulIdentifier","src":"13571:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13549:3:20"},"nodeType":"YulFunctionCall","src":"13549:29:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13543:5:20"},"nodeType":"YulFunctionCall","src":"13543:36:20"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13531:8:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4289,"isOffset":false,"isSlot":false,"src":"13557:6:20","valueSize":1},{"declaration":4291,"isOffset":false,"isSlot":false,"src":"13571:6:20","valueSize":1},{"declaration":4307,"isOffset":false,"isSlot":false,"src":"13531:8:20","valueSize":1}],"id":4309,"nodeType":"InlineAssembly","src":"13507:83:20"},{"expression":{"id":4310,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"13609:8:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4295,"id":4311,"nodeType":"Return","src":"13602:15:20"}]},"id":4313,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"13323:8:20","nodeType":"FunctionDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"_bytes","nameLocation":"13345:6:20","nodeType":"VariableDeclaration","scope":4313,"src":"13332:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4288,"name":"bytes","nodeType":"ElementaryTypeName","src":"13332:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4291,"mutability":"mutable","name":"_start","nameLocation":"13358:6:20","nodeType":"VariableDeclaration","scope":4313,"src":"13353:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint","nodeType":"ElementaryTypeName","src":"13353:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13331:34:20"},"returnParameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4313,"src":"13389:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4293,"name":"uint32","nodeType":"ElementaryTypeName","src":"13389:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13388:8:20"},"scope":4478,"src":"13314:311:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"13716:228:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4323,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"13735:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13742:6:20","memberName":"length","nodeType":"MemberAccess","src":"13735:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4325,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"13752:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13761:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13752:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13735:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13764:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":4322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13727:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13727:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4331,"nodeType":"ExpressionStatement","src":"13727:60:20"},{"assignments":[4333],"declarations":[{"constant":false,"id":4333,"mutability":"mutable","name":"tempUint","nameLocation":"13805:8:20","nodeType":"VariableDeclaration","scope":4338,"src":"13798:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4332,"name":"uint64","nodeType":"ElementaryTypeName","src":"13798:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4334,"nodeType":"VariableDeclarationStatement","src":"13798:15:20"},{"AST":{"nodeType":"YulBlock","src":"13835:74:20","statements":[{"nodeType":"YulAssignment","src":"13850:48:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13876:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13884:3:20","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13872:3:20"},"nodeType":"YulFunctionCall","src":"13872:16:20"},{"name":"_start","nodeType":"YulIdentifier","src":"13890:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13868:3:20"},"nodeType":"YulFunctionCall","src":"13868:29:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13862:5:20"},"nodeType":"YulFunctionCall","src":"13862:36:20"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13850:8:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4315,"isOffset":false,"isSlot":false,"src":"13876:6:20","valueSize":1},{"declaration":4317,"isOffset":false,"isSlot":false,"src":"13890:6:20","valueSize":1},{"declaration":4333,"isOffset":false,"isSlot":false,"src":"13850:8:20","valueSize":1}],"id":4335,"nodeType":"InlineAssembly","src":"13826:83:20"},{"expression":{"id":4336,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"13928:8:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4321,"id":4337,"nodeType":"Return","src":"13921:15:20"}]},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13642:8:20","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"_bytes","nameLocation":"13664:6:20","nodeType":"VariableDeclaration","scope":4339,"src":"13651:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4314,"name":"bytes","nodeType":"ElementaryTypeName","src":"13651:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"_start","nameLocation":"13677:6:20","nodeType":"VariableDeclaration","scope":4339,"src":"13672:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint","nodeType":"ElementaryTypeName","src":"13672:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13650:34:20"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"13708:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4319,"name":"uint64","nodeType":"ElementaryTypeName","src":"13708:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13707:8:20"},"scope":4478,"src":"13633:311:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4364,"nodeType":"Block","src":"14035:229:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4349,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"14054:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14061:6:20","memberName":"length","nodeType":"MemberAccess","src":"14054:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"14071:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14080:2:20","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"14071:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14054:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14084:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":4348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14046:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14046:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4357,"nodeType":"ExpressionStatement","src":"14046:61:20"},{"assignments":[4359],"declarations":[{"constant":false,"id":4359,"mutability":"mutable","name":"tempUint","nameLocation":"14125:8:20","nodeType":"VariableDeclaration","scope":4364,"src":"14118:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4358,"name":"uint96","nodeType":"ElementaryTypeName","src":"14118:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4360,"nodeType":"VariableDeclarationStatement","src":"14118:15:20"},{"AST":{"nodeType":"YulBlock","src":"14155:74:20","statements":[{"nodeType":"YulAssignment","src":"14170:48:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14196:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14204:3:20","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14192:3:20"},"nodeType":"YulFunctionCall","src":"14192:16:20"},{"name":"_start","nodeType":"YulIdentifier","src":"14210:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14188:3:20"},"nodeType":"YulFunctionCall","src":"14188:29:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14182:5:20"},"nodeType":"YulFunctionCall","src":"14182:36:20"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14170:8:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4341,"isOffset":false,"isSlot":false,"src":"14196:6:20","valueSize":1},{"declaration":4343,"isOffset":false,"isSlot":false,"src":"14210:6:20","valueSize":1},{"declaration":4359,"isOffset":false,"isSlot":false,"src":"14170:8:20","valueSize":1}],"id":4361,"nodeType":"InlineAssembly","src":"14146:83:20"},{"expression":{"id":4362,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"14248:8:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4347,"id":4363,"nodeType":"Return","src":"14241:15:20"}]},"id":4365,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13961:8:20","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"_bytes","nameLocation":"13983:6:20","nodeType":"VariableDeclaration","scope":4365,"src":"13970:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4340,"name":"bytes","nodeType":"ElementaryTypeName","src":"13970:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"_start","nameLocation":"13996:6:20","nodeType":"VariableDeclaration","scope":4365,"src":"13991:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint","nodeType":"ElementaryTypeName","src":"13991:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13969:34:20"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4365,"src":"14027:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4345,"name":"uint96","nodeType":"ElementaryTypeName","src":"14027:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14026:8:20"},"scope":4478,"src":"13952:312:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4390,"nodeType":"Block","src":"14357:232:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4375,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"14376:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14383:6:20","memberName":"length","nodeType":"MemberAccess","src":"14376:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"14393:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14402:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14393:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14376:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14406:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":4374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14368:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14368:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4383,"nodeType":"ExpressionStatement","src":"14368:62:20"},{"assignments":[4385],"declarations":[{"constant":false,"id":4385,"mutability":"mutable","name":"tempUint","nameLocation":"14449:8:20","nodeType":"VariableDeclaration","scope":4390,"src":"14441:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4384,"name":"uint128","nodeType":"ElementaryTypeName","src":"14441:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4386,"nodeType":"VariableDeclarationStatement","src":"14441:16:20"},{"AST":{"nodeType":"YulBlock","src":"14479:75:20","statements":[{"nodeType":"YulAssignment","src":"14494:49:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14520:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14528:4:20","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14516:3:20"},"nodeType":"YulFunctionCall","src":"14516:17:20"},{"name":"_start","nodeType":"YulIdentifier","src":"14535:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14512:3:20"},"nodeType":"YulFunctionCall","src":"14512:30:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14506:5:20"},"nodeType":"YulFunctionCall","src":"14506:37:20"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14494:8:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4367,"isOffset":false,"isSlot":false,"src":"14520:6:20","valueSize":1},{"declaration":4369,"isOffset":false,"isSlot":false,"src":"14535:6:20","valueSize":1},{"declaration":4385,"isOffset":false,"isSlot":false,"src":"14494:8:20","valueSize":1}],"id":4387,"nodeType":"InlineAssembly","src":"14470:84:20"},{"expression":{"id":4388,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"14573:8:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4373,"id":4389,"nodeType":"Return","src":"14566:15:20"}]},"id":4391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"14281:9:20","nodeType":"FunctionDefinition","parameters":{"id":4370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"_bytes","nameLocation":"14304:6:20","nodeType":"VariableDeclaration","scope":4391,"src":"14291:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4366,"name":"bytes","nodeType":"ElementaryTypeName","src":"14291:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4369,"mutability":"mutable","name":"_start","nameLocation":"14317:6:20","nodeType":"VariableDeclaration","scope":4391,"src":"14312:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint","nodeType":"ElementaryTypeName","src":"14312:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14290:34:20"},"returnParameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4391,"src":"14348:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4371,"name":"uint128","nodeType":"ElementaryTypeName","src":"14348:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14347:9:20"},"scope":4478,"src":"14272:317:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"14679:229:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4401,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"14698:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14705:6:20","memberName":"length","nodeType":"MemberAccess","src":"14698:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"14715:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14724:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14715:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14698:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14728:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":4400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14690:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14690:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4409,"nodeType":"ExpressionStatement","src":"14690:62:20"},{"assignments":[4411],"declarations":[{"constant":false,"id":4411,"mutability":"mutable","name":"tempUint","nameLocation":"14768:8:20","nodeType":"VariableDeclaration","scope":4416,"src":"14763:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint","nodeType":"ElementaryTypeName","src":"14763:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4412,"nodeType":"VariableDeclarationStatement","src":"14763:13:20"},{"AST":{"nodeType":"YulBlock","src":"14798:75:20","statements":[{"nodeType":"YulAssignment","src":"14813:49:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14839:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14847:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14835:3:20"},"nodeType":"YulFunctionCall","src":"14835:17:20"},{"name":"_start","nodeType":"YulIdentifier","src":"14854:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14831:3:20"},"nodeType":"YulFunctionCall","src":"14831:30:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14825:5:20"},"nodeType":"YulFunctionCall","src":"14825:37:20"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14813:8:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4393,"isOffset":false,"isSlot":false,"src":"14839:6:20","valueSize":1},{"declaration":4395,"isOffset":false,"isSlot":false,"src":"14854:6:20","valueSize":1},{"declaration":4411,"isOffset":false,"isSlot":false,"src":"14813:8:20","valueSize":1}],"id":4413,"nodeType":"InlineAssembly","src":"14789:84:20"},{"expression":{"id":4414,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"14892:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4399,"id":4415,"nodeType":"Return","src":"14885:15:20"}]},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"14606:9:20","nodeType":"FunctionDefinition","parameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"_bytes","nameLocation":"14629:6:20","nodeType":"VariableDeclaration","scope":4417,"src":"14616:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4392,"name":"bytes","nodeType":"ElementaryTypeName","src":"14616:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4395,"mutability":"mutable","name":"_start","nameLocation":"14642:6:20","nodeType":"VariableDeclaration","scope":4417,"src":"14637:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint","nodeType":"ElementaryTypeName","src":"14637:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14615:34:20"},"returnParameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"14673:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint","nodeType":"ElementaryTypeName","src":"14673:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14672:6:20"},"scope":4478,"src":"14597:311:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4442,"nodeType":"Block","src":"15001:241:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4427,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"15020:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15027:6:20","memberName":"length","nodeType":"MemberAccess","src":"15020:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"15037:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15046:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"15037:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15020:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15050:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":4426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15012:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15012:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4435,"nodeType":"ExpressionStatement","src":"15012:62:20"},{"assignments":[4437],"declarations":[{"constant":false,"id":4437,"mutability":"mutable","name":"tempBytes32","nameLocation":"15093:11:20","nodeType":"VariableDeclaration","scope":4442,"src":"15085:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15085:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4438,"nodeType":"VariableDeclarationStatement","src":"15085:19:20"},{"AST":{"nodeType":"YulBlock","src":"15126:78:20","statements":[{"nodeType":"YulAssignment","src":"15141:52:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"15170:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"15178:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15166:3:20"},"nodeType":"YulFunctionCall","src":"15166:17:20"},{"name":"_start","nodeType":"YulIdentifier","src":"15185:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15162:3:20"},"nodeType":"YulFunctionCall","src":"15162:30:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15156:5:20"},"nodeType":"YulFunctionCall","src":"15156:37:20"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"15141:11:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4419,"isOffset":false,"isSlot":false,"src":"15170:6:20","valueSize":1},{"declaration":4421,"isOffset":false,"isSlot":false,"src":"15185:6:20","valueSize":1},{"declaration":4437,"isOffset":false,"isSlot":false,"src":"15141:11:20","valueSize":1}],"id":4439,"nodeType":"InlineAssembly","src":"15117:87:20"},{"expression":{"id":4440,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"15223:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4425,"id":4441,"nodeType":"Return","src":"15216:18:20"}]},"id":4443,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14925:9:20","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"_bytes","nameLocation":"14948:6:20","nodeType":"VariableDeclaration","scope":4443,"src":"14935:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4418,"name":"bytes","nodeType":"ElementaryTypeName","src":"14935:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"_start","nameLocation":"14961:6:20","nodeType":"VariableDeclaration","scope":4443,"src":"14956:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint","nodeType":"ElementaryTypeName","src":"14956:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14934:34:20"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"14992:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14992:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14991:9:20"},"scope":4478,"src":"14916:326:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4459,"nodeType":"Block","src":"15343:1372:20","statements":[{"assignments":[4453],"declarations":[{"constant":false,"id":4453,"mutability":"mutable","name":"success","nameLocation":"15359:7:20","nodeType":"VariableDeclaration","scope":4459,"src":"15354:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4452,"name":"bool","nodeType":"ElementaryTypeName","src":"15354:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4455,"initialValue":{"hexValue":"74727565","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15369:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"15354:19:20"},{"AST":{"nodeType":"YulBlock","src":"15395:1286:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15410:30:20","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15430:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15424:5:20"},"nodeType":"YulFunctionCall","src":"15424:16:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15414:6:20","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15577:994:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15811:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15821:1:20","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15815:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15842:30:20","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15856:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15867:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15852:3:20"},"nodeType":"YulFunctionCall","src":"15852:20:20"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15846:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15890:26:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15905:2:20"},{"name":"length","nodeType":"YulIdentifier","src":"15909:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15901:3:20"},"nodeType":"YulFunctionCall","src":"15901:15:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15894:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"16265:291:20","statements":[{"body":{"nodeType":"YulBlock","src":"16403:134:20","statements":[{"nodeType":"YulAssignment","src":"16469:12:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16480:1:20","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16469:7:20"}]},{"nodeType":"YulAssignment","src":"16507:7:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16513:1:20","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16507:2:20"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16386:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16380:5:20"},"nodeType":"YulFunctionCall","src":"16380:9:20"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16397:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16391:5:20"},"nodeType":"YulFunctionCall","src":"16391:9:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16377:2:20"},"nodeType":"YulFunctionCall","src":"16377:24:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16370:6:20"},"nodeType":"YulFunctionCall","src":"16370:32:20"},"nodeType":"YulIf","src":"16367:170:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16144:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"16148:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16141:2:20"},"nodeType":"YulFunctionCall","src":"16141:11:20"},{"name":"cb","nodeType":"YulIdentifier","src":"16154:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16137:3:20"},"nodeType":"YulFunctionCall","src":"16137:20:20"},{"kind":"number","nodeType":"YulLiteral","src":"16159:1:20","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16134:2:20"},"nodeType":"YulFunctionCall","src":"16134:27:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16162:102:20","statements":[{"nodeType":"YulAssignment","src":"16185:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16195:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"16199:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16191:3:20"},"nodeType":"YulFunctionCall","src":"16191:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"16185:2:20"}]},{"nodeType":"YulAssignment","src":"16226:19:20","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16236:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"16240:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16232:3:20"},"nodeType":"YulFunctionCall","src":"16232:13:20"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"16226:2:20"}]}]},"pre":{"nodeType":"YulBlock","src":"15940:193:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15963:31:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15977:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"15989:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15973:3:20"},"nodeType":"YulFunctionCall","src":"15973:21:20"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15967:2:20","type":""}]}]},"src":"15936:620:20"}]},"nodeType":"YulCase","src":"15570:1001:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15575:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16593:77:20","statements":[{"nodeType":"YulAssignment","src":"16643:12:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16654:1:20","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16643:7:20"}]}]},"nodeType":"YulCase","src":"16585:85:20","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15530:6:20"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15544:10:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15538:5:20"},"nodeType":"YulFunctionCall","src":"15538:17:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15527:2:20"},"nodeType":"YulFunctionCall","src":"15527:29:20"},"nodeType":"YulSwitch","src":"15520:1150:20"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4447,"isOffset":false,"isSlot":false,"src":"15544:10:20","valueSize":1},{"declaration":4447,"isOffset":false,"isSlot":false,"src":"15977:10:20","valueSize":1},{"declaration":4445,"isOffset":false,"isSlot":false,"src":"15430:9:20","valueSize":1},{"declaration":4445,"isOffset":false,"isSlot":false,"src":"15856:9:20","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"16469:7:20","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"16643:7:20","valueSize":1}],"id":4456,"nodeType":"InlineAssembly","src":"15386:1295:20"},{"expression":{"id":4457,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"16700:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4451,"id":4458,"nodeType":"Return","src":"16693:14:20"}]},"id":4460,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"15259:5:20","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"_preBytes","nameLocation":"15278:9:20","nodeType":"VariableDeclaration","scope":4460,"src":"15265:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4444,"name":"bytes","nodeType":"ElementaryTypeName","src":"15265:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"_postBytes","nameLocation":"15302:10:20","nodeType":"VariableDeclaration","scope":4460,"src":"15289:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4446,"name":"bytes","nodeType":"ElementaryTypeName","src":"15289:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15264:49:20"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4460,"src":"15337:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4449,"name":"bool","nodeType":"ElementaryTypeName","src":"15337:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15336:6:20"},"scope":4478,"src":"15250:1465:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4476,"nodeType":"Block","src":"16824:2650:20","statements":[{"assignments":[4470],"declarations":[{"constant":false,"id":4470,"mutability":"mutable","name":"success","nameLocation":"16840:7:20","nodeType":"VariableDeclaration","scope":4476,"src":"16835:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4469,"name":"bool","nodeType":"ElementaryTypeName","src":"16835:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4472,"initialValue":{"hexValue":"74727565","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16850:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16835:19:20"},{"AST":{"nodeType":"YulBlock","src":"16876:2564:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16937:34:20","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16956:14:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16950:5:20"},"nodeType":"YulFunctionCall","src":"16950:21:20"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16941:5:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17064:76:20","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17087:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17102:5:20","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17120:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"17127:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17116:3:20"},"nodeType":"YulFunctionCall","src":"17116:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17109:6:20"},"nodeType":"YulFunctionCall","src":"17109:21:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17098:3:20"},"nodeType":"YulFunctionCall","src":"17098:33:20"},{"kind":"number","nodeType":"YulLiteral","src":"17133:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17094:3:20"},"nodeType":"YulFunctionCall","src":"17094:41:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17083:3:20"},"nodeType":"YulFunctionCall","src":"17083:53:20"},{"kind":"number","nodeType":"YulLiteral","src":"17138:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17079:3:20"},"nodeType":"YulFunctionCall","src":"17079:61:20"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"17068:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17154:32:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17175:10:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17169:5:20"},"nodeType":"YulFunctionCall","src":"17169:17:20"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"17158:7:20","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17314:2016:20","statements":[{"body":{"nodeType":"YulBlock","src":"17629:1686:20","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17703:348:20","statements":[{"nodeType":"YulAssignment","src":"17798:38:20","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17815:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"17822:5:20","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17811:3:20"},"nodeType":"YulFunctionCall","src":"17811:17:20"},{"kind":"number","nodeType":"YulLiteral","src":"17830:5:20","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17807:3:20"},"nodeType":"YulFunctionCall","src":"17807:29:20"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17798:5:20"}]},{"body":{"nodeType":"YulBlock","src":"17915:113:20","statements":[{"nodeType":"YulAssignment","src":"17989:12:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18000:1:20","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17989:7:20"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17877:5:20"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17894:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"17906:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17890:3:20"},"nodeType":"YulFunctionCall","src":"17890:21:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17884:5:20"},"nodeType":"YulFunctionCall","src":"17884:28:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17874:2:20"},"nodeType":"YulFunctionCall","src":"17874:39:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17867:6:20"},"nodeType":"YulFunctionCall","src":"17867:47:20"},"nodeType":"YulIf","src":"17864:164:20"}]},"nodeType":"YulCase","src":"17696:355:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17701:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18081:1215:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18355:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18365:1:20","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"18359:2:20","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18482:3:20","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18487:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18475:6:20"},"nodeType":"YulFunctionCall","src":"18475:27:20"},"nodeType":"YulExpressionStatement","src":"18475:27:20"},{"nodeType":"YulVariableDeclaration","src":"18528:30:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18548:3:20","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18553:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18538:9:20"},"nodeType":"YulFunctionCall","src":"18538:20:20"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18532:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18586:31:20","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18600:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"18612:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18596:3:20"},"nodeType":"YulFunctionCall","src":"18596:21:20"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18590:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18643:27:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18658:2:20"},{"name":"mlength","nodeType":"YulIdentifier","src":"18662:7:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18654:3:20"},"nodeType":"YulFunctionCall","src":"18654:16:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18647:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"19013:260:20","statements":[{"body":{"nodeType":"YulBlock","src":"19080:166:20","statements":[{"nodeType":"YulAssignment","src":"19162:12:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19173:1:20","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19162:7:20"}]},{"nodeType":"YulAssignment","src":"19208:7:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19214:1:20","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"19208:2:20"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"19063:2:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19057:5:20"},"nodeType":"YulFunctionCall","src":"19057:9:20"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"19074:2:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19068:5:20"},"nodeType":"YulFunctionCall","src":"19068:9:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19054:2:20"},"nodeType":"YulFunctionCall","src":"19054:24:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19047:6:20"},"nodeType":"YulFunctionCall","src":"19047:32:20"},"nodeType":"YulIf","src":"19044:202:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18871:2:20"},{"name":"end","nodeType":"YulIdentifier","src":"18875:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18868:2:20"},"nodeType":"YulFunctionCall","src":"18868:11:20"},{"name":"cb","nodeType":"YulIdentifier","src":"18881:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18864:3:20"},"nodeType":"YulFunctionCall","src":"18864:20:20"},{"kind":"number","nodeType":"YulLiteral","src":"18886:1:20","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18861:2:20"},"nodeType":"YulFunctionCall","src":"18861:27:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18889:123:20","statements":[{"nodeType":"YulAssignment","src":"18920:16:20","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18930:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"18934:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18926:3:20"},"nodeType":"YulFunctionCall","src":"18926:10:20"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18920:2:20"}]},{"nodeType":"YulAssignment","src":"18966:19:20","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18976:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"18980:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18972:3:20"},"nodeType":"YulFunctionCall","src":"18972:13:20"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18966:2:20"}]}]},"pre":{"nodeType":"YulBlock","src":"18830:30:20","statements":[]},"src":"18826:447:20"}]},"nodeType":"YulCase","src":"18073:1223:20","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17662:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"17671:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17659:2:20"},"nodeType":"YulFunctionCall","src":"17659:15:20"},"nodeType":"YulSwitch","src":"17652:1644:20"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17619:7:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17612:6:20"},"nodeType":"YulFunctionCall","src":"17612:15:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17605:6:20"},"nodeType":"YulFunctionCall","src":"17605:23:20"},"nodeType":"YulIf","src":"17602:1713:20"}]},"nodeType":"YulCase","src":"17307:2023:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17312:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19352:77:20","statements":[{"nodeType":"YulAssignment","src":"19402:12:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19413:1:20","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19402:7:20"}]}]},"nodeType":"YulCase","src":"19344:85:20","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17276:7:20"},{"name":"mlength","nodeType":"YulIdentifier","src":"17285:7:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17273:2:20"},"nodeType":"YulFunctionCall","src":"17273:20:20"},"nodeType":"YulSwitch","src":"17266:2163:20"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4464,"isOffset":false,"isSlot":false,"src":"17175:10:20","valueSize":1},{"declaration":4464,"isOffset":false,"isSlot":false,"src":"17894:10:20","valueSize":1},{"declaration":4464,"isOffset":false,"isSlot":false,"src":"18600:10:20","valueSize":1},{"declaration":4462,"isOffset":false,"isSlot":true,"src":"16956:14:20","suffix":"slot","valueSize":1},{"declaration":4462,"isOffset":false,"isSlot":true,"src":"18487:14:20","suffix":"slot","valueSize":1},{"declaration":4470,"isOffset":false,"isSlot":false,"src":"17989:7:20","valueSize":1},{"declaration":4470,"isOffset":false,"isSlot":false,"src":"19162:7:20","valueSize":1},{"declaration":4470,"isOffset":false,"isSlot":false,"src":"19402:7:20","valueSize":1}],"id":4473,"nodeType":"InlineAssembly","src":"16867:2573:20"},{"expression":{"id":4474,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"19459:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4468,"id":4475,"nodeType":"Return","src":"19452:14:20"}]},"id":4477,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"16732:12:20","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"_preBytes","nameLocation":"16759:9:20","nodeType":"VariableDeclaration","scope":4477,"src":"16745:23:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4461,"name":"bytes","nodeType":"ElementaryTypeName","src":"16745:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"_postBytes","nameLocation":"16783:10:20","nodeType":"VariableDeclaration","scope":4477,"src":"16770:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4463,"name":"bytes","nodeType":"ElementaryTypeName","src":"16770:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16744:50:20"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4477,"src":"16818:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4466,"name":"bool","nodeType":"ElementaryTypeName","src":"16818:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16817:6:20"},"scope":4478,"src":"16723:2751:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4479,"src":"379:19098:20","usedErrors":[],"usedEvents":[]}],"src":"344:19135:20"},"id":20},"contracts/bridge/libraries/ExcessivelySafeCall.sol":{"ast":{"absolutePath":"contracts/bridge/libraries/ExcessivelySafeCall.sol","exportedSymbols":{"ExcessivelySafeCall":[4575]},"id":4576,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4480,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"47:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"ExcessivelySafeCall","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4575,"linearizedBaseContracts":[4575],"name":"ExcessivelySafeCall","nameLocation":"83:19:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4483,"mutability":"constant","name":"LOW_28_MASK","nameLocation":"124:11:21","nodeType":"VariableDeclaration","scope":4575,"src":"110:94:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint","nodeType":"ElementaryTypeName","src":"110:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138:66:21","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"internal"},{"body":{"id":4517,"nodeType":"Block","src":"1311:1130:21","statements":[{"assignments":[4500],"declarations":[{"constant":false,"id":4500,"mutability":"mutable","name":"_toCopy","nameLocation":"1364:7:21","nodeType":"VariableDeclaration","scope":4517,"src":"1359:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint","nodeType":"ElementaryTypeName","src":"1359:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4501,"nodeType":"VariableDeclarationStatement","src":"1359:12:21"},{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"_success","nameLocation":"1387:8:21","nodeType":"VariableDeclaration","scope":4517,"src":"1382:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4502,"name":"bool","nodeType":"ElementaryTypeName","src":"1382:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4504,"nodeType":"VariableDeclarationStatement","src":"1382:13:21"},{"assignments":[4506],"declarations":[{"constant":false,"id":4506,"mutability":"mutable","name":"_returnData","nameLocation":"1419:11:21","nodeType":"VariableDeclaration","scope":4517,"src":"1406:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4505,"name":"bytes","nodeType":"ElementaryTypeName","src":"1406:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4511,"initialValue":{"arguments":[{"id":4509,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"1443:8:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1433:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4507,"name":"bytes","nodeType":"ElementaryTypeName","src":"1437:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1406:46:21"},{"AST":{"nodeType":"YulBlock","src":"1686:707:21","statements":[{"nodeType":"YulAssignment","src":"1701:287:21","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"1736:4:21"},{"name":"_target","nodeType":"YulIdentifier","src":"1766:7:21"},{"kind":"number","nodeType":"YulLiteral","src":"1805:1:21","type":"","value":"0"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1844:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1855:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1840:3:21"},"nodeType":"YulFunctionCall","src":"1840:20:21"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1894:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:21"},"nodeType":"YulFunctionCall","src":"1888:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1932:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:1:21","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1713:4:21"},"nodeType":"YulFunctionCall","src":"1713:275:21"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"1701:8:21"}]},{"nodeType":"YulAssignment","src":"2046:27:21","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2057:14:21"},"nodeType":"YulFunctionCall","src":"2057:16:21"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2046:7:21"}]},{"body":{"nodeType":"YulBlock","src":"2112:53:21","statements":[{"nodeType":"YulAssignment","src":"2131:19:21","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2142:8:21"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2131:7:21"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2093:7:21"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2102:8:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2090:2:21"},"nodeType":"YulFunctionCall","src":"2090:21:21"},"nodeType":"YulIf","src":"2087:78:21"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2239:11:21"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2252:7:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2232:6:21"},"nodeType":"YulFunctionCall","src":"2232:28:21"},"nodeType":"YulExpressionStatement","src":"2232:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2351:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2364:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:21"},"nodeType":"YulFunctionCall","src":"2347:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"2371:1:21","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2374:7:21"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2332:14:21"},"nodeType":"YulFunctionCall","src":"2332:50:21"},"nodeType":"YulExpressionStatement","src":"2332:50:21"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4492,"isOffset":false,"isSlot":false,"src":"1844:9:21","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"1894:9:21","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"1736:4:21","valueSize":1},{"declaration":4490,"isOffset":false,"isSlot":false,"src":"2102:8:21","valueSize":1},{"declaration":4490,"isOffset":false,"isSlot":false,"src":"2142:8:21","valueSize":1},{"declaration":4506,"isOffset":false,"isSlot":false,"src":"2239:11:21","valueSize":1},{"declaration":4506,"isOffset":false,"isSlot":false,"src":"2351:11:21","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"1701:8:21","valueSize":1},{"declaration":4486,"isOffset":false,"isSlot":false,"src":"1766:7:21","valueSize":1},{"declaration":4500,"isOffset":false,"isSlot":false,"src":"2046:7:21","valueSize":1},{"declaration":4500,"isOffset":false,"isSlot":false,"src":"2093:7:21","valueSize":1},{"declaration":4500,"isOffset":false,"isSlot":false,"src":"2131:7:21","valueSize":1},{"declaration":4500,"isOffset":false,"isSlot":false,"src":"2252:7:21","valueSize":1},{"declaration":4500,"isOffset":false,"isSlot":false,"src":"2374:7:21","valueSize":1}],"id":4512,"nodeType":"InlineAssembly","src":"1677:716:21"},{"expression":{"components":[{"id":4513,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"2411:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4514,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"2421:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:23:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4498,"id":4516,"nodeType":"Return","src":"2403:30:21"}]},"documentation":{"id":4484,"nodeType":"StructuredDocumentation","src":"213:913:21","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":4518,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeCall","nameLocation":"1141:19:21","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"_target","nameLocation":"1179:7:21","nodeType":"VariableDeclaration","scope":4518,"src":"1171:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4485,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4488,"mutability":"mutable","name":"_gas","nameLocation":"1202:4:21","nodeType":"VariableDeclaration","scope":4518,"src":"1197:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint","nodeType":"ElementaryTypeName","src":"1197:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4490,"mutability":"mutable","name":"_maxCopy","nameLocation":"1224:8:21","nodeType":"VariableDeclaration","scope":4518,"src":"1217:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4489,"name":"uint16","nodeType":"ElementaryTypeName","src":"1217:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4492,"mutability":"mutable","name":"_calldata","nameLocation":"1256:9:21","nodeType":"VariableDeclaration","scope":4518,"src":"1243:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4491,"name":"bytes","nodeType":"ElementaryTypeName","src":"1243:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1160:112:21"},"returnParameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4518,"src":"1291:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4494,"name":"bool","nodeType":"ElementaryTypeName","src":"1291:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4518,"src":"1297:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4496,"name":"bytes","nodeType":"ElementaryTypeName","src":"1297:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1290:20:21"},"scope":4575,"src":"1132:1309:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4552,"nodeType":"Block","src":"3558:1101:21","statements":[{"assignments":[4535],"declarations":[{"constant":false,"id":4535,"mutability":"mutable","name":"_toCopy","nameLocation":"3611:7:21","nodeType":"VariableDeclaration","scope":4552,"src":"3606:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint","nodeType":"ElementaryTypeName","src":"3606:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4536,"nodeType":"VariableDeclarationStatement","src":"3606:12:21"},{"assignments":[4538],"declarations":[{"constant":false,"id":4538,"mutability":"mutable","name":"_success","nameLocation":"3634:8:21","nodeType":"VariableDeclaration","scope":4552,"src":"3629:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4537,"name":"bool","nodeType":"ElementaryTypeName","src":"3629:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4539,"nodeType":"VariableDeclarationStatement","src":"3629:13:21"},{"assignments":[4541],"declarations":[{"constant":false,"id":4541,"mutability":"mutable","name":"_returnData","nameLocation":"3666:11:21","nodeType":"VariableDeclaration","scope":4552,"src":"3653:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4540,"name":"bytes","nodeType":"ElementaryTypeName","src":"3653:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4546,"initialValue":{"arguments":[{"id":4544,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"3690:8:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3680:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4542,"name":"bytes","nodeType":"ElementaryTypeName","src":"3684:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3680:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3653:46:21"},{"AST":{"nodeType":"YulBlock","src":"3933:678:21","statements":[{"nodeType":"YulAssignment","src":"3948:258:21","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"3989:4:21"},{"name":"_target","nodeType":"YulIdentifier","src":"4019:7:21"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4062:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4073:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4058:3:21"},"nodeType":"YulFunctionCall","src":"4058:20:21"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4112:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4106:5:21"},"nodeType":"YulFunctionCall","src":"4106:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"4150:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4180:1:21","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"3960:10:21"},"nodeType":"YulFunctionCall","src":"3960:246:21"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"3948:8:21"}]},{"nodeType":"YulAssignment","src":"4264:27:21","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4275:14:21"},"nodeType":"YulFunctionCall","src":"4275:16:21"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4264:7:21"}]},{"body":{"nodeType":"YulBlock","src":"4330:53:21","statements":[{"nodeType":"YulAssignment","src":"4349:19:21","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4360:8:21"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4349:7:21"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4311:7:21"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4320:8:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4308:2:21"},"nodeType":"YulFunctionCall","src":"4308:21:21"},"nodeType":"YulIf","src":"4305:78:21"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4457:11:21"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4470:7:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4450:6:21"},"nodeType":"YulFunctionCall","src":"4450:28:21"},"nodeType":"YulExpressionStatement","src":"4450:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4569:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4582:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4565:3:21"},"nodeType":"YulFunctionCall","src":"4565:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"4589:1:21","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4592:7:21"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"4550:14:21"},"nodeType":"YulFunctionCall","src":"4550:50:21"},"nodeType":"YulExpressionStatement","src":"4550:50:21"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4527,"isOffset":false,"isSlot":false,"src":"4062:9:21","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"4112:9:21","valueSize":1},{"declaration":4523,"isOffset":false,"isSlot":false,"src":"3989:4:21","valueSize":1},{"declaration":4525,"isOffset":false,"isSlot":false,"src":"4320:8:21","valueSize":1},{"declaration":4525,"isOffset":false,"isSlot":false,"src":"4360:8:21","valueSize":1},{"declaration":4541,"isOffset":false,"isSlot":false,"src":"4457:11:21","valueSize":1},{"declaration":4541,"isOffset":false,"isSlot":false,"src":"4569:11:21","valueSize":1},{"declaration":4538,"isOffset":false,"isSlot":false,"src":"3948:8:21","valueSize":1},{"declaration":4521,"isOffset":false,"isSlot":false,"src":"4019:7:21","valueSize":1},{"declaration":4535,"isOffset":false,"isSlot":false,"src":"4264:7:21","valueSize":1},{"declaration":4535,"isOffset":false,"isSlot":false,"src":"4311:7:21","valueSize":1},{"declaration":4535,"isOffset":false,"isSlot":false,"src":"4349:7:21","valueSize":1},{"declaration":4535,"isOffset":false,"isSlot":false,"src":"4470:7:21","valueSize":1},{"declaration":4535,"isOffset":false,"isSlot":false,"src":"4592:7:21","valueSize":1}],"id":4547,"nodeType":"InlineAssembly","src":"3924:687:21"},{"expression":{"components":[{"id":4548,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"4629:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4549,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"4639:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4628:23:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4533,"id":4551,"nodeType":"Return","src":"4621:30:21"}]},"documentation":{"id":4519,"nodeType":"StructuredDocumentation","src":"2449:913:21","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":4553,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeStaticCall","nameLocation":"3377:25:21","nodeType":"FunctionDefinition","parameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"_target","nameLocation":"3421:7:21","nodeType":"VariableDeclaration","scope":4553,"src":"3413:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4520,"name":"address","nodeType":"ElementaryTypeName","src":"3413:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4523,"mutability":"mutable","name":"_gas","nameLocation":"3444:4:21","nodeType":"VariableDeclaration","scope":4553,"src":"3439:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint","nodeType":"ElementaryTypeName","src":"3439:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"_maxCopy","nameLocation":"3466:8:21","nodeType":"VariableDeclaration","scope":4553,"src":"3459:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4524,"name":"uint16","nodeType":"ElementaryTypeName","src":"3459:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"_calldata","nameLocation":"3498:9:21","nodeType":"VariableDeclaration","scope":4553,"src":"3485:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4526,"name":"bytes","nodeType":"ElementaryTypeName","src":"3485:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3402:112:21"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4553,"src":"3538:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4529,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4553,"src":"3544:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4531,"name":"bytes","nodeType":"ElementaryTypeName","src":"3544:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3537:20:21"},"scope":4575,"src":"3368:1291:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4573,"nodeType":"Block","src":"5199:388:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4562,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"5218:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5223:6:21","memberName":"length","nodeType":"MemberAccess","src":"5218:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5233:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5218:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5210:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5210:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4567,"nodeType":"ExpressionStatement","src":"5210:25:21"},{"assignments":[4569],"declarations":[{"constant":false,"id":4569,"mutability":"mutable","name":"_mask","nameLocation":"5251:5:21","nodeType":"VariableDeclaration","scope":4573,"src":"5246:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4568,"name":"uint","nodeType":"ElementaryTypeName","src":"5246:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4571,"initialValue":{"id":4570,"name":"LOW_28_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"5259:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5246:24:21"},{"AST":{"nodeType":"YulBlock","src":"5290:290:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5344:35:21","value":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5367:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5373:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5363:3:21"},"nodeType":"YulFunctionCall","src":"5363:15:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5357:5:21"},"nodeType":"YulFunctionCall","src":"5357:22:21"},"variables":[{"name":"_word","nodeType":"YulTypedName","src":"5348:5:21","type":""}]},{"nodeType":"YulAssignment","src":"5453:26:21","value":{"arguments":[{"name":"_word","nodeType":"YulIdentifier","src":"5466:5:21"},{"name":"_mask","nodeType":"YulIdentifier","src":"5473:5:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5462:3:21"},"nodeType":"YulFunctionCall","src":"5462:17:21"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5453:5:21"}]},{"nodeType":"YulAssignment","src":"5493:32:21","value":{"arguments":[{"name":"_newSelector","nodeType":"YulIdentifier","src":"5505:12:21"},{"name":"_word","nodeType":"YulIdentifier","src":"5519:5:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5502:2:21"},"nodeType":"YulFunctionCall","src":"5502:23:21"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5493:5:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5550:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5556:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5546:3:21"},"nodeType":"YulFunctionCall","src":"5546:15:21"},{"name":"_word","nodeType":"YulIdentifier","src":"5563:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5539:6:21"},"nodeType":"YulFunctionCall","src":"5539:30:21"},"nodeType":"YulExpressionStatement","src":"5539:30:21"}]},"evmVersion":"berlin","externalReferences":[{"declaration":4558,"isOffset":false,"isSlot":false,"src":"5367:4:21","valueSize":1},{"declaration":4558,"isOffset":false,"isSlot":false,"src":"5550:4:21","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"5473:5:21","valueSize":1},{"declaration":4556,"isOffset":false,"isSlot":false,"src":"5505:12:21","valueSize":1}],"id":4572,"nodeType":"InlineAssembly","src":"5281:299:21"}]},"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"4667:450:21","text":" @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"},"id":4574,"implemented":true,"kind":"function","modifiers":[],"name":"swapSelector","nameLocation":"5132:12:21","nodeType":"FunctionDefinition","parameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"_newSelector","nameLocation":"5152:12:21","nodeType":"VariableDeclaration","scope":4574,"src":"5145:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4555,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5145:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":4558,"mutability":"mutable","name":"_buf","nameLocation":"5179:4:21","nodeType":"VariableDeclaration","scope":4574,"src":"5166:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4557,"name":"bytes","nodeType":"ElementaryTypeName","src":"5166:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5144:40:21"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[],"src":"5199:0:21"},"scope":4575,"src":"5123:464:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4576,"src":"75:5515:21","usedErrors":[],"usedEvents":[]}],"src":"47:5545:21"},"id":21},"contracts/bridge/lzApp/LzApp.sol":{"ast":{"absolutePath":"contracts/bridge/lzApp/LzApp.sol","exportedSymbols":{"AddressUpgradeable":[1486],"BytesLib":[4478],"ContextUpgradeable":[1528],"ILayerZeroEndpoint":[5541],"ILayerZeroReceiver":[5555],"ILayerZeroUserApplicationConfig":[5586],"Initializable":[936],"LzApp":[5137],"OwnableUpgradeable":[402]},"id":5138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4577,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:22"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5138,"sourceUnit":937,"src":"62:75:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5138,"sourceUnit":403,"src":"139:75:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol","file":"./interfaces/ILayerZeroReceiver.sol","id":4580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5138,"sourceUnit":5556,"src":"216:45:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./interfaces/ILayerZeroUserApplicationConfig.sol","id":4581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5138,"sourceUnit":5587,"src":"263:58:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol","file":"./interfaces/ILayerZeroEndpoint.sol","id":4582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5138,"sourceUnit":5542,"src":"323:45:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/libraries/BytesLib.sol","file":"../libraries/BytesLib.sol","id":4583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5138,"sourceUnit":4479,"src":"370:35:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4584,"name":"Initializable","nameLocations":["485:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"485:13:22"},"id":4585,"nodeType":"InheritanceSpecifier","src":"485:13:22"},{"baseName":{"id":4586,"name":"OwnableUpgradeable","nameLocations":["500:18:22"],"nodeType":"IdentifierPath","referencedDeclaration":402,"src":"500:18:22"},"id":4587,"nodeType":"InheritanceSpecifier","src":"500:18:22"},{"baseName":{"id":4588,"name":"ILayerZeroReceiver","nameLocations":["520:18:22"],"nodeType":"IdentifierPath","referencedDeclaration":5555,"src":"520:18:22"},"id":4589,"nodeType":"InheritanceSpecifier","src":"520:18:22"},{"baseName":{"id":4590,"name":"ILayerZeroUserApplicationConfig","nameLocations":["540:31:22"],"nodeType":"IdentifierPath","referencedDeclaration":5586,"src":"540:31:22"},"id":4591,"nodeType":"InheritanceSpecifier","src":"540:31:22"}],"canonicalName":"LzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":5137,"linearizedBaseContracts":[5137,5586,5555,402,1528,936],"name":"LzApp","nameLocation":"476:5:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4594,"libraryName":{"id":4592,"name":"BytesLib","nameLocations":["585:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"585:8:22"},"nodeType":"UsingForDirective","src":"579:25:22","typeName":{"id":4593,"name":"bytes","nodeType":"ElementaryTypeName","src":"598:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":true,"functionSelector":"c4461834","id":4597,"mutability":"constant","name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nameLocation":"732:26:22","nodeType":"VariableDeclaration","scope":5137,"src":"711:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint","nodeType":"ElementaryTypeName","src":"711:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:5:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"b353aaa7","id":4600,"mutability":"mutable","name":"lzEndpoint","nameLocation":"801:10:22","nodeType":"VariableDeclaration","scope":5137,"src":"775:36:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"},"typeName":{"id":4599,"nodeType":"UserDefinedTypeName","pathNode":{"id":4598,"name":"ILayerZeroEndpoint","nameLocations":["775:18:22"],"nodeType":"IdentifierPath","referencedDeclaration":5541,"src":"775:18:22"},"referencedDeclaration":5541,"src":"775:18:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"visibility":"public"},{"constant":false,"functionSelector":"7533d788","id":4604,"mutability":"mutable","name":"trustedRemoteLookup","nameLocation":"850:19:22","nodeType":"VariableDeclaration","scope":5137,"src":"818:51:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"typeName":{"id":4603,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4601,"name":"uint16","nodeType":"ElementaryTypeName","src":"826:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"818:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4602,"name":"bytes","nodeType":"ElementaryTypeName","src":"836:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":false,"functionSelector":"8cfd8f5c","id":4610,"mutability":"mutable","name":"minDstGasLookup","nameLocation":"926:15:22","nodeType":"VariableDeclaration","scope":5137,"src":"876:65:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"typeName":{"id":4609,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4605,"name":"uint16","nodeType":"ElementaryTypeName","src":"884:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"876:42:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4608,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4606,"name":"uint16","nodeType":"ElementaryTypeName","src":"902:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"894:23:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4607,"name":"uint","nodeType":"ElementaryTypeName","src":"912:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3f1f4fa4","id":4614,"mutability":"mutable","name":"payloadSizeLimitLookup","nameLocation":"979:22:22","nodeType":"VariableDeclaration","scope":5137,"src":"948:53:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"typeName":{"id":4613,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4611,"name":"uint16","nodeType":"ElementaryTypeName","src":"956:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"948:23:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4612,"name":"uint","nodeType":"ElementaryTypeName","src":"966:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"950c8a74","id":4616,"mutability":"mutable","name":"precrime","nameLocation":"1023:8:22","nodeType":"VariableDeclaration","scope":5137,"src":"1008:23:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4615,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b","id":4620,"name":"SetPrecrime","nameLocation":"1046:11:22","nodeType":"EventDefinition","parameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"indexed":false,"mutability":"mutable","name":"precrime","nameLocation":"1066:8:22","nodeType":"VariableDeclaration","scope":4620,"src":"1058:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4617,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1057:18:22"},"src":"1040:36:22"},{"anonymous":false,"eventSelector":"fa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab","id":4626,"name":"SetTrustedRemote","nameLocation":"1088:16:22","nodeType":"EventDefinition","parameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"1112:14:22","nodeType":"VariableDeclaration","scope":4626,"src":"1105:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4621,"name":"uint16","nodeType":"ElementaryTypeName","src":"1105:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4624,"indexed":false,"mutability":"mutable","name":"_path","nameLocation":"1134:5:22","nodeType":"VariableDeclaration","scope":4626,"src":"1128:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4623,"name":"bytes","nodeType":"ElementaryTypeName","src":"1128:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1104:36:22"},"src":"1082:59:22"},{"anonymous":false,"eventSelector":"8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce","id":4632,"name":"SetTrustedRemoteAddress","nameLocation":"1153:23:22","nodeType":"EventDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"1184:14:22","nodeType":"VariableDeclaration","scope":4632,"src":"1177:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4627,"name":"uint16","nodeType":"ElementaryTypeName","src":"1177:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4630,"indexed":false,"mutability":"mutable","name":"_remoteAddress","nameLocation":"1206:14:22","nodeType":"VariableDeclaration","scope":4632,"src":"1200:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4629,"name":"bytes","nodeType":"ElementaryTypeName","src":"1200:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1176:45:22"},"src":"1147:75:22"},{"anonymous":false,"eventSelector":"9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0","id":4640,"name":"SetMinDstGas","nameLocation":"1234:12:22","nodeType":"EventDefinition","parameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"indexed":false,"mutability":"mutable","name":"_dstChainId","nameLocation":"1254:11:22","nodeType":"VariableDeclaration","scope":4640,"src":"1247:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4633,"name":"uint16","nodeType":"ElementaryTypeName","src":"1247:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4636,"indexed":false,"mutability":"mutable","name":"_type","nameLocation":"1274:5:22","nodeType":"VariableDeclaration","scope":4640,"src":"1267:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4635,"name":"uint16","nodeType":"ElementaryTypeName","src":"1267:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4638,"indexed":false,"mutability":"mutable","name":"_minDstGas","nameLocation":"1286:10:22","nodeType":"VariableDeclaration","scope":4640,"src":"1281:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint","nodeType":"ElementaryTypeName","src":"1281:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1246:51:22"},"src":"1228:70:22"},{"body":{"id":4654,"nodeType":"Block","src":"1373:79:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4647,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1384:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1384:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4649,"nodeType":"ExpressionStatement","src":"1384:16:22"},{"expression":{"arguments":[{"id":4651,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"1434:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4650,"name":"__LzApp_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"1411:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4653,"nodeType":"ExpressionStatement","src":"1411:33:22"}]},"id":4655,"implemented":true,"kind":"function","modifiers":[{"id":4645,"kind":"modifierInvocation","modifierName":{"id":4644,"name":"onlyInitializing","nameLocations":["1356:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1356:16:22"},"nodeType":"ModifierInvocation","src":"1356:16:22"}],"name":"__LzApp_init","nameLocation":"1315:12:22","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"_endpoint","nameLocation":"1336:9:22","nodeType":"VariableDeclaration","scope":4655,"src":"1328:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4641,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1327:19:22"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[],"src":"1373:0:22"},"scope":5137,"src":"1306:146:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"1537:61:22","statements":[{"expression":{"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4662,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"1548:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4664,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"1580:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4663,"name":"ILayerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"1561:18:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpoint_$5541_$","typeString":"type(contract ILayerZeroEndpoint)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1561:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"src":"1548:42:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":4667,"nodeType":"ExpressionStatement","src":"1548:42:22"}]},"id":4669,"implemented":true,"kind":"function","modifiers":[{"id":4660,"kind":"modifierInvocation","modifierName":{"id":4659,"name":"onlyInitializing","nameLocations":["1520:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1520:16:22"},"nodeType":"ModifierInvocation","src":"1520:16:22"}],"name":"__LzApp_init_unchained","nameLocation":"1469:22:22","nodeType":"FunctionDefinition","parameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"_endpoint","nameLocation":"1500:9:22","nodeType":"VariableDeclaration","scope":4669,"src":"1492:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4656,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1491:19:22"},"returnParameters":{"id":4661,"nodeType":"ParameterList","parameters":[],"src":"1537:0:22"},"scope":5137,"src":"1460:138:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5554],"body":{"id":4727,"nodeType":"Block","src":"1780:668:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4682,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1865:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1865:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4686,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"1889:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}],"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4684,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:22","typeDescriptions":{}}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1865:35:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1902:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""},"value":"LzApp: invalid endpoint caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""}],"id":4681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4691,"nodeType":"ExpressionStatement","src":"1857:78:22"},{"assignments":[4693],"declarations":[{"constant":false,"id":4693,"mutability":"mutable","name":"trustedRemote","nameLocation":"1961:13:22","nodeType":"VariableDeclaration","scope":4727,"src":"1948:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4692,"name":"bytes","nodeType":"ElementaryTypeName","src":"1948:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4697,"initialValue":{"baseExpression":{"id":4694,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"1977:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":4696,"indexExpression":{"id":4695,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"1997:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1977:32:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1948:61:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4699,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"2175:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:6:22","memberName":"length","nodeType":"MemberAccess","src":"2175:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4701,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"2197:13:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2211:6:22","memberName":"length","nodeType":"MemberAccess","src":"2197:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2175:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4704,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"2221:13:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2235:6:22","memberName":"length","nodeType":"MemberAccess","src":"2221:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2244:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2221:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2175:70:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4710,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"2259:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4709,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2249:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4713,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"2285:13:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4712,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2275:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2249:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2175:124:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e7472616374","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2314:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""},"value":"LzApp: invalid source sending contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""}],"id":4698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2153:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:212:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4719,"nodeType":"ExpressionStatement","src":"2153:212:22"},{"expression":{"arguments":[{"id":4721,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"2397:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4722,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"2410:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4723,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"2423:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4724,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"2431:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4720,"name":"_blockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"2378:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4726,"nodeType":"ExpressionStatement","src":"2378:62:22"}]},"functionSelector":"001d3567","id":4728,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1615:9:22","nodeType":"FunctionDefinition","overrides":{"id":4679,"nodeType":"OverrideSpecifier","overrides":[],"src":"1771:8:22"},"parameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4671,"mutability":"mutable","name":"_srcChainId","nameLocation":"1642:11:22","nodeType":"VariableDeclaration","scope":4728,"src":"1635:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4670,"name":"uint16","nodeType":"ElementaryTypeName","src":"1635:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4673,"mutability":"mutable","name":"_srcAddress","nameLocation":"1679:11:22","nodeType":"VariableDeclaration","scope":4728,"src":"1664:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4672,"name":"bytes","nodeType":"ElementaryTypeName","src":"1664:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4675,"mutability":"mutable","name":"_nonce","nameLocation":"1708:6:22","nodeType":"VariableDeclaration","scope":4728,"src":"1701:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4674,"name":"uint64","nodeType":"ElementaryTypeName","src":"1701:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"_payload","nameLocation":"1740:8:22","nodeType":"VariableDeclaration","scope":4728,"src":"1725:23:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4676,"name":"bytes","nodeType":"ElementaryTypeName","src":"1725:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1624:131:22"},"returnParameters":{"id":4680,"nodeType":"ParameterList","parameters":[],"src":"1780:0:22"},"scope":5137,"src":"1606:842:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":4739,"implemented":false,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"2609:18:22","nodeType":"FunctionDefinition","parameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"_srcChainId","nameLocation":"2645:11:22","nodeType":"VariableDeclaration","scope":4739,"src":"2638:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4729,"name":"uint16","nodeType":"ElementaryTypeName","src":"2638:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"_srcAddress","nameLocation":"2680:11:22","nodeType":"VariableDeclaration","scope":4739,"src":"2667:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4731,"name":"bytes","nodeType":"ElementaryTypeName","src":"2667:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4734,"mutability":"mutable","name":"_nonce","nameLocation":"2709:6:22","nodeType":"VariableDeclaration","scope":4739,"src":"2702:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4733,"name":"uint64","nodeType":"ElementaryTypeName","src":"2702:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4736,"mutability":"mutable","name":"_payload","nameLocation":"2739:8:22","nodeType":"VariableDeclaration","scope":4739,"src":"2726:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4735,"name":"bytes","nodeType":"ElementaryTypeName","src":"2726:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2627:127:22"},"returnParameters":{"id":4738,"nodeType":"ParameterList","parameters":[],"src":"2771:0:22"},"scope":5137,"src":"2600:172:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4787,"nodeType":"Block","src":"3024:370:22","statements":[{"assignments":[4755],"declarations":[{"constant":false,"id":4755,"mutability":"mutable","name":"trustedRemote","nameLocation":"3048:13:22","nodeType":"VariableDeclaration","scope":4787,"src":"3035:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4754,"name":"bytes","nodeType":"ElementaryTypeName","src":"3035:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4759,"initialValue":{"baseExpression":{"id":4756,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"3064:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":4758,"indexExpression":{"id":4757,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"3084:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3064:32:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3035:61:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4761,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"3115:13:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3129:6:22","memberName":"length","nodeType":"MemberAccess","src":"3115:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3139:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3115:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3142:50:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""},"value":"LzApp: destination chain is not a trusted source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""}],"id":4760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3107:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3107:86:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4767,"nodeType":"ExpressionStatement","src":"3107:86:22"},{"expression":{"arguments":[{"id":4769,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"3222:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":4770,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"3235:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3244:6:22","memberName":"length","nodeType":"MemberAccess","src":"3235:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4768,"name":"_checkPayloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"3204:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint256) view"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3204:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4773,"nodeType":"ExpressionStatement","src":"3204:47:22"},{"expression":{"arguments":[{"id":4779,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"3297:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4780,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"3310:13:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4781,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"3325:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4782,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"3335:14:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4783,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"3351:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4784,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"3371:14:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4774,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"3262:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3273:4:22","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":5416,"src":"3262:15:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4777,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"3285:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3262:34:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:124:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4786,"nodeType":"ExpressionStatement","src":"3262:124:22"}]},"id":4788,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"2789:7:22","nodeType":"FunctionDefinition","parameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"_dstChainId","nameLocation":"2814:11:22","nodeType":"VariableDeclaration","scope":4788,"src":"2807:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4740,"name":"uint16","nodeType":"ElementaryTypeName","src":"2807:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4743,"mutability":"mutable","name":"_payload","nameLocation":"2849:8:22","nodeType":"VariableDeclaration","scope":4788,"src":"2836:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4742,"name":"bytes","nodeType":"ElementaryTypeName","src":"2836:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"_refundAddress","nameLocation":"2884:14:22","nodeType":"VariableDeclaration","scope":4788,"src":"2868:30:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4744,"name":"address","nodeType":"ElementaryTypeName","src":"2868:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"2917:18:22","nodeType":"VariableDeclaration","scope":4788,"src":"2909:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4746,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"_adapterParams","nameLocation":"2959:14:22","nodeType":"VariableDeclaration","scope":4788,"src":"2946:27:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4748,"name":"bytes","nodeType":"ElementaryTypeName","src":"2946:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"_nativeFee","nameLocation":"2989:10:22","nodeType":"VariableDeclaration","scope":4788,"src":"2984:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint","nodeType":"ElementaryTypeName","src":"2984:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2796:210:22"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[],"src":"3024:0:22"},"scope":5137,"src":"2780:614:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"3570:295:22","statements":[{"assignments":[4800],"declarations":[{"constant":false,"id":4800,"mutability":"mutable","name":"providedGasLimit","nameLocation":"3586:16:22","nodeType":"VariableDeclaration","scope":4829,"src":"3581:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint","nodeType":"ElementaryTypeName","src":"3581:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4804,"initialValue":{"arguments":[{"id":4802,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"3618:14:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4801,"name":"_getGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"3605:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3581:52:22"},{"assignments":[4806],"declarations":[{"constant":false,"id":4806,"mutability":"mutable","name":"minGasLimit","nameLocation":"3649:11:22","nodeType":"VariableDeclaration","scope":4829,"src":"3644:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint","nodeType":"ElementaryTypeName","src":"3644:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4812,"initialValue":{"baseExpression":{"baseExpression":{"id":4807,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"3663:15:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":4809,"indexExpression":{"id":4808,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"3679:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3663:28:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":4811,"indexExpression":{"id":4810,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"3692:5:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3663:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3644:54:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"3717:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3731:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3717:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3734:28:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""},"value":"LzApp: minGasLimit not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""}],"id":4813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3709:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3709:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"ExpressionStatement","src":"3709:54:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"providedGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"3782:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4822,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"3802:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4823,"name":"_extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"3816:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3802:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3782:43:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3827:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""},"value":"LzApp: gas limit is too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""}],"id":4820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3774:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:83:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4828,"nodeType":"ExpressionStatement","src":"3774:83:22"}]},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"_checkGasLimit","nameLocation":"3411:14:22","nodeType":"FunctionDefinition","parameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"_dstChainId","nameLocation":"3443:11:22","nodeType":"VariableDeclaration","scope":4830,"src":"3436:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4789,"name":"uint16","nodeType":"ElementaryTypeName","src":"3436:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"_type","nameLocation":"3472:5:22","nodeType":"VariableDeclaration","scope":4830,"src":"3465:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4791,"name":"uint16","nodeType":"ElementaryTypeName","src":"3465:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"_adapterParams","nameLocation":"3501:14:22","nodeType":"VariableDeclaration","scope":4830,"src":"3488:27:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4793,"name":"bytes","nodeType":"ElementaryTypeName","src":"3488:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"_extraGas","nameLocation":"3531:9:22","nodeType":"VariableDeclaration","scope":4830,"src":"3526:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint","nodeType":"ElementaryTypeName","src":"3526:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3425:122:22"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[],"src":"3570:0:22"},"scope":5137,"src":"3402:463:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4846,"nodeType":"Block","src":"3970:174:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4838,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"3989:14:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4004:6:22","memberName":"length","nodeType":"MemberAccess","src":"3989:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3334","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4014:2:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"3989:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4018:30:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""},"value":"LzApp: invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""}],"id":4837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3981:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3981:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4844,"nodeType":"ExpressionStatement","src":"3981:68:22"},{"AST":{"nodeType":"YulBlock","src":"4069:68:22","statements":[{"nodeType":"YulAssignment","src":"4084:42:22","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"4106:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4122:2:22","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4102:3:22"},"nodeType":"YulFunctionCall","src":"4102:23:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4096:5:22"},"nodeType":"YulFunctionCall","src":"4096:30:22"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"4084:8:22"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":4832,"isOffset":false,"isSlot":false,"src":"4106:14:22","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"4084:8:22","valueSize":1}],"id":4845,"nodeType":"InlineAssembly","src":"4060:77:22"}]},"id":4847,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasLimit","nameLocation":"3882:12:22","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"_adapterParams","nameLocation":"3908:14:22","nodeType":"VariableDeclaration","scope":4847,"src":"3895:27:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4831,"name":"bytes","nodeType":"ElementaryTypeName","src":"3895:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3894:29:22"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"gasLimit","nameLocation":"3960:8:22","nodeType":"VariableDeclaration","scope":4847,"src":"3955:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint","nodeType":"ElementaryTypeName","src":"3955:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3954:15:22"},"scope":5137,"src":"3873:271:22","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":4876,"nodeType":"Block","src":"4240:314:22","statements":[{"assignments":[4855],"declarations":[{"constant":false,"id":4855,"mutability":"mutable","name":"payloadSizeLimit","nameLocation":"4256:16:22","nodeType":"VariableDeclaration","scope":4876,"src":"4251:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint","nodeType":"ElementaryTypeName","src":"4251:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4859,"initialValue":{"baseExpression":{"id":4856,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"4275:22:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":4858,"indexExpression":{"id":4857,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"4298:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4275:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4251:59:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"4325:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4325:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4868,"nodeType":"IfStatement","src":"4321:138:22","trueBody":{"id":4867,"nodeType":"Block","src":"4348:111:22","statements":[{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4863,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"4402:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4864,"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"4421:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4402:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4866,"nodeType":"ExpressionStatement","src":"4402:45:22"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"_payloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"4477:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4871,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"4493:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4477:32:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:34:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""},"value":"LzApp: payload size is too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""}],"id":4869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4469:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:77:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4875,"nodeType":"ExpressionStatement","src":"4469:77:22"}]},"id":4877,"implemented":true,"kind":"function","modifiers":[],"name":"_checkPayloadSize","nameLocation":"4161:17:22","nodeType":"FunctionDefinition","parameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"_dstChainId","nameLocation":"4186:11:22","nodeType":"VariableDeclaration","scope":4877,"src":"4179:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4848,"name":"uint16","nodeType":"ElementaryTypeName","src":"4179:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4851,"mutability":"mutable","name":"_payloadSize","nameLocation":"4204:12:22","nodeType":"VariableDeclaration","scope":4877,"src":"4199:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4850,"name":"uint","nodeType":"ElementaryTypeName","src":"4199:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4178:39:22"},"returnParameters":{"id":4853,"nodeType":"ParameterList","parameters":[],"src":"4240:0:22"},"scope":5137,"src":"4152:402:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4901,"nodeType":"Block","src":"4819:94:22","statements":[{"expression":{"arguments":[{"id":4892,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"4858:8:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4893,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"4868:8:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":4896,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4886:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$5137","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$5137","typeString":"contract LzApp"}],"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4878:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4894,"name":"address","nodeType":"ElementaryTypeName","src":"4878:7:22","typeDescriptions":{}}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4898,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"4893:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4890,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"4837:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4848:9:22","memberName":"getConfig","nodeType":"MemberAccess","referencedDeclaration":5526,"src":"4837:20:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint16,uint16,address,uint256) view external returns (bytes memory)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4837:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4889,"id":4900,"nodeType":"Return","src":"4830:75:22"}]},"functionSelector":"f5ecbdbc","id":4902,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"4668:9:22","nodeType":"FunctionDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"_version","nameLocation":"4695:8:22","nodeType":"VariableDeclaration","scope":4902,"src":"4688:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4878,"name":"uint16","nodeType":"ElementaryTypeName","src":"4688:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4881,"mutability":"mutable","name":"_chainId","nameLocation":"4721:8:22","nodeType":"VariableDeclaration","scope":4902,"src":"4714:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4880,"name":"uint16","nodeType":"ElementaryTypeName","src":"4714:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4902,"src":"4740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4882,"name":"address","nodeType":"ElementaryTypeName","src":"4740:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"_configType","nameLocation":"4763:11:22","nodeType":"VariableDeclaration","scope":4902,"src":"4758:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint","nodeType":"ElementaryTypeName","src":"4758:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:104:22"},"returnParameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4902,"src":"4805:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4887,"name":"bytes","nodeType":"ElementaryTypeName","src":"4805:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4804:14:22"},"scope":5137,"src":"4659:254:22","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5568],"body":{"id":4925,"nodeType":"Block","src":"5141:81:22","statements":[{"expression":{"arguments":[{"id":4919,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"5173:8:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4920,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"5183:8:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4921,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"5193:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4922,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"5206:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4916,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5152:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5163:9:22","memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":5568,"src":"5152:20:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint16,uint256,bytes memory) external"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5152:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4924,"nodeType":"ExpressionStatement","src":"5152:62:22"}]},"functionSelector":"cbed8b9c","id":4926,"implemented":true,"kind":"function","modifiers":[{"id":4914,"kind":"modifierInvocation","modifierName":{"id":4913,"name":"onlyOwner","nameLocations":["5131:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"5131:9:22"},"nodeType":"ModifierInvocation","src":"5131:9:22"}],"name":"setConfig","nameLocation":"4984:9:22","nodeType":"FunctionDefinition","overrides":{"id":4912,"nodeType":"OverrideSpecifier","overrides":[],"src":"5122:8:22"},"parameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"_version","nameLocation":"5011:8:22","nodeType":"VariableDeclaration","scope":4926,"src":"5004:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4903,"name":"uint16","nodeType":"ElementaryTypeName","src":"5004:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"_chainId","nameLocation":"5037:8:22","nodeType":"VariableDeclaration","scope":4926,"src":"5030:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4905,"name":"uint16","nodeType":"ElementaryTypeName","src":"5030:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4908,"mutability":"mutable","name":"_configType","nameLocation":"5061:11:22","nodeType":"VariableDeclaration","scope":4926,"src":"5056:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4907,"name":"uint","nodeType":"ElementaryTypeName","src":"5056:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4910,"mutability":"mutable","name":"_config","nameLocation":"5098:7:22","nodeType":"VariableDeclaration","scope":4926,"src":"5083:22:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4909,"name":"bytes","nodeType":"ElementaryTypeName","src":"5083:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4993:119:22"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[],"src":"5141:0:22"},"scope":5137,"src":"4975:247:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5573],"body":{"id":4940,"nodeType":"Block","src":"5299:54:22","statements":[{"expression":{"arguments":[{"id":4937,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"5336:8:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":4934,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5310:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5321:14:22","memberName":"setSendVersion","nodeType":"MemberAccess","referencedDeclaration":5573,"src":"5310:25:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5310:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4939,"nodeType":"ExpressionStatement","src":"5310:35:22"}]},"functionSelector":"07e0db17","id":4941,"implemented":true,"kind":"function","modifiers":[{"id":4932,"kind":"modifierInvocation","modifierName":{"id":4931,"name":"onlyOwner","nameLocations":["5289:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"5289:9:22"},"nodeType":"ModifierInvocation","src":"5289:9:22"}],"name":"setSendVersion","nameLocation":"5239:14:22","nodeType":"FunctionDefinition","overrides":{"id":4930,"nodeType":"OverrideSpecifier","overrides":[],"src":"5280:8:22"},"parameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"_version","nameLocation":"5261:8:22","nodeType":"VariableDeclaration","scope":4941,"src":"5254:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4927,"name":"uint16","nodeType":"ElementaryTypeName","src":"5254:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5253:17:22"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[],"src":"5299:0:22"},"scope":5137,"src":"5230:123:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5578],"body":{"id":4955,"nodeType":"Block","src":"5433:57:22","statements":[{"expression":{"arguments":[{"id":4952,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"5473:8:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":4949,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5444:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5455:17:22","memberName":"setReceiveVersion","nodeType":"MemberAccess","referencedDeclaration":5578,"src":"5444:28:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5444:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4954,"nodeType":"ExpressionStatement","src":"5444:38:22"}]},"functionSelector":"10ddb137","id":4956,"implemented":true,"kind":"function","modifiers":[{"id":4947,"kind":"modifierInvocation","modifierName":{"id":4946,"name":"onlyOwner","nameLocations":["5423:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"5423:9:22"},"nodeType":"ModifierInvocation","src":"5423:9:22"}],"name":"setReceiveVersion","nameLocation":"5370:17:22","nodeType":"FunctionDefinition","overrides":{"id":4945,"nodeType":"OverrideSpecifier","overrides":[],"src":"5414:8:22"},"parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"_version","nameLocation":"5395:8:22","nodeType":"VariableDeclaration","scope":4956,"src":"5388:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4942,"name":"uint16","nodeType":"ElementaryTypeName","src":"5388:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5387:17:22"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[],"src":"5433:0:22"},"scope":5137,"src":"5361:129:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5585],"body":{"id":4973,"nodeType":"Block","src":"5602:74:22","statements":[{"expression":{"arguments":[{"id":4969,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"5643:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4970,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"5656:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4966,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5613:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$5541","typeString":"contract ILayerZeroEndpoint"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5624:18:22","memberName":"forceResumeReceive","nodeType":"MemberAccess","referencedDeclaration":5585,"src":"5613:29:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory) external"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4972,"nodeType":"ExpressionStatement","src":"5613:55:22"}]},"functionSelector":"42d65a8d","id":4974,"implemented":true,"kind":"function","modifiers":[{"id":4964,"kind":"modifierInvocation","modifierName":{"id":4963,"name":"onlyOwner","nameLocations":["5592:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"5592:9:22"},"nodeType":"ModifierInvocation","src":"5592:9:22"}],"name":"forceResumeReceive","nameLocation":"5507:18:22","nodeType":"FunctionDefinition","overrides":{"id":4962,"nodeType":"OverrideSpecifier","overrides":[],"src":"5583:8:22"},"parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"_srcChainId","nameLocation":"5533:11:22","nodeType":"VariableDeclaration","scope":4974,"src":"5526:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4957,"name":"uint16","nodeType":"ElementaryTypeName","src":"5526:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"_srcAddress","nameLocation":"5561:11:22","nodeType":"VariableDeclaration","scope":4974,"src":"5546:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4959,"name":"bytes","nodeType":"ElementaryTypeName","src":"5546:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5525:48:22"},"returnParameters":{"id":4965,"nodeType":"ParameterList","parameters":[],"src":"5602:0:22"},"scope":5137,"src":"5498:178:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4994,"nodeType":"Block","src":"5913:117:22","statements":[{"expression":{"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4983,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"5924:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":4985,"indexExpression":{"id":4984,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"5944:14:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5924:35:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4986,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"5962:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"5924:43:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4988,"nodeType":"ExpressionStatement","src":"5924:43:22"},{"eventCall":{"arguments":[{"id":4990,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"6000:14:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4991,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"6016:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4989,"name":"SetTrustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"5983:16:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5983:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4993,"nodeType":"EmitStatement","src":"5978:44:22"}]},"functionSelector":"eb8d72b7","id":4995,"implemented":true,"kind":"function","modifiers":[{"id":4981,"kind":"modifierInvocation","modifierName":{"id":4980,"name":"onlyOwner","nameLocations":["5903:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"5903:9:22"},"nodeType":"ModifierInvocation","src":"5903:9:22"}],"name":"setTrustedRemote","nameLocation":"5832:16:22","nodeType":"FunctionDefinition","parameters":{"id":4979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5856:14:22","nodeType":"VariableDeclaration","scope":4995,"src":"5849:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4975,"name":"uint16","nodeType":"ElementaryTypeName","src":"5849:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4978,"mutability":"mutable","name":"_path","nameLocation":"5887:5:22","nodeType":"VariableDeclaration","scope":4995,"src":"5872:20:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4977,"name":"bytes","nodeType":"ElementaryTypeName","src":"5872:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5848:45:22"},"returnParameters":{"id":4982,"nodeType":"ParameterList","parameters":[],"src":"5913:0:22"},"scope":5137,"src":"5823:207:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5022,"nodeType":"Block","src":"6144:175:22","statements":[{"expression":{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5004,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"6155:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":5006,"indexExpression":{"id":5005,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"6175:14:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6155:35:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5009,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"6210:14:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"id":5012,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6234:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$5137","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$5137","typeString":"contract LzApp"}],"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6226:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5010,"name":"address","nodeType":"ElementaryTypeName","src":"6226:7:22","typeDescriptions":{}}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5007,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6193:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6197:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"6193:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6193:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6155:85:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":5016,"nodeType":"ExpressionStatement","src":"6155:85:22"},{"eventCall":{"arguments":[{"id":5018,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"6280:14:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5019,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"6296:14:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5017,"name":"SetTrustedRemoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"6256:23:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6256:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5021,"nodeType":"EmitStatement","src":"6251:60:22"}]},"functionSelector":"a6c3d165","id":5023,"implemented":true,"kind":"function","modifiers":[{"id":5002,"kind":"modifierInvocation","modifierName":{"id":5001,"name":"onlyOwner","nameLocations":["6134:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"6134:9:22"},"nodeType":"ModifierInvocation","src":"6134:9:22"}],"name":"setTrustedRemoteAddress","nameLocation":"6047:23:22","nodeType":"FunctionDefinition","parameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"_remoteChainId","nameLocation":"6078:14:22","nodeType":"VariableDeclaration","scope":5023,"src":"6071:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4996,"name":"uint16","nodeType":"ElementaryTypeName","src":"6071:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4999,"mutability":"mutable","name":"_remoteAddress","nameLocation":"6109:14:22","nodeType":"VariableDeclaration","scope":5023,"src":"6094:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4998,"name":"bytes","nodeType":"ElementaryTypeName","src":"6094:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6070:54:22"},"returnParameters":{"id":5003,"nodeType":"ParameterList","parameters":[],"src":"6144:0:22"},"scope":5137,"src":"6038:281:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5053,"nodeType":"Block","src":"6420:237:22","statements":[{"assignments":[5031],"declarations":[{"constant":false,"id":5031,"mutability":"mutable","name":"path","nameLocation":"6444:4:22","nodeType":"VariableDeclaration","scope":5053,"src":"6431:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5030,"name":"bytes","nodeType":"ElementaryTypeName","src":"6431:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5035,"initialValue":{"baseExpression":{"id":5032,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"6451:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":5034,"indexExpression":{"id":5033,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"6471:14:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6451:35:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6431:55:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5037,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"6505:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6510:6:22","memberName":"length","nodeType":"MemberAccess","src":"6505:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6520:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6505:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6523:31:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""},"value":"LzApp: no trusted path record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""}],"id":5036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6497:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6497:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5043,"nodeType":"ExpressionStatement","src":"6497:58:22"},{"expression":{"arguments":[{"hexValue":"30","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6584:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5047,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"6587:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6592:6:22","memberName":"length","nodeType":"MemberAccess","src":"6587:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6587:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5044,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"6573:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6578:5:22","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":4209,"src":"6573:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6573:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5029,"id":5052,"nodeType":"Return","src":"6566:38:22"}]},"functionSelector":"9f38369a","id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedRemoteAddress","nameLocation":"6336:23:22","nodeType":"FunctionDefinition","parameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"_remoteChainId","nameLocation":"6367:14:22","nodeType":"VariableDeclaration","scope":5054,"src":"6360:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5024,"name":"uint16","nodeType":"ElementaryTypeName","src":"6360:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6359:23:22"},"returnParameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5054,"src":"6406:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5027,"name":"bytes","nodeType":"ElementaryTypeName","src":"6406:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6405:14:22"},"scope":5137,"src":"6327:330:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5069,"nodeType":"Block","src":"6724:77:22","statements":[{"expression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5061,"name":"precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"6735:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5062,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"6746:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6735:20:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5064,"nodeType":"ExpressionStatement","src":"6735:20:22"},{"eventCall":{"arguments":[{"id":5066,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"6783:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5065,"name":"SetPrecrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"6771:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6771:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5068,"nodeType":"EmitStatement","src":"6766:27:22"}]},"functionSelector":"baf3292d","id":5070,"implemented":true,"kind":"function","modifiers":[{"id":5059,"kind":"modifierInvocation","modifierName":{"id":5058,"name":"onlyOwner","nameLocations":["6714:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"6714:9:22"},"nodeType":"ModifierInvocation","src":"6714:9:22"}],"name":"setPrecrime","nameLocation":"6674:11:22","nodeType":"FunctionDefinition","parameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"_precrime","nameLocation":"6694:9:22","nodeType":"VariableDeclaration","scope":5070,"src":"6686:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5055,"name":"address","nodeType":"ElementaryTypeName","src":"6686:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6685:19:22"},"returnParameters":{"id":5060,"nodeType":"ParameterList","parameters":[],"src":"6724:0:22"},"scope":5137,"src":"6665:136:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5095,"nodeType":"Block","src":"6938:133:22","statements":[{"expression":{"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5081,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"6949:15:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":5084,"indexExpression":{"id":5082,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"6965:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6949:28:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":5085,"indexExpression":{"id":5083,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"6978:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6949:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5086,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"6993:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6949:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5088,"nodeType":"ExpressionStatement","src":"6949:51:22"},{"eventCall":{"arguments":[{"id":5090,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"7029:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5091,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"7042:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5092,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"7055:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5089,"name":"SetMinDstGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"7016:12:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,uint256)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7016:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5094,"nodeType":"EmitStatement","src":"7011:52:22"}]},"functionSelector":"df2a5b3b","id":5096,"implemented":true,"kind":"function","modifiers":[{"id":5079,"kind":"modifierInvocation","modifierName":{"id":5078,"name":"onlyOwner","nameLocations":["6928:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"6928:9:22"},"nodeType":"ModifierInvocation","src":"6928:9:22"}],"name":"setMinDstGas","nameLocation":"6818:12:22","nodeType":"FunctionDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"_dstChainId","nameLocation":"6848:11:22","nodeType":"VariableDeclaration","scope":5096,"src":"6841:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5071,"name":"uint16","nodeType":"ElementaryTypeName","src":"6841:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5074,"mutability":"mutable","name":"_packetType","nameLocation":"6877:11:22","nodeType":"VariableDeclaration","scope":5096,"src":"6870:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5073,"name":"uint16","nodeType":"ElementaryTypeName","src":"6870:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"_minGas","nameLocation":"6904:7:22","nodeType":"VariableDeclaration","scope":5096,"src":"6899:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint","nodeType":"ElementaryTypeName","src":"6899:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6830:88:22"},"returnParameters":{"id":5080,"nodeType":"ParameterList","parameters":[],"src":"6938:0:22"},"scope":5137,"src":"6809:262:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5111,"nodeType":"Block","src":"7213:62:22","statements":[{"expression":{"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5105,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"7224:22:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":5107,"indexExpression":{"id":5106,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"7247:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7224:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5108,"name":"_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"7262:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5110,"nodeType":"ExpressionStatement","src":"7224:43:22"}]},"functionSelector":"0df37483","id":5112,"implemented":true,"kind":"function","modifiers":[{"id":5103,"kind":"modifierInvocation","modifierName":{"id":5102,"name":"onlyOwner","nameLocations":["7203:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"7203:9:22"},"nodeType":"ModifierInvocation","src":"7203:9:22"}],"name":"setPayloadSizeLimit","nameLocation":"7142:19:22","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"_dstChainId","nameLocation":"7169:11:22","nodeType":"VariableDeclaration","scope":5112,"src":"7162:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5097,"name":"uint16","nodeType":"ElementaryTypeName","src":"7162:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5100,"mutability":"mutable","name":"_size","nameLocation":"7187:5:22","nodeType":"VariableDeclaration","scope":5112,"src":"7182:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint","nodeType":"ElementaryTypeName","src":"7182:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7161:32:22"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[],"src":"7213:0:22"},"scope":5137,"src":"7133:142:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5135,"nodeType":"Block","src":"7475:148:22","statements":[{"assignments":[5122],"declarations":[{"constant":false,"id":5122,"mutability":"mutable","name":"trustedSource","nameLocation":"7499:13:22","nodeType":"VariableDeclaration","scope":5135,"src":"7486:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5121,"name":"bytes","nodeType":"ElementaryTypeName","src":"7486:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5126,"initialValue":{"baseExpression":{"id":5123,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"7515:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":5125,"indexExpression":{"id":5124,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"7535:11:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7515:32:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7486:61:22"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5128,"name":"trustedSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"7575:13:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7565:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7565:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5131,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"7603:11:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5130,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7593:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7565:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5120,"id":5134,"nodeType":"Return","src":"7558:57:22"}]},"functionSelector":"3d8b38f6","id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedRemote","nameLocation":"7382:15:22","nodeType":"FunctionDefinition","parameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"_srcChainId","nameLocation":"7405:11:22","nodeType":"VariableDeclaration","scope":5136,"src":"7398:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5113,"name":"uint16","nodeType":"ElementaryTypeName","src":"7398:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5116,"mutability":"mutable","name":"_srcAddress","nameLocation":"7433:11:22","nodeType":"VariableDeclaration","scope":5136,"src":"7418:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5115,"name":"bytes","nodeType":"ElementaryTypeName","src":"7418:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7397:48:22"},"returnParameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5136,"src":"7469:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5118,"name":"bool","nodeType":"ElementaryTypeName","src":"7469:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7468:6:22"},"scope":5137,"src":"7373:250:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5138,"src":"458:7168:22","usedErrors":[],"usedEvents":[287,782,4620,4626,4632,4640]}],"src":"35:7593:22"},"id":22},"contracts/bridge/lzApp/NonblockingLzApp.sol":{"ast":{"absolutePath":"contracts/bridge/lzApp/NonblockingLzApp.sol","exportedSymbols":{"AddressUpgradeable":[1486],"BytesLib":[4478],"ContextUpgradeable":[1528],"ExcessivelySafeCall":[4575],"ILayerZeroEndpoint":[5541],"ILayerZeroReceiver":[5555],"ILayerZeroUserApplicationConfig":[5586],"Initializable":[936],"LzApp":[5137],"NonblockingLzApp":[5396],"OwnableUpgradeable":[402]},"id":5397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5139,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:23"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5397,"sourceUnit":937,"src":"62:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/lzApp/LzApp.sol","file":"./LzApp.sol","id":5141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5397,"sourceUnit":5138,"src":"139:21:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/bridge/libraries/ExcessivelySafeCall.sol","file":"../libraries/ExcessivelySafeCall.sol","id":5142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5397,"sourceUnit":4576,"src":"162:46:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5143,"name":"Initializable","nameLocations":["599:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":936,"src":"599:13:23"},"id":5144,"nodeType":"InheritanceSpecifier","src":"599:13:23"},{"baseName":{"id":5145,"name":"LzApp","nameLocations":["614:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":5137,"src":"614:5:23"},"id":5146,"nodeType":"InheritanceSpecifier","src":"614:5:23"}],"canonicalName":"NonblockingLzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":5396,"linearizedBaseContracts":[5396,5137,5586,5555,402,1528,936],"name":"NonblockingLzApp","nameLocation":"579:16:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5149,"libraryName":{"id":5147,"name":"ExcessivelySafeCall","nameLocations":["633:19:23"],"nodeType":"IdentifierPath","referencedDeclaration":4575,"src":"633:19:23"},"nodeType":"UsingForDirective","src":"627:38:23","typeName":{"id":5148,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":5160,"nodeType":"Block","src":"751:63:23","statements":[{"expression":{"arguments":[{"id":5157,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"796:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5156,"name":"__NonblockingLzApp_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"762:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"762:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5159,"nodeType":"ExpressionStatement","src":"762:44:23"}]},"id":5161,"implemented":true,"kind":"function","modifiers":[{"id":5154,"kind":"modifierInvocation","modifierName":{"id":5153,"name":"onlyInitializing","nameLocations":["734:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"734:16:23"},"nodeType":"ModifierInvocation","src":"734:16:23"}],"name":"__NonblockingLzApp_init","nameLocation":"682:23:23","nodeType":"FunctionDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"_endpoint","nameLocation":"714:9:23","nodeType":"VariableDeclaration","scope":5161,"src":"706:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5150,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"705:19:23"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[],"src":"751:0:23"},"scope":5396,"src":"673:141:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5172,"nodeType":"Block","src":"910:42:23","statements":[{"expression":{"arguments":[{"id":5169,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"934:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5168,"name":"__LzApp_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"921:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"921:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5171,"nodeType":"ExpressionStatement","src":"921:23:23"}]},"id":5173,"implemented":true,"kind":"function","modifiers":[{"id":5166,"kind":"modifierInvocation","modifierName":{"id":5165,"name":"onlyInitializing","nameLocations":["893:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"893:16:23"},"nodeType":"ModifierInvocation","src":"893:16:23"}],"name":"__NonblockingLzApp_init_unchained","nameLocation":"831:33:23","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"_endpoint","nameLocation":"873:9:23","nodeType":"VariableDeclaration","scope":5173,"src":"865:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5162,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:19:23"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[],"src":"910:0:23"},"scope":5396,"src":"822:130:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"5b8c41e6","id":5181,"mutability":"mutable","name":"failedMessages","nameLocation":"1031:14:23","nodeType":"VariableDeclaration","scope":5396,"src":"960:85:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"typeName":{"id":5180,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5174,"name":"uint16","nodeType":"ElementaryTypeName","src":"968:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"960:63:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5179,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5175,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"978:44:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes => mapping(uint64 => bytes32))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5178,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5176,"name":"uint64","nodeType":"ElementaryTypeName","src":"1003:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"995:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1013:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c","id":5193,"name":"MessageFailed","nameLocation":"1060:13:23","nodeType":"EventDefinition","parameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"1081:11:23","nodeType":"VariableDeclaration","scope":5193,"src":"1074:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5182,"name":"uint16","nodeType":"ElementaryTypeName","src":"1074:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5185,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"1100:11:23","nodeType":"VariableDeclaration","scope":5193,"src":"1094:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5184,"name":"bytes","nodeType":"ElementaryTypeName","src":"1094:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5187,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"1120:6:23","nodeType":"VariableDeclaration","scope":5193,"src":"1113:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5186,"name":"uint64","nodeType":"ElementaryTypeName","src":"1113:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5189,"indexed":false,"mutability":"mutable","name":"_payload","nameLocation":"1134:8:23","nodeType":"VariableDeclaration","scope":5193,"src":"1128:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5188,"name":"bytes","nodeType":"ElementaryTypeName","src":"1128:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5191,"indexed":false,"mutability":"mutable","name":"_reason","nameLocation":"1150:7:23","nodeType":"VariableDeclaration","scope":5193,"src":"1144:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5190,"name":"bytes","nodeType":"ElementaryTypeName","src":"1144:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1073:85:23"},"src":"1054:105:23"},{"anonymous":false,"eventSelector":"c264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5","id":5203,"name":"RetryMessageSuccess","nameLocation":"1171:19:23","nodeType":"EventDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"1198:11:23","nodeType":"VariableDeclaration","scope":5203,"src":"1191:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5194,"name":"uint16","nodeType":"ElementaryTypeName","src":"1191:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5197,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"1217:11:23","nodeType":"VariableDeclaration","scope":5203,"src":"1211:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5196,"name":"bytes","nodeType":"ElementaryTypeName","src":"1211:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5199,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"1237:6:23","nodeType":"VariableDeclaration","scope":5203,"src":"1230:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5198,"name":"uint64","nodeType":"ElementaryTypeName","src":"1230:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5201,"indexed":false,"mutability":"mutable","name":"_payloadHash","nameLocation":"1253:12:23","nodeType":"VariableDeclaration","scope":5203,"src":"1245:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1245:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1190:76:23"},"src":"1165:102:23"},{"baseFunctions":[4739],"body":{"id":5251,"nodeType":"Block","src":"1510:426:23","statements":[{"assignments":[5216,5218],"declarations":[{"constant":false,"id":5216,"mutability":"mutable","name":"success","nameLocation":"1527:7:23","nodeType":"VariableDeclaration","scope":5251,"src":"1522:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5215,"name":"bool","nodeType":"ElementaryTypeName","src":"1522:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5218,"mutability":"mutable","name":"reason","nameLocation":"1549:6:23","nodeType":"VariableDeclaration","scope":5251,"src":"1536:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5217,"name":"bytes","nodeType":"ElementaryTypeName","src":"1536:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5238,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5224,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1607:7:23","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:9:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313530","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1631:3:23","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},{"arguments":[{"expression":{"expression":{"id":5229,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1672:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$5396","typeString":"contract NonblockingLzApp"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1677:20:23","memberName":"nonblockingLzReceive","nodeType":"MemberAccess","referencedDeclaration":5316,"src":"1672:25:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1698:8:23","memberName":"selector","nodeType":"MemberAccess","src":"1672:34:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5232,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"1708:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5233,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"1721:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5234,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"1734:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5235,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1742:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5227,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1649:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1653:18:23","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1649:22:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:102:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":5221,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1567:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$5396","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$5396","typeString":"contract NonblockingLzApp"}],"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1559:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5219,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:23","typeDescriptions":{}}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1559:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1573:19:23","memberName":"excessivelySafeCall","nodeType":"MemberAccess","referencedDeclaration":4518,"src":"1559:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,uint256,uint16,bytes memory) returns (bool,bytes memory)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1559:203:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1521:241:23"},{"condition":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1821:8:23","subExpression":{"id":5239,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"1822:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5250,"nodeType":"IfStatement","src":"1817:112:23","trueBody":{"id":5249,"nodeType":"Block","src":"1831:98:23","statements":[{"expression":{"arguments":[{"id":5242,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"1866:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5243,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"1879:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5244,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"1892:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5245,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1900:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5246,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"1910:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5241,"name":"_storeFailedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"1846:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5248,"nodeType":"ExpressionStatement","src":"1846:71:23"}]}}]},"id":5252,"implemented":true,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"1338:18:23","nodeType":"FunctionDefinition","overrides":{"id":5213,"nodeType":"OverrideSpecifier","overrides":[],"src":"1501:8:23"},"parameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"_srcChainId","nameLocation":"1374:11:23","nodeType":"VariableDeclaration","scope":5252,"src":"1367:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5204,"name":"uint16","nodeType":"ElementaryTypeName","src":"1367:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5207,"mutability":"mutable","name":"_srcAddress","nameLocation":"1409:11:23","nodeType":"VariableDeclaration","scope":5252,"src":"1396:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5206,"name":"bytes","nodeType":"ElementaryTypeName","src":"1396:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5209,"mutability":"mutable","name":"_nonce","nameLocation":"1438:6:23","nodeType":"VariableDeclaration","scope":5252,"src":"1431:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5208,"name":"uint64","nodeType":"ElementaryTypeName","src":"1431:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5211,"mutability":"mutable","name":"_payload","nameLocation":"1468:8:23","nodeType":"VariableDeclaration","scope":5252,"src":"1455:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5210,"name":"bytes","nodeType":"ElementaryTypeName","src":"1455:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1356:127:23"},"returnParameters":{"id":5214,"nodeType":"ParameterList","parameters":[],"src":"1510:0:23"},"scope":5396,"src":"1329:607:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":5285,"nodeType":"Block","src":"2148:171:23","statements":[{"expression":{"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5265,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"2159:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":5269,"indexExpression":{"id":5266,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"2174:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2159:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":5270,"indexExpression":{"id":5267,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"2187:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2159:40:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":5271,"indexExpression":{"id":5268,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"2200:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2159:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5273,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"2220:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5272,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2210:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2159:70:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5276,"nodeType":"ExpressionStatement","src":"2159:70:23"},{"eventCall":{"arguments":[{"id":5278,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"2259:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5279,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"2272:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5280,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"2285:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5281,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"2293:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5282,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"2303:7:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5277,"name":"MessageFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"2245:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2245:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5284,"nodeType":"EmitStatement","src":"2240:71:23"}]},"id":5286,"implemented":true,"kind":"function","modifiers":[],"name":"_storeFailedMessage","nameLocation":"1953:19:23","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"_srcChainId","nameLocation":"1990:11:23","nodeType":"VariableDeclaration","scope":5286,"src":"1983:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5253,"name":"uint16","nodeType":"ElementaryTypeName","src":"1983:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5256,"mutability":"mutable","name":"_srcAddress","nameLocation":"2025:11:23","nodeType":"VariableDeclaration","scope":5286,"src":"2012:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5255,"name":"bytes","nodeType":"ElementaryTypeName","src":"2012:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"_nonce","nameLocation":"2054:6:23","nodeType":"VariableDeclaration","scope":5286,"src":"2047:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5257,"name":"uint64","nodeType":"ElementaryTypeName","src":"2047:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"_payload","nameLocation":"2084:8:23","nodeType":"VariableDeclaration","scope":5286,"src":"2071:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5259,"name":"bytes","nodeType":"ElementaryTypeName","src":"2071:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"_reason","nameLocation":"2116:7:23","nodeType":"VariableDeclaration","scope":5286,"src":"2103:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5261,"name":"bytes","nodeType":"ElementaryTypeName","src":"2103:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1972:158:23"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[],"src":"2148:0:23"},"scope":5396,"src":"1944:375:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":5315,"nodeType":"Block","src":"2503:213:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5298,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2560:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2560:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5302,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2584:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$5396","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$5396","typeString":"contract NonblockingLzApp"}],"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2576:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5300,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:23","typeDescriptions":{}}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2576:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2560:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a417070","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2591:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""},"value":"NonblockingLzApp: caller must be LzApp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""}],"id":5297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2552:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:80:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5307,"nodeType":"ExpressionStatement","src":"2552:80:23"},{"expression":{"arguments":[{"id":5309,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"2665:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5310,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"2678:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":5311,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"2691:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5312,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"2699:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5308,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"2643:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2643:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5314,"nodeType":"ExpressionStatement","src":"2643:65:23"}]},"functionSelector":"66ad5c8a","id":5316,"implemented":true,"kind":"function","modifiers":[],"name":"nonblockingLzReceive","nameLocation":"2336:20:23","nodeType":"FunctionDefinition","parameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"_srcChainId","nameLocation":"2374:11:23","nodeType":"VariableDeclaration","scope":5316,"src":"2367:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5287,"name":"uint16","nodeType":"ElementaryTypeName","src":"2367:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5290,"mutability":"mutable","name":"_srcAddress","nameLocation":"2411:11:23","nodeType":"VariableDeclaration","scope":5316,"src":"2396:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5289,"name":"bytes","nodeType":"ElementaryTypeName","src":"2396:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"_nonce","nameLocation":"2440:6:23","nodeType":"VariableDeclaration","scope":5316,"src":"2433:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5291,"name":"uint64","nodeType":"ElementaryTypeName","src":"2433:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5294,"mutability":"mutable","name":"_payload","nameLocation":"2472:8:23","nodeType":"VariableDeclaration","scope":5316,"src":"2457:23:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5293,"name":"bytes","nodeType":"ElementaryTypeName","src":"2457:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2356:131:23"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[],"src":"2503:0:23"},"scope":5396,"src":"2327:389:23","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":5327,"implemented":false,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"2771:21:23","nodeType":"FunctionDefinition","parameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"_srcChainId","nameLocation":"2810:11:23","nodeType":"VariableDeclaration","scope":5327,"src":"2803:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5317,"name":"uint16","nodeType":"ElementaryTypeName","src":"2803:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5320,"mutability":"mutable","name":"_srcAddress","nameLocation":"2845:11:23","nodeType":"VariableDeclaration","scope":5327,"src":"2832:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5319,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5322,"mutability":"mutable","name":"_nonce","nameLocation":"2874:6:23","nodeType":"VariableDeclaration","scope":5327,"src":"2867:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5321,"name":"uint64","nodeType":"ElementaryTypeName","src":"2867:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5324,"mutability":"mutable","name":"_payload","nameLocation":"2904:8:23","nodeType":"VariableDeclaration","scope":5327,"src":"2891:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5323,"name":"bytes","nodeType":"ElementaryTypeName","src":"2891:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2792:127:23"},"returnParameters":{"id":5326,"nodeType":"ParameterList","parameters":[],"src":"2936:0:23"},"scope":5396,"src":"2762:175:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":5394,"nodeType":"Block","src":"3121:634:23","statements":[{"assignments":[5339],"declarations":[{"constant":false,"id":5339,"mutability":"mutable","name":"payloadHash","nameLocation":"3185:11:23","nodeType":"VariableDeclaration","scope":5394,"src":"3177:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3177:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5347,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5340,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"3199:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":5342,"indexExpression":{"id":5341,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"3214:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3199:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":5344,"indexExpression":{"id":5343,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"3227:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3199:40:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":5346,"indexExpression":{"id":5345,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"3240:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3199:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3177:70:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"3266:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3289:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3281:7:23","typeDescriptions":{}}},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3266:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373616765","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3293:37:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""},"value":"NonblockingLzApp: no stored message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""}],"id":5348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3258:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5357,"nodeType":"ExpressionStatement","src":"3258:73:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5360,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3360:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5359,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3350:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3350:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5362,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"3373:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3350:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6164","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3386:35:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""},"value":"NonblockingLzApp: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""}],"id":5358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3342:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3342:80:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5366,"nodeType":"ExpressionStatement","src":"3342:80:23"},{"expression":{"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5367,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"3470:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":5371,"indexExpression":{"id":5368,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"3485:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3470:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":5372,"indexExpression":{"id":5369,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"3498:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3470:40:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":5373,"indexExpression":{"id":5370,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"3511:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3470:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3529:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3521:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3521:7:23","typeDescriptions":{}}},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3521:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3470:61:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5379,"nodeType":"ExpressionStatement","src":"3470:61:23"},{"expression":{"arguments":[{"id":5381,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"3622:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5382,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"3635:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":5383,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"3648:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5384,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3656:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5380,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"3600:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3600:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"ExpressionStatement","src":"3600:65:23"},{"eventCall":{"arguments":[{"id":5388,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"3701:11:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5389,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"3714:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":5390,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"3727:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5391,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"3735:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5387,"name":"RetryMessageSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"3681:19:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes32_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes32)"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3681:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5393,"nodeType":"EmitStatement","src":"3676:71:23"}]},"functionSelector":"d1deba1f","id":5395,"implemented":true,"kind":"function","modifiers":[],"name":"retryMessage","nameLocation":"2954:12:23","nodeType":"FunctionDefinition","parameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5329,"mutability":"mutable","name":"_srcChainId","nameLocation":"2984:11:23","nodeType":"VariableDeclaration","scope":5395,"src":"2977:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5328,"name":"uint16","nodeType":"ElementaryTypeName","src":"2977:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5331,"mutability":"mutable","name":"_srcAddress","nameLocation":"3021:11:23","nodeType":"VariableDeclaration","scope":5395,"src":"3006:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5330,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5333,"mutability":"mutable","name":"_nonce","nameLocation":"3050:6:23","nodeType":"VariableDeclaration","scope":5395,"src":"3043:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5332,"name":"uint64","nodeType":"ElementaryTypeName","src":"3043:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5335,"mutability":"mutable","name":"_payload","nameLocation":"3082:8:23","nodeType":"VariableDeclaration","scope":5395,"src":"3067:23:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5334,"name":"bytes","nodeType":"ElementaryTypeName","src":"3067:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2966:131:23"},"returnParameters":{"id":5337,"nodeType":"ParameterList","parameters":[],"src":"3121:0:23"},"scope":5396,"src":"2945:810:23","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":5397,"src":"561:3197:23","usedErrors":[],"usedEvents":[287,782,4620,4626,4632,4640,5193,5203]}],"src":"35:3725:23"},"id":23},"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ast":{"absolutePath":"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol","exportedSymbols":{"ILayerZeroEndpoint":[5541],"ILayerZeroUserApplicationConfig":[5586]},"id":5542,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5398,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"35:24:24"},{"absolutePath":"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./ILayerZeroUserApplicationConfig.sol","id":5399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5542,"sourceUnit":5587,"src":"63:47:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5400,"name":"ILayerZeroUserApplicationConfig","nameLocations":["146:31:24"],"nodeType":"IdentifierPath","referencedDeclaration":5586,"src":"146:31:24"},"id":5401,"nodeType":"InheritanceSpecifier","src":"146:31:24"}],"canonicalName":"ILayerZeroEndpoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5541,"linearizedBaseContracts":[5541,5586],"name":"ILayerZeroEndpoint","nameLocation":"124:18:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c5803100","id":5416,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"937:4:24","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"_dstChainId","nameLocation":"959:11:24","nodeType":"VariableDeclaration","scope":5416,"src":"952:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5402,"name":"uint16","nodeType":"ElementaryTypeName","src":"952:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5405,"mutability":"mutable","name":"_destination","nameLocation":"996:12:24","nodeType":"VariableDeclaration","scope":5416,"src":"981:27:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5404,"name":"bytes","nodeType":"ElementaryTypeName","src":"981:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5407,"mutability":"mutable","name":"_payload","nameLocation":"1034:8:24","nodeType":"VariableDeclaration","scope":5416,"src":"1019:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5406,"name":"bytes","nodeType":"ElementaryTypeName","src":"1019:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5409,"mutability":"mutable","name":"_refundAddress","nameLocation":"1069:14:24","nodeType":"VariableDeclaration","scope":5416,"src":"1053:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5408,"name":"address","nodeType":"ElementaryTypeName","src":"1053:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5411,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"1102:18:24","nodeType":"VariableDeclaration","scope":5416,"src":"1094:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5410,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5413,"mutability":"mutable","name":"_adapterParams","nameLocation":"1146:14:24","nodeType":"VariableDeclaration","scope":5416,"src":"1131:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5412,"name":"bytes","nodeType":"ElementaryTypeName","src":"1131:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"941:226:24"},"returnParameters":{"id":5415,"nodeType":"ParameterList","parameters":[],"src":"1184:0:24"},"scope":5541,"src":"928:257:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c2fa4813","id":5431,"implemented":false,"kind":"function","modifiers":[],"name":"receivePayload","nameLocation":"1686:14:24","nodeType":"FunctionDefinition","parameters":{"id":5429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"_srcChainId","nameLocation":"1718:11:24","nodeType":"VariableDeclaration","scope":5431,"src":"1711:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5417,"name":"uint16","nodeType":"ElementaryTypeName","src":"1711:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5420,"mutability":"mutable","name":"_srcAddress","nameLocation":"1755:11:24","nodeType":"VariableDeclaration","scope":5431,"src":"1740:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5419,"name":"bytes","nodeType":"ElementaryTypeName","src":"1740:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5422,"mutability":"mutable","name":"_dstAddress","nameLocation":"1785:11:24","nodeType":"VariableDeclaration","scope":5431,"src":"1777:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5421,"name":"address","nodeType":"ElementaryTypeName","src":"1777:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5424,"mutability":"mutable","name":"_nonce","nameLocation":"1814:6:24","nodeType":"VariableDeclaration","scope":5431,"src":"1807:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5423,"name":"uint64","nodeType":"ElementaryTypeName","src":"1807:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5426,"mutability":"mutable","name":"_gasLimit","nameLocation":"1836:9:24","nodeType":"VariableDeclaration","scope":5431,"src":"1831:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5425,"name":"uint","nodeType":"ElementaryTypeName","src":"1831:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5428,"mutability":"mutable","name":"_payload","nameLocation":"1871:8:24","nodeType":"VariableDeclaration","scope":5431,"src":"1856:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5427,"name":"bytes","nodeType":"ElementaryTypeName","src":"1856:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1700:186:24"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[],"src":"1895:0:24"},"scope":5541,"src":"1677:219:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fdc07c70","id":5440,"implemented":false,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"2137:15:24","nodeType":"FunctionDefinition","parameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"_srcChainId","nameLocation":"2160:11:24","nodeType":"VariableDeclaration","scope":5440,"src":"2153:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5432,"name":"uint16","nodeType":"ElementaryTypeName","src":"2153:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5435,"mutability":"mutable","name":"_srcAddress","nameLocation":"2188:11:24","nodeType":"VariableDeclaration","scope":5440,"src":"2173:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5434,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:48:24"},"returnParameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5440,"src":"2224:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5437,"name":"uint64","nodeType":"ElementaryTypeName","src":"2224:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2223:8:24"},"scope":5541,"src":"2128:104:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a145748","id":5449,"implemented":false,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"2411:16:24","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"_dstChainId","nameLocation":"2435:11:24","nodeType":"VariableDeclaration","scope":5449,"src":"2428:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5441,"name":"uint16","nodeType":"ElementaryTypeName","src":"2428:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5444,"mutability":"mutable","name":"_srcAddress","nameLocation":"2456:11:24","nodeType":"VariableDeclaration","scope":5449,"src":"2448:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5443,"name":"address","nodeType":"ElementaryTypeName","src":"2448:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:41:24"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5449,"src":"2492:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5446,"name":"uint64","nodeType":"ElementaryTypeName","src":"2492:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2491:8:24"},"scope":5541,"src":"2402:98:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40a7bb10","id":5466,"implemented":false,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"3031:12:24","nodeType":"FunctionDefinition","parameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5451,"mutability":"mutable","name":"_dstChainId","nameLocation":"3061:11:24","nodeType":"VariableDeclaration","scope":5466,"src":"3054:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5450,"name":"uint16","nodeType":"ElementaryTypeName","src":"3054:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5453,"mutability":"mutable","name":"_userApplication","nameLocation":"3091:16:24","nodeType":"VariableDeclaration","scope":5466,"src":"3083:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5452,"name":"address","nodeType":"ElementaryTypeName","src":"3083:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5455,"mutability":"mutable","name":"_payload","nameLocation":"3133:8:24","nodeType":"VariableDeclaration","scope":5466,"src":"3118:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5454,"name":"bytes","nodeType":"ElementaryTypeName","src":"3118:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5457,"mutability":"mutable","name":"_payInZRO","nameLocation":"3157:9:24","nodeType":"VariableDeclaration","scope":5466,"src":"3152:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5456,"name":"bool","nodeType":"ElementaryTypeName","src":"3152:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5459,"mutability":"mutable","name":"_adapterParam","nameLocation":"3192:13:24","nodeType":"VariableDeclaration","scope":5466,"src":"3177:28:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5458,"name":"bytes","nodeType":"ElementaryTypeName","src":"3177:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3043:169:24"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"nativeFee","nameLocation":"3241:9:24","nodeType":"VariableDeclaration","scope":5466,"src":"3236:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5461,"name":"uint","nodeType":"ElementaryTypeName","src":"3236:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5464,"mutability":"mutable","name":"zroFee","nameLocation":"3257:6:24","nodeType":"VariableDeclaration","scope":5466,"src":"3252:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint","nodeType":"ElementaryTypeName","src":"3252:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3235:29:24"},"scope":5541,"src":"3022:243:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3408e470","id":5471,"implemented":false,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"3346:10:24","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[],"src":"3356:2:24"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5471,"src":"3382:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5468,"name":"uint16","nodeType":"ElementaryTypeName","src":"3382:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3381:8:24"},"scope":5541,"src":"3337:53:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaff5f16","id":5480,"implemented":false,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"3662:12:24","nodeType":"FunctionDefinition","parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"_srcChainId","nameLocation":"3692:11:24","nodeType":"VariableDeclaration","scope":5480,"src":"3685:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5472,"name":"uint16","nodeType":"ElementaryTypeName","src":"3685:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5475,"mutability":"mutable","name":"_srcAddress","nameLocation":"3729:11:24","nodeType":"VariableDeclaration","scope":5480,"src":"3714:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5474,"name":"bytes","nodeType":"ElementaryTypeName","src":"3714:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5477,"mutability":"mutable","name":"_payload","nameLocation":"3766:8:24","nodeType":"VariableDeclaration","scope":5480,"src":"3751:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5476,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3674:107:24"},"returnParameters":{"id":5479,"nodeType":"ParameterList","parameters":[],"src":"3790:0:24"},"scope":5541,"src":"3653:138:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0eaf6ea6","id":5489,"implemented":false,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"4008:16:24","nodeType":"FunctionDefinition","parameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"_srcChainId","nameLocation":"4032:11:24","nodeType":"VariableDeclaration","scope":5489,"src":"4025:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5481,"name":"uint16","nodeType":"ElementaryTypeName","src":"4025:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5484,"mutability":"mutable","name":"_srcAddress","nameLocation":"4060:11:24","nodeType":"VariableDeclaration","scope":5489,"src":"4045:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5483,"name":"bytes","nodeType":"ElementaryTypeName","src":"4045:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4024:48:24"},"returnParameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"4096:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5486,"name":"bool","nodeType":"ElementaryTypeName","src":"4096:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4095:6:24"},"scope":5541,"src":"3999:103:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c729da1","id":5496,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"4264:21:24","nodeType":"FunctionDefinition","parameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"_userApplication","nameLocation":"4294:16:24","nodeType":"VariableDeclaration","scope":5496,"src":"4286:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5490,"name":"address","nodeType":"ElementaryTypeName","src":"4286:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4285:26:24"},"returnParameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5496,"src":"4335:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5493,"name":"address","nodeType":"ElementaryTypeName","src":"4335:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4334:9:24"},"scope":5541,"src":"4255:89:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ba2fd6","id":5503,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"4508:24:24","nodeType":"FunctionDefinition","parameters":{"id":5499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5498,"mutability":"mutable","name":"_userApplication","nameLocation":"4541:16:24","nodeType":"VariableDeclaration","scope":5503,"src":"4533:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5497,"name":"address","nodeType":"ElementaryTypeName","src":"4533:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4532:26:24"},"returnParameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5503,"src":"4582:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5500,"name":"address","nodeType":"ElementaryTypeName","src":"4582:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4581:9:24"},"scope":5541,"src":"4499:92:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e97a448a","id":5508,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"4732:16:24","nodeType":"FunctionDefinition","parameters":{"id":5504,"nodeType":"ParameterList","parameters":[],"src":"4748:2:24"},"returnParameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5508,"src":"4774:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5505,"name":"bool","nodeType":"ElementaryTypeName","src":"4774:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4773:6:24"},"scope":5541,"src":"4723:57:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca066b35","id":5513,"implemented":false,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"4924:18:24","nodeType":"FunctionDefinition","parameters":{"id":5509,"nodeType":"ParameterList","parameters":[],"src":"4942:2:24"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5513,"src":"4968:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5510,"name":"bool","nodeType":"ElementaryTypeName","src":"4968:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4967:6:24"},"scope":5541,"src":"4915:59:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5ecbdbc","id":5526,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"5388:9:24","nodeType":"FunctionDefinition","parameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"_version","nameLocation":"5415:8:24","nodeType":"VariableDeclaration","scope":5526,"src":"5408:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5514,"name":"uint16","nodeType":"ElementaryTypeName","src":"5408:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5517,"mutability":"mutable","name":"_chainId","nameLocation":"5441:8:24","nodeType":"VariableDeclaration","scope":5526,"src":"5434:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5516,"name":"uint16","nodeType":"ElementaryTypeName","src":"5434:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5519,"mutability":"mutable","name":"_userApplication","nameLocation":"5468:16:24","nodeType":"VariableDeclaration","scope":5526,"src":"5460:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5518,"name":"address","nodeType":"ElementaryTypeName","src":"5460:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5521,"mutability":"mutable","name":"_configType","nameLocation":"5500:11:24","nodeType":"VariableDeclaration","scope":5526,"src":"5495:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint","nodeType":"ElementaryTypeName","src":"5495:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:121:24"},"returnParameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5526,"src":"5542:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5523,"name":"bytes","nodeType":"ElementaryTypeName","src":"5542:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5541:14:24"},"scope":5541,"src":"5379:177:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"096568f6","id":5533,"implemented":false,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"5719:14:24","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"_userApplication","nameLocation":"5742:16:24","nodeType":"VariableDeclaration","scope":5533,"src":"5734:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5527,"name":"address","nodeType":"ElementaryTypeName","src":"5734:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5733:26:24"},"returnParameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5533,"src":"5783:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5530,"name":"uint16","nodeType":"ElementaryTypeName","src":"5783:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5782:8:24"},"scope":5541,"src":"5710:81:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"da1a7c9a","id":5540,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"5959:17:24","nodeType":"FunctionDefinition","parameters":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"_userApplication","nameLocation":"5985:16:24","nodeType":"VariableDeclaration","scope":5540,"src":"5977:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5534,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5976:26:24"},"returnParameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5540,"src":"6026:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5537,"name":"uint16","nodeType":"ElementaryTypeName","src":"6026:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6025:8:24"},"scope":5541,"src":"5950:84:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5542,"src":"114:5923:24","usedErrors":[],"usedEvents":[]}],"src":"35:6004:24"},"id":24},"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[5555]},"id":5556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5543,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"35:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5555,"linearizedBaseContracts":[5555],"name":"ILayerZeroReceiver","nameLocation":"73:18:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"001d3567","id":5554,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"492:9:25","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"_srcChainId","nameLocation":"519:11:25","nodeType":"VariableDeclaration","scope":5554,"src":"512:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5544,"name":"uint16","nodeType":"ElementaryTypeName","src":"512:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5547,"mutability":"mutable","name":"_srcAddress","nameLocation":"556:11:25","nodeType":"VariableDeclaration","scope":5554,"src":"541:26:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5546,"name":"bytes","nodeType":"ElementaryTypeName","src":"541:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5549,"mutability":"mutable","name":"_nonce","nameLocation":"585:6:25","nodeType":"VariableDeclaration","scope":5554,"src":"578:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5548,"name":"uint64","nodeType":"ElementaryTypeName","src":"578:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"_payload","nameLocation":"617:8:25","nodeType":"VariableDeclaration","scope":5554,"src":"602:23:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5550,"name":"bytes","nodeType":"ElementaryTypeName","src":"602:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"501:131:25"},"returnParameters":{"id":5553,"nodeType":"ParameterList","parameters":[],"src":"641:0:25"},"scope":5555,"src":"483:159:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5556,"src":"63:582:25","usedErrors":[],"usedEvents":[]}],"src":"35:612:25"},"id":25},"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ast":{"absolutePath":"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","exportedSymbols":{"ILayerZeroUserApplicationConfig":[5586]},"id":5587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5557,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"35:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroUserApplicationConfig","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5586,"linearizedBaseContracts":[5586],"name":"ILayerZeroUserApplicationConfig","nameLocation":"73:31:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cbed8b9c","id":5568,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"522:9:26","nodeType":"FunctionDefinition","parameters":{"id":5566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"_version","nameLocation":"549:8:26","nodeType":"VariableDeclaration","scope":5568,"src":"542:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5558,"name":"uint16","nodeType":"ElementaryTypeName","src":"542:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5561,"mutability":"mutable","name":"_chainId","nameLocation":"575:8:26","nodeType":"VariableDeclaration","scope":5568,"src":"568:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5560,"name":"uint16","nodeType":"ElementaryTypeName","src":"568:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5563,"mutability":"mutable","name":"_configType","nameLocation":"599:11:26","nodeType":"VariableDeclaration","scope":5568,"src":"594:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5562,"name":"uint","nodeType":"ElementaryTypeName","src":"594:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5565,"mutability":"mutable","name":"_config","nameLocation":"636:7:26","nodeType":"VariableDeclaration","scope":5568,"src":"621:22:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5564,"name":"bytes","nodeType":"ElementaryTypeName","src":"621:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"531:119:26"},"returnParameters":{"id":5567,"nodeType":"ParameterList","parameters":[],"src":"659:0:26"},"scope":5586,"src":"513:147:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"07e0db17","id":5573,"implemented":false,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"812:14:26","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"_version","nameLocation":"834:8:26","nodeType":"VariableDeclaration","scope":5573,"src":"827:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5569,"name":"uint16","nodeType":"ElementaryTypeName","src":"827:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"826:17:26"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[],"src":"852:0:26"},"scope":5586,"src":"803:50:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10ddb137","id":5578,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"1010:17:26","nodeType":"FunctionDefinition","parameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"_version","nameLocation":"1035:8:26","nodeType":"VariableDeclaration","scope":5578,"src":"1028:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5574,"name":"uint16","nodeType":"ElementaryTypeName","src":"1028:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1027:17:26"},"returnParameters":{"id":5577,"nodeType":"ParameterList","parameters":[],"src":"1053:0:26"},"scope":5586,"src":"1001:53:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42d65a8d","id":5585,"implemented":false,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"1337:18:26","nodeType":"FunctionDefinition","parameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"_srcChainId","nameLocation":"1363:11:26","nodeType":"VariableDeclaration","scope":5585,"src":"1356:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5579,"name":"uint16","nodeType":"ElementaryTypeName","src":"1356:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":5582,"mutability":"mutable","name":"_srcAddress","nameLocation":"1391:11:26","nodeType":"VariableDeclaration","scope":5585,"src":"1376:26:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5581,"name":"bytes","nodeType":"ElementaryTypeName","src":"1376:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1355:48:26"},"returnParameters":{"id":5584,"nodeType":"ParameterList","parameters":[],"src":"1412:0:26"},"scope":5586,"src":"1328:85:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5587,"src":"63:1353:26","usedErrors":[],"usedEvents":[]}],"src":"35:1383:26"},"id":26},"contracts/token/interfaces/IExchange.sol":{"ast":{"absolutePath":"contracts/token/interfaces/IExchange.sol","exportedSymbols":{"IPancakeSwapFactory":[5649],"IPancakeSwapPair":[5889],"IPancakeSwapRouter":[6277]},"id":6278,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"41:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IPancakeSwapFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5649,"linearizedBaseContracts":[5649],"name":"IPancakeSwapFactory","nameLocation":"78:19:27","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9","id":5598,"name":"PairCreated","nameLocation":"109:11:27","nodeType":"EventDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"137:6:27","nodeType":"VariableDeclaration","scope":5598,"src":"121:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5589,"name":"address","nodeType":"ElementaryTypeName","src":"121:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5592,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"161:6:27","nodeType":"VariableDeclaration","scope":5598,"src":"145:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5591,"name":"address","nodeType":"ElementaryTypeName","src":"145:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5594,"indexed":false,"mutability":"mutable","name":"pair","nameLocation":"177:4:27","nodeType":"VariableDeclaration","scope":5598,"src":"169:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5593,"name":"address","nodeType":"ElementaryTypeName","src":"169:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5596,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5598,"src":"183:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint","nodeType":"ElementaryTypeName","src":"183:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120:68:27"},"src":"103:86:27"},{"functionSelector":"017e7e58","id":5603,"implemented":false,"kind":"function","modifiers":[],"name":"feeTo","nameLocation":"204:5:27","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[],"src":"209:2:27"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5603,"src":"235:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5600,"name":"address","nodeType":"ElementaryTypeName","src":"235:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"234:9:27"},"scope":5649,"src":"195:49:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"094b7415","id":5608,"implemented":false,"kind":"function","modifiers":[],"name":"feeToSetter","nameLocation":"257:11:27","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[],"src":"268:2:27"},"returnParameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5608,"src":"294:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5605,"name":"address","nodeType":"ElementaryTypeName","src":"294:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"293:9:27"},"scope":5649,"src":"248:55:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e6a43905","id":5617,"implemented":false,"kind":"function","modifiers":[],"name":"getPair","nameLocation":"318:7:27","nodeType":"FunctionDefinition","parameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"tokenA","nameLocation":"334:6:27","nodeType":"VariableDeclaration","scope":5617,"src":"326:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5609,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5612,"mutability":"mutable","name":"tokenB","nameLocation":"350:6:27","nodeType":"VariableDeclaration","scope":5617,"src":"342:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5611,"name":"address","nodeType":"ElementaryTypeName","src":"342:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"325:32:27"},"returnParameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5615,"mutability":"mutable","name":"pair","nameLocation":"389:4:27","nodeType":"VariableDeclaration","scope":5617,"src":"381:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5614,"name":"address","nodeType":"ElementaryTypeName","src":"381:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"380:14:27"},"scope":5649,"src":"309:86:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1e3dd18b","id":5624,"implemented":false,"kind":"function","modifiers":[],"name":"allPairs","nameLocation":"408:8:27","nodeType":"FunctionDefinition","parameters":{"id":5620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"417:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5618,"name":"uint","nodeType":"ElementaryTypeName","src":"417:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"416:6:27"},"returnParameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"pair","nameLocation":"454:4:27","nodeType":"VariableDeclaration","scope":5624,"src":"446:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5621,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"445:14:27"},"scope":5649,"src":"399:61:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"574f2ba3","id":5629,"implemented":false,"kind":"function","modifiers":[],"name":"allPairsLength","nameLocation":"473:14:27","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[],"src":"487:2:27"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5629,"src":"513:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint","nodeType":"ElementaryTypeName","src":"513:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"512:6:27"},"scope":5649,"src":"464:55:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9c65396","id":5638,"implemented":false,"kind":"function","modifiers":[],"name":"createPair","nameLocation":"534:10:27","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"tokenA","nameLocation":"553:6:27","nodeType":"VariableDeclaration","scope":5638,"src":"545:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5630,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5633,"mutability":"mutable","name":"tokenB","nameLocation":"569:6:27","nodeType":"VariableDeclaration","scope":5638,"src":"561:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5632,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"544:32:27"},"returnParameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"pair","nameLocation":"603:4:27","nodeType":"VariableDeclaration","scope":5638,"src":"595:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5635,"name":"address","nodeType":"ElementaryTypeName","src":"595:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"594:14:27"},"scope":5649,"src":"525:84:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f46901ed","id":5643,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeTo","nameLocation":"624:8:27","nodeType":"FunctionDefinition","parameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5643,"src":"633:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5639,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"632:9:27"},"returnParameters":{"id":5642,"nodeType":"ParameterList","parameters":[],"src":"650:0:27"},"scope":5649,"src":"615:36:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a2e74af6","id":5648,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeToSetter","nameLocation":"664:14:27","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5648,"src":"679:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5644,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"678:9:27"},"returnParameters":{"id":5647,"nodeType":"ParameterList","parameters":[],"src":"696:0:27"},"scope":5649,"src":"655:42:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6278,"src":"68:632:27","usedErrors":[],"usedEvents":[5598]},{"abstract":false,"baseContracts":[],"canonicalName":"IPancakeSwapPair","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5889,"linearizedBaseContracts":[5889],"name":"IPancakeSwapPair","nameLocation":"714:16:27","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":5657,"name":"Approval","nameLocation":"742:8:27","nodeType":"EventDefinition","parameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"767:5:27","nodeType":"VariableDeclaration","scope":5657,"src":"751:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5650,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5653,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"790:7:27","nodeType":"VariableDeclaration","scope":5657,"src":"774:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5652,"name":"address","nodeType":"ElementaryTypeName","src":"774:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5655,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"804:5:27","nodeType":"VariableDeclaration","scope":5657,"src":"799:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint","nodeType":"ElementaryTypeName","src":"799:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"750:60:27"},"src":"736:75:27"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":5665,"name":"Transfer","nameLocation":"821:8:27","nodeType":"EventDefinition","parameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5659,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"846:4:27","nodeType":"VariableDeclaration","scope":5665,"src":"830:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5658,"name":"address","nodeType":"ElementaryTypeName","src":"830:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5661,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"868:2:27","nodeType":"VariableDeclaration","scope":5665,"src":"852:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5660,"name":"address","nodeType":"ElementaryTypeName","src":"852:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5663,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"877:5:27","nodeType":"VariableDeclaration","scope":5665,"src":"872:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5662,"name":"uint","nodeType":"ElementaryTypeName","src":"872:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"829:54:27"},"src":"815:69:27"},{"functionSelector":"06fdde03","id":5670,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"899:4:27","nodeType":"FunctionDefinition","parameters":{"id":5666,"nodeType":"ParameterList","parameters":[],"src":"903:2:27"},"returnParameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5670,"src":"929:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5667,"name":"string","nodeType":"ElementaryTypeName","src":"929:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"928:15:27"},"scope":5889,"src":"890:54:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":5675,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"957:6:27","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[],"src":"963:2:27"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5675,"src":"989:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5672,"name":"string","nodeType":"ElementaryTypeName","src":"989:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"988:15:27"},"scope":5889,"src":"948:56:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":5680,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"1017:8:27","nodeType":"FunctionDefinition","parameters":{"id":5676,"nodeType":"ParameterList","parameters":[],"src":"1025:2:27"},"returnParameters":{"id":5679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5680,"src":"1051:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5677,"name":"uint8","nodeType":"ElementaryTypeName","src":"1051:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1050:7:27"},"scope":5889,"src":"1008:50:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":5685,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1071:11:27","nodeType":"FunctionDefinition","parameters":{"id":5681,"nodeType":"ParameterList","parameters":[],"src":"1082:2:27"},"returnParameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5685,"src":"1108:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint","nodeType":"ElementaryTypeName","src":"1108:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1107:6:27"},"scope":5889,"src":"1062:52:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":5692,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1127:9:27","nodeType":"FunctionDefinition","parameters":{"id":5688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5687,"mutability":"mutable","name":"owner","nameLocation":"1145:5:27","nodeType":"VariableDeclaration","scope":5692,"src":"1137:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5686,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1136:15:27"},"returnParameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5692,"src":"1175:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint","nodeType":"ElementaryTypeName","src":"1175:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:6:27"},"scope":5889,"src":"1118:63:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":5701,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1194:9:27","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"owner","nameLocation":"1212:5:27","nodeType":"VariableDeclaration","scope":5701,"src":"1204:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5693,"name":"address","nodeType":"ElementaryTypeName","src":"1204:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5696,"mutability":"mutable","name":"spender","nameLocation":"1227:7:27","nodeType":"VariableDeclaration","scope":5701,"src":"1219:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5695,"name":"address","nodeType":"ElementaryTypeName","src":"1219:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1203:32:27"},"returnParameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"1259:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint","nodeType":"ElementaryTypeName","src":"1259:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1258:6:27"},"scope":5889,"src":"1185:80:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":5710,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1280:7:27","nodeType":"FunctionDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5703,"mutability":"mutable","name":"spender","nameLocation":"1296:7:27","nodeType":"VariableDeclaration","scope":5710,"src":"1288:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5702,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"value","nameLocation":"1310:5:27","nodeType":"VariableDeclaration","scope":5710,"src":"1305:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint","nodeType":"ElementaryTypeName","src":"1305:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1287:29:27"},"returnParameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5710,"src":"1335:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5707,"name":"bool","nodeType":"ElementaryTypeName","src":"1335:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1334:6:27"},"scope":5889,"src":"1271:70:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":5719,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1354:8:27","nodeType":"FunctionDefinition","parameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"to","nameLocation":"1371:2:27","nodeType":"VariableDeclaration","scope":5719,"src":"1363:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5711,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5714,"mutability":"mutable","name":"value","nameLocation":"1380:5:27","nodeType":"VariableDeclaration","scope":5719,"src":"1375:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint","nodeType":"ElementaryTypeName","src":"1375:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1362:24:27"},"returnParameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5719,"src":"1405:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5716,"name":"bool","nodeType":"ElementaryTypeName","src":"1405:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1404:6:27"},"scope":5889,"src":"1345:66:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":5730,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1424:12:27","nodeType":"FunctionDefinition","parameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"from","nameLocation":"1445:4:27","nodeType":"VariableDeclaration","scope":5730,"src":"1437:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5720,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5723,"mutability":"mutable","name":"to","nameLocation":"1459:2:27","nodeType":"VariableDeclaration","scope":5730,"src":"1451:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5722,"name":"address","nodeType":"ElementaryTypeName","src":"1451:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5725,"mutability":"mutable","name":"value","nameLocation":"1468:5:27","nodeType":"VariableDeclaration","scope":5730,"src":"1463:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5724,"name":"uint","nodeType":"ElementaryTypeName","src":"1463:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1436:38:27"},"returnParameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5730,"src":"1493:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5727,"name":"bool","nodeType":"ElementaryTypeName","src":"1493:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1492:6:27"},"scope":5889,"src":"1415:84:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3644e515","id":5735,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"1514:16:27","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[],"src":"1530:2:27"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5735,"src":"1556:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1556:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1555:9:27"},"scope":5889,"src":"1505:60:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"30adf81f","id":5740,"implemented":false,"kind":"function","modifiers":[],"name":"PERMIT_TYPEHASH","nameLocation":"1578:15:27","nodeType":"FunctionDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[],"src":"1593:2:27"},"returnParameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"1619:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1619:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1618:9:27"},"scope":5889,"src":"1569:59:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"7ecebe00","id":5747,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1641:6:27","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"owner","nameLocation":"1656:5:27","nodeType":"VariableDeclaration","scope":5747,"src":"1648:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5741,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1647:15:27"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5747,"src":"1686:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5744,"name":"uint","nodeType":"ElementaryTypeName","src":"1686:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1685:6:27"},"scope":5889,"src":"1632:60:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":5764,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1707:6:27","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"owner","nameLocation":"1722:5:27","nodeType":"VariableDeclaration","scope":5764,"src":"1714:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5748,"name":"address","nodeType":"ElementaryTypeName","src":"1714:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"spender","nameLocation":"1737:7:27","nodeType":"VariableDeclaration","scope":5764,"src":"1729:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5750,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5753,"mutability":"mutable","name":"value","nameLocation":"1751:5:27","nodeType":"VariableDeclaration","scope":5764,"src":"1746:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5752,"name":"uint","nodeType":"ElementaryTypeName","src":"1746:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5755,"mutability":"mutable","name":"deadline","nameLocation":"1763:8:27","nodeType":"VariableDeclaration","scope":5764,"src":"1758:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5754,"name":"uint","nodeType":"ElementaryTypeName","src":"1758:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5757,"mutability":"mutable","name":"v","nameLocation":"1779:1:27","nodeType":"VariableDeclaration","scope":5764,"src":"1773:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5756,"name":"uint8","nodeType":"ElementaryTypeName","src":"1773:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5759,"mutability":"mutable","name":"r","nameLocation":"1790:1:27","nodeType":"VariableDeclaration","scope":5764,"src":"1782:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1782:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5761,"mutability":"mutable","name":"s","nameLocation":"1801:1:27","nodeType":"VariableDeclaration","scope":5764,"src":"1793:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1713:90:27"},"returnParameters":{"id":5763,"nodeType":"ParameterList","parameters":[],"src":"1812:0:27"},"scope":5889,"src":"1698:115:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f","id":5772,"name":"Mint","nameLocation":"1825:4:27","nodeType":"EventDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1846:6:27","nodeType":"VariableDeclaration","scope":5772,"src":"1830:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5765,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5768,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1859:7:27","nodeType":"VariableDeclaration","scope":5772,"src":"1854:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5767,"name":"uint","nodeType":"ElementaryTypeName","src":"1854:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5770,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1873:7:27","nodeType":"VariableDeclaration","scope":5772,"src":"1868:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint","nodeType":"ElementaryTypeName","src":"1868:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:52:27"},"src":"1819:63:27"},{"anonymous":false,"eventSelector":"dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496","id":5782,"name":"Burn","nameLocation":"1892:4:27","nodeType":"EventDefinition","parameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1913:6:27","nodeType":"VariableDeclaration","scope":5782,"src":"1897:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5773,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5776,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1926:7:27","nodeType":"VariableDeclaration","scope":5782,"src":"1921:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint","nodeType":"ElementaryTypeName","src":"1921:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5778,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1940:7:27","nodeType":"VariableDeclaration","scope":5782,"src":"1935:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5777,"name":"uint","nodeType":"ElementaryTypeName","src":"1935:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5780,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1965:2:27","nodeType":"VariableDeclaration","scope":5782,"src":"1949:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5779,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1896:72:27"},"src":"1886:83:27"},{"anonymous":false,"eventSelector":"d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822","id":5796,"name":"Swap","nameLocation":"1979:4:27","nodeType":"EventDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5784,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2006:6:27","nodeType":"VariableDeclaration","scope":5796,"src":"1990:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5783,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5786,"indexed":false,"mutability":"mutable","name":"amount0In","nameLocation":"2024:9:27","nodeType":"VariableDeclaration","scope":5796,"src":"2019:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint","nodeType":"ElementaryTypeName","src":"2019:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5788,"indexed":false,"mutability":"mutable","name":"amount1In","nameLocation":"2045:9:27","nodeType":"VariableDeclaration","scope":5796,"src":"2040:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint","nodeType":"ElementaryTypeName","src":"2040:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5790,"indexed":false,"mutability":"mutable","name":"amount0Out","nameLocation":"2066:10:27","nodeType":"VariableDeclaration","scope":5796,"src":"2061:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5789,"name":"uint","nodeType":"ElementaryTypeName","src":"2061:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5792,"indexed":false,"mutability":"mutable","name":"amount1Out","nameLocation":"2088:10:27","nodeType":"VariableDeclaration","scope":5796,"src":"2083:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint","nodeType":"ElementaryTypeName","src":"2083:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5794,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2121:2:27","nodeType":"VariableDeclaration","scope":5796,"src":"2105:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5793,"name":"address","nodeType":"ElementaryTypeName","src":"2105:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1983:145:27"},"src":"1973:156:27"},{"anonymous":false,"eventSelector":"1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1","id":5802,"name":"Sync","nameLocation":"2139:4:27","nodeType":"EventDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"indexed":false,"mutability":"mutable","name":"reserve0","nameLocation":"2152:8:27","nodeType":"VariableDeclaration","scope":5802,"src":"2144:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5797,"name":"uint112","nodeType":"ElementaryTypeName","src":"2144:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":5800,"indexed":false,"mutability":"mutable","name":"reserve1","nameLocation":"2170:8:27","nodeType":"VariableDeclaration","scope":5802,"src":"2162:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5799,"name":"uint112","nodeType":"ElementaryTypeName","src":"2162:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"2143:36:27"},"src":"2133:47:27"},{"functionSelector":"ba9a7a56","id":5807,"implemented":false,"kind":"function","modifiers":[],"name":"MINIMUM_LIQUIDITY","nameLocation":"2195:17:27","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[],"src":"2212:2:27"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5807,"src":"2238:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5804,"name":"uint","nodeType":"ElementaryTypeName","src":"2238:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2237:6:27"},"scope":5889,"src":"2186:58:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"c45a0155","id":5812,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"2257:7:27","nodeType":"FunctionDefinition","parameters":{"id":5808,"nodeType":"ParameterList","parameters":[],"src":"2264:2:27"},"returnParameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5812,"src":"2290:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5809,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:9:27"},"scope":5889,"src":"2248:51:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0dfe1681","id":5817,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"2312:6:27","nodeType":"FunctionDefinition","parameters":{"id":5813,"nodeType":"ParameterList","parameters":[],"src":"2318:2:27"},"returnParameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5817,"src":"2344:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5814,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2343:9:27"},"scope":5889,"src":"2303:50:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d21220a7","id":5822,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"2366:6:27","nodeType":"FunctionDefinition","parameters":{"id":5818,"nodeType":"ParameterList","parameters":[],"src":"2372:2:27"},"returnParameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5822,"src":"2398:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5819,"name":"address","nodeType":"ElementaryTypeName","src":"2398:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2397:9:27"},"scope":5889,"src":"2357:50:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":5831,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"2420:11:27","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[],"src":"2431:2:27"},"returnParameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"reserve0","nameLocation":"2465:8:27","nodeType":"VariableDeclaration","scope":5831,"src":"2457:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5824,"name":"uint112","nodeType":"ElementaryTypeName","src":"2457:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":5827,"mutability":"mutable","name":"reserve1","nameLocation":"2483:8:27","nodeType":"VariableDeclaration","scope":5831,"src":"2475:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5826,"name":"uint112","nodeType":"ElementaryTypeName","src":"2475:7:27","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":5829,"mutability":"mutable","name":"blockTimestampLast","nameLocation":"2500:18:27","nodeType":"VariableDeclaration","scope":5831,"src":"2493:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5828,"name":"uint32","nodeType":"ElementaryTypeName","src":"2493:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2456:63:27"},"scope":5889,"src":"2411:109:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5909c0d5","id":5836,"implemented":false,"kind":"function","modifiers":[],"name":"price0CumulativeLast","nameLocation":"2533:20:27","nodeType":"FunctionDefinition","parameters":{"id":5832,"nodeType":"ParameterList","parameters":[],"src":"2553:2:27"},"returnParameters":{"id":5835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5836,"src":"2579:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5833,"name":"uint","nodeType":"ElementaryTypeName","src":"2579:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2578:6:27"},"scope":5889,"src":"2524:61:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5a3d5493","id":5841,"implemented":false,"kind":"function","modifiers":[],"name":"price1CumulativeLast","nameLocation":"2598:20:27","nodeType":"FunctionDefinition","parameters":{"id":5837,"nodeType":"ParameterList","parameters":[],"src":"2618:2:27"},"returnParameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5841,"src":"2644:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5838,"name":"uint","nodeType":"ElementaryTypeName","src":"2644:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2643:6:27"},"scope":5889,"src":"2589:61:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7464fc3d","id":5846,"implemented":false,"kind":"function","modifiers":[],"name":"kLast","nameLocation":"2663:5:27","nodeType":"FunctionDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[],"src":"2668:2:27"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5846,"src":"2694:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5843,"name":"uint","nodeType":"ElementaryTypeName","src":"2694:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:6:27"},"scope":5889,"src":"2654:46:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6a627842","id":5853,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2715:4:27","nodeType":"FunctionDefinition","parameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"to","nameLocation":"2728:2:27","nodeType":"VariableDeclaration","scope":5853,"src":"2720:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5847,"name":"address","nodeType":"ElementaryTypeName","src":"2720:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2719:12:27"},"returnParameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"liquidity","nameLocation":"2755:9:27","nodeType":"VariableDeclaration","scope":5853,"src":"2750:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint","nodeType":"ElementaryTypeName","src":"2750:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2749:16:27"},"scope":5889,"src":"2706:60:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":5862,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2779:4:27","nodeType":"FunctionDefinition","parameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"to","nameLocation":"2792:2:27","nodeType":"VariableDeclaration","scope":5862,"src":"2784:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5854,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2783:12:27"},"returnParameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"amount0","nameLocation":"2819:7:27","nodeType":"VariableDeclaration","scope":5862,"src":"2814:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint","nodeType":"ElementaryTypeName","src":"2814:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5860,"mutability":"mutable","name":"amount1","nameLocation":"2833:7:27","nodeType":"VariableDeclaration","scope":5862,"src":"2828:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint","nodeType":"ElementaryTypeName","src":"2828:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2813:28:27"},"scope":5889,"src":"2770:72:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"022c0d9f","id":5873,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"2855:4:27","nodeType":"FunctionDefinition","parameters":{"id":5871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"amount0Out","nameLocation":"2865:10:27","nodeType":"VariableDeclaration","scope":5873,"src":"2860:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint","nodeType":"ElementaryTypeName","src":"2860:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5866,"mutability":"mutable","name":"amount1Out","nameLocation":"2882:10:27","nodeType":"VariableDeclaration","scope":5873,"src":"2877:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5865,"name":"uint","nodeType":"ElementaryTypeName","src":"2877:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5868,"mutability":"mutable","name":"to","nameLocation":"2902:2:27","nodeType":"VariableDeclaration","scope":5873,"src":"2894:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5867,"name":"address","nodeType":"ElementaryTypeName","src":"2894:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5870,"mutability":"mutable","name":"data","nameLocation":"2921:4:27","nodeType":"VariableDeclaration","scope":5873,"src":"2906:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5869,"name":"bytes","nodeType":"ElementaryTypeName","src":"2906:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2859:67:27"},"returnParameters":{"id":5872,"nodeType":"ParameterList","parameters":[],"src":"2935:0:27"},"scope":5889,"src":"2846:90:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bc25cf77","id":5878,"implemented":false,"kind":"function","modifiers":[],"name":"skim","nameLocation":"2949:4:27","nodeType":"FunctionDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"to","nameLocation":"2962:2:27","nodeType":"VariableDeclaration","scope":5878,"src":"2954:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5874,"name":"address","nodeType":"ElementaryTypeName","src":"2954:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2953:12:27"},"returnParameters":{"id":5877,"nodeType":"ParameterList","parameters":[],"src":"2974:0:27"},"scope":5889,"src":"2940:35:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fff6cae9","id":5881,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"2988:4:27","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[],"src":"2992:2:27"},"returnParameters":{"id":5880,"nodeType":"ParameterList","parameters":[],"src":"3003:0:27"},"scope":5889,"src":"2979:25:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"485cc955","id":5888,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"3019:10:27","nodeType":"FunctionDefinition","parameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"3030:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5882,"name":"address","nodeType":"ElementaryTypeName","src":"3030:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"3039:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5884,"name":"address","nodeType":"ElementaryTypeName","src":"3039:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3029:18:27"},"returnParameters":{"id":5887,"nodeType":"ParameterList","parameters":[],"src":"3056:0:27"},"scope":5889,"src":"3010:47:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6278,"src":"704:2356:27","usedErrors":[],"usedEvents":[5657,5665,5772,5782,5796,5802]},{"abstract":false,"baseContracts":[],"canonicalName":"IPancakeSwapRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6277,"linearizedBaseContracts":[6277],"name":"IPancakeSwapRouter","nameLocation":"3074:18:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c45a0155","id":5894,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"3106:7:27","nodeType":"FunctionDefinition","parameters":{"id":5890,"nodeType":"ParameterList","parameters":[],"src":"3113:2:27"},"returnParameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5894,"src":"3139:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5891,"name":"address","nodeType":"ElementaryTypeName","src":"3139:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3138:9:27"},"scope":6277,"src":"3097:51:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"ad5c4648","id":5899,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"3161:4:27","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[],"src":"3165:2:27"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"3191:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5896,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3190:9:27"},"scope":6277,"src":"3152:48:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"e8e33700","id":5924,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"3215:12:27","nodeType":"FunctionDefinition","parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"tokenA","nameLocation":"3242:6:27","nodeType":"VariableDeclaration","scope":5924,"src":"3234:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5900,"name":"address","nodeType":"ElementaryTypeName","src":"3234:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5903,"mutability":"mutable","name":"tokenB","nameLocation":"3263:6:27","nodeType":"VariableDeclaration","scope":5924,"src":"3255:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5902,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5905,"mutability":"mutable","name":"amountADesired","nameLocation":"3281:14:27","nodeType":"VariableDeclaration","scope":5924,"src":"3276:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint","nodeType":"ElementaryTypeName","src":"3276:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5907,"mutability":"mutable","name":"amountBDesired","nameLocation":"3307:14:27","nodeType":"VariableDeclaration","scope":5924,"src":"3302:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint","nodeType":"ElementaryTypeName","src":"3302:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5909,"mutability":"mutable","name":"amountAMin","nameLocation":"3333:10:27","nodeType":"VariableDeclaration","scope":5924,"src":"3328:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5908,"name":"uint","nodeType":"ElementaryTypeName","src":"3328:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5911,"mutability":"mutable","name":"amountBMin","nameLocation":"3355:10:27","nodeType":"VariableDeclaration","scope":5924,"src":"3350:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5910,"name":"uint","nodeType":"ElementaryTypeName","src":"3350:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5913,"mutability":"mutable","name":"to","nameLocation":"3380:2:27","nodeType":"VariableDeclaration","scope":5924,"src":"3372:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5912,"name":"address","nodeType":"ElementaryTypeName","src":"3372:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5915,"mutability":"mutable","name":"deadline","nameLocation":"3394:8:27","nodeType":"VariableDeclaration","scope":5924,"src":"3389:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5914,"name":"uint","nodeType":"ElementaryTypeName","src":"3389:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3227:180:27"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"amountA","nameLocation":"3431:7:27","nodeType":"VariableDeclaration","scope":5924,"src":"3426:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5917,"name":"uint","nodeType":"ElementaryTypeName","src":"3426:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5920,"mutability":"mutable","name":"amountB","nameLocation":"3445:7:27","nodeType":"VariableDeclaration","scope":5924,"src":"3440:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5919,"name":"uint","nodeType":"ElementaryTypeName","src":"3440:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5922,"mutability":"mutable","name":"liquidity","nameLocation":"3459:9:27","nodeType":"VariableDeclaration","scope":5924,"src":"3454:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint","nodeType":"ElementaryTypeName","src":"3454:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3425:44:27"},"scope":6277,"src":"3206:264:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f305d719","id":5945,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityETH","nameLocation":"3483:15:27","nodeType":"FunctionDefinition","parameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"token","nameLocation":"3513:5:27","nodeType":"VariableDeclaration","scope":5945,"src":"3505:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5925,"name":"address","nodeType":"ElementaryTypeName","src":"3505:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5928,"mutability":"mutable","name":"amountTokenDesired","nameLocation":"3530:18:27","nodeType":"VariableDeclaration","scope":5945,"src":"3525:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5927,"name":"uint","nodeType":"ElementaryTypeName","src":"3525:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5930,"mutability":"mutable","name":"amountTokenMin","nameLocation":"3560:14:27","nodeType":"VariableDeclaration","scope":5945,"src":"3555:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5929,"name":"uint","nodeType":"ElementaryTypeName","src":"3555:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5932,"mutability":"mutable","name":"amountETHMin","nameLocation":"3586:12:27","nodeType":"VariableDeclaration","scope":5945,"src":"3581:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint","nodeType":"ElementaryTypeName","src":"3581:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5934,"mutability":"mutable","name":"to","nameLocation":"3613:2:27","nodeType":"VariableDeclaration","scope":5945,"src":"3605:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5933,"name":"address","nodeType":"ElementaryTypeName","src":"3605:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"deadline","nameLocation":"3627:8:27","nodeType":"VariableDeclaration","scope":5945,"src":"3622:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint","nodeType":"ElementaryTypeName","src":"3622:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3498:142:27"},"returnParameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5939,"mutability":"mutable","name":"amountToken","nameLocation":"3672:11:27","nodeType":"VariableDeclaration","scope":5945,"src":"3667:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5938,"name":"uint","nodeType":"ElementaryTypeName","src":"3667:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5941,"mutability":"mutable","name":"amountETH","nameLocation":"3690:9:27","nodeType":"VariableDeclaration","scope":5945,"src":"3685:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint","nodeType":"ElementaryTypeName","src":"3685:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5943,"mutability":"mutable","name":"liquidity","nameLocation":"3706:9:27","nodeType":"VariableDeclaration","scope":5945,"src":"3701:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5942,"name":"uint","nodeType":"ElementaryTypeName","src":"3701:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3666:50:27"},"scope":6277,"src":"3474:243:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"baa2abde","id":5966,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"3730:15:27","nodeType":"FunctionDefinition","parameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"tokenA","nameLocation":"3760:6:27","nodeType":"VariableDeclaration","scope":5966,"src":"3752:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5946,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5949,"mutability":"mutable","name":"tokenB","nameLocation":"3781:6:27","nodeType":"VariableDeclaration","scope":5966,"src":"3773:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5948,"name":"address","nodeType":"ElementaryTypeName","src":"3773:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5951,"mutability":"mutable","name":"liquidity","nameLocation":"3799:9:27","nodeType":"VariableDeclaration","scope":5966,"src":"3794:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint","nodeType":"ElementaryTypeName","src":"3794:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5953,"mutability":"mutable","name":"amountAMin","nameLocation":"3820:10:27","nodeType":"VariableDeclaration","scope":5966,"src":"3815:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint","nodeType":"ElementaryTypeName","src":"3815:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"amountBMin","nameLocation":"3842:10:27","nodeType":"VariableDeclaration","scope":5966,"src":"3837:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5954,"name":"uint","nodeType":"ElementaryTypeName","src":"3837:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5957,"mutability":"mutable","name":"to","nameLocation":"3867:2:27","nodeType":"VariableDeclaration","scope":5966,"src":"3859:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5956,"name":"address","nodeType":"ElementaryTypeName","src":"3859:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5959,"mutability":"mutable","name":"deadline","nameLocation":"3881:8:27","nodeType":"VariableDeclaration","scope":5966,"src":"3876:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint","nodeType":"ElementaryTypeName","src":"3876:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3745:149:27"},"returnParameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"amountA","nameLocation":"3918:7:27","nodeType":"VariableDeclaration","scope":5966,"src":"3913:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5961,"name":"uint","nodeType":"ElementaryTypeName","src":"3913:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5964,"mutability":"mutable","name":"amountB","nameLocation":"3932:7:27","nodeType":"VariableDeclaration","scope":5966,"src":"3927:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5963,"name":"uint","nodeType":"ElementaryTypeName","src":"3927:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3912:28:27"},"scope":6277,"src":"3721:220:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02751cec","id":5985,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETH","nameLocation":"3954:18:27","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"token","nameLocation":"3987:5:27","nodeType":"VariableDeclaration","scope":5985,"src":"3979:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5967,"name":"address","nodeType":"ElementaryTypeName","src":"3979:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5970,"mutability":"mutable","name":"liquidity","nameLocation":"4004:9:27","nodeType":"VariableDeclaration","scope":5985,"src":"3999:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5969,"name":"uint","nodeType":"ElementaryTypeName","src":"3999:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5972,"mutability":"mutable","name":"amountTokenMin","nameLocation":"4025:14:27","nodeType":"VariableDeclaration","scope":5985,"src":"4020:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5971,"name":"uint","nodeType":"ElementaryTypeName","src":"4020:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5974,"mutability":"mutable","name":"amountETHMin","nameLocation":"4051:12:27","nodeType":"VariableDeclaration","scope":5985,"src":"4046:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint","nodeType":"ElementaryTypeName","src":"4046:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5976,"mutability":"mutable","name":"to","nameLocation":"4078:2:27","nodeType":"VariableDeclaration","scope":5985,"src":"4070:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5975,"name":"address","nodeType":"ElementaryTypeName","src":"4070:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5978,"mutability":"mutable","name":"deadline","nameLocation":"4092:8:27","nodeType":"VariableDeclaration","scope":5985,"src":"4087:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint","nodeType":"ElementaryTypeName","src":"4087:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3972:133:27"},"returnParameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"amountToken","nameLocation":"4129:11:27","nodeType":"VariableDeclaration","scope":5985,"src":"4124:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint","nodeType":"ElementaryTypeName","src":"4124:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"amountETH","nameLocation":"4147:9:27","nodeType":"VariableDeclaration","scope":5985,"src":"4142:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint","nodeType":"ElementaryTypeName","src":"4142:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4123:34:27"},"scope":6277,"src":"3945:213:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2195995c","id":6014,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityWithPermit","nameLocation":"4171:25:27","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"tokenA","nameLocation":"4211:6:27","nodeType":"VariableDeclaration","scope":6014,"src":"4203:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5986,"name":"address","nodeType":"ElementaryTypeName","src":"4203:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5989,"mutability":"mutable","name":"tokenB","nameLocation":"4232:6:27","nodeType":"VariableDeclaration","scope":6014,"src":"4224:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5988,"name":"address","nodeType":"ElementaryTypeName","src":"4224:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5991,"mutability":"mutable","name":"liquidity","nameLocation":"4250:9:27","nodeType":"VariableDeclaration","scope":6014,"src":"4245:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint","nodeType":"ElementaryTypeName","src":"4245:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5993,"mutability":"mutable","name":"amountAMin","nameLocation":"4271:10:27","nodeType":"VariableDeclaration","scope":6014,"src":"4266:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5992,"name":"uint","nodeType":"ElementaryTypeName","src":"4266:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5995,"mutability":"mutable","name":"amountBMin","nameLocation":"4293:10:27","nodeType":"VariableDeclaration","scope":6014,"src":"4288:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5994,"name":"uint","nodeType":"ElementaryTypeName","src":"4288:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5997,"mutability":"mutable","name":"to","nameLocation":"4318:2:27","nodeType":"VariableDeclaration","scope":6014,"src":"4310:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5996,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5999,"mutability":"mutable","name":"deadline","nameLocation":"4332:8:27","nodeType":"VariableDeclaration","scope":6014,"src":"4327:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5998,"name":"uint","nodeType":"ElementaryTypeName","src":"4327:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6001,"mutability":"mutable","name":"approveMax","nameLocation":"4352:10:27","nodeType":"VariableDeclaration","scope":6014,"src":"4347:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6000,"name":"bool","nodeType":"ElementaryTypeName","src":"4347:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6003,"mutability":"mutable","name":"v","nameLocation":"4370:1:27","nodeType":"VariableDeclaration","scope":6014,"src":"4364:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6002,"name":"uint8","nodeType":"ElementaryTypeName","src":"4364:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6005,"mutability":"mutable","name":"r","nameLocation":"4381:1:27","nodeType":"VariableDeclaration","scope":6014,"src":"4373:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4373:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"s","nameLocation":"4392:1:27","nodeType":"VariableDeclaration","scope":6014,"src":"4384:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4384:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4196:202:27"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"amountA","nameLocation":"4422:7:27","nodeType":"VariableDeclaration","scope":6014,"src":"4417:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6009,"name":"uint","nodeType":"ElementaryTypeName","src":"4417:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6012,"mutability":"mutable","name":"amountB","nameLocation":"4436:7:27","nodeType":"VariableDeclaration","scope":6014,"src":"4431:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint","nodeType":"ElementaryTypeName","src":"4431:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4416:28:27"},"scope":6277,"src":"4162:283:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ded9382a","id":6041,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermit","nameLocation":"4458:28:27","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"token","nameLocation":"4501:5:27","nodeType":"VariableDeclaration","scope":6041,"src":"4493:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6015,"name":"address","nodeType":"ElementaryTypeName","src":"4493:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6018,"mutability":"mutable","name":"liquidity","nameLocation":"4518:9:27","nodeType":"VariableDeclaration","scope":6041,"src":"4513:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint","nodeType":"ElementaryTypeName","src":"4513:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6020,"mutability":"mutable","name":"amountTokenMin","nameLocation":"4539:14:27","nodeType":"VariableDeclaration","scope":6041,"src":"4534:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint","nodeType":"ElementaryTypeName","src":"4534:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6022,"mutability":"mutable","name":"amountETHMin","nameLocation":"4565:12:27","nodeType":"VariableDeclaration","scope":6041,"src":"4560:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6021,"name":"uint","nodeType":"ElementaryTypeName","src":"4560:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6024,"mutability":"mutable","name":"to","nameLocation":"4592:2:27","nodeType":"VariableDeclaration","scope":6041,"src":"4584:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6023,"name":"address","nodeType":"ElementaryTypeName","src":"4584:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6026,"mutability":"mutable","name":"deadline","nameLocation":"4606:8:27","nodeType":"VariableDeclaration","scope":6041,"src":"4601:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6025,"name":"uint","nodeType":"ElementaryTypeName","src":"4601:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6028,"mutability":"mutable","name":"approveMax","nameLocation":"4626:10:27","nodeType":"VariableDeclaration","scope":6041,"src":"4621:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6027,"name":"bool","nodeType":"ElementaryTypeName","src":"4621:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6030,"mutability":"mutable","name":"v","nameLocation":"4644:1:27","nodeType":"VariableDeclaration","scope":6041,"src":"4638:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6029,"name":"uint8","nodeType":"ElementaryTypeName","src":"4638:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6032,"mutability":"mutable","name":"r","nameLocation":"4655:1:27","nodeType":"VariableDeclaration","scope":6041,"src":"4647:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4647:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6034,"mutability":"mutable","name":"s","nameLocation":"4666:1:27","nodeType":"VariableDeclaration","scope":6041,"src":"4658:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4658:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4486:186:27"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"amountToken","nameLocation":"4696:11:27","nodeType":"VariableDeclaration","scope":6041,"src":"4691:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint","nodeType":"ElementaryTypeName","src":"4691:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6039,"mutability":"mutable","name":"amountETH","nameLocation":"4714:9:27","nodeType":"VariableDeclaration","scope":6041,"src":"4709:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6038,"name":"uint","nodeType":"ElementaryTypeName","src":"4709:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4690:34:27"},"scope":6277,"src":"4449:276:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38ed1739","id":6058,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"4738:24:27","nodeType":"FunctionDefinition","parameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"amountIn","nameLocation":"4774:8:27","nodeType":"VariableDeclaration","scope":6058,"src":"4769:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint","nodeType":"ElementaryTypeName","src":"4769:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6045,"mutability":"mutable","name":"amountOutMin","nameLocation":"4794:12:27","nodeType":"VariableDeclaration","scope":6058,"src":"4789:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6044,"name":"uint","nodeType":"ElementaryTypeName","src":"4789:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6048,"mutability":"mutable","name":"path","nameLocation":"4832:4:27","nodeType":"VariableDeclaration","scope":6058,"src":"4813:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6046,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6047,"nodeType":"ArrayTypeName","src":"4813:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6050,"mutability":"mutable","name":"to","nameLocation":"4851:2:27","nodeType":"VariableDeclaration","scope":6058,"src":"4843:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6049,"name":"address","nodeType":"ElementaryTypeName","src":"4843:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6052,"mutability":"mutable","name":"deadline","nameLocation":"4865:8:27","nodeType":"VariableDeclaration","scope":6058,"src":"4860:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6051,"name":"uint","nodeType":"ElementaryTypeName","src":"4860:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4762:116:27"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"amounts","nameLocation":"4911:7:27","nodeType":"VariableDeclaration","scope":6058,"src":"4897:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6054,"name":"uint","nodeType":"ElementaryTypeName","src":"4897:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6055,"nodeType":"ArrayTypeName","src":"4897:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4896:23:27"},"scope":6277,"src":"4729:191:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8803dbee","id":6075,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactTokens","nameLocation":"4933:24:27","nodeType":"FunctionDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"amountOut","nameLocation":"4969:9:27","nodeType":"VariableDeclaration","scope":6075,"src":"4964:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint","nodeType":"ElementaryTypeName","src":"4964:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6062,"mutability":"mutable","name":"amountInMax","nameLocation":"4990:11:27","nodeType":"VariableDeclaration","scope":6075,"src":"4985:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint","nodeType":"ElementaryTypeName","src":"4985:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6065,"mutability":"mutable","name":"path","nameLocation":"5027:4:27","nodeType":"VariableDeclaration","scope":6075,"src":"5008:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6063,"name":"address","nodeType":"ElementaryTypeName","src":"5008:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6064,"nodeType":"ArrayTypeName","src":"5008:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6067,"mutability":"mutable","name":"to","nameLocation":"5046:2:27","nodeType":"VariableDeclaration","scope":6075,"src":"5038:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6066,"name":"address","nodeType":"ElementaryTypeName","src":"5038:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6069,"mutability":"mutable","name":"deadline","nameLocation":"5060:8:27","nodeType":"VariableDeclaration","scope":6075,"src":"5055:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6068,"name":"uint","nodeType":"ElementaryTypeName","src":"5055:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4957:116:27"},"returnParameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"amounts","nameLocation":"5106:7:27","nodeType":"VariableDeclaration","scope":6075,"src":"5092:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6071,"name":"uint","nodeType":"ElementaryTypeName","src":"5092:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6072,"nodeType":"ArrayTypeName","src":"5092:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5091:23:27"},"scope":6277,"src":"4924:191:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":6090,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"5128:21:27","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"amountOutMin","nameLocation":"5155:12:27","nodeType":"VariableDeclaration","scope":6090,"src":"5150:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6076,"name":"uint","nodeType":"ElementaryTypeName","src":"5150:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6080,"mutability":"mutable","name":"path","nameLocation":"5188:4:27","nodeType":"VariableDeclaration","scope":6090,"src":"5169:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6078,"name":"address","nodeType":"ElementaryTypeName","src":"5169:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6079,"nodeType":"ArrayTypeName","src":"5169:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6082,"mutability":"mutable","name":"to","nameLocation":"5202:2:27","nodeType":"VariableDeclaration","scope":6090,"src":"5194:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6081,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6084,"mutability":"mutable","name":"deadline","nameLocation":"5211:8:27","nodeType":"VariableDeclaration","scope":6090,"src":"5206:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6083,"name":"uint","nodeType":"ElementaryTypeName","src":"5206:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5149:71:27"},"returnParameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"amounts","nameLocation":"5276:7:27","nodeType":"VariableDeclaration","scope":6090,"src":"5262:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6086,"name":"uint","nodeType":"ElementaryTypeName","src":"5262:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6087,"nodeType":"ArrayTypeName","src":"5262:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5261:23:27"},"scope":6277,"src":"5119:166:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4a25d94a","id":6107,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactETH","nameLocation":"5298:21:27","nodeType":"FunctionDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"amountOut","nameLocation":"5325:9:27","nodeType":"VariableDeclaration","scope":6107,"src":"5320:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6091,"name":"uint","nodeType":"ElementaryTypeName","src":"5320:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6094,"mutability":"mutable","name":"amountInMax","nameLocation":"5341:11:27","nodeType":"VariableDeclaration","scope":6107,"src":"5336:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6093,"name":"uint","nodeType":"ElementaryTypeName","src":"5336:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6097,"mutability":"mutable","name":"path","nameLocation":"5373:4:27","nodeType":"VariableDeclaration","scope":6107,"src":"5354:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6095,"name":"address","nodeType":"ElementaryTypeName","src":"5354:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6096,"nodeType":"ArrayTypeName","src":"5354:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6099,"mutability":"mutable","name":"to","nameLocation":"5387:2:27","nodeType":"VariableDeclaration","scope":6107,"src":"5379:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6098,"name":"address","nodeType":"ElementaryTypeName","src":"5379:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6101,"mutability":"mutable","name":"deadline","nameLocation":"5396:8:27","nodeType":"VariableDeclaration","scope":6107,"src":"5391:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint","nodeType":"ElementaryTypeName","src":"5391:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5319:86:27"},"returnParameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"amounts","nameLocation":"5448:7:27","nodeType":"VariableDeclaration","scope":6107,"src":"5434:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6103,"name":"uint","nodeType":"ElementaryTypeName","src":"5434:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6104,"nodeType":"ArrayTypeName","src":"5434:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5433:23:27"},"scope":6277,"src":"5289:168:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":6124,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"5470:21:27","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"amountIn","nameLocation":"5497:8:27","nodeType":"VariableDeclaration","scope":6124,"src":"5492:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6108,"name":"uint","nodeType":"ElementaryTypeName","src":"5492:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6111,"mutability":"mutable","name":"amountOutMin","nameLocation":"5512:12:27","nodeType":"VariableDeclaration","scope":6124,"src":"5507:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6110,"name":"uint","nodeType":"ElementaryTypeName","src":"5507:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6114,"mutability":"mutable","name":"path","nameLocation":"5545:4:27","nodeType":"VariableDeclaration","scope":6124,"src":"5526:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6112,"name":"address","nodeType":"ElementaryTypeName","src":"5526:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6113,"nodeType":"ArrayTypeName","src":"5526:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6116,"mutability":"mutable","name":"to","nameLocation":"5559:2:27","nodeType":"VariableDeclaration","scope":6124,"src":"5551:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6115,"name":"address","nodeType":"ElementaryTypeName","src":"5551:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6118,"mutability":"mutable","name":"deadline","nameLocation":"5568:8:27","nodeType":"VariableDeclaration","scope":6124,"src":"5563:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint","nodeType":"ElementaryTypeName","src":"5563:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5491:86:27"},"returnParameters":{"id":6123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6122,"mutability":"mutable","name":"amounts","nameLocation":"5620:7:27","nodeType":"VariableDeclaration","scope":6124,"src":"5606:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6120,"name":"uint","nodeType":"ElementaryTypeName","src":"5606:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6121,"nodeType":"ArrayTypeName","src":"5606:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5605:23:27"},"scope":6277,"src":"5461:168:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fb3bdb41","id":6139,"implemented":false,"kind":"function","modifiers":[],"name":"swapETHForExactTokens","nameLocation":"5642:21:27","nodeType":"FunctionDefinition","parameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"amountOut","nameLocation":"5669:9:27","nodeType":"VariableDeclaration","scope":6139,"src":"5664:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6125,"name":"uint","nodeType":"ElementaryTypeName","src":"5664:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6129,"mutability":"mutable","name":"path","nameLocation":"5699:4:27","nodeType":"VariableDeclaration","scope":6139,"src":"5680:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6127,"name":"address","nodeType":"ElementaryTypeName","src":"5680:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6128,"nodeType":"ArrayTypeName","src":"5680:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"to","nameLocation":"5713:2:27","nodeType":"VariableDeclaration","scope":6139,"src":"5705:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6130,"name":"address","nodeType":"ElementaryTypeName","src":"5705:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"deadline","nameLocation":"5722:8:27","nodeType":"VariableDeclaration","scope":6139,"src":"5717:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6132,"name":"uint","nodeType":"ElementaryTypeName","src":"5717:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5663:68:27"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"amounts","nameLocation":"5787:7:27","nodeType":"VariableDeclaration","scope":6139,"src":"5773:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6135,"name":"uint","nodeType":"ElementaryTypeName","src":"5773:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6136,"nodeType":"ArrayTypeName","src":"5773:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5772:23:27"},"scope":6277,"src":"5633:163:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ad615dec","id":6150,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"5811:5:27","nodeType":"FunctionDefinition","parameters":{"id":6146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"amountA","nameLocation":"5822:7:27","nodeType":"VariableDeclaration","scope":6150,"src":"5817:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint","nodeType":"ElementaryTypeName","src":"5817:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6143,"mutability":"mutable","name":"reserveA","nameLocation":"5836:8:27","nodeType":"VariableDeclaration","scope":6150,"src":"5831:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint","nodeType":"ElementaryTypeName","src":"5831:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6145,"mutability":"mutable","name":"reserveB","nameLocation":"5851:8:27","nodeType":"VariableDeclaration","scope":6150,"src":"5846:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint","nodeType":"ElementaryTypeName","src":"5846:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5816:44:27"},"returnParameters":{"id":6149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6148,"mutability":"mutable","name":"amountB","nameLocation":"5889:7:27","nodeType":"VariableDeclaration","scope":6150,"src":"5884:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6147,"name":"uint","nodeType":"ElementaryTypeName","src":"5884:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5883:14:27"},"scope":6277,"src":"5802:96:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"054d50d4","id":6161,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"5911:12:27","nodeType":"FunctionDefinition","parameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"amountIn","nameLocation":"5929:8:27","nodeType":"VariableDeclaration","scope":6161,"src":"5924:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6151,"name":"uint","nodeType":"ElementaryTypeName","src":"5924:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6154,"mutability":"mutable","name":"reserveIn","nameLocation":"5944:9:27","nodeType":"VariableDeclaration","scope":6161,"src":"5939:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6153,"name":"uint","nodeType":"ElementaryTypeName","src":"5939:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6156,"mutability":"mutable","name":"reserveOut","nameLocation":"5960:10:27","nodeType":"VariableDeclaration","scope":6161,"src":"5955:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6155,"name":"uint","nodeType":"ElementaryTypeName","src":"5955:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5923:48:27"},"returnParameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"amountOut","nameLocation":"6000:9:27","nodeType":"VariableDeclaration","scope":6161,"src":"5995:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6158,"name":"uint","nodeType":"ElementaryTypeName","src":"5995:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5994:16:27"},"scope":6277,"src":"5902:109:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"85f8c259","id":6172,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"6024:11:27","nodeType":"FunctionDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"mutability":"mutable","name":"amountOut","nameLocation":"6041:9:27","nodeType":"VariableDeclaration","scope":6172,"src":"6036:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6162,"name":"uint","nodeType":"ElementaryTypeName","src":"6036:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6165,"mutability":"mutable","name":"reserveIn","nameLocation":"6057:9:27","nodeType":"VariableDeclaration","scope":6172,"src":"6052:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint","nodeType":"ElementaryTypeName","src":"6052:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"reserveOut","nameLocation":"6073:10:27","nodeType":"VariableDeclaration","scope":6172,"src":"6068:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6166,"name":"uint","nodeType":"ElementaryTypeName","src":"6068:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6035:49:27"},"returnParameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"amountIn","nameLocation":"6113:8:27","nodeType":"VariableDeclaration","scope":6172,"src":"6108:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6169,"name":"uint","nodeType":"ElementaryTypeName","src":"6108:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6107:15:27"},"scope":6277,"src":"6015:108:27","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":6183,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"6136:13:27","nodeType":"FunctionDefinition","parameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"amountIn","nameLocation":"6155:8:27","nodeType":"VariableDeclaration","scope":6183,"src":"6150:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint","nodeType":"ElementaryTypeName","src":"6150:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6177,"mutability":"mutable","name":"path","nameLocation":"6184:4:27","nodeType":"VariableDeclaration","scope":6183,"src":"6165:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6175,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6176,"nodeType":"ArrayTypeName","src":"6165:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6149:40:27"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"amounts","nameLocation":"6227:7:27","nodeType":"VariableDeclaration","scope":6183,"src":"6213:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6179,"name":"uint","nodeType":"ElementaryTypeName","src":"6213:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6180,"nodeType":"ArrayTypeName","src":"6213:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6212:23:27"},"scope":6277,"src":"6127:109:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1f00ca74","id":6194,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsIn","nameLocation":"6249:12:27","nodeType":"FunctionDefinition","parameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"amountOut","nameLocation":"6267:9:27","nodeType":"VariableDeclaration","scope":6194,"src":"6262:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6184,"name":"uint","nodeType":"ElementaryTypeName","src":"6262:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6188,"mutability":"mutable","name":"path","nameLocation":"6297:4:27","nodeType":"VariableDeclaration","scope":6194,"src":"6278:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6186,"name":"address","nodeType":"ElementaryTypeName","src":"6278:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6187,"nodeType":"ArrayTypeName","src":"6278:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6261:41:27"},"returnParameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"amounts","nameLocation":"6340:7:27","nodeType":"VariableDeclaration","scope":6194,"src":"6326:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6190,"name":"uint","nodeType":"ElementaryTypeName","src":"6326:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6191,"nodeType":"ArrayTypeName","src":"6326:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6325:23:27"},"scope":6277,"src":"6240:109:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"af2979eb","id":6211,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","nameLocation":"6362:47:27","nodeType":"FunctionDefinition","parameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"token","nameLocation":"6423:5:27","nodeType":"VariableDeclaration","scope":6211,"src":"6415:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6195,"name":"address","nodeType":"ElementaryTypeName","src":"6415:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6198,"mutability":"mutable","name":"liquidity","nameLocation":"6439:9:27","nodeType":"VariableDeclaration","scope":6211,"src":"6434:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6197,"name":"uint","nodeType":"ElementaryTypeName","src":"6434:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6200,"mutability":"mutable","name":"amountTokenMin","nameLocation":"6459:14:27","nodeType":"VariableDeclaration","scope":6211,"src":"6454:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint","nodeType":"ElementaryTypeName","src":"6454:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6202,"mutability":"mutable","name":"amountETHMin","nameLocation":"6484:12:27","nodeType":"VariableDeclaration","scope":6211,"src":"6479:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint","nodeType":"ElementaryTypeName","src":"6479:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6204,"mutability":"mutable","name":"to","nameLocation":"6510:2:27","nodeType":"VariableDeclaration","scope":6211,"src":"6502:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6203,"name":"address","nodeType":"ElementaryTypeName","src":"6502:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6206,"mutability":"mutable","name":"deadline","nameLocation":"6523:8:27","nodeType":"VariableDeclaration","scope":6211,"src":"6518:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6205,"name":"uint","nodeType":"ElementaryTypeName","src":"6518:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6409:127:27"},"returnParameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"amountETH","nameLocation":"6560:9:27","nodeType":"VariableDeclaration","scope":6211,"src":"6555:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6208,"name":"uint","nodeType":"ElementaryTypeName","src":"6555:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:16:27"},"scope":6277,"src":"6353:218:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0d5984","id":6236,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","nameLocation":"6584:57:27","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"token","nameLocation":"6655:5:27","nodeType":"VariableDeclaration","scope":6236,"src":"6647:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6212,"name":"address","nodeType":"ElementaryTypeName","src":"6647:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6215,"mutability":"mutable","name":"liquidity","nameLocation":"6671:9:27","nodeType":"VariableDeclaration","scope":6236,"src":"6666:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6214,"name":"uint","nodeType":"ElementaryTypeName","src":"6666:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6217,"mutability":"mutable","name":"amountTokenMin","nameLocation":"6691:14:27","nodeType":"VariableDeclaration","scope":6236,"src":"6686:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6216,"name":"uint","nodeType":"ElementaryTypeName","src":"6686:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"amountETHMin","nameLocation":"6716:12:27","nodeType":"VariableDeclaration","scope":6236,"src":"6711:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6218,"name":"uint","nodeType":"ElementaryTypeName","src":"6711:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"to","nameLocation":"6742:2:27","nodeType":"VariableDeclaration","scope":6236,"src":"6734:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6220,"name":"address","nodeType":"ElementaryTypeName","src":"6734:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6223,"mutability":"mutable","name":"deadline","nameLocation":"6755:8:27","nodeType":"VariableDeclaration","scope":6236,"src":"6750:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6222,"name":"uint","nodeType":"ElementaryTypeName","src":"6750:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"approveMax","nameLocation":"6774:10:27","nodeType":"VariableDeclaration","scope":6236,"src":"6769:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6224,"name":"bool","nodeType":"ElementaryTypeName","src":"6769:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6227,"mutability":"mutable","name":"v","nameLocation":"6792:1:27","nodeType":"VariableDeclaration","scope":6236,"src":"6786:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6226,"name":"uint8","nodeType":"ElementaryTypeName","src":"6786:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6229,"mutability":"mutable","name":"r","nameLocation":"6803:1:27","nodeType":"VariableDeclaration","scope":6236,"src":"6795:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6795:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6231,"mutability":"mutable","name":"s","nameLocation":"6814:1:27","nodeType":"VariableDeclaration","scope":6236,"src":"6806:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6806:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6641:179:27"},"returnParameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"amountETH","nameLocation":"6844:9:27","nodeType":"VariableDeclaration","scope":6236,"src":"6839:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint","nodeType":"ElementaryTypeName","src":"6839:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6838:16:27"},"scope":6277,"src":"6575:280:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c11d795","id":6250,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","nameLocation":"6871:53:27","nodeType":"FunctionDefinition","parameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6238,"mutability":"mutable","name":"amountIn","nameLocation":"6935:8:27","nodeType":"VariableDeclaration","scope":6250,"src":"6930:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6237,"name":"uint","nodeType":"ElementaryTypeName","src":"6930:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6240,"mutability":"mutable","name":"amountOutMin","nameLocation":"6954:12:27","nodeType":"VariableDeclaration","scope":6250,"src":"6949:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6239,"name":"uint","nodeType":"ElementaryTypeName","src":"6949:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6243,"mutability":"mutable","name":"path","nameLocation":"6991:4:27","nodeType":"VariableDeclaration","scope":6250,"src":"6972:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6241,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6242,"nodeType":"ArrayTypeName","src":"6972:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6245,"mutability":"mutable","name":"to","nameLocation":"7009:2:27","nodeType":"VariableDeclaration","scope":6250,"src":"7001:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6244,"name":"address","nodeType":"ElementaryTypeName","src":"7001:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6247,"mutability":"mutable","name":"deadline","nameLocation":"7022:8:27","nodeType":"VariableDeclaration","scope":6250,"src":"7017:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6246,"name":"uint","nodeType":"ElementaryTypeName","src":"7017:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6924:111:27"},"returnParameters":{"id":6249,"nodeType":"ParameterList","parameters":[],"src":"7044:0:27"},"scope":6277,"src":"6862:183:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6f9de95","id":6262,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","nameLocation":"7058:50:27","nodeType":"FunctionDefinition","parameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"amountOutMin","nameLocation":"7119:12:27","nodeType":"VariableDeclaration","scope":6262,"src":"7114:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6251,"name":"uint","nodeType":"ElementaryTypeName","src":"7114:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"path","nameLocation":"7156:4:27","nodeType":"VariableDeclaration","scope":6262,"src":"7137:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6253,"name":"address","nodeType":"ElementaryTypeName","src":"7137:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6254,"nodeType":"ArrayTypeName","src":"7137:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6257,"mutability":"mutable","name":"to","nameLocation":"7174:2:27","nodeType":"VariableDeclaration","scope":6262,"src":"7166:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6256,"name":"address","nodeType":"ElementaryTypeName","src":"7166:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6259,"mutability":"mutable","name":"deadline","nameLocation":"7187:8:27","nodeType":"VariableDeclaration","scope":6262,"src":"7182:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint","nodeType":"ElementaryTypeName","src":"7182:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7108:92:27"},"returnParameters":{"id":6261,"nodeType":"ParameterList","parameters":[],"src":"7217:0:27"},"scope":6277,"src":"7049:169:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"791ac947","id":6276,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","nameLocation":"7231:50:27","nodeType":"FunctionDefinition","parameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"amountIn","nameLocation":"7292:8:27","nodeType":"VariableDeclaration","scope":6276,"src":"7287:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6263,"name":"uint","nodeType":"ElementaryTypeName","src":"7287:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6266,"mutability":"mutable","name":"amountOutMin","nameLocation":"7311:12:27","nodeType":"VariableDeclaration","scope":6276,"src":"7306:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6265,"name":"uint","nodeType":"ElementaryTypeName","src":"7306:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6269,"mutability":"mutable","name":"path","nameLocation":"7348:4:27","nodeType":"VariableDeclaration","scope":6276,"src":"7329:23:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6267,"name":"address","nodeType":"ElementaryTypeName","src":"7329:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6268,"nodeType":"ArrayTypeName","src":"7329:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6271,"mutability":"mutable","name":"to","nameLocation":"7366:2:27","nodeType":"VariableDeclaration","scope":6276,"src":"7358:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6270,"name":"address","nodeType":"ElementaryTypeName","src":"7358:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6273,"mutability":"mutable","name":"deadline","nameLocation":"7379:8:27","nodeType":"VariableDeclaration","scope":6276,"src":"7374:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint","nodeType":"ElementaryTypeName","src":"7374:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7281:111:27"},"returnParameters":{"id":6275,"nodeType":"ParameterList","parameters":[],"src":"7401:0:27"},"scope":6277,"src":"7222:180:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6278,"src":"3064:4341:27","usedErrors":[],"usedEvents":[]}],"src":"41:7364:27"},"id":27},"contracts/token/interfaces/IToken.sol":{"ast":{"absolutePath":"contracts/token/interfaces/IToken.sol","exportedSymbols":{"IToken":[6412]},"id":6413,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":6279,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"41:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"IToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6412,"linearizedBaseContracts":[6412],"name":"IToken","nameLocation":"78:6:28","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":6287,"name":"Transfer","nameLocation":"97:8:28","nodeType":"EventDefinition","parameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"122:4:28","nodeType":"VariableDeclaration","scope":6287,"src":"106:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6280,"name":"address","nodeType":"ElementaryTypeName","src":"106:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6283,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"144:2:28","nodeType":"VariableDeclaration","scope":6287,"src":"128:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6282,"name":"address","nodeType":"ElementaryTypeName","src":"128:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6285,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"156:5:28","nodeType":"VariableDeclaration","scope":6287,"src":"148:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"148:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105:57:28"},"src":"91:72:28"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":6295,"name":"Approval","nameLocation":"172:8:28","nodeType":"EventDefinition","parameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"197:5:28","nodeType":"VariableDeclaration","scope":6295,"src":"181:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6288,"name":"address","nodeType":"ElementaryTypeName","src":"181:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6291,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"220:7:28","nodeType":"VariableDeclaration","scope":6295,"src":"204:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6290,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6293,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"237:5:28","nodeType":"VariableDeclaration","scope":6295,"src":"229:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6292,"name":"uint256","nodeType":"ElementaryTypeName","src":"229:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"180:63:28"},"src":"166:78:28"},{"functionSelector":"313ce567","id":6300,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"258:8:28","nodeType":"FunctionDefinition","parameters":{"id":6296,"nodeType":"ParameterList","parameters":[],"src":"266:2:28"},"returnParameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6300,"src":"292:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6297,"name":"uint8","nodeType":"ElementaryTypeName","src":"292:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"291:7:28"},"scope":6412,"src":"249:50:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":6305,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"311:6:28","nodeType":"FunctionDefinition","parameters":{"id":6301,"nodeType":"ParameterList","parameters":[],"src":"317:2:28"},"returnParameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6305,"src":"343:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6302,"name":"string","nodeType":"ElementaryTypeName","src":"343:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"342:15:28"},"scope":6412,"src":"302:56:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":6310,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"370:4:28","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[],"src":"374:2:28"},"returnParameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6310,"src":"400:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6307,"name":"string","nodeType":"ElementaryTypeName","src":"400:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"399:15:28"},"scope":6412,"src":"361:54:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":6315,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"427:11:28","nodeType":"FunctionDefinition","parameters":{"id":6311,"nodeType":"ParameterList","parameters":[],"src":"438:2:28"},"returnParameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6315,"src":"464:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"464:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"463:9:28"},"scope":6412,"src":"418:55:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":6322,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"485:9:28","nodeType":"FunctionDefinition","parameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6322,"src":"495:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6316,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"494:9:28"},"returnParameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6322,"src":"527:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6319,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"526:9:28"},"scope":6412,"src":"476:60:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d78317bf","id":6327,"implemented":false,"kind":"function","modifiers":[],"name":"leftTime","nameLocation":"548:8:28","nodeType":"FunctionDefinition","parameters":{"id":6323,"nodeType":"ParameterList","parameters":[],"src":"556:2:28"},"returnParameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6327,"src":"581:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6324,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:6:28"},"scope":6412,"src":"539:48:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f887ea40","id":6332,"implemented":false,"kind":"function","modifiers":[],"name":"router","nameLocation":"602:6:28","nodeType":"FunctionDefinition","parameters":{"id":6328,"nodeType":"ParameterList","parameters":[],"src":"608:2:28"},"returnParameters":{"id":6331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6332,"src":"633:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6329,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"632:9:28"},"scope":6412,"src":"593:49:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a8aa1b31","id":6337,"implemented":false,"kind":"function","modifiers":[],"name":"pair","nameLocation":"657:4:28","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[],"src":"661:2:28"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6337,"src":"686:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6334,"name":"address","nodeType":"ElementaryTypeName","src":"686:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"685:9:28"},"scope":6412,"src":"648:47:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":6346,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"709:8:28","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"718:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6338,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"727:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"727:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:18:28"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"754:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6343,"name":"bool","nodeType":"ElementaryTypeName","src":"754:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"753:6:28"},"scope":6412,"src":"700:60:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":6355,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"772:9:28","nodeType":"FunctionDefinition","parameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6355,"src":"782:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6347,"name":"address","nodeType":"ElementaryTypeName","src":"782:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6355,"src":"791:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6349,"name":"address","nodeType":"ElementaryTypeName","src":"791:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"781:18:28"},"returnParameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6355,"src":"823:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6352,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"822:9:28"},"scope":6412,"src":"763:69:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":6364,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"846:7:28","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6364,"src":"854:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6356,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6364,"src":"863:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"853:18:28"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6364,"src":"890:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6361,"name":"bool","nodeType":"ElementaryTypeName","src":"890:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"889:6:28"},"scope":6412,"src":"837:59:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":6375,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"908:12:28","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"921:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6365,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"930:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6367,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"939:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"920:27:28"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"966:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6372,"name":"bool","nodeType":"ElementaryTypeName","src":"966:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"965:6:28"},"scope":6412,"src":"899:73:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"39509351","id":6384,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"986:17:28","nodeType":"FunctionDefinition","parameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6384,"src":"1004:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6376,"name":"address","nodeType":"ElementaryTypeName","src":"1004:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6384,"src":"1013:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1013:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:18:28"},"returnParameters":{"id":6383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6384,"src":"1040:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6381,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:28"},"scope":6412,"src":"977:69:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a457c2d7","id":6393,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"1058:17:28","nodeType":"FunctionDefinition","parameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6393,"src":"1076:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6385,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6393,"src":"1085:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1085:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1075:18:28"},"returnParameters":{"id":6392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6393,"src":"1112:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6390,"name":"bool","nodeType":"ElementaryTypeName","src":"1112:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1111:6:28"},"scope":6412,"src":"1049:69:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42966c68","id":6398,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1132:4:28","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6398,"src":"1137:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1136:9:28"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[],"src":"1154:0:28"},"scope":6412,"src":"1123:32:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de5f72fd","id":6401,"implemented":false,"kind":"function","modifiers":[],"name":"faucet","nameLocation":"1167:6:28","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[],"src":"1173:2:28"},"returnParameters":{"id":6400,"nodeType":"ParameterList","parameters":[],"src":"1185:0:28"},"scope":6412,"src":"1158:28:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"28ec13ee","id":6406,"implemented":false,"kind":"function","modifiers":[],"name":"setInitialAddresses","nameLocation":"1198:19:28","nodeType":"FunctionDefinition","parameters":{"id":6404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6406,"src":"1218:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6402,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1217:9:28"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[],"src":"1235:0:28"},"scope":6412,"src":"1189:47:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"51c6590a","id":6411,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"1251:12:28","nodeType":"FunctionDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6411,"src":"1264:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1263:9:28"},"returnParameters":{"id":6410,"nodeType":"ParameterList","parameters":[],"src":"1281:0:28"},"scope":6412,"src":"1242:40:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6413,"src":"68:1221:28","usedErrors":[],"usedEvents":[6287,6295]}],"src":"41:1248:28"},"id":28}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"LzLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e82702f565c76f6bd27c95d14289994a9203e504218ed691b33365dfaf36e864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE82702F565C76F6BD27C95D14289994A9203E504218ED691B3 CALLER PUSH6 0xDFAF36E86473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"98:3167:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;98:3167:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e82702f565c76f6bd27c95d14289994a9203e504218ed691b33365dfaf36e864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE82702F565C76F6BD27C95D14289994A9203E504218ED691B3 CALLER PUSH6 0xDFAF36E86473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"98:3167:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"addressToBytes32(address)":"infinite","buildAdapterParams(struct LzLib.AirdropParams memory,uint256)":"infinite","buildAirdropAdapterParams(uint256,struct LzLib.AirdropParams memory)":"infinite","buildDefaultAdapterParams(uint256)":"infinite","bytes32ToAddress(bytes32)":"infinite","decodeAdapterParams(bytes memory)":"infinite","getGasLimit(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":\"LzLib\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1527,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":281,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":401,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":756,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":756,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1071,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1086,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":1155,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d44cbca100cdc41e1c8d7e417902d91b0a2c24406d6de945649e7dd98c2b9d8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x4C 0xBC LOG1 STOP 0xCD 0xC4 0x1E SHR DUP14 PUSH31 0x417902D91B0A2C24406D6DE945649E7DD98C2B9D8D64736F6C634300081400 CALLER ","sourceMap":"194:9180:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d44cbca100cdc41e1c8d7e417902d91b0a2c24406d6de945649e7dd98c2b9d8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x4C 0xBC LOG1 STOP 0xCD 0xC4 0x1E SHR DUP14 PUSH31 0x417902D91B0A2C24406D6DE945649E7DD98C2B9D8D64736F6C634300081400 CALLER ","sourceMap":"194:9180:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1527,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f5fda1cf7e3a60276bb9fa1453cb8aa8f39e203d4f0082dfea8094b271e727a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 PUSH0 0xDA SHR 0xF7 0xE3 0xA6 MUL PUSH23 0xBB9FA1453CB8AA8F39E203D4F0082DFEA8094B271E727A PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1420:2696:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f5fda1cf7e3a60276bb9fa1453cb8aa8f39e203d4f0082dfea8094b271e727a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 PUSH0 0xDA SHR 0xF7 0xE3 0xA6 MUL PUSH23 0xBB9FA1453CB8AA8F39E203D4F0082DFEA8094B271E727A PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1420:2696:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038c0b6f426ad360ad17ba01a131f2653226b348a1bcbe0106907356605e6184364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC0 0xB6 DELEGATECALL 0x26 0xAD CALLDATASIZE EXP 0xD1 PUSH28 0xA01A131F2653226B348A1BCBE0106907356605E6184364736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;701:6234:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038c0b6f426ad360ad17ba01a131f2653226b348a1bcbe0106907356605e6184364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC0 0xB6 DELEGATECALL 0x26 0xAD CALLDATASIZE EXP 0xD1 PUSH28 0xA01A131F2653226B348A1BCBE0106907356605E6184364736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8dc5795c4f0c5581bf254d9fd5966a8fbb0e9c979dc61c6c46e0ef31a77e25564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xDC JUMPI SWAP6 0xC4 CREATE 0xC5 PC SHL CALLCODE SLOAD 0xD9 REVERT MSIZE PUSH7 0xA8FBB0E9C979DC PUSH2 0xC6C4 PUSH15 0xEF31A77E25564736F6C6343000814 STOP CALLER ","sourceMap":"194:9169:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8dc5795c4f0c5581bf254d9fd5966a8fbb0e9c979dc61c6c46e0ef31a77e25564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xDC JUMPI SWAP6 0xC4 CREATE 0xC5 PC SHL CALLCODE SLOAD 0xD9 REVERT MSIZE PUSH7 0xA8FBB0E9C979DC PUSH2 0xC6C4 PUSH15 0xEF31A77E25564736F6C6343000814 STOP CALLER ","sourceMap":"194:9169:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/TokenBridge.sol":{"TokenBridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"EnableEmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Receive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"RegisterToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Send","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"aptosChainId","type":"uint16"}],"name":"SetAptosChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bridgeFeeBP","type":"uint256"}],"name":"SetBridgeBP","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetGlobalPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"localChainId","type":"uint16"}],"name":"SetLocalChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetTokenPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useCustomAdapterParams","type":"bool"}],"name":"SetUseCustomAdapterParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"weth","type":"address"}],"name":"SetWETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawTVL","type":"event"},{"inputs":[],"name":"BP_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SHARED_DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"accruedFeeLD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bridgeFeeBP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dataFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdrawEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdrawTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"enableChain","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"enableEmergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getChainlinkDataFeedLatestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_layerZeroEndpoint","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pausedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"priceFeed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_toLzDestChain","type":"uint16"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"quoteForSend","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_toLzDestChain","type":"uint16"},{"internalType":"address","name":"_toAddress","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendETHToDest","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_toLzDestChain","type":"uint16"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_toAddress","type":"address"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendTokenToDest","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bridgeFeeBP","type":"uint256"}],"name":"setBridgeFeeBP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_lzDestChainId","type":"uint16"},{"internalType":"bool","name":"enable","type":"bool"}],"name":"setEnableChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setGlobalPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setTokenPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_useCustomAdapterParams","type":"bool"}],"name":"setUseCustomAdapterParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_weth","type":"address"}],"name":"setWETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supportedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"toLzChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_lzDestChainId","type":"uint16"},{"internalType":"address","name":"_otherContract","type":"address"}],"name":"trustAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tvlSDs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"useCustomAdapterParams","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weth","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"withdrawEmergency","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amountLD","type":"uint256"}],"name":"withdrawFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawTVL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b5060805161573c6200004d60003960008181610eed01528181610f2d015281816113120152818161135201526113ce015261573c6000f3fe6080604052600436106102b45760003560e01c80620d5900146102c05780621d3567146102e257806307e0db17146103025780630df37483146103225780631095b6d71461034257806310ddb1371461036257806325a9f792146103825780633659cfe6146103ac5780633bd0536b146103cc5780633d8b38f6146103df5780633f1f4fa41461040f5780633fc8cef31461043c57806342d65a8d1461046a5780634f1ef2861461048a57806352d1902d1461049d578063564b81ef146104b25780635747e69f146104c557806359d91cd7146104e75780635b769f3c146105075780635b8c41e61461052757806361a552dc1461057757806366ad5c8a1461059957806368c4ac26146105b957806369a6b3db146105ea578063715018a61461060a57806373afbcaa1461061f5780637533d7881461063f5780637a38d7601461066c5780637d5f5bd41461069b5780638cfd8f5c146106d05780638da5cb5b1461070857806393f26a4c1461071d578063950c8a741461073d578063971679641461075d5780639e42ff90146107845780639f38369a146107a5578063a2f27ae0146107c5578063a6c3d165146107e5578063abe685cd14610805578063b353aaa71461081b578063b5f970731461083b578063b790d7c114610872578063b90fc4a514610885578063baf3292d146108a5578063bea4dfb5146108c5578063c446183414610805578063c4d66de8146108da578063cb8d3b1f146108fa578063cbed8b9c1461091a578063d1deba1f1461093a578063d71e409e1461094d578063de9b94881461096d578063df2a5b3b14610984578063df4bbc1c146109a4578063e3179c3e146109d5578063eab45d9c14610a03578063eb8d72b714610a23578063ed629c5c14610a43578063ee7a459614610a65578063f2fde38b14610a96578063f5ecbdbc14610ab657600080fd5b366102bb57005b600080fd5b3480156102cc57600080fd5b506102e06102db366004614566565b610ad6565b005b3480156102ee57600080fd5b506102e06102fd3660046145f5565b610b72565b34801561030e57600080fd5b506102e061031d366004614688565b610d89565b34801561032e57600080fd5b506102e061033d3660046146a3565b610df6565b34801561034e57600080fd5b506102e061035d3660046146e2565b610e15565b34801561036e57600080fd5b506102e061037d366004614688565b610ea7565b34801561038e57600080fd5b506103996101025481565b6040519081526020015b60405180910390f35b3480156103b857600080fd5b506102e06103c7366004614723565b610ee3565b6102e06103da366004614758565b610fab565b3480156103eb57600080fd5b506103ff6103fa3660046147ff565b6111d2565b60405190151581526020016103a3565b34801561041b57600080fd5b5061039961042a366004614688565b60fe6020526000908152604090205481565b34801561044857600080fd5b506101085461045d906001600160a01b031681565b6040516103a39190614851565b34801561047657600080fd5b506102e06104853660046147ff565b61129e565b6102e0610498366004614928565b611308565b3480156104a957600080fd5b506103996113c1565b3480156104be57600080fd5b5046610399565b3480156104d157600080fd5b50610108546103ff90600160b01b900460ff1681565b3480156104f357600080fd5b506102e0610502366004614985565b61146f565b34801561051357600080fd5b506102e0610522366004614723565b61149e565b34801561053357600080fd5b506103996105423660046149bc565b610100602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b34801561058357600080fd5b50610108546103ff90600160a81b900460ff1681565b3480156105a557600080fd5b506102e06105b43660046145f5565b611553565b3480156105c557600080fd5b506103ff6105d4366004614723565b6101046020526000908152604090205460ff1681565b3480156105f657600080fd5b506102e0610605366004614a19565b61162f565b34801561061657600080fd5b506102e0611685565b34801561062b57600080fd5b506102e061063a366004614a36565b61168f565b34801561064b57600080fd5b5061065f61065a366004614688565b611766565b6040516103a39190614ab2565b34801561067857600080fd5b50610101546106889061ffff1681565b60405161ffff90911681526020016103a3565b3480156106a757600080fd5b506106bb6106b6366004614ac5565b611800565b604080519283526020830191909152016103a3565b3480156106dc57600080fd5b506103996106eb366004614b26565b60fd60209081526000928352604080842090915290825290205481565b34801561071457600080fd5b5061045d6118c2565b34801561072957600080fd5b506102e0610738366004614b59565b6118d1565b34801561074957600080fd5b5060ff5461045d906001600160a01b031681565b34801561076957600080fd5b50610772600681565b60405160ff90911681526020016103a3565b34801561079057600080fd5b5061010a5461045d906001600160a01b031681565b3480156107b157600080fd5b5061065f6107c0366004614688565b61190e565b3480156107d157600080fd5b506103996107e0366004614723565b611a24565b3480156107f157600080fd5b506102e06108003660046147ff565b611ab4565b34801561081157600080fd5b5061039961271081565b34801561082757600080fd5b5060fb5461045d906001600160a01b031681565b34801561084757600080fd5b5061045d610856366004614566565b610106602052600090815260409020546001600160a01b031681565b6102e0610880366004614b77565b611b3d565b34801561089157600080fd5b506102e06108a03660046146e2565b611dca565b3480156108b157600080fd5b506102e06108c0366004614723565b611ed5565b3480156108d157600080fd5b50610399611f28565b3480156108e657600080fd5b506102e06108f5366004614723565b611fae565b34801561090657600080fd5b506102e0610915366004614be6565b61208f565b34801561092657600080fd5b506102e0610935366004614c04565b6120f4565b6102e06109483660046145f5565b612162565b34801561095957600080fd5b506102e0610968366004614a19565b61237a565b34801561097957600080fd5b506103996101095481565b34801561099057600080fd5b506102e061099f366004614c72565b6123f2565b3480156109b057600080fd5b506103ff6109bf366004614688565b6101076020526000908152604090205460ff1681565b3480156109e157600080fd5b506103996109f0366004614723565b6101036020526000908152604090205481565b348015610a0f57600080fd5b506102e0610a1e366004614a19565b61245c565b348015610a2f57600080fd5b506102e0610a3e3660046147ff565b6124b2565b348015610a4f57600080fd5b50610108546103ff90600160a01b900460ff1681565b348015610a7157600080fd5b506103ff610a80366004614723565b6101056020526000908152604090205460ff1681565b348015610aa257600080fd5b506102e0610ab1366004614723565b61250c565b348015610ac257600080fd5b5061065f610ad1366004614cae565b612582565b610ade612617565b612710811115610b355760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e4272696467653a2062726964676520666565203e2031303025000060448201526064015b60405180910390fd5b6101028190556040518181527f9a749c8193bfd56b2b2a05c0bd18fbb0f69801a3fd6576c40b90537fd0fc3854906020015b60405180910390a150565b60fb546001600160a01b0316336001600160a01b031614610bd55760405162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c657200006044820152606401610b2c565b61ffff8616600090815260fc602052604081208054610bf390614cfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1f90614cfb565b8015610c6c5780601f10610c4157610100808354040283529160200191610c6c565b820191906000526020600020905b815481529060010190602001808311610c4f57829003601f168201915b50505050509050805186869050148015610c87575060008151115b8015610caf575080516020820120604051610ca59088908890614d2f565b6040518091039020145b610d0a5760405162461bcd60e51b815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6044820152651b9d1c9858dd60d21b6064820152608401610b2c565b610d808787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061267692505050565b50505050505050565b610d91612617565b60fb546040516307e0db1760e01b815261ffff831660048201526001600160a01b03909116906307e0db17906024015b600060405180830381600087803b158015610ddb57600080fd5b505af1158015610def573d6000803e3d6000fd5b5050505050565b610dfe612617565b61ffff909116600090815260fe6020526040902055565b610e1d612617565b6000610e2884611a24565b905080821115610e4a5760405162461bcd60e51b8152600401610b2c90614d3f565b610e5e6001600160a01b03851684846126ef565b836001600160a01b03167ff15a0a3784dea9b4fe33bc98e2450745e262d310237b2868ea8ef56967ff3ecb8484604051610e99929190614d74565b60405180910390a250505050565b610eaf612617565b60fb546040516310ddb13760e01b815261ffff831660048201526001600160a01b03909116906310ddb13790602401610dc1565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610f2b5760405162461bcd60e51b8152600401610b2c90614d8d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f5d612745565b6001600160a01b031614610f835760405162461bcd60e51b8152600401610b2c90614dc7565b610f8c81612761565b60408051600080825260208201909252610fa891839190612769565b50565b610108548790600160a81b900460ff16158015610fe257506001600160a01b0381166000908152610105602052604090205460ff16155b610ffe5760405162461bcd60e51b8152600401610b2c90614e01565b6110066128d4565b6001600160a01b0388166000908152610104602052604090205460ff16801561104857506001600160a01b0386166000908152610104602052604090205460ff165b6110b85760405162461bcd60e51b815260206004820152603b60248201527f546f6b656e4272696467653a20696e70757420746f6b656e20616e64206f757460448201527a1c1d5d081d1bdad95b88185c99481b9bdd081cdd5c1c1bdc9d1959602a1b6064820152608401610b2c565b6110c388338961292d565b965060006110d18989612a3a565b9050600088116111385760405162461bcd60e51b815260206004820152602c60248201527f546f6b656e4272696467653a20616d6f756e74496e206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608401610b2c565b6001600160a01b03891660009081526101036020526040812080548a9290611161908490614e44565b9091555061117790508a82898989898934612c9f565b856001600160a01b0316336001600160a01b03168a6001600160a01b03166000805160206156608339815191528b6040516111b491815260200190565b60405180910390a4506111c7600160c955565b505050505050505050565b61ffff8316600090815260fc6020526040812080548291906111f390614cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461121f90614cfb565b801561126c5780601f106112415761010080835404028352916020019161126c565b820191906000526020600020905b81548152906001019060200180831161124f57829003601f168201915b505050505090508383604051611283929190614d2f565b60405180910390208180519060200120149150509392505050565b6112a6612617565b60fb546040516342d65a8d60e01b81526001600160a01b03909116906342d65a8d906112da90869086908690600401614e80565b600060405180830381600087803b1580156112f457600080fd5b505af1158015610d80573d6000803e3d6000fd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036113505760405162461bcd60e51b8152600401610b2c90614d8d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611382612745565b6001600160a01b0316146113a85760405162461bcd60e51b8152600401610b2c90614dc7565b6113b182612761565b6113bd82826001612769565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461145c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610b2c565b506000805160206156a083398151915290565b611477612617565b61ffff91909116600090815261010760205260409020805460ff1916911515919091179055565b6114a6612617565b6001600160a01b0381166115075760405162461bcd60e51b815260206004820152602260248201527f546f6b656e4272696467653a20696e76616c696420746f6b656e206164647265604482015261737360f01b6064820152608401610b2c565b61010880546001600160a01b0319166001600160a01b0383161790556040517fe390bcec6614d6b1f8ae47a4d9d46531ce328e3d293ecd6ddd015cb01eff030090610b67908390614851565b3330146115b15760405162461bcd60e51b815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d7573742062656044820152650204c7a4170760d41b6064820152608401610b2c565b6116278686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f890181900481028201810190925287815289935091508790879081908401838280828437600092019190915250612d4192505050565b505050505050565b611637612617565b6101088054821515600160a81b0260ff60a81b199091161790556040517f5362d4bd13945e8d116b90d83a7050fa61ceb02bb79bfae783377adb46916d9490610b6790831515815260200190565b61168d612617565b565b611697612617565b61ffff82166000908152610107602052604090205460ff166117125760405162461bcd60e51b815260206004820152602e60248201527f546f6b656e4272696467653a2074686973206465737420636861696e2069642060448201526d1a5cc81b9bdd08195b98589b195960921b6064820152608401610b2c565b6040516001600160601b0319606083811b8216602084015230901b16603482015260480160408051601f1981840301815291815261ffff8416600090815260fc60205220906117619082614ef9565b505050565b60fc602052600090815260409020805461177f90614cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546117ab90614cfb565b80156117f85780601f106117cd576101008083540402835291602001916117f8565b820191906000526020600020905b8154815290600101906020018083116117db57829003601f168201915b505050505081565b60008061180d8484613137565b600061181c6000806000613207565b90506000806118316040890160208a01614723565b60fb5460405163040a7bb160e41b81526001600160a01b039283169390931415935016906340a7bb1090611873908b903090879087908d908d90600401614fb2565b6040805180830381865afa15801561188f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b39190615008565b93509350505094509492505050565b6097546001600160a01b031690565b6118d9612617565b6118e7828261035d85611a24565b6001600160a01b038216600090815261010360205260409020546113bd9083908390611dca565b61ffff8116600090815260fc602052604081208054606092919061193190614cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461195d90614cfb565b80156119aa5780601f1061197f576101008083540402835291602001916119aa565b820191906000526020600020905b81548152906001019060200180831161198d57829003601f168201915b505050505090508051600003611a025760405162461bcd60e51b815260206004820152601d60248201527f4c7a4170703a206e6f20747275737465642070617468207265636f72640000006044820152606401610b2c565b611a1d600060148351611a15919061502c565b839190613260565b9392505050565b6001600160a01b038116600081815261010360205260408082205490516370a0823160e01b8152919290916370a0823190611a63903090600401614851565b602060405180830381865afa158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa4919061503f565b611aae919061502c565b92915050565b611abc612617565b818130604051602001611ad193929190615058565b60408051601f1981840301815291815261ffff8516600090815260fc6020522090611afc9082614ef9565b507f8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce838383604051611b3093929190614e80565b60405180910390a1505050565b610108546001600160a01b03811690600160a81b900460ff16158015611b7d57506001600160a01b0381166000908152610105602052604090205460ff16155b611b995760405162461bcd60e51b8152600401610b2c90614e01565b611ba16128d4565b610108546001600160a01b03168015801590611bd657506001600160a01b0381166000908152610104602052604090205460ff165b611c2c5760405162461bcd60e51b815260206004820152602160248201527f546f6b656e4272696467653a20455448206973206e6f7420737570706f7274656044820152601960fa1b6064820152608401610b2c565b60008611611c8f5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e4272696467653a20616d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b6064820152608401610b2c565b85341015611caf5760405162461bcd60e51b8152600401610b2c90614d3f565b806001600160a01b031663d0e30db0876040518263ffffffff1660e01b81526004016000604051808303818588803b158015611cea57600080fd5b505af1158015611cfe573d6000803e3d6000fd5b5050506001600160a01b03831660009081526101036020526040812080548a9450909250611d2d908490614e44565b9091555060009050611d3d611f28565b90506000808212611d4e5781611d65565b611d5a8260001961502c565b611d65906001614e44565b9050611d8c8a611d758a84615079565b60008c8b8b8b8f34611d87919061502c565b612c9f565b6040518881526001600160a01b038a169033906000906000805160206156608339815191529060200160405180910390a4505050610d80600160c955565b611dd2612617565b61010854600160b01b900460ff168015611def5750610109544210155b611e4a5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e4272696467653a20656d657267656e6379207769746864726177206044820152651b1bd8dad95960d21b6064820152608401610b2c565b6001600160a01b0383166000908152610103602052604081208054839290611e7390849061502c565b90915550611e8d90506001600160a01b03841683836126ef565b826001600160a01b03167f49507695f37b729944475cf3388760a14760fef784b7ab5ca8863a5f3f8be6bd8383604051611ec8929190614d74565b60405180910390a2505050565b611edd612617565b60ff80546001600160a01b0319166001600160a01b0383161790556040517f5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b90610b67908390614851565b60008061010a60009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa391906150a7565b509195945050505050565b600054610100900460ff1615808015611fce5750600054600160ff909116105b80611fef5750611fdd3061336d565b158015611fef575060005460ff166001145b61200b5760405162461bcd60e51b8152600401610b2c906150f7565b6000805460ff19166001179055801561202e576000805461ff0019166101001790555b61203661337c565b61203e6133a3565b612047826133d2565b61204f613402565b612057613431565b80156113bd576000805461ff0019169055604051600181526000805160206156c0833981519152906020015b60405180910390a15050565b612097612617565b6001600160a01b03821660008181526101056020908152604091829020805460ff19168515159081179091558251938452908301527fb1656bd3b50ddb6b12ef259c86e9cb359952b53c4403cfb5a83e23c515a35e229101612083565b6120fc612617565b60fb546040516332fb62e760e21b81526001600160a01b039091169063cbed8b9c906121349088908890889088908890600401615145565b600060405180830381600087803b15801561214e57600080fd5b505af11580156111c7573d6000803e3d6000fd5b61ffff86166000908152610100602052604080822090516121869088908890614d2f565b90815260408051602092819003830190206001600160401b038716600090815292529020549050806122065760405162461bcd60e51b815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201526261676560e81b6064820152608401610b2c565b808383604051612217929190614d2f565b6040518091039020146122765760405162461bcd60e51b815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f616044820152601960fa1b6064820152608401610b2c565b61ffff871660009081526101006020526040808220905161229a9089908990614d2f565b90815260408051602092819003830181206001600160401b038916600090815290845282902093909355601f88018290048202830182019052868252612332918991899089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a935091508890889081908401838280828437600092019190915250612d4192505050565b7fc264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e58787878785604051612369959493929190615173565b60405180910390a150505050505050565b612382612617565b610108805460ff60b01b1916600160b01b83151502179055806123a65760006123b3565b6123b34262093a80614e44565b61010981905560408051831515815260208101929092527f27a37fc51e6c5d14309bbed3a54787c8788223b5d9cd5fe10605661665dd84159101610b67565b6123fa612617565b61ffff838116600081815260fd602090815260408083209487168084529482529182902085905581519283528201929092529081018290527f9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac090606001611b30565b612464612617565b6101088054821515600160a01b0260ff60a01b199091161790556040517f1584ad594a70cbe1e6515592e1272a987d922b097ead875069cebe8b40c004a490610b6790831515815260200190565b6124ba612617565b61ffff8316600090815260fc602052604090206124d88284836151ae565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab838383604051611b3093929190614e80565b612514612617565b6001600160a01b0381166125795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b2c565b610fa881613629565b60fb54604051633d7b2f6f60e21b815261ffff808716600483015285166024820152306044820152606481018390526060916001600160a01b03169063f5ecbdbc90608401600060405180830381865afa1580156125e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261260c9190810190615267565b90505b949350505050565b336126206118c2565b6001600160a01b03161461168d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b2c565b6000806126d95a60966366ad5c8a60e01b8989898960405160240161269e94939291906152dd565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091523092919061367b565b9150915081611627576116278686868685613705565b6117618363a9059cbb60e01b848460405160240161270e929190614d74565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526137a3565b6000805160206156a0833981519152546001600160a01b031690565b610fa8612617565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561279c5761176183613878565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156127f6575060408051601f3d908101601f191682019092526127f39181019061503f565b60015b6128595760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610b2c565b6000805160206156a083398151915281146128c85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610b2c565b50611761838383613912565b600260c954036129265760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b2c565b600260c955565b600080846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161295c9190614851565b602060405180830381865afa158015612979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299d919061503f565b90506129b46001600160a01b03861685308661393d565b6040516370a0823160e01b81526000906001600160a01b038716906370a08231906129e3903090600401614851565b602060405180830381865afa158015612a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a24919061503f565b9050612a30828261502c565b9695505050505050565b600080836001600160a01b031663a8aa1b316040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a9f919061531b565b90506001600160a01b038116612b055760405162461bcd60e51b815260206004820152602560248201527f546f6b656e42726967653a20746f6b656e2070616972206973206e6f7420637260448201526419585d195960da1b6064820152608401610b2c565b6000612b0f611f28565b90506000808212612b205781612b37565b612b2c8260001961502c565b612b37906001614e44565b90506000839050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ba3919061534f565b50915091506000896001600160a01b0316846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c16919061531b565b6001600160a01b031614612c5d57826001600160701b0316858a846001600160701b0316612c449190615079565b612c4e9190615079565b612c58919061539f565b612c91565b816001600160701b0316858a856001600160701b0316612c7d9190615079565b612c879190615079565b612c91919061539f565b9a9950505050505050505050565b612ca98383613137565b6000612cb6888888613207565b9050612d188982612cca6020890189614723565b612cda60408a0160208b01614723565b88888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250613975915050565b5050610101805461ffff191661ffff9890981697909717909655505050505050565b600160c955565b61ffff84166000908152610107602052604090205460ff16612db15760405162461bcd60e51b8152602060048201526024808201527f546f6b656e4272696467653a20696e76616c696420736f7572636520636861696044820152631b881a5960e21b6064820152608401610b2c565b600080600080612dc085613afe565b93509350935093506000808215612df057610108546001600160a01b03169150612de986613c38565b9050612ed6565b8491506000826001600160a01b031663a8aa1b316040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e57919061531b565b90506001600160a01b038116612ec85760405162461bcd60e51b815260206004820152603060248201527f546f6b656e4272696467653a20746f6b656e4f75742068617320696e76616c6960448201526f19081b1a5c5d5a591a5d1e481c1bdbdb60821b6064820152608401610b2c565b612ed28784613c8a565b9150505b61010854600160a81b900460ff16158015612f0b57506001600160a01b0382166000908152610105602052604090205460ff16155b612f275760405162461bcd60e51b8152600401610b2c90614e01565b6001600160a01b0382166000908152610104602052604090205460ff16612f9c5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e4272696467653a20746f6b656e206973206e6f7420737570706f726044820152621d195960ea1b6064820152608401610b2c565b6001600160a01b03821660009081526101036020526040902054818110156130125760405162461bcd60e51b815260206004820152602360248201527f546f6b656e4272696467653a20696e73756666696369656e74206c697175696460448201526269747960e81b6064820152608401610b2c565b61301c828261502c565b6001600160a01b03841660009081526101036020526040902055610102546130465781600061304f565b61304f82613e9d565b50610108549092506001600160a01b03848116911614801561306e5750835b156130bf576101085461308b906001600160a01b03168684613ecf565b6040518281526001600160a01b038616906000906000805160206156408339815191529060200160405180910390a361312a565b6001600160a01b038516156130d457846130d8565b61dead5b94506130ee6001600160a01b03841686846126ef565b846001600160a01b0316836001600160a01b03166000805160206156408339815191528460405161312191815260200190565b60405180910390a35b5050505050505050505050565b61010854600160a01b900460ff16801561315757506101015461ffff1615155b156131a657610101546113bd9061ffff16600084848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250613f5f915050565b80156113bd5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e4272696467653a205f61646170746572506172616d73206d7573746044820152691031329032b6b83a3c9760b11b6064820152608401610b2c565b606060006132148461402f565b905060006132218461402f565b60405160006020820152602181018890526041810184905260618101829052909150608101604051602081830303815290604052925050509392505050565b60608161326e81601f614e44565b10156132ad5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610b2c565b6132b78284614e44565b845110156132fb5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610b2c565b60608215801561331a5760405191506000825260208201604052613364565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561335357805183526020928301920161333b565b5050858452601f01601f1916604052505b50949350505050565b6001600160a01b03163b151590565b600054610100900460ff1661168d5760405162461bcd60e51b8152600401610b2c906153d7565b600054610100900460ff166133ca5760405162461bcd60e51b8152600401610b2c906153d7565b61168d61403b565b600054610100900460ff166133f95760405162461bcd60e51b8152600401610b2c906153d7565b610fa88161406b565b600054610100900460ff166134295760405162461bcd60e51b8152600401610b2c906153d7565b61168d61409b565b600054610100900460ff16158080156134515750600054600160ff909116105b8061347257506134603061336d565b158015613472575060005460ff166001145b61348e5760405162461bcd60e51b8152600401610b2c906150f7565b6000805460ff1916600117905580156134b1576000805461ff0019166101001790555b6101066020527fd1fe999288d0a7e8ed972caa3b05bca25eccd5b4e714d8ec2d4f2d8e2212621680546001600160a01b031990811673694aa1769357215de4fac081bf1f309adc325306179091557f5c4185f72335224d2cf1ca1428fc3b5b56133884156db2ad5f59d4b2ffef13c180548216732514895c72f50d8bd4b4f9b1110f0d6bd2c975261790557fde8c4e26ff4f8e9560afbccf153706b866627645b028d1ea07877fd698662dab8054821673b8c458c957a6e6ca7cc53ed95bea548c52afaa241790556201388160009081527f5337a075601bc8fa859e72e939688626da1ae8a471b1db80f8e6ae13dcf28bed805490921673d0d5e3db44de05e9f294bb0a3beeaf030de24ada179091556135c84690565b6000908152610106602052604090205461010a80546001600160a01b0319166001600160a01b03909216919091179055508015610fa8576000805461ff0019169055604051600181526000805160206156c083398151915290602001610b67565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000606060008060008661ffff166001600160401b038111156136a0576136a0614865565b6040519080825280601f01601f1916602001820160405280156136ca576020820181803683370190505b50905060008087516020890160008d8df191503d9250868311156136ec578692505b828152826000602083013e909890975095505050505050565b818051906020012061010060008761ffff1661ffff168152602001908152602001600020856040516137379190615422565b9081526040805191829003602090810183206001600160401b0388166000908152915220919091557fe183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c90613794908790879087908790879061543e565b60405180910390a15050505050565b60006137f8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166140c29092919063ffffffff16565b9050805160001480613819575080806020019051810190613819919061549c565b6117615760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b2c565b6138818161336d565b6138e35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610b2c565b6000805160206156a083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61391b836140d1565b6000825111806139285750805b15611761576139378383614111565b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526139379085906323b872dd60e01b9060840161270e565b61ffff8616600090815260fc60205260408120805461399390614cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546139bf90614cfb565b8015613a0c5780601f106139e157610100808354040283529160200191613a0c565b820191906000526020600020905b8154815290600101906020018083116139ef57829003601f168201915b505050505090508051600003613a7d5760405162461bcd60e51b815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201526f61207472757374656420736f7572636560801b6064820152608401610b2c565b613a88878751614136565b60fb5460405162c5803160e81b81526001600160a01b039091169063c5803100908490613ac3908b9086908c908c908c908c906004016154b9565b6000604051808303818588803b158015613adc57600080fd5b505af1158015613af0573d6000803e3d6000fd5b505050505050505050505050565b6000806000808451606214613b615760405162461bcd60e51b815260206004820152602360248201527f546f6b656e4272696467653a20696e76616c6964207061796c6f6164206c656e6044820152620cee8d60eb1b6064820152608401610b2c565b600085600081518110613b7657613b76615513565b016020015160f81c6001811115613b8f57613b8f6153c1565b90506001816001811115613ba557613ba56153c1565b14613bf25760405162461bcd60e51b815260206004820181905260248201527f546f6b656e4272696467653a20756e6b6e6f776e207061636b657420747970656044820152606401610b2c565b60218601519450604186015193506061860151925085606181518110613c1a57613c1a615513565b602001015160f81c60f81b60f81c60ff166001149150509193509193565b600080613c43611f28565b90506000808212613c545781613c6b565b613c608260001961502c565b613c6b906001614e44565b905080613c8085670de0b6b3a7640000615079565b61260f919061539f565b600080826001600160a01b031663a8aa1b316040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cef919061531b565b90506000613cfb611f28565b90506000808212613d0c5781613d23565b613d188260001961502c565b613d23906001614e44565b90506000839050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d8f919061534f565b50915091506000886001600160a01b0316846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015613dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e02919061531b565b6001600160a01b031614613e495784826001600160701b0316846001600160701b03168c613e309190615079565b613e3a919061539f565b613e44919061539f565b613e7d565b84836001600160701b0316836001600160701b03168c613e699190615079565b613e73919061539f565b613e7d919061539f565b9050613e88896141a7565b613e9390600a61560d565b612c919082615079565b6000806127106101025484613eb29190615079565b613ebc919061539f565b9050613ec8818461502c565b9150915091565b604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b158015613f1157600080fd5b505af1158015613f25573d6000803e3d6000fd5b50506040516001600160a01b038516925083156108fc02915083906000818181858888f19350505050158015613937573d6000803e3d6000fd5b6000613f6a836142a5565b61ffff808716600090815260fd602090815260408083209389168352929052205490915080613fd85760405162461bcd60e51b815260206004820152601a602482015279131e905c1c0e881b5a5b91d85cd31a5b5a5d081b9bdd081cd95d60321b6044820152606401610b2c565b613fe28382614e44565b8210156116275760405162461bcd60e51b815260206004820152601b60248201527a4c7a4170703a20676173206c696d697420697320746f6f206c6f7760281b6044820152606401610b2c565b6001600160a01b031690565b600054610100900460ff166140625760405162461bcd60e51b8152600401610b2c906153d7565b61168d33613629565b600054610100900460ff166140925760405162461bcd60e51b8152600401610b2c906153d7565b610fa881614300565b600054610100900460ff16612d3a5760405162461bcd60e51b8152600401610b2c906153d7565b606061260f8484600085614338565b6140da81613878565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611a1d83836040518060600160405280602781526020016156e060279139614413565b61ffff8216600090815260fe60205260408120549081900361415757506127105b808211156117615760405162461bcd60e51b815260206004820181905260248201527f4c7a4170703a207061796c6f61642073697a6520697320746f6f206c617267656044820152606401610b2c565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b038616916141ed9190615422565b600060405180830381855afa9150503d8060008114614228576040519150601f19603f3d011682016040523d82523d6000602084013e61422d565b606091505b5091509150816142915760405162461bcd60e51b815260206004820152602960248201527f546f6b656e4272696467653a206661696c656420746f2067657420746f6b656e60448201526820646563696d616c7360b81b6064820152608401610b2c565b8080602001905181019061260f919061561c565b60006022825110156142f85760405162461bcd60e51b815260206004820152601c60248201527b4c7a4170703a20696e76616c69642061646170746572506172616d7360201b6044820152606401610b2c565b506022015190565b600054610100900460ff166143275760405162461bcd60e51b8152600401610b2c906153d7565b61432f6133a3565b610fa881614481565b6060824710156143995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b2c565b600080866001600160a01b031685876040516143b59190615422565b60006040518083038185875af1925050503d80600081146143f2576040519150601f19603f3d011682016040523d82523d6000602084013e6143f7565b606091505b5091509150614408878383876144ca565b979650505050505050565b6060600080856001600160a01b0316856040516144309190615422565b600060405180830381855af49150503d806000811461446b576040519150601f19603f3d011682016040523d82523d6000602084013e614470565b606091505b5091509150612a30868383876144ca565b600054610100900460ff166144a85760405162461bcd60e51b8152600401610b2c906153d7565b60fb80546001600160a01b0319166001600160a01b0392909216919091179055565b60608315614537578251600003614530576144e48561336d565b6145305760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b2c565b508161260f565b61260f838381511561454c5781518083602001fd5b8060405162461bcd60e51b8152600401610b2c9190614ab2565b60006020828403121561457857600080fd5b5035919050565b803561ffff8116811461459157600080fd5b919050565b60008083601f8401126145a857600080fd5b5081356001600160401b038111156145bf57600080fd5b6020830191508360208285010111156145d757600080fd5b9250929050565b80356001600160401b038116811461459157600080fd5b6000806000806000806080878903121561460e57600080fd5b6146178761457f565b955060208701356001600160401b038082111561463357600080fd5b61463f8a838b01614596565b909750955085915061465360408a016145de565b9450606089013591508082111561466957600080fd5b5061467689828a01614596565b979a9699509497509295939492505050565b60006020828403121561469a57600080fd5b611a1d8261457f565b600080604083850312156146b657600080fd5b6146bf8361457f565b946020939093013593505050565b6001600160a01b0381168114610fa857600080fd5b6000806000606084860312156146f757600080fd5b8335614702816146cd565b92506020840135614712816146cd565b929592945050506040919091013590565b60006020828403121561473557600080fd5b8135611a1d816146cd565b60006040828403121561475257600080fd5b50919050565b600080600080600080600080610100898b03121561477557600080fd5b61477e8961457f565b9750602089013561478e816146cd565b96506040890135955060608901356147a5816146cd565b945060808901356147b5816146cd565b93506147c48a60a08b01614740565b925060e08901356001600160401b038111156147df57600080fd5b6147eb8b828c01614596565b999c989b5096995094979396929594505050565b60008060006040848603121561481457600080fd5b61481d8461457f565b925060208401356001600160401b0381111561483857600080fd5b61484486828701614596565b9497909650939450505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156148a3576148a3614865565b604052919050565b60006001600160401b038211156148c4576148c4614865565b50601f01601f191660200190565b600082601f8301126148e357600080fd5b81356148f66148f1826148ab565b61487b565b81815284602083860101111561490b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561493b57600080fd5b8235614946816146cd565b915060208301356001600160401b0381111561496157600080fd5b61496d858286016148d2565b9150509250929050565b8015158114610fa857600080fd5b6000806040838503121561499857600080fd5b6149a18361457f565b915060208301356149b181614977565b809150509250929050565b6000806000606084860312156149d157600080fd5b6149da8461457f565b925060208401356001600160401b038111156149f557600080fd5b614a01868287016148d2565b925050614a10604085016145de565b90509250925092565b600060208284031215614a2b57600080fd5b8135611a1d81614977565b60008060408385031215614a4957600080fd5b614a528361457f565b915060208301356149b1816146cd565b60005b83811015614a7d578181015183820152602001614a65565b50506000910152565b60008151808452614a9e816020860160208601614a62565b601f01601f19169290920160200192915050565b602081526000611a1d6020830184614a86565b60008060008060808587031215614adb57600080fd5b614ae48561457f565b9350614af38660208701614740565b925060608501356001600160401b03811115614b0e57600080fd5b614b1a87828801614596565b95989497509550505050565b60008060408385031215614b3957600080fd5b614b428361457f565b9150614b506020840161457f565b90509250929050565b60008060408385031215614b6c57600080fd5b8235614a52816146cd565b60008060008060008060c08789031215614b9057600080fd5b614b998761457f565b95506020870135614ba9816146cd565b945060408701359350614bbf8860608901614740565b925060a08701356001600160401b03811115614bda57600080fd5b61467689828a01614596565b60008060408385031215614bf957600080fd5b82356149a1816146cd565b600080600080600060808688031215614c1c57600080fd5b614c258661457f565b9450614c336020870161457f565b93506040860135925060608601356001600160401b03811115614c5557600080fd5b614c6188828901614596565b969995985093965092949392505050565b600080600060608486031215614c8757600080fd5b614c908461457f565b9250614c9e6020850161457f565b9150604084013590509250925092565b60008060008060808587031215614cc457600080fd5b614ccd8561457f565b9350614cdb6020860161457f565b92506040850135614ceb816146cd565b9396929550929360600135925050565b600181811c90821680614d0f57607f821691505b60208210810361475257634e487b7160e01b600052602260045260246000fd5b8183823760009101908152919050565b6020808252601b908201527a0a8ded6cadc84e4d2c8ceca7440cccaca40dcdee840cadcdeeaced602b1b604082015260600190565b6001600160a01b03929092168252602082015260400190565b6020808252602c9082015260008051602061568083398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061568083398151915260408201526b6163746976652070726f787960a01b606082015260800190565b602080825260139082015272151bdad95b909c9a5919d94e881c185d5cd959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611aae57611aae614e2e565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61ffff8416815260406020820152600061260c604083018486614e57565b601f82111561176157600081815260208120601f850160051c81016020861015614ec55750805b601f850160051c820191505b8181101561162757828155600101614ed1565b600019600383901b1c191660019190911b1790565b81516001600160401b03811115614f1257614f12614865565b614f2681614f208454614cfb565b84614e9e565b602080601f831160018114614f555760008415614f435750858301515b614f4d8582614ee4565b865550611627565b600085815260208120601f198616915b82811015614f8457888601518255948401946001909101908401614f65565b5085821015614fa25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61ffff871681526001600160a01b038616602082015260a060408201819052600090614fe090830187614a86565b85151560608401528281036080840152614ffb818587614e57565b9998505050505050505050565b6000806040838503121561501b57600080fd5b505080516020909101519092909150565b81810381811115611aae57611aae614e2e565b60006020828403121561505157600080fd5b5051919050565b8284823760609190911b6001600160601b0319169101908152601401919050565b8082028115828204841417611aae57611aae614e2e565b80516001600160501b038116811461459157600080fd5b600080600080600060a086880312156150bf57600080fd5b6150c886615090565b94506020860151935060408601519250606086015191506150eb60808701615090565b90509295509295909350565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600061ffff808816835280871660208401525084604083015260806060830152614408608083018486614e57565b61ffff86168152608060208201526000615191608083018688614e57565b6001600160401b0394909416604083015250606001529392505050565b6001600160401b038311156151c5576151c5614865565b6151d9836151d38354614cfb565b83614e9e565b6000601f84116001811461520757600085156151f55750838201355b6151ff8682614ee4565b845550610def565b600083815260209020601f19861690835b828110156152385786850135825560209485019460019092019101615218565b50868210156152555760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60006020828403121561527957600080fd5b81516001600160401b0381111561528f57600080fd5b8201601f810184136152a057600080fd5b80516152ae6148f1826148ab565b8181528560208385010111156152c357600080fd5b6152d4826020830160208601614a62565b95945050505050565b61ffff851681526080602082015260006152fa6080830186614a86565b6001600160401b038516604084015282810360608401526144088185614a86565b60006020828403121561532d57600080fd5b8151611a1d816146cd565b80516001600160701b038116811461459157600080fd5b60008060006060848603121561536457600080fd5b61536d84615338565b925061537b60208501615338565b9150604084015163ffffffff8116811461539457600080fd5b809150509250925092565b6000826153bc57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251615434818460208701614a62565b9190910192915050565b61ffff8616815260a06020820152600061545b60a0830187614a86565b6001600160401b0386166040840152828103606084015261547c8186614a86565b905082810360808401526154908185614a86565b98975050505050505050565b6000602082840312156154ae57600080fd5b8151611a1d81614977565b61ffff8716815260c0602082015260006154d660c0830188614a86565b82810360408401526154e88188614a86565b6001600160a01b0387811660608601528616608085015283810360a08501529050614ffb8185614a86565b634e487b7160e01b600052603260045260246000fd5b600181815b8085111561556457816000190482111561554a5761554a614e2e565b8085161561555757918102915b93841c939080029061552e565b509250929050565b60008261557b57506001611aae565b8161558857506000611aae565b816001811461559e57600281146155a8576155c4565b6001915050611aae565b60ff8411156155b9576155b9614e2e565b50506001821b611aae565b5060208310610133831016604e8410600b84101617156155e7575081810a611aae565b6155f18383615529565b806000190482111561560557615605614e2e565b029392505050565b6000611a1d60ff84168361556c565b60006020828403121561562e57600080fd5b815160ff81168114611a1d57600080fdfefd19781f43410d9594fd4c02dd1d98dbe99099cbd222d5851a6e183c468d33ca358304737e16805ddc68ab8f04e14751a94bb8fd0a3fecc784b61d0c0789f46046756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205193256a0f1f34b4b6fb78d99ecd581ef0a11c14ea0053167681c6d01822b54064736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x573C PUSH3 0x4D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xEED ADD MSTORE DUP2 DUP2 PUSH2 0xF2D ADD MSTORE DUP2 DUP2 PUSH2 0x1312 ADD MSTORE DUP2 DUP2 PUSH2 0x1352 ADD MSTORE PUSH2 0x13CE ADD MSTORE PUSH2 0x573C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xD5900 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH3 0x1D3567 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x1095B6D7 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x25A9F792 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x3BD0536B EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x564B81EF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x59D91CD7 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x5B769F3C EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x69A6B3DB EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0x73AFBCAA EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x7A38D760 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x7D5F5BD4 EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0x93F26A4C EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x97167964 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0x9E42FF90 EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xA2F27AE0 EQ PUSH2 0x7C5 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0xABE685CD EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xB5F97073 EQ PUSH2 0x83B JUMPI DUP1 PUSH4 0xB790D7C1 EQ PUSH2 0x872 JUMPI DUP1 PUSH4 0xB90FC4A5 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x8A5 JUMPI DUP1 PUSH4 0xBEA4DFB5 EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0xCB8D3B1F EQ PUSH2 0x8FA JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x93A JUMPI DUP1 PUSH4 0xD71E409E EQ PUSH2 0x94D JUMPI DUP1 PUSH4 0xDE9B9488 EQ PUSH2 0x96D JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x984 JUMPI DUP1 PUSH4 0xDF4BBC1C EQ PUSH2 0x9A4 JUMPI DUP1 PUSH4 0xE3179C3E EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0xEAB45D9C EQ PUSH2 0xA03 JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0xED629C5C EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0xEE7A4596 EQ PUSH2 0xA65 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2BB JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x4566 JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x46A3 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x46E2 JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0xEA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x102 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x4758 JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH1 0xFE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x4851 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x4928 JUMP JUMPDEST PUSH2 0x1308 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x13C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CHAINID PUSH2 0x399 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0x4985 JUMP JUMPDEST PUSH2 0x146F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x100 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A19 JUMP JUMPDEST PUSH2 0x162F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x1685 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x63A CALLDATASIZE PUSH1 0x4 PUSH2 0x4A36 JUMP JUMPDEST PUSH2 0x168F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH2 0x65A CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x4AB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 SLOAD PUSH2 0x688 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BB PUSH2 0x6B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AC5 JUMP JUMPDEST PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x6EB CALLDATASIZE PUSH1 0x4 PUSH2 0x4B26 JUMP JUMPDEST PUSH1 0xFD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH2 0x18C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B59 JUMP JUMPDEST PUSH2 0x18D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x772 PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH2 0x7C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x190E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x7E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x1A24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x800 CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x1AB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFB SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH2 0x856 CALLDATASIZE PUSH1 0x4 PUSH2 0x4566 JUMP JUMPDEST PUSH2 0x106 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B77 JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x46E2 JUMP JUMPDEST PUSH2 0x1DCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x1ED5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x1F28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x915 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE6 JUMP JUMPDEST PUSH2 0x208F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x935 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C04 JUMP JUMPDEST PUSH2 0x20F4 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x948 CALLDATASIZE PUSH1 0x4 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0x2162 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x968 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A19 JUMP JUMPDEST PUSH2 0x237A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x109 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C72 JUMP JUMPDEST PUSH2 0x23F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x9BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x9F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xA1E CALLDATASIZE PUSH1 0x4 PUSH2 0x4A19 JUMP JUMPDEST PUSH2 0x245C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xA3E CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0xA80 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xAB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x250C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH2 0xAD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CAE JUMP JUMPDEST PUSH2 0x2582 JUMP JUMPDEST PUSH2 0xADE PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A2062726964676520666565203E20313030250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x9A749C8193BFD56B2B2A05C0BD18FBB0F69801A3FD6576C40B90537FD0FC3854 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xBF3 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC1F SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0xC87 JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xCAF JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xCA5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xD80 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2676 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD91 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDFE PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xE1D PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D3F JUMP JUMPDEST PUSH2 0xE5E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x26EF JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF15A0A3784DEA9B4FE33BC98E2450745E262D310237B2868EA8EF56967FF3ECB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE99 SWAP3 SWAP2 SWAP1 PUSH2 0x4D74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xEAF PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D8D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF5D PUSH2 0x2745 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4DC7 JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFA8 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2769 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x108 SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xFE2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xFFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4E01 JUMP JUMPDEST PUSH2 0x1006 PUSH2 0x28D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1048 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E70757420746F6B656E20616E64206F7574 PUSH1 0x44 DUP3 ADD MSTORE PUSH27 0x1C1D5D081D1BDAD95B88185C99481B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x2A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x10C3 DUP9 CALLER DUP10 PUSH2 0x292D JUMP JUMPDEST SWAP7 POP PUSH1 0x0 PUSH2 0x10D1 DUP10 DUP10 PUSH2 0x2A3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 GT PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E74496E206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP11 SWAP3 SWAP1 PUSH2 0x1161 SWAP1 DUP5 SWAP1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1177 SWAP1 POP DUP11 DUP3 DUP10 DUP10 DUP10 DUP10 DUP10 CALLVALUE PUSH2 0x2C9F JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5660 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 PUSH1 0x40 MLOAD PUSH2 0x11B4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x11C7 PUSH1 0x1 PUSH1 0xC9 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x11F3 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x121F SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x126C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1241 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x126C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x124F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1283 SWAP3 SWAP2 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12A6 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x12DA SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4E80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1350 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D8D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1382 PUSH2 0x2745 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4DC7 JUMP JUMPDEST PUSH2 0x13B1 DUP3 PUSH2 0x2761 JUMP JUMPDEST PUSH2 0x13BD DUP3 DUP3 PUSH1 0x1 PUSH2 0x2769 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x145C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1477 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x14A6 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420746F6B656E206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE390BCEC6614D6B1F8AE47A4D9D46531CE328E3D293ECD6DDD015CB01EFF0300 SWAP1 PUSH2 0xB67 SWAP1 DUP4 SWAP1 PUSH2 0x4851 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x1627 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2D41 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1637 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5362D4BD13945E8D116B90D83A7050FA61CEB02BB79BFAE783377ADB46916D94 SWAP1 PUSH2 0xB67 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x168D PUSH2 0x2617 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1697 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A2074686973206465737420636861696E20696420 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1A5CC81B9BDD08195B98589B1959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x1761 SWAP1 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x177F SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17AB SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x180D DUP5 DUP5 PUSH2 0x3137 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181C PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1831 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4723 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x40A7BB1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP4 EQ ISZERO SWAP4 POP AND SWAP1 PUSH4 0x40A7BB10 SWAP1 PUSH2 0x1873 SWAP1 DUP12 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x4FB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B3 SWAP2 SWAP1 PUSH2 0x5008 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x18D9 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x18E7 DUP3 DUP3 PUSH2 0x35D DUP6 PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13BD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x1931 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x195D SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x197F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x198D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1A02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x1A1D PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0x1A15 SWAP2 SWAP1 PUSH2 0x502C JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x3260 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH4 0x70A08231 SWAP1 PUSH2 0x1A63 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x503F JUMP JUMPDEST PUSH2 0x1AAE SWAP2 SWAP1 PUSH2 0x502C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABC PUSH2 0x2617 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5058 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x1AFC SWAP1 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B7D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1B99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4E01 JUMP JUMPDEST PUSH2 0x1BA1 PUSH2 0x28D4 JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BD6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20455448206973206E6F7420737570706F727465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x1C8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E74206D7573742062652067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x746572207468616E203 PUSH1 0xB4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST DUP6 CALLVALUE LT ISZERO PUSH2 0x1CAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D3F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP11 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x1D2D SWAP1 DUP5 SWAP1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x1D3D PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x1D4E JUMPI DUP2 PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x1D5A DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x1D65 SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D8C DUP11 PUSH2 0x1D75 DUP11 DUP5 PUSH2 0x5079 JUMP JUMPDEST PUSH1 0x0 DUP13 DUP12 DUP12 DUP12 DUP16 CALLVALUE PUSH2 0x1D87 SWAP2 SWAP1 PUSH2 0x502C JUMP JUMPDEST PUSH2 0x2C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5660 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xD80 PUSH1 0x1 PUSH1 0xC9 SSTORE JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1DEF JUMPI POP PUSH2 0x109 SLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x1E4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20656D657267656E637920776974686472617720 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B1BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1E73 SWAP1 DUP5 SWAP1 PUSH2 0x502C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E8D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x26EF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x49507695F37B729944475CF3388760A14760FEF784B7AB5CA8863A5F3F8BE6BD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EC8 SWAP3 SWAP2 SWAP1 PUSH2 0x4D74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1EDD PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xB67 SWAP1 DUP4 SWAP1 PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x50A7 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1FCE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1FEF JUMPI POP PUSH2 0x1FDD ADDRESS PUSH2 0x336D JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1FEF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x200B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x50F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2036 PUSH2 0x337C JUMP JUMPDEST PUSH2 0x203E PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x2047 DUP3 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0x204F PUSH2 0x3402 JUMP JUMPDEST PUSH2 0x2057 PUSH2 0x3431 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2097 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xB1656BD3B50DDB6B12EF259C86E9CB359952B53C4403CFB5A83E23C515A35E22 SWAP2 ADD PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x20FC PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0x2134 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5145 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x214E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x2186 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2217 SWAP3 SWAP2 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0x2276 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x229A SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x2332 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2D41 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2369 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2382 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE DUP1 PUSH2 0x23A6 JUMPI PUSH1 0x0 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x23B3 TIMESTAMP PUSH3 0x93A80 PUSH2 0x4E44 JUMP JUMPDEST PUSH2 0x109 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x27A37FC51E6C5D14309BBED3A54787C8788223B5D9CD5FE10605661665DD8415 SWAP2 ADD PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x23FA PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xFD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x2464 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1584AD594A70CBE1E6515592E1272A987D922B097EAD875069CEBE8B40C004A4 SWAP1 PUSH2 0xB67 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x24BA PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x24D8 DUP3 DUP5 DUP4 PUSH2 0x51AE JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E80 JUMP JUMPDEST PUSH2 0x2514 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x3629 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP8 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x260C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5267 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x2620 PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26D9 GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x269E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x367B JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1627 JUMPI PUSH2 0x1627 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x3705 JUMP JUMPDEST PUSH2 0x1761 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x270E SWAP3 SWAP2 SWAP1 PUSH2 0x4D74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFA8 PUSH2 0x2617 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x279C JUMPI PUSH2 0x1761 DUP4 PUSH2 0x3878 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x27F6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x27F3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x503F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x28C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST POP PUSH2 0x1761 DUP4 DUP4 DUP4 PUSH2 0x3912 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SLOAD SUB PUSH2 0x2926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295C SWAP2 SWAP1 PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299D SWAP2 SWAP1 PUSH2 0x503F JUMP JUMPDEST SWAP1 POP PUSH2 0x29B4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 ADDRESS DUP7 PUSH2 0x393D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x29E3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A24 SWAP2 SWAP1 PUSH2 0x503F JUMP JUMPDEST SWAP1 POP PUSH2 0x2A30 DUP3 DUP3 PUSH2 0x502C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8AA1B31 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A9F SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E42726967653A20746F6B656E2070616972206973206E6F74206372 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x19585D1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0F PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x2B20 JUMPI DUP2 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x2B2C DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x2B37 SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BA3 SWAP2 SWAP1 PUSH2 0x534F JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C16 SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C5D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP6 DUP11 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x2C44 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C4E SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C58 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x2C91 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP6 DUP11 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x2C7D SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C87 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C91 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2CA9 DUP4 DUP4 PUSH2 0x3137 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB6 DUP9 DUP9 DUP9 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D18 DUP10 DUP3 PUSH2 0x2CCA PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x2CDA PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x4723 JUMP JUMPDEST DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP PUSH2 0x3975 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH2 0x101 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP9 SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC9 SSTORE JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2DB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420736F757263652063686169 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1B881A59 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2DC0 DUP6 PUSH2 0x3AFE JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP1 DUP3 ISZERO PUSH2 0x2DF0 JUMPI PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x2DE9 DUP7 PUSH2 0x3C38 JUMP JUMPDEST SWAP1 POP PUSH2 0x2ED6 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8AA1B31 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E57 SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E4F75742068617320696E76616C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x19081B1A5C5D5A591A5D1E481C1BDBDB PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x2ED2 DUP8 DUP5 PUSH2 0x3C8A JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2F0B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2F27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4E01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2F9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E206973206E6F7420737570706F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3012 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E73756666696369656E74206C6971756964 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697479 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x301C DUP3 DUP3 PUSH2 0x502C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x102 SLOAD PUSH2 0x3046 JUMPI DUP2 PUSH1 0x0 PUSH2 0x304F JUMP JUMPDEST PUSH2 0x304F DUP3 PUSH2 0x3E9D JUMP JUMPDEST POP PUSH2 0x108 SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x306E JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x30BF JUMPI PUSH2 0x108 SLOAD PUSH2 0x308B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 PUSH2 0x3ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5640 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x312A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x30D4 JUMPI DUP5 PUSH2 0x30D8 JUMP JUMPDEST PUSH2 0xDEAD JUMPDEST SWAP5 POP PUSH2 0x30EE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP7 DUP5 PUSH2 0x26EF JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5640 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x3121 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x3157 JUMPI POP PUSH2 0x101 SLOAD PUSH2 0xFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x31A6 JUMPI PUSH2 0x101 SLOAD PUSH2 0x13BD SWAP1 PUSH2 0xFFFF AND PUSH1 0x0 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x3F5F SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A205F61646170746572506172616D73206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1031329032B6B83A3C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3214 DUP5 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3221 DUP5 PUSH2 0x402F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x41 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x61 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x81 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x326E DUP2 PUSH1 0x1F PUSH2 0x4E44 JUMP JUMPDEST LT ISZERO PUSH2 0x32AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x32B7 DUP3 DUP5 PUSH2 0x4E44 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x32FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x331A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3353 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x333B JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x33CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x168D PUSH2 0x403B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x33F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x406B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x168D PUSH2 0x409B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3451 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3472 JUMPI POP PUSH2 0x3460 ADDRESS PUSH2 0x336D JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x3472 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x348E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x50F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x34B1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x106 PUSH1 0x20 MSTORE PUSH32 0xD1FE999288D0A7E8ED972CAA3B05BCA25ECCD5B4E714D8EC2D4F2D8E22126216 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 OR SWAP1 SWAP2 SSTORE PUSH32 0x5C4185F72335224D2CF1CA1428FC3B5B56133884156DB2AD5F59D4B2FFEF13C1 DUP1 SLOAD DUP3 AND PUSH20 0x2514895C72F50D8BD4B4F9B1110F0D6BD2C97526 OR SWAP1 SSTORE PUSH32 0xDE8C4E26FF4F8E9560AFBCCF153706B866627645B028D1EA07877FD698662DAB DUP1 SLOAD DUP3 AND PUSH20 0xB8C458C957A6E6CA7CC53ED95BEA548C52AFAA24 OR SWAP1 SSTORE PUSH3 0x13881 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5337A075601BC8FA859E72E939688626DA1AE8A471B1DB80F8E6AE13DCF28BED DUP1 SLOAD SWAP1 SWAP3 AND PUSH20 0xD0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA OR SWAP1 SWAP2 SSTORE PUSH2 0x35C8 CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x106 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36A0 JUMPI PUSH2 0x36A0 PUSH2 0x4865 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36CA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x36EC JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3737 SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x3794 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x543E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40C2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x3819 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3819 SWAP2 SWAP1 PUSH2 0x549C JUMP JUMPDEST PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x3881 DUP2 PUSH2 0x336D JUMP JUMPDEST PUSH2 0x38E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x391B DUP4 PUSH2 0x40D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3928 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1761 JUMPI PUSH2 0x3937 DUP4 DUP4 PUSH2 0x4111 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3937 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x270E JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x3993 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39BF SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x3A7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x3A88 DUP8 DUP8 MLOAD PUSH2 0x4136 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x3AC3 SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x54B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x62 EQ PUSH2 0x3B61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C6964207061796C6F6164206C656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xCEE8D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3B76 JUMPI PUSH2 0x3B76 PUSH2 0x5513 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B8F JUMPI PUSH2 0x3B8F PUSH2 0x53C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BA5 JUMPI PUSH2 0x3BA5 PUSH2 0x53C1 JUMP JUMPDEST EQ PUSH2 0x3BF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20756E6B6E6F776E207061636B65742074797065 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x21 DUP7 ADD MLOAD SWAP5 POP PUSH1 0x41 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x61 DUP7 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x61 DUP2 MLOAD DUP2 LT PUSH2 0x3C1A JUMPI PUSH2 0x3C1A PUSH2 0x5513 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x1 EQ SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C43 PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x3C54 JUMPI DUP2 PUSH2 0x3C6B JUMP JUMPDEST PUSH2 0x3C60 DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x3C6B SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3C80 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8AA1B31 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CEF SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3CFB PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x3D0C JUMPI DUP2 PUSH2 0x3D23 JUMP JUMPDEST PUSH2 0x3D18 DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x3D23 SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D8F SWAP2 SWAP1 PUSH2 0x534F JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E02 SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3E49 JUMPI DUP5 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP13 PUSH2 0x3E30 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x3E3A SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x3E44 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x3E7D JUMP JUMPDEST DUP5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP13 PUSH2 0x3E69 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x3E73 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x3E7D SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST SWAP1 POP PUSH2 0x3E88 DUP10 PUSH2 0x41A7 JUMP JUMPDEST PUSH2 0x3E93 SWAP1 PUSH1 0xA PUSH2 0x560D JUMP JUMPDEST PUSH2 0x2C91 SWAP1 DUP3 PUSH2 0x5079 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH2 0x102 SLOAD DUP5 PUSH2 0x3EB2 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x3EBC SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST SWAP1 POP PUSH2 0x3EC8 DUP2 DUP5 PUSH2 0x502C JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3937 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F6A DUP4 PUSH2 0x42A5 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x3FD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x131E905C1C0E881B5A5B91D85CD31A5B5A5D081B9BDD081CD95D PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x3FE2 DUP4 DUP3 PUSH2 0x4E44 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4C7A4170703A20676173206C696D697420697320746F6F206C6F77 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4062 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x168D CALLER PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4092 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x4300 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x260F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4338 JUMP JUMPDEST PUSH2 0x40DA DUP2 PUSH2 0x3878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x56E0 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x4413 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x4157 JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x41ED SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4228 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x422D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x4291 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A206661696C656420746F2067657420746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20646563696D616C73 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x561C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 MLOAD LT ISZERO PUSH2 0x42F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x4C7A4170703A20696E76616C69642061646170746572506172616D73 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST POP PUSH1 0x22 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x432F PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x4481 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x43B5 SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x43F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4408 DUP8 DUP4 DUP4 DUP8 PUSH2 0x44CA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x4430 SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x446B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4470 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A30 DUP7 DUP4 DUP4 DUP8 PUSH2 0x44CA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x44A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH1 0xFB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4537 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x4530 JUMPI PUSH2 0x44E4 DUP6 PUSH2 0x336D JUMP JUMPDEST PUSH2 0x4530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST POP DUP2 PUSH2 0x260F JUMP JUMPDEST PUSH2 0x260F DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x454C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x4AB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x45A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x45BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x45D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x460E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4617 DUP8 PUSH2 0x457F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x463F DUP11 DUP4 DUP12 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x4653 PUSH1 0x40 DUP11 ADD PUSH2 0x45DE JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4676 DUP10 DUP3 DUP11 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A1D DUP3 PUSH2 0x457F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46BF DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x46F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4702 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4712 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1D DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x477E DUP10 PUSH2 0x457F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x478E DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x47A5 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x47B5 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP4 POP PUSH2 0x47C4 DUP11 PUSH1 0xA0 DUP12 ADD PUSH2 0x4740 JUMP JUMPDEST SWAP3 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x47DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47EB DUP12 DUP3 DUP13 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x481D DUP5 PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4844 DUP7 DUP3 DUP8 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x48A3 JUMPI PUSH2 0x48A3 PUSH2 0x4865 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x48C4 JUMPI PUSH2 0x48C4 PUSH2 0x4865 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x48E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x48F6 PUSH2 0x48F1 DUP3 PUSH2 0x48AB JUMP JUMPDEST PUSH2 0x487B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x490B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x493B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4946 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x496D DUP6 DUP3 DUP7 ADD PUSH2 0x48D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49A1 DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x49B1 DUP2 PUSH2 0x4977 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x49D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49DA DUP5 PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x49F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A01 DUP7 DUP3 DUP8 ADD PUSH2 0x48D2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4A10 PUSH1 0x40 DUP6 ADD PUSH2 0x45DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1D DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A52 DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x49B1 DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A65 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4A9E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4A62 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AE4 DUP6 PUSH2 0x457F JUMP JUMPDEST SWAP4 POP PUSH2 0x4AF3 DUP7 PUSH1 0x20 DUP8 ADD PUSH2 0x4740 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B1A DUP8 DUP3 DUP9 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B42 DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH2 0x4B50 PUSH1 0x20 DUP5 ADD PUSH2 0x457F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4A52 DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4B90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B99 DUP8 PUSH2 0x457F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x4BA9 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x4BBF DUP9 PUSH1 0x60 DUP10 ADD PUSH2 0x4740 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4676 DUP10 DUP3 DUP11 ADD PUSH2 0x4596 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49A1 DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C25 DUP7 PUSH2 0x457F JUMP JUMPDEST SWAP5 POP PUSH2 0x4C33 PUSH1 0x20 DUP8 ADD PUSH2 0x457F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C61 DUP9 DUP3 DUP10 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C90 DUP5 PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH2 0x4C9E PUSH1 0x20 DUP6 ADD PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CCD DUP6 PUSH2 0x457F JUMP JUMPDEST SWAP4 POP PUSH2 0x4CDB PUSH1 0x20 DUP7 ADD PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x4CEB DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4D0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4752 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0xA8DED6CADC84E4D2C8CECA7440CCCACA40DCDEE840CADCDEEACED PUSH1 0x2B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5680 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5680 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x151BDAD95B909C9A5919D94E881C185D5CD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x4E2E JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x260C PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x4E57 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4EC5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1627 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4ED1 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4F12 JUMPI PUSH2 0x4F12 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x4F26 DUP2 PUSH2 0x4F20 DUP5 SLOAD PUSH2 0x4CFB JUMP JUMPDEST DUP5 PUSH2 0x4E9E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4F55 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4F43 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x4F4D DUP6 DUP3 PUSH2 0x4EE4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4F84 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4F65 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4FA2 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4FE0 SWAP1 DUP4 ADD DUP8 PUSH2 0x4A86 JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x4FFB DUP2 DUP6 DUP8 PUSH2 0x4E57 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x501B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x4E2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x4E2E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x50BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50C8 DUP7 PUSH2 0x5090 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x50EB PUSH1 0x80 DUP8 ADD PUSH2 0x5090 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4408 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x4E57 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5191 PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x4E57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x51C5 JUMPI PUSH2 0x51C5 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x51D9 DUP4 PUSH2 0x51D3 DUP4 SLOAD PUSH2 0x4CFB JUMP JUMPDEST DUP4 PUSH2 0x4E9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5207 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x51F5 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x51FF DUP7 DUP3 PUSH2 0x4EE4 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5238 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5218 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x5255 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x528F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x52A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x52AE PUSH2 0x48F1 DUP3 PUSH2 0x48AB JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x52C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x52D4 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4A62 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x52FA PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4408 DUP2 DUP6 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x532D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1D DUP2 PUSH2 0x46CD JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x536D DUP5 PUSH2 0x5338 JUMP JUMPDEST SWAP3 POP PUSH2 0x537B PUSH1 0x20 DUP6 ADD PUSH2 0x5338 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x53BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5434 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4A62 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x545B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x547C DUP2 DUP7 PUSH2 0x4A86 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5490 DUP2 DUP6 PUSH2 0x4A86 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1D DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x54D6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x4A86 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x54E8 DUP2 DUP9 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x4FFB DUP2 DUP6 PUSH2 0x4A86 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x5564 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x554A JUMPI PUSH2 0x554A PUSH2 0x4E2E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x5557 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x552E JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x557B JUMPI POP PUSH1 0x1 PUSH2 0x1AAE JUMP JUMPDEST DUP2 PUSH2 0x5588 JUMPI POP PUSH1 0x0 PUSH2 0x1AAE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x559E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x55A8 JUMPI PUSH2 0x55C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x55B9 JUMPI PUSH2 0x55B9 PUSH2 0x4E2E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1AAE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x55E7 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x55F1 DUP4 DUP4 PUSH2 0x5529 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x5605 JUMPI PUSH2 0x5605 PUSH2 0x4E2E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x556C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x562E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1A1D JUMPI PUSH1 0x0 DUP1 REVERT INVALID REVERT NOT PUSH25 0x1F43410D9594FD4C02DD1D98DBE99099CBD222D5851A6E183C CHAINID DUP14 CALLER 0xCA CALLDATALOAD DUP4 DIV PUSH20 0x7E16805DDC68AB8F04E14751A94BB8FD0A3FECC7 DUP5 0xB6 SAR 0xC SMOD DUP10 DELEGATECALL PUSH1 0x46 PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC7F26B83FF96E1F2B6A682F SGT CODESIZE MSTORE 0xF6 PUSH26 0x8A09C465DA95921460CEFB3847402498416464726573733A206C PUSH16 0x772D6C6576656C2064656C6567617465 KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220519325 PUSH11 0xF1F34B4B6FB78D99ECD58 0x1E CREATE LOG1 SHR EQ 0xEA STOP MSTORE8 AND PUSH23 0x81C6D01822B54064736F6C634300081400330000000000 ","sourceMap":"1196:15509:17:-:0;;;1332:4:8;1289:48;;1196:15509:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BP_DENOMINATOR_2489":{"entryPoint":null,"id":2489,"parameterSlots":0,"returnSlots":0},"@DEFAULT_PAYLOAD_SIZE_LIMIT_4597":{"entryPoint":null,"id":4597,"parameterSlots":0,"returnSlots":0},"@SHARED_DECIMALS_2492":{"entryPoint":null,"id":2492,"parameterSlots":0,"returnSlots":0},"@_3233":{"entryPoint":null,"id":3233,"parameterSlots":0,"returnSlots":0},"@__Bridge_init_unchained_2636":{"entryPoint":13361,"id":2636,"parameterSlots":0,"returnSlots":0},"@__LzApp_init_4655":{"entryPoint":17152,"id":4655,"parameterSlots":1,"returnSlots":0},"@__LzApp_init_unchained_4669":{"entryPoint":17537,"id":4669,"parameterSlots":1,"returnSlots":0},"@__NonblockingLzApp_init_5161":{"entryPoint":13266,"id":5161,"parameterSlots":1,"returnSlots":0},"@__NonblockingLzApp_init_unchained_5173":{"entryPoint":16491,"id":5173,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_297":{"entryPoint":13219,"id":297,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_308":{"entryPoint":16443,"id":308,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_1095":{"entryPoint":13314,"id":1095,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_1105":{"entryPoint":16539,"id":1105,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_954":{"entryPoint":13180,"id":954,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_2593":{"entryPoint":10081,"id":2593,"parameterSlots":1,"returnSlots":0},"@_blockingLzReceive_5252":{"entryPoint":9846,"id":5252,"parameterSlots":4,"returnSlots":0},"@_callOptionalReturn_2079":{"entryPoint":14243,"id":2079,"parameterSlots":2,"returnSlots":0},"@_checkAdapterParams_3987":{"entryPoint":12599,"id":3987,"parameterSlots":2,"returnSlots":0},"@_checkGasLimit_4830":{"entryPoint":16223,"id":4830,"parameterSlots":4,"returnSlots":0},"@_checkOwner_339":{"entryPoint":9751,"id":339,"parameterSlots":0,"returnSlots":0},"@_checkPayloadSize_4877":{"entryPoint":16694,"id":4877,"parameterSlots":2,"returnSlots":0},"@_decodeReceivePayload_3954":{"entryPoint":15102,"id":3954,"parameterSlots":1,"returnSlots":4},"@_encodeSendPayload_3900":{"entryPoint":12807,"id":3900,"parameterSlots":3,"returnSlots":1},"@_getGasLimit_4847":{"entryPoint":17061,"id":4847,"parameterSlots":1,"returnSlots":1},"@_getImplementation_478":{"entryPoint":10053,"id":478,"parameterSlots":0,"returnSlots":1},"@_lockTokenFrom_3519":{"entryPoint":10541,"id":3519,"parameterSlots":3,"returnSlots":1},"@_lzSend_4788":{"entryPoint":14709,"id":4788,"parameterSlots":6,"returnSlots":0},"@_msgSender_1513":{"entryPoint":null,"id":1513,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1139":{"entryPoint":11578,"id":1139,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1131":{"entryPoint":10452,"id":1131,"parameterSlots":0,"returnSlots":0},"@_nonblockingLzReceive_3444":{"entryPoint":11585,"id":3444,"parameterSlots":4,"returnSlots":0},"@_payFee_3862":{"entryPoint":16029,"id":3862,"parameterSlots":1,"returnSlots":2},"@_redeemETHTo_3467":{"entryPoint":16079,"id":3467,"parameterSlots":3,"returnSlots":0},"@_revert_1485":{"entryPoint":null,"id":1485,"parameterSlots":2,"returnSlots":0},"@_revert_2457":{"entryPoint":null,"id":2457,"parameterSlots":2,"returnSlots":0},"@_sendToken_2948":{"entryPoint":11423,"id":2948,"parameterSlots":8,"returnSlots":0},"@_setImplementation_502":{"entryPoint":14456,"id":502,"parameterSlots":1,"returnSlots":0},"@_storeFailedMessage_5286":{"entryPoint":14085,"id":5286,"parameterSlots":5,"returnSlots":0},"@_tokenDecimals_3837":{"entryPoint":16807,"id":3837,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_396":{"entryPoint":13865,"id":396,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_600":{"entryPoint":10089,"id":600,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_547":{"entryPoint":14610,"id":547,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_517":{"entryPoint":16593,"id":517,"parameterSlots":1,"returnSlots":0},"@accruedFeeLD_3255":{"entryPoint":6692,"id":3255,"parameterSlots":1,"returnSlots":1},"@addressToBytes32_269":{"entryPoint":16431,"id":269,"parameterSlots":1,"returnSlots":1},"@bridgeFeeBP_2496":{"entryPoint":null,"id":2496,"parameterSlots":0,"returnSlots":0},"@calaOutEthAmount_3804":{"entryPoint":15416,"id":3804,"parameterSlots":1,"returnSlots":1},"@calcInTokenPrice_3655":{"entryPoint":10810,"id":3655,"parameterSlots":2,"returnSlots":1},"@calcOutTokenAmount_3761":{"entryPoint":15498,"id":3761,"parameterSlots":2,"returnSlots":1},"@dataFeed_2529":{"entryPoint":null,"id":2529,"parameterSlots":0,"returnSlots":0},"@emergencyWithdrawEnabled_2524":{"entryPoint":null,"id":2524,"parameterSlots":0,"returnSlots":0},"@emergencyWithdrawTime_2526":{"entryPoint":null,"id":2526,"parameterSlots":0,"returnSlots":0},"@enableChain_2516":{"entryPoint":null,"id":2516,"parameterSlots":0,"returnSlots":0},"@enableEmergencyWithdraw_3222":{"entryPoint":9082,"id":3222,"parameterSlots":1,"returnSlots":0},"@excessivelySafeCall_4518":{"entryPoint":13947,"id":4518,"parameterSlots":4,"returnSlots":2},"@failedMessages_5181":{"entryPoint":null,"id":5181,"parameterSlots":0,"returnSlots":0},"@forceResumeReceive_4974":{"entryPoint":4766,"id":4974,"parameterSlots":3,"returnSlots":0},"@functionCallWithValue_2282":{"entryPoint":17208,"id":2282,"parameterSlots":4,"returnSlots":1},"@functionCall_2218":{"entryPoint":16578,"id":2218,"parameterSlots":3,"returnSlots":1},"@functionDelegateCall_1373":{"entryPoint":16657,"id":1373,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1402":{"entryPoint":17427,"id":1402,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1560":{"entryPoint":null,"id":1560,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_1571":{"entryPoint":null,"id":1571,"parameterSlots":1,"returnSlots":1},"@getChainID_3546":{"entryPoint":null,"id":3546,"parameterSlots":0,"returnSlots":1},"@getChainlinkDataFeedLatestAnswer_3534":{"entryPoint":7976,"id":3534,"parameterSlots":0,"returnSlots":1},"@getConfig_4902":{"entryPoint":9602,"id":4902,"parameterSlots":4,"returnSlots":1},"@getTrustedRemoteAddress_5054":{"entryPoint":6414,"id":5054,"parameterSlots":1,"returnSlots":1},"@globalPaused_2522":{"entryPoint":null,"id":2522,"parameterSlots":0,"returnSlots":0},"@initialize_2584":{"entryPoint":8110,"id":2584,"parameterSlots":1,"returnSlots":0},"@isContract_1174":{"entryPoint":13165,"id":1174,"parameterSlots":1,"returnSlots":1},"@isContract_2146":{"entryPoint":null,"id":2146,"parameterSlots":1,"returnSlots":1},"@isTrustedRemote_5136":{"entryPoint":4562,"id":5136,"parameterSlots":3,"returnSlots":1},"@lzEndpoint_4600":{"entryPoint":null,"id":4600,"parameterSlots":0,"returnSlots":0},"@lzReceive_4728":{"entryPoint":2930,"id":4728,"parameterSlots":6,"returnSlots":0},"@minDstGasLookup_4610":{"entryPoint":null,"id":4610,"parameterSlots":0,"returnSlots":0},"@nonblockingLzReceive_5316":{"entryPoint":5459,"id":5316,"parameterSlots":6,"returnSlots":0},"@owner_325":{"entryPoint":6338,"id":325,"parameterSlots":0,"returnSlots":1},"@pausedTokens_2508":{"entryPoint":null,"id":2508,"parameterSlots":0,"returnSlots":0},"@payloadSizeLimitLookup_4614":{"entryPoint":null,"id":4614,"parameterSlots":0,"returnSlots":0},"@precrime_4616":{"entryPoint":null,"id":4616,"parameterSlots":0,"returnSlots":0},"@priceFeed_2512":{"entryPoint":null,"id":2512,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_1017":{"entryPoint":5057,"id":1017,"parameterSlots":0,"returnSlots":1},"@quoteForSend_2902":{"entryPoint":6144,"id":2902,"parameterSlots":4,"returnSlots":2},"@renounceOwnership_3229":{"entryPoint":5765,"id":3229,"parameterSlots":0,"returnSlots":0},"@retryMessage_5395":{"entryPoint":8546,"id":5395,"parameterSlots":6,"returnSlots":0},"@safeTransferFrom_1812":{"entryPoint":14653,"id":1812,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1785":{"entryPoint":9967,"id":1785,"parameterSlots":3,"returnSlots":0},"@sendETHToDest_2846":{"entryPoint":6973,"id":2846,"parameterSlots":6,"returnSlots":0},"@sendTokenToDest_2720":{"entryPoint":4011,"id":2720,"parameterSlots":8,"returnSlots":0},"@setBridgeFeeBP_3017":{"entryPoint":2774,"id":3017,"parameterSlots":1,"returnSlots":0},"@setConfig_4926":{"entryPoint":8436,"id":4926,"parameterSlots":5,"returnSlots":0},"@setEnableChain_2994":{"entryPoint":5231,"id":2994,"parameterSlots":2,"returnSlots":0},"@setGlobalPause_3059":{"entryPoint":5679,"id":3059,"parameterSlots":1,"returnSlots":0},"@setMinDstGas_5096":{"entryPoint":9202,"id":5096,"parameterSlots":3,"returnSlots":0},"@setPayloadSizeLimit_5112":{"entryPoint":3574,"id":5112,"parameterSlots":2,"returnSlots":0},"@setPrecrime_5070":{"entryPoint":7893,"id":5070,"parameterSlots":1,"returnSlots":0},"@setReceiveVersion_4956":{"entryPoint":3751,"id":4956,"parameterSlots":1,"returnSlots":0},"@setSendVersion_4941":{"entryPoint":3465,"id":4941,"parameterSlots":1,"returnSlots":0},"@setTokenPause_3080":{"entryPoint":8335,"id":3080,"parameterSlots":2,"returnSlots":0},"@setTrustedRemoteAddress_5023":{"entryPoint":6836,"id":5023,"parameterSlots":3,"returnSlots":0},"@setTrustedRemote_4995":{"entryPoint":9394,"id":4995,"parameterSlots":3,"returnSlots":0},"@setUseCustomAdapterParams_3096":{"entryPoint":9308,"id":3096,"parameterSlots":1,"returnSlots":0},"@setWETH_3043":{"entryPoint":5278,"id":3043,"parameterSlots":1,"returnSlots":0},"@slice_4209":{"entryPoint":12896,"id":4209,"parameterSlots":3,"returnSlots":1},"@supportedTokens_2504":{"entryPoint":null,"id":2504,"parameterSlots":0,"returnSlots":0},"@toLzChainId_2494":{"entryPoint":null,"id":2494,"parameterSlots":0,"returnSlots":0},"@transferOwnership_376":{"entryPoint":9484,"id":376,"parameterSlots":1,"returnSlots":0},"@trustAddress_2978":{"entryPoint":5775,"id":2978,"parameterSlots":2,"returnSlots":0},"@trustedRemoteLookup_4604":{"entryPoint":5990,"id":4604,"parameterSlots":0,"returnSlots":0},"@tvlSDs_2500":{"entryPoint":null,"id":2500,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1060":{"entryPoint":4872,"id":1060,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1039":{"entryPoint":3811,"id":1039,"parameterSlots":1,"returnSlots":0},"@useCustomAdapterParams_2520":{"entryPoint":null,"id":2520,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_1441":{"entryPoint":null,"id":1441,"parameterSlots":4,"returnSlots":1},"@verifyCallResultFromTarget_2413":{"entryPoint":17610,"id":2413,"parameterSlots":4,"returnSlots":1},"@weth_2518":{"entryPoint":null,"id":2518,"parameterSlots":0,"returnSlots":0},"@withdrawEmergency_3195":{"entryPoint":6353,"id":3195,"parameterSlots":2,"returnSlots":0},"@withdrawFee_3135":{"entryPoint":3605,"id":3135,"parameterSlots":3,"returnSlots":0},"@withdrawTVL_3169":{"entryPoint":7626,"id":3169,"parameterSlots":3,"returnSlots":0},"abi_decode_bytes":{"entryPoint":18642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":17814,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_CallParams_calldata":{"entryPoint":18240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18211,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":21275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":19289,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":18146,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":19430,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":18728,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":18969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":21660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":21095,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory":{"entryPoint":21327,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16":{"entryPoint":18056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_address":{"entryPoint":18998,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_addresst_uint256t_addresst_addresst_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":18264,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint16t_addresst_uint256t_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":19319,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint16t_bool":{"entryPoint":18821,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_bytes_calldata_ptr":{"entryPoint":18431,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr":{"entryPoint":17909,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64":{"entryPoint":18876,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":19141,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16":{"entryPoint":19238,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256":{"entryPoint":19630,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16t_uint256":{"entryPoint":19570,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr":{"entryPoint":19460,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_uint256":{"entryPoint":18083,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":17766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":20543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":20488,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":20647,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":22044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint112_fromMemory":{"entryPoint":21304,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint16":{"entryPoint":17791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":17886,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint80_fromMemory":{"entryPoint":20624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":19078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":20055,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19759,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":20568,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint8_t_uint256_t_bytes32_t_bytes32__to_t_uint8_t_uint256_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":18513,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":19828,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$5541__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19775,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2fb79bd7615e480fca928d43131c6d74bbf06bbd0b64109fedfb9bad79eaa6e9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19853,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19969,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19911,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_780e05369a5f638bfbd2815b3c3c9d5e8c2d1ed869b73e67df825e69042cd8ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9ea1dad71f32d7c074acbeb7f7171c53f6a2b1523820b96d46aa919986cd83ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3498c6375deb79bfc1c714cbc09be17a49e48160b4461223b50b0ea13a57c6d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ecd0d94b5711fe92948563c52b28b3471acc1d7d11ad6715283b8f7f1e036199__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_calldata_ptr__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20402,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20096,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed":{"entryPoint":20851,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21689,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21213,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21566,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20805,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":18555,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":18603,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":20036,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":21407,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":21801,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":22029,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":21868,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":20601,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":20524,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":20126,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage":{"entryPoint":20910,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":20217,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":19042,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":19707,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":20196,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":20014,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":21441,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":21779,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":18533,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":18125,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":18807,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:50937:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:29"},"nodeType":"YulFunctionCall","src":"132:12:29"},"nodeType":"YulExpressionStatement","src":"132:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:29"},"nodeType":"YulFunctionCall","src":"101:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:29"},"nodeType":"YulFunctionCall","src":"97:32:29"},"nodeType":"YulIf","src":"94:52:29"},{"nodeType":"YulAssignment","src":"155:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:29"},"nodeType":"YulFunctionCall","src":"165:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:29","type":""}],"src":"14:180:29"},{"body":{"nodeType":"YulBlock","src":"247:111:29","statements":[{"nodeType":"YulAssignment","src":"257:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"279:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"266:12:29"},"nodeType":"YulFunctionCall","src":"266:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"257:5:29"}]},{"body":{"nodeType":"YulBlock","src":"336:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"345:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"348:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"338:6:29"},"nodeType":"YulFunctionCall","src":"338:12:29"},"nodeType":"YulExpressionStatement","src":"338:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"308:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"319:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"326:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"315:3:29"},"nodeType":"YulFunctionCall","src":"315:18:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"305:2:29"},"nodeType":"YulFunctionCall","src":"305:29:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"298:6:29"},"nodeType":"YulFunctionCall","src":"298:37:29"},"nodeType":"YulIf","src":"295:57:29"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"226:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"237:5:29","type":""}],"src":"199:159:29"},{"body":{"nodeType":"YulBlock","src":"435:275:29","statements":[{"body":{"nodeType":"YulBlock","src":"484:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"496:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"486:6:29"},"nodeType":"YulFunctionCall","src":"486:12:29"},"nodeType":"YulExpressionStatement","src":"486:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"463:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"471:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"459:3:29"},"nodeType":"YulFunctionCall","src":"459:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"478:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"455:3:29"},"nodeType":"YulFunctionCall","src":"455:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"448:6:29"},"nodeType":"YulFunctionCall","src":"448:35:29"},"nodeType":"YulIf","src":"445:55:29"},{"nodeType":"YulAssignment","src":"509:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"532:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"519:12:29"},"nodeType":"YulFunctionCall","src":"519:20:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"509:6:29"}]},{"body":{"nodeType":"YulBlock","src":"582:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"591:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"594:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"584:6:29"},"nodeType":"YulFunctionCall","src":"584:12:29"},"nodeType":"YulExpressionStatement","src":"584:12:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"554:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"570:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"574:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"566:3:29"},"nodeType":"YulFunctionCall","src":"566:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"578:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"562:3:29"},"nodeType":"YulFunctionCall","src":"562:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:30:29"},"nodeType":"YulIf","src":"548:50:29"},{"nodeType":"YulAssignment","src":"607:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"623:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"631:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"619:3:29"},"nodeType":"YulFunctionCall","src":"619:17:29"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"607:8:29"}]},{"body":{"nodeType":"YulBlock","src":"688:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"697:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"700:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"690:6:29"},"nodeType":"YulFunctionCall","src":"690:12:29"},"nodeType":"YulExpressionStatement","src":"690:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"659:6:29"},{"name":"length","nodeType":"YulIdentifier","src":"667:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"655:3:29"},"nodeType":"YulFunctionCall","src":"655:19:29"},{"kind":"number","nodeType":"YulLiteral","src":"676:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"651:3:29"},"nodeType":"YulFunctionCall","src":"651:30:29"},{"name":"end","nodeType":"YulIdentifier","src":"683:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"648:2:29"},"nodeType":"YulFunctionCall","src":"648:39:29"},"nodeType":"YulIf","src":"645:59:29"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"398:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"406:3:29","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"414:8:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"424:6:29","type":""}],"src":"363:347:29"},{"body":{"nodeType":"YulBlock","src":"763:123:29","statements":[{"nodeType":"YulAssignment","src":"773:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"795:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"782:12:29"},"nodeType":"YulFunctionCall","src":"782:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"773:5:29"}]},{"body":{"nodeType":"YulBlock","src":"864:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"873:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"876:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"866:6:29"},"nodeType":"YulFunctionCall","src":"866:12:29"},"nodeType":"YulExpressionStatement","src":"866:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"824:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"850:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"854:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"846:3:29"},"nodeType":"YulFunctionCall","src":"846:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"858:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"842:3:29"},"nodeType":"YulFunctionCall","src":"842:18:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"831:3:29"},"nodeType":"YulFunctionCall","src":"831:30:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"821:2:29"},"nodeType":"YulFunctionCall","src":"821:41:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"814:6:29"},"nodeType":"YulFunctionCall","src":"814:49:29"},"nodeType":"YulIf","src":"811:69:29"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"742:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:29","type":""}],"src":"715:171:29"},{"body":{"nodeType":"YulBlock","src":"1048:705:29","statements":[{"body":{"nodeType":"YulBlock","src":"1095:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1104:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1107:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1097:6:29"},"nodeType":"YulFunctionCall","src":"1097:12:29"},"nodeType":"YulExpressionStatement","src":"1097:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1069:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1065:3:29"},"nodeType":"YulFunctionCall","src":"1065:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1090:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1061:3:29"},"nodeType":"YulFunctionCall","src":"1061:33:29"},"nodeType":"YulIf","src":"1058:53:29"},{"nodeType":"YulAssignment","src":"1120:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1148:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1130:17:29"},"nodeType":"YulFunctionCall","src":"1130:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1120:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1167:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1198:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1209:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1194:3:29"},"nodeType":"YulFunctionCall","src":"1194:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1181:12:29"},"nodeType":"YulFunctionCall","src":"1181:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1171:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1222:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1240:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1244:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1236:3:29"},"nodeType":"YulFunctionCall","src":"1236:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1248:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1232:3:29"},"nodeType":"YulFunctionCall","src":"1232:18:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1226:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1277:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1286:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1289:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1279:6:29"},"nodeType":"YulFunctionCall","src":"1279:12:29"},"nodeType":"YulExpressionStatement","src":"1279:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1265:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1273:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1262:2:29"},"nodeType":"YulFunctionCall","src":"1262:14:29"},"nodeType":"YulIf","src":"1259:34:29"},{"nodeType":"YulVariableDeclaration","src":"1302:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1358:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1369:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:29"},"nodeType":"YulFunctionCall","src":"1354:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1378:7:29"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1328:25:29"},"nodeType":"YulFunctionCall","src":"1328:58:29"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1306:8:29","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1316:8:29","type":""}]},{"nodeType":"YulAssignment","src":"1395:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1405:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1395:6:29"}]},{"nodeType":"YulAssignment","src":"1422:18:29","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1432:8:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1422:6:29"}]},{"nodeType":"YulAssignment","src":"1449:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1481:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1492:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:29"},"nodeType":"YulFunctionCall","src":"1477:18:29"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"1459:17:29"},"nodeType":"YulFunctionCall","src":"1459:37:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1449:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1505:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1549:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1534:3:29"},"nodeType":"YulFunctionCall","src":"1534:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1521:12:29"},"nodeType":"YulFunctionCall","src":"1521:32:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1509:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1582:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1594:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1584:6:29"},"nodeType":"YulFunctionCall","src":"1584:12:29"},"nodeType":"YulExpressionStatement","src":"1584:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1568:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"1578:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1565:2:29"},"nodeType":"YulFunctionCall","src":"1565:16:29"},"nodeType":"YulIf","src":"1562:36:29"},{"nodeType":"YulVariableDeclaration","src":"1607:86:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1663:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1674:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1659:3:29"},"nodeType":"YulFunctionCall","src":"1659:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:29"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1633:25:29"},"nodeType":"YulFunctionCall","src":"1633:60:29"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"1611:8:29","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"1621:8:29","type":""}]},{"nodeType":"YulAssignment","src":"1702:18:29","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1712:8:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1702:6:29"}]},{"nodeType":"YulAssignment","src":"1729:18:29","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"1739:8:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1729:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"974:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"985:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"997:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1005:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1013:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1021:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1029:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1037:6:29","type":""}],"src":"891:862:29"},{"body":{"nodeType":"YulBlock","src":"1827:115:29","statements":[{"body":{"nodeType":"YulBlock","src":"1873:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1882:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1885:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1875:6:29"},"nodeType":"YulFunctionCall","src":"1875:12:29"},"nodeType":"YulExpressionStatement","src":"1875:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1848:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1857:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1844:3:29"},"nodeType":"YulFunctionCall","src":"1844:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1869:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1840:3:29"},"nodeType":"YulFunctionCall","src":"1840:32:29"},"nodeType":"YulIf","src":"1837:52:29"},{"nodeType":"YulAssignment","src":"1898:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1908:17:29"},"nodeType":"YulFunctionCall","src":"1908:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1898:6:29"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1816:6:29","type":""}],"src":"1758:184:29"},{"body":{"nodeType":"YulBlock","src":"2033:166:29","statements":[{"body":{"nodeType":"YulBlock","src":"2079:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2088:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2091:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2081:6:29"},"nodeType":"YulFunctionCall","src":"2081:12:29"},"nodeType":"YulExpressionStatement","src":"2081:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2054:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2063:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2050:3:29"},"nodeType":"YulFunctionCall","src":"2050:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2046:3:29"},"nodeType":"YulFunctionCall","src":"2046:32:29"},"nodeType":"YulIf","src":"2043:52:29"},{"nodeType":"YulAssignment","src":"2104:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2132:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"2114:17:29"},"nodeType":"YulFunctionCall","src":"2114:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2104:6:29"}]},{"nodeType":"YulAssignment","src":"2151:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2178:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2189:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2174:3:29"},"nodeType":"YulFunctionCall","src":"2174:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2161:12:29"},"nodeType":"YulFunctionCall","src":"2161:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2151:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1991:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2002:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2014:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2022:6:29","type":""}],"src":"1947:252:29"},{"body":{"nodeType":"YulBlock","src":"2249:86:29","statements":[{"body":{"nodeType":"YulBlock","src":"2313:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2322:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2325:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2315:6:29"},"nodeType":"YulFunctionCall","src":"2315:12:29"},"nodeType":"YulExpressionStatement","src":"2315:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2272:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2283:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2298:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2303:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2294:3:29"},"nodeType":"YulFunctionCall","src":"2294:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"2307:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2290:3:29"},"nodeType":"YulFunctionCall","src":"2290:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2279:3:29"},"nodeType":"YulFunctionCall","src":"2279:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2269:2:29"},"nodeType":"YulFunctionCall","src":"2269:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2262:6:29"},"nodeType":"YulFunctionCall","src":"2262:50:29"},"nodeType":"YulIf","src":"2259:70:29"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2238:5:29","type":""}],"src":"2204:131:29"},{"body":{"nodeType":"YulBlock","src":"2444:352:29","statements":[{"body":{"nodeType":"YulBlock","src":"2490:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2499:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2502:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2492:6:29"},"nodeType":"YulFunctionCall","src":"2492:12:29"},"nodeType":"YulExpressionStatement","src":"2492:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2465:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2474:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2461:3:29"},"nodeType":"YulFunctionCall","src":"2461:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2486:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:29"},"nodeType":"YulFunctionCall","src":"2457:32:29"},"nodeType":"YulIf","src":"2454:52:29"},{"nodeType":"YulVariableDeclaration","src":"2515:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2541:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2528:12:29"},"nodeType":"YulFunctionCall","src":"2528:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2519:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2585:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2560:24:29"},"nodeType":"YulFunctionCall","src":"2560:31:29"},"nodeType":"YulExpressionStatement","src":"2560:31:29"},{"nodeType":"YulAssignment","src":"2600:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"2610:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2600:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"2624:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2656:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2667:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2652:3:29"},"nodeType":"YulFunctionCall","src":"2652:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2639:12:29"},"nodeType":"YulFunctionCall","src":"2639:32:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2628:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2705:7:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2680:24:29"},"nodeType":"YulFunctionCall","src":"2680:33:29"},"nodeType":"YulExpressionStatement","src":"2680:33:29"},{"nodeType":"YulAssignment","src":"2722:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2732:7:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2722:6:29"}]},{"nodeType":"YulAssignment","src":"2748:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2775:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2786:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2771:3:29"},"nodeType":"YulFunctionCall","src":"2771:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2758:12:29"},"nodeType":"YulFunctionCall","src":"2758:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2748:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2394:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2405:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2417:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2425:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2433:6:29","type":""}],"src":"2340:456:29"},{"body":{"nodeType":"YulBlock","src":"2902:76:29","statements":[{"nodeType":"YulAssignment","src":"2912:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2924:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2935:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2920:3:29"},"nodeType":"YulFunctionCall","src":"2920:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2912:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2954:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"2965:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2947:6:29"},"nodeType":"YulFunctionCall","src":"2947:25:29"},"nodeType":"YulExpressionStatement","src":"2947:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2871:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2882:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2893:4:29","type":""}],"src":"2801:177:29"},{"body":{"nodeType":"YulBlock","src":"3053:177:29","statements":[{"body":{"nodeType":"YulBlock","src":"3099:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3108:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3111:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3101:6:29"},"nodeType":"YulFunctionCall","src":"3101:12:29"},"nodeType":"YulExpressionStatement","src":"3101:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3074:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3083:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3070:3:29"},"nodeType":"YulFunctionCall","src":"3070:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3095:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3066:3:29"},"nodeType":"YulFunctionCall","src":"3066:32:29"},"nodeType":"YulIf","src":"3063:52:29"},{"nodeType":"YulVariableDeclaration","src":"3124:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3150:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3137:12:29"},"nodeType":"YulFunctionCall","src":"3137:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3128:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3194:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3169:24:29"},"nodeType":"YulFunctionCall","src":"3169:31:29"},"nodeType":"YulExpressionStatement","src":"3169:31:29"},{"nodeType":"YulAssignment","src":"3209:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3219:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3209:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3019:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3030:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3042:6:29","type":""}],"src":"2983:247:29"},{"body":{"nodeType":"YulBlock","src":"3308:85:29","statements":[{"body":{"nodeType":"YulBlock","src":"3347:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3356:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3359:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3349:6:29"},"nodeType":"YulFunctionCall","src":"3349:12:29"},"nodeType":"YulExpressionStatement","src":"3349:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3329:3:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3334:6:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3325:3:29"},"nodeType":"YulFunctionCall","src":"3325:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"3343:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3321:3:29"},"nodeType":"YulFunctionCall","src":"3321:25:29"},"nodeType":"YulIf","src":"3318:45:29"},{"nodeType":"YulAssignment","src":"3372:15:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"3381:6:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3372:5:29"}]}]},"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3282:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3290:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3298:5:29","type":""}],"src":"3235:158:29"},{"body":{"nodeType":"YulBlock","src":"3616:882:29","statements":[{"body":{"nodeType":"YulBlock","src":"3663:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3672:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3675:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3665:6:29"},"nodeType":"YulFunctionCall","src":"3665:12:29"},"nodeType":"YulExpressionStatement","src":"3665:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3637:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3646:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3633:3:29"},"nodeType":"YulFunctionCall","src":"3633:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3658:3:29","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3629:3:29"},"nodeType":"YulFunctionCall","src":"3629:33:29"},"nodeType":"YulIf","src":"3626:53:29"},{"nodeType":"YulAssignment","src":"3688:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3716:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"3698:17:29"},"nodeType":"YulFunctionCall","src":"3698:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3688:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3735:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3765:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3776:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:29"},"nodeType":"YulFunctionCall","src":"3761:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3748:12:29"},"nodeType":"YulFunctionCall","src":"3748:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3739:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3814:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3789:24:29"},"nodeType":"YulFunctionCall","src":"3789:31:29"},"nodeType":"YulExpressionStatement","src":"3789:31:29"},{"nodeType":"YulAssignment","src":"3829:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3839:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3829:6:29"}]},{"nodeType":"YulAssignment","src":"3853:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3880:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3891:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3876:3:29"},"nodeType":"YulFunctionCall","src":"3876:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3863:12:29"},"nodeType":"YulFunctionCall","src":"3863:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3853:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3904:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3936:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3947:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3932:3:29"},"nodeType":"YulFunctionCall","src":"3932:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3919:12:29"},"nodeType":"YulFunctionCall","src":"3919:32:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3908:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3985:7:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3960:24:29"},"nodeType":"YulFunctionCall","src":"3960:33:29"},"nodeType":"YulExpressionStatement","src":"3960:33:29"},{"nodeType":"YulAssignment","src":"4002:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4012:7:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4002:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4028:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4071:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:29"},"nodeType":"YulFunctionCall","src":"4056:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4043:12:29"},"nodeType":"YulFunctionCall","src":"4043:33:29"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"4032:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"4110:7:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4085:24:29"},"nodeType":"YulFunctionCall","src":"4085:33:29"},"nodeType":"YulExpressionStatement","src":"4085:33:29"},{"nodeType":"YulAssignment","src":"4127:17:29","value":{"name":"value_2","nodeType":"YulIdentifier","src":"4137:7:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4127:6:29"}]},{"nodeType":"YulAssignment","src":"4153:77:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4205:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4216:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:29"},"nodeType":"YulFunctionCall","src":"4201:19:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4222:7:29"}],"functionName":{"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulIdentifier","src":"4163:37:29"},"nodeType":"YulFunctionCall","src":"4163:67:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4153:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4239:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4270:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4281:3:29","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4266:3:29"},"nodeType":"YulFunctionCall","src":"4266:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4253:12:29"},"nodeType":"YulFunctionCall","src":"4253:33:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4243:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4329:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4338:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4341:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4331:6:29"},"nodeType":"YulFunctionCall","src":"4331:12:29"},"nodeType":"YulExpressionStatement","src":"4331:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4301:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4317:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4321:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4313:3:29"},"nodeType":"YulFunctionCall","src":"4313:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"4325:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4309:3:29"},"nodeType":"YulFunctionCall","src":"4309:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4298:2:29"},"nodeType":"YulFunctionCall","src":"4298:30:29"},"nodeType":"YulIf","src":"4295:50:29"},{"nodeType":"YulVariableDeclaration","src":"4354:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4410:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4421:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4406:3:29"},"nodeType":"YulFunctionCall","src":"4406:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4430:7:29"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4380:25:29"},"nodeType":"YulFunctionCall","src":"4380:58:29"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"4358:8:29","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"4368:8:29","type":""}]},{"nodeType":"YulAssignment","src":"4447:18:29","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"4457:8:29"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4447:6:29"}]},{"nodeType":"YulAssignment","src":"4474:18:29","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"4484:8:29"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"4474:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_addresst_uint256t_addresst_addresst_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3526:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3537:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3549:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3557:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3565:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3573:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3581:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3589:6:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3597:6:29","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3605:6:29","type":""}],"src":"3398:1100:29"},{"body":{"nodeType":"YulBlock","src":"4608:376:29","statements":[{"body":{"nodeType":"YulBlock","src":"4654:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4663:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4666:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4656:6:29"},"nodeType":"YulFunctionCall","src":"4656:12:29"},"nodeType":"YulExpressionStatement","src":"4656:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4629:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4638:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4625:3:29"},"nodeType":"YulFunctionCall","src":"4625:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4650:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4621:3:29"},"nodeType":"YulFunctionCall","src":"4621:32:29"},"nodeType":"YulIf","src":"4618:52:29"},{"nodeType":"YulAssignment","src":"4679:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4707:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"4689:17:29"},"nodeType":"YulFunctionCall","src":"4689:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4679:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4726:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4757:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4768:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4753:3:29"},"nodeType":"YulFunctionCall","src":"4753:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4740:12:29"},"nodeType":"YulFunctionCall","src":"4740:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4815:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4824:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4827:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4817:6:29"},"nodeType":"YulFunctionCall","src":"4817:12:29"},"nodeType":"YulExpressionStatement","src":"4817:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4787:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4803:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4807:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4799:3:29"},"nodeType":"YulFunctionCall","src":"4799:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"4811:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4795:3:29"},"nodeType":"YulFunctionCall","src":"4795:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4784:2:29"},"nodeType":"YulFunctionCall","src":"4784:30:29"},"nodeType":"YulIf","src":"4781:50:29"},{"nodeType":"YulVariableDeclaration","src":"4840:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4896:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4907:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4892:3:29"},"nodeType":"YulFunctionCall","src":"4892:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4916:7:29"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4866:25:29"},"nodeType":"YulFunctionCall","src":"4866:58:29"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"4844:8:29","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"4854:8:29","type":""}]},{"nodeType":"YulAssignment","src":"4933:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4943:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4933:6:29"}]},{"nodeType":"YulAssignment","src":"4960:18:29","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4970:8:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4960:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4558:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4569:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4581:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4589:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4597:6:29","type":""}],"src":"4503:481:29"},{"body":{"nodeType":"YulBlock","src":"5084:92:29","statements":[{"nodeType":"YulAssignment","src":"5094:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5106:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5117:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5102:3:29"},"nodeType":"YulFunctionCall","src":"5102:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5094:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5136:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5161:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5154:6:29"},"nodeType":"YulFunctionCall","src":"5154:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5147:6:29"},"nodeType":"YulFunctionCall","src":"5147:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5129:6:29"},"nodeType":"YulFunctionCall","src":"5129:41:29"},"nodeType":"YulExpressionStatement","src":"5129:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5053:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5064:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5075:4:29","type":""}],"src":"4989:187:29"},{"body":{"nodeType":"YulBlock","src":"5282:102:29","statements":[{"nodeType":"YulAssignment","src":"5292:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5304:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5315:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5300:3:29"},"nodeType":"YulFunctionCall","src":"5300:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5292:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5334:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5349:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5365:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5370:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5361:3:29"},"nodeType":"YulFunctionCall","src":"5361:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"5374:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5357:3:29"},"nodeType":"YulFunctionCall","src":"5357:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5345:3:29"},"nodeType":"YulFunctionCall","src":"5345:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5327:6:29"},"nodeType":"YulFunctionCall","src":"5327:51:29"},"nodeType":"YulExpressionStatement","src":"5327:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5251:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5262:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5273:4:29","type":""}],"src":"5181:203:29"},{"body":{"nodeType":"YulBlock","src":"5421:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5438:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5445:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5450:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5441:3:29"},"nodeType":"YulFunctionCall","src":"5441:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5431:6:29"},"nodeType":"YulFunctionCall","src":"5431:31:29"},"nodeType":"YulExpressionStatement","src":"5431:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5478:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5481:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5471:6:29"},"nodeType":"YulFunctionCall","src":"5471:15:29"},"nodeType":"YulExpressionStatement","src":"5471:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5502:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5505:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5495:6:29"},"nodeType":"YulFunctionCall","src":"5495:15:29"},"nodeType":"YulExpressionStatement","src":"5495:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5389:127:29"},{"body":{"nodeType":"YulBlock","src":"5566:230:29","statements":[{"nodeType":"YulAssignment","src":"5576:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5592:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5586:5:29"},"nodeType":"YulFunctionCall","src":"5586:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5576:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"5604:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5626:6:29"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5642:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"5648:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5638:3:29"},"nodeType":"YulFunctionCall","src":"5638:13:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5657:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5653:3:29"},"nodeType":"YulFunctionCall","src":"5653:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5634:3:29"},"nodeType":"YulFunctionCall","src":"5634:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:29"},"nodeType":"YulFunctionCall","src":"5622:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5608:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5737:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5739:16:29"},"nodeType":"YulFunctionCall","src":"5739:18:29"},"nodeType":"YulExpressionStatement","src":"5739:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5680:10:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5700:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5704:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5696:3:29"},"nodeType":"YulFunctionCall","src":"5696:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"5708:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5692:3:29"},"nodeType":"YulFunctionCall","src":"5692:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5677:2:29"},"nodeType":"YulFunctionCall","src":"5677:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5716:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5728:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5713:2:29"},"nodeType":"YulFunctionCall","src":"5713:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5674:2:29"},"nodeType":"YulFunctionCall","src":"5674:62:29"},"nodeType":"YulIf","src":"5671:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5775:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5779:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5768:6:29"},"nodeType":"YulFunctionCall","src":"5768:22:29"},"nodeType":"YulExpressionStatement","src":"5768:22:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5546:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5555:6:29","type":""}],"src":"5521:275:29"},{"body":{"nodeType":"YulBlock","src":"5858:129:29","statements":[{"body":{"nodeType":"YulBlock","src":"5902:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5904:16:29"},"nodeType":"YulFunctionCall","src":"5904:18:29"},"nodeType":"YulExpressionStatement","src":"5904:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5874:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5890:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5894:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5886:3:29"},"nodeType":"YulFunctionCall","src":"5886:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"5898:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5882:3:29"},"nodeType":"YulFunctionCall","src":"5882:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5871:2:29"},"nodeType":"YulFunctionCall","src":"5871:30:29"},"nodeType":"YulIf","src":"5868:56:29"},{"nodeType":"YulAssignment","src":"5933:48:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5953:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5961:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5949:3:29"},"nodeType":"YulFunctionCall","src":"5949:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5970:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5966:3:29"},"nodeType":"YulFunctionCall","src":"5966:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5945:3:29"},"nodeType":"YulFunctionCall","src":"5945:29:29"},{"kind":"number","nodeType":"YulLiteral","src":"5976:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5941:3:29"},"nodeType":"YulFunctionCall","src":"5941:40:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5933:4:29"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5838:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5849:4:29","type":""}],"src":"5801:186:29"},{"body":{"nodeType":"YulBlock","src":"6044:410:29","statements":[{"body":{"nodeType":"YulBlock","src":"6093:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6102:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6105:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6095:6:29"},"nodeType":"YulFunctionCall","src":"6095:12:29"},"nodeType":"YulExpressionStatement","src":"6095:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6072:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6080:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6068:3:29"},"nodeType":"YulFunctionCall","src":"6068:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"6087:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6064:3:29"},"nodeType":"YulFunctionCall","src":"6064:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6057:6:29"},"nodeType":"YulFunctionCall","src":"6057:35:29"},"nodeType":"YulIf","src":"6054:55:29"},{"nodeType":"YulVariableDeclaration","src":"6118:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6141:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6128:12:29"},"nodeType":"YulFunctionCall","src":"6128:20:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6122:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6157:63:29","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6216:2:29"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"6188:27:29"},"nodeType":"YulFunctionCall","src":"6188:31:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6172:15:29"},"nodeType":"YulFunctionCall","src":"6172:48:29"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"6161:7:29","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"6236:7:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6245:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6229:6:29"},"nodeType":"YulFunctionCall","src":"6229:19:29"},"nodeType":"YulExpressionStatement","src":"6229:19:29"},{"body":{"nodeType":"YulBlock","src":"6296:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:29"},"nodeType":"YulFunctionCall","src":"6298:12:29"},"nodeType":"YulExpressionStatement","src":"6298:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6271:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6279:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6267:3:29"},"nodeType":"YulFunctionCall","src":"6267:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"6284:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6263:3:29"},"nodeType":"YulFunctionCall","src":"6263:26:29"},{"name":"end","nodeType":"YulIdentifier","src":"6291:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6260:2:29"},"nodeType":"YulFunctionCall","src":"6260:35:29"},"nodeType":"YulIf","src":"6257:55:29"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"6338:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"6347:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6334:3:29"},"nodeType":"YulFunctionCall","src":"6334:18:29"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6358:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6366:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6354:3:29"},"nodeType":"YulFunctionCall","src":"6354:17:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6373:2:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6321:12:29"},"nodeType":"YulFunctionCall","src":"6321:55:29"},"nodeType":"YulExpressionStatement","src":"6321:55:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"6400:7:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6409:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:29"},"nodeType":"YulFunctionCall","src":"6396:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"6414:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6392:3:29"},"nodeType":"YulFunctionCall","src":"6392:27:29"},{"kind":"number","nodeType":"YulLiteral","src":"6421:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6385:6:29"},"nodeType":"YulFunctionCall","src":"6385:38:29"},"nodeType":"YulExpressionStatement","src":"6385:38:29"},{"nodeType":"YulAssignment","src":"6432:16:29","value":{"name":"array_1","nodeType":"YulIdentifier","src":"6441:7:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6432:5:29"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6018:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"6026:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6034:5:29","type":""}],"src":"5992:462:29"},{"body":{"nodeType":"YulBlock","src":"6555:359:29","statements":[{"body":{"nodeType":"YulBlock","src":"6601:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6610:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6613:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6603:6:29"},"nodeType":"YulFunctionCall","src":"6603:12:29"},"nodeType":"YulExpressionStatement","src":"6603:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6576:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6585:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6572:3:29"},"nodeType":"YulFunctionCall","src":"6572:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6597:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6568:3:29"},"nodeType":"YulFunctionCall","src":"6568:32:29"},"nodeType":"YulIf","src":"6565:52:29"},{"nodeType":"YulVariableDeclaration","src":"6626:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6639:12:29"},"nodeType":"YulFunctionCall","src":"6639:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6630:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6696:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6671:24:29"},"nodeType":"YulFunctionCall","src":"6671:31:29"},"nodeType":"YulExpressionStatement","src":"6671:31:29"},{"nodeType":"YulAssignment","src":"6711:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"6721:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6711:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"6735:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6766:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6777:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6762:3:29"},"nodeType":"YulFunctionCall","src":"6762:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6749:12:29"},"nodeType":"YulFunctionCall","src":"6749:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6739:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6824:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6833:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6836:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6826:6:29"},"nodeType":"YulFunctionCall","src":"6826:12:29"},"nodeType":"YulExpressionStatement","src":"6826:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6796:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"6816:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6808:3:29"},"nodeType":"YulFunctionCall","src":"6808:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"6820:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6804:3:29"},"nodeType":"YulFunctionCall","src":"6804:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6793:2:29"},"nodeType":"YulFunctionCall","src":"6793:30:29"},"nodeType":"YulIf","src":"6790:50:29"},{"nodeType":"YulAssignment","src":"6849:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6880:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6891:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6876:3:29"},"nodeType":"YulFunctionCall","src":"6876:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6900:7:29"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6859:16:29"},"nodeType":"YulFunctionCall","src":"6859:49:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6849:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6513:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6524:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6536:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6544:6:29","type":""}],"src":"6459:455:29"},{"body":{"nodeType":"YulBlock","src":"7020:76:29","statements":[{"nodeType":"YulAssignment","src":"7030:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7042:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7053:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7038:3:29"},"nodeType":"YulFunctionCall","src":"7038:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7030:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7072:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"7083:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7065:6:29"},"nodeType":"YulFunctionCall","src":"7065:25:29"},"nodeType":"YulExpressionStatement","src":"7065:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6989:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7000:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7011:4:29","type":""}],"src":"6919:177:29"},{"body":{"nodeType":"YulBlock","src":"7143:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"7197:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7206:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7209:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7199:6:29"},"nodeType":"YulFunctionCall","src":"7199:12:29"},"nodeType":"YulExpressionStatement","src":"7199:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7166:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7187:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7180:6:29"},"nodeType":"YulFunctionCall","src":"7180:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7173:6:29"},"nodeType":"YulFunctionCall","src":"7173:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7163:2:29"},"nodeType":"YulFunctionCall","src":"7163:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7156:6:29"},"nodeType":"YulFunctionCall","src":"7156:40:29"},"nodeType":"YulIf","src":"7153:60:29"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7132:5:29","type":""}],"src":"7101:118:29"},{"body":{"nodeType":"YulBlock","src":"7307:230:29","statements":[{"body":{"nodeType":"YulBlock","src":"7353:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7362:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7365:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7355:6:29"},"nodeType":"YulFunctionCall","src":"7355:12:29"},"nodeType":"YulExpressionStatement","src":"7355:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7328:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7337:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7324:3:29"},"nodeType":"YulFunctionCall","src":"7324:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7349:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7320:3:29"},"nodeType":"YulFunctionCall","src":"7320:32:29"},"nodeType":"YulIf","src":"7317:52:29"},{"nodeType":"YulAssignment","src":"7378:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7406:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7388:17:29"},"nodeType":"YulFunctionCall","src":"7388:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7378:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"7425:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7455:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7466:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7451:3:29"},"nodeType":"YulFunctionCall","src":"7451:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7438:12:29"},"nodeType":"YulFunctionCall","src":"7438:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7429:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7501:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"7479:21:29"},"nodeType":"YulFunctionCall","src":"7479:28:29"},"nodeType":"YulExpressionStatement","src":"7479:28:29"},{"nodeType":"YulAssignment","src":"7516:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7526:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7516:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7265:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7276:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7288:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7296:6:29","type":""}],"src":"7224:313:29"},{"body":{"nodeType":"YulBlock","src":"7653:353:29","statements":[{"body":{"nodeType":"YulBlock","src":"7699:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7708:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7711:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7701:6:29"},"nodeType":"YulFunctionCall","src":"7701:12:29"},"nodeType":"YulExpressionStatement","src":"7701:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7674:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7683:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7670:3:29"},"nodeType":"YulFunctionCall","src":"7670:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7695:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7666:3:29"},"nodeType":"YulFunctionCall","src":"7666:32:29"},"nodeType":"YulIf","src":"7663:52:29"},{"nodeType":"YulAssignment","src":"7724:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7752:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7734:17:29"},"nodeType":"YulFunctionCall","src":"7734:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7724:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"7771:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7802:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7813:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7798:3:29"},"nodeType":"YulFunctionCall","src":"7798:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7785:12:29"},"nodeType":"YulFunctionCall","src":"7785:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7775:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7860:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7869:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7872:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7862:6:29"},"nodeType":"YulFunctionCall","src":"7862:12:29"},"nodeType":"YulExpressionStatement","src":"7862:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7832:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7848:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"7852:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7844:3:29"},"nodeType":"YulFunctionCall","src":"7844:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"7856:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7840:3:29"},"nodeType":"YulFunctionCall","src":"7840:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7829:2:29"},"nodeType":"YulFunctionCall","src":"7829:30:29"},"nodeType":"YulIf","src":"7826:50:29"},{"nodeType":"YulAssignment","src":"7885:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7916:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"7927:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7912:3:29"},"nodeType":"YulFunctionCall","src":"7912:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7936:7:29"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7895:16:29"},"nodeType":"YulFunctionCall","src":"7895:49:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7885:6:29"}]},{"nodeType":"YulAssignment","src":"7953:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7985:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7996:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7981:3:29"},"nodeType":"YulFunctionCall","src":"7981:18:29"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"7963:17:29"},"nodeType":"YulFunctionCall","src":"7963:37:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7953:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7603:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7614:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7626:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7634:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7642:6:29","type":""}],"src":"7542:464:29"},{"body":{"nodeType":"YulBlock","src":"8078:174:29","statements":[{"body":{"nodeType":"YulBlock","src":"8124:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8133:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8136:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8126:6:29"},"nodeType":"YulFunctionCall","src":"8126:12:29"},"nodeType":"YulExpressionStatement","src":"8126:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8099:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8108:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8095:3:29"},"nodeType":"YulFunctionCall","src":"8095:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8120:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8091:3:29"},"nodeType":"YulFunctionCall","src":"8091:32:29"},"nodeType":"YulIf","src":"8088:52:29"},{"nodeType":"YulVariableDeclaration","src":"8149:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8175:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8162:12:29"},"nodeType":"YulFunctionCall","src":"8162:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8153:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8216:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"8194:21:29"},"nodeType":"YulFunctionCall","src":"8194:28:29"},"nodeType":"YulExpressionStatement","src":"8194:28:29"},{"nodeType":"YulAssignment","src":"8231:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"8241:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8231:6:29"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8044:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8055:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8067:6:29","type":""}],"src":"8011:241:29"},{"body":{"nodeType":"YulBlock","src":"8343:233:29","statements":[{"body":{"nodeType":"YulBlock","src":"8389:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8398:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8401:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8391:6:29"},"nodeType":"YulFunctionCall","src":"8391:12:29"},"nodeType":"YulExpressionStatement","src":"8391:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8364:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8373:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8360:3:29"},"nodeType":"YulFunctionCall","src":"8360:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8385:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8356:3:29"},"nodeType":"YulFunctionCall","src":"8356:32:29"},"nodeType":"YulIf","src":"8353:52:29"},{"nodeType":"YulAssignment","src":"8414:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8442:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"8424:17:29"},"nodeType":"YulFunctionCall","src":"8424:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8414:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"8461:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8502:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:29"},"nodeType":"YulFunctionCall","src":"8487:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8474:12:29"},"nodeType":"YulFunctionCall","src":"8474:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8465:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8515:24:29"},"nodeType":"YulFunctionCall","src":"8515:31:29"},"nodeType":"YulExpressionStatement","src":"8515:31:29"},{"nodeType":"YulAssignment","src":"8555:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"8565:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8555:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8301:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8312:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8324:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8332:6:29","type":""}],"src":"8257:319:29"},{"body":{"nodeType":"YulBlock","src":"8647:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8657:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8666:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8661:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8726:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8751:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"8756:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8747:3:29"},"nodeType":"YulFunctionCall","src":"8747:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8770:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"8775:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8766:3:29"},"nodeType":"YulFunctionCall","src":"8766:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8760:5:29"},"nodeType":"YulFunctionCall","src":"8760:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8740:6:29"},"nodeType":"YulFunctionCall","src":"8740:39:29"},"nodeType":"YulExpressionStatement","src":"8740:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8687:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"8690:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8684:2:29"},"nodeType":"YulFunctionCall","src":"8684:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8698:19:29","statements":[{"nodeType":"YulAssignment","src":"8700:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8709:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"8712:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8705:3:29"},"nodeType":"YulFunctionCall","src":"8705:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8700:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"8680:3:29","statements":[]},"src":"8676:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8809:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8814:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8805:3:29"},"nodeType":"YulFunctionCall","src":"8805:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"8823:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8798:6:29"},"nodeType":"YulFunctionCall","src":"8798:27:29"},"nodeType":"YulExpressionStatement","src":"8798:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8625:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8630:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8635:6:29","type":""}],"src":"8581:250:29"},{"body":{"nodeType":"YulBlock","src":"8885:221:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8895:26:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8915:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8909:5:29"},"nodeType":"YulFunctionCall","src":"8909:12:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8899:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8937:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8942:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8930:6:29"},"nodeType":"YulFunctionCall","src":"8930:19:29"},"nodeType":"YulExpressionStatement","src":"8930:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8997:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"9004:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8993:3:29"},"nodeType":"YulFunctionCall","src":"8993:16:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9015:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9020:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9011:3:29"},"nodeType":"YulFunctionCall","src":"9011:14:29"},{"name":"length","nodeType":"YulIdentifier","src":"9027:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8958:34:29"},"nodeType":"YulFunctionCall","src":"8958:76:29"},"nodeType":"YulExpressionStatement","src":"8958:76:29"},{"nodeType":"YulAssignment","src":"9043:57:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9058:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9071:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9079:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9067:3:29"},"nodeType":"YulFunctionCall","src":"9067:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9088:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9084:3:29"},"nodeType":"YulFunctionCall","src":"9084:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9063:3:29"},"nodeType":"YulFunctionCall","src":"9063:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9054:3:29"},"nodeType":"YulFunctionCall","src":"9054:39:29"},{"kind":"number","nodeType":"YulLiteral","src":"9095:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9050:3:29"},"nodeType":"YulFunctionCall","src":"9050:50:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9043:3:29"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8862:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8869:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8877:3:29","type":""}],"src":"8836:270:29"},{"body":{"nodeType":"YulBlock","src":"9230:98:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9247:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9258:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9240:6:29"},"nodeType":"YulFunctionCall","src":"9240:21:29"},"nodeType":"YulExpressionStatement","src":"9240:21:29"},{"nodeType":"YulAssignment","src":"9270:52:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9295:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9307:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9318:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9303:3:29"},"nodeType":"YulFunctionCall","src":"9303:18:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"9278:16:29"},"nodeType":"YulFunctionCall","src":"9278:44:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9270:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9199:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9210:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9221:4:29","type":""}],"src":"9111:217:29"},{"body":{"nodeType":"YulBlock","src":"9432:89:29","statements":[{"nodeType":"YulAssignment","src":"9442:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9454:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9465:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9450:3:29"},"nodeType":"YulFunctionCall","src":"9450:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9442:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9484:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9499:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9507:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9495:3:29"},"nodeType":"YulFunctionCall","src":"9495:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9477:6:29"},"nodeType":"YulFunctionCall","src":"9477:38:29"},"nodeType":"YulExpressionStatement","src":"9477:38:29"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9401:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9412:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9423:4:29","type":""}],"src":"9333:188:29"},{"body":{"nodeType":"YulBlock","src":"9676:462:29","statements":[{"body":{"nodeType":"YulBlock","src":"9723:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9732:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9735:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9725:6:29"},"nodeType":"YulFunctionCall","src":"9725:12:29"},"nodeType":"YulExpressionStatement","src":"9725:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9697:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9706:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9693:3:29"},"nodeType":"YulFunctionCall","src":"9693:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9718:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9689:3:29"},"nodeType":"YulFunctionCall","src":"9689:33:29"},"nodeType":"YulIf","src":"9686:53:29"},{"nodeType":"YulAssignment","src":"9748:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9776:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"9758:17:29"},"nodeType":"YulFunctionCall","src":"9758:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9748:6:29"}]},{"nodeType":"YulAssignment","src":"9795:76:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9847:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9858:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9843:3:29"},"nodeType":"YulFunctionCall","src":"9843:18:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9863:7:29"}],"functionName":{"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulIdentifier","src":"9805:37:29"},"nodeType":"YulFunctionCall","src":"9805:66:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9795:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"9880:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9911:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9922:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9907:3:29"},"nodeType":"YulFunctionCall","src":"9907:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9894:12:29"},"nodeType":"YulFunctionCall","src":"9894:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9884:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9969:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9978:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9981:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9971:6:29"},"nodeType":"YulFunctionCall","src":"9971:12:29"},"nodeType":"YulExpressionStatement","src":"9971:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9941:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"9961:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9953:3:29"},"nodeType":"YulFunctionCall","src":"9953:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"9965:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9949:3:29"},"nodeType":"YulFunctionCall","src":"9949:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9938:2:29"},"nodeType":"YulFunctionCall","src":"9938:30:29"},"nodeType":"YulIf","src":"9935:50:29"},{"nodeType":"YulVariableDeclaration","src":"9994:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10050:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10061:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10046:3:29"},"nodeType":"YulFunctionCall","src":"10046:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10070:7:29"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"10020:25:29"},"nodeType":"YulFunctionCall","src":"10020:58:29"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"9998:8:29","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"10008:8:29","type":""}]},{"nodeType":"YulAssignment","src":"10087:18:29","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"10097:8:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10087:6:29"}]},{"nodeType":"YulAssignment","src":"10114:18:29","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"10124:8:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10114:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9618:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9629:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9641:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9649:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9657:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9665:6:29","type":""}],"src":"9526:612:29"},{"body":{"nodeType":"YulBlock","src":"10272:119:29","statements":[{"nodeType":"YulAssignment","src":"10282:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10294:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10305:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10290:3:29"},"nodeType":"YulFunctionCall","src":"10290:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10282:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10324:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"10335:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10317:6:29"},"nodeType":"YulFunctionCall","src":"10317:25:29"},"nodeType":"YulExpressionStatement","src":"10317:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10362:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10373:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10358:3:29"},"nodeType":"YulFunctionCall","src":"10358:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"10378:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10351:6:29"},"nodeType":"YulFunctionCall","src":"10351:34:29"},"nodeType":"YulExpressionStatement","src":"10351:34:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10233:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10244:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10252:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10263:4:29","type":""}],"src":"10143:248:29"},{"body":{"nodeType":"YulBlock","src":"10481:171:29","statements":[{"body":{"nodeType":"YulBlock","src":"10527:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10536:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10539:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10529:6:29"},"nodeType":"YulFunctionCall","src":"10529:12:29"},"nodeType":"YulExpressionStatement","src":"10529:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10502:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10511:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10498:3:29"},"nodeType":"YulFunctionCall","src":"10498:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10523:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10494:3:29"},"nodeType":"YulFunctionCall","src":"10494:32:29"},"nodeType":"YulIf","src":"10491:52:29"},{"nodeType":"YulAssignment","src":"10552:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10580:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"10562:17:29"},"nodeType":"YulFunctionCall","src":"10562:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10552:6:29"}]},{"nodeType":"YulAssignment","src":"10599:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10631:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10642:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10627:3:29"},"nodeType":"YulFunctionCall","src":"10627:18:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"10609:17:29"},"nodeType":"YulFunctionCall","src":"10609:37:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10599:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10439:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10450:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10462:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10470:6:29","type":""}],"src":"10396:256:29"},{"body":{"nodeType":"YulBlock","src":"10744:301:29","statements":[{"body":{"nodeType":"YulBlock","src":"10790:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10799:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10802:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10792:6:29"},"nodeType":"YulFunctionCall","src":"10792:12:29"},"nodeType":"YulExpressionStatement","src":"10792:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10765:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10774:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10761:3:29"},"nodeType":"YulFunctionCall","src":"10761:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10786:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10757:3:29"},"nodeType":"YulFunctionCall","src":"10757:32:29"},"nodeType":"YulIf","src":"10754:52:29"},{"nodeType":"YulVariableDeclaration","src":"10815:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10841:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10828:12:29"},"nodeType":"YulFunctionCall","src":"10828:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10819:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10885:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10860:24:29"},"nodeType":"YulFunctionCall","src":"10860:31:29"},"nodeType":"YulExpressionStatement","src":"10860:31:29"},{"nodeType":"YulAssignment","src":"10900:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"10910:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10900:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"10924:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10952:3:29"},"nodeType":"YulFunctionCall","src":"10952:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10939:12:29"},"nodeType":"YulFunctionCall","src":"10939:32:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10928:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11005:7:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10980:24:29"},"nodeType":"YulFunctionCall","src":"10980:33:29"},"nodeType":"YulExpressionStatement","src":"10980:33:29"},{"nodeType":"YulAssignment","src":"11022:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"11032:7:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11022:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10702:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10713:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10725:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10733:6:29","type":""}],"src":"10657:388:29"},{"body":{"nodeType":"YulBlock","src":"11147:87:29","statements":[{"nodeType":"YulAssignment","src":"11157:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11169:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11180:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11165:3:29"},"nodeType":"YulFunctionCall","src":"11165:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11157:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11199:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11214:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11222:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11210:3:29"},"nodeType":"YulFunctionCall","src":"11210:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11192:6:29"},"nodeType":"YulFunctionCall","src":"11192:36:29"},"nodeType":"YulExpressionStatement","src":"11192:36:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11116:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11127:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11138:4:29","type":""}],"src":"11050:184:29"},{"body":{"nodeType":"YulBlock","src":"11368:102:29","statements":[{"nodeType":"YulAssignment","src":"11378:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11390:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11401:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11386:3:29"},"nodeType":"YulFunctionCall","src":"11386:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11378:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11420:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11435:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11451:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11456:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11447:3:29"},"nodeType":"YulFunctionCall","src":"11447:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"11460:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11443:3:29"},"nodeType":"YulFunctionCall","src":"11443:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11431:3:29"},"nodeType":"YulFunctionCall","src":"11431:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11413:6:29"},"nodeType":"YulFunctionCall","src":"11413:51:29"},"nodeType":"YulExpressionStatement","src":"11413:51:29"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11337:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11348:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11359:4:29","type":""}],"src":"11239:231:29"},{"body":{"nodeType":"YulBlock","src":"11603:102:29","statements":[{"nodeType":"YulAssignment","src":"11613:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11625:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11636:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11621:3:29"},"nodeType":"YulFunctionCall","src":"11621:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11613:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11655:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11670:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11686:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11691:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11682:3:29"},"nodeType":"YulFunctionCall","src":"11682:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"11695:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11678:3:29"},"nodeType":"YulFunctionCall","src":"11678:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11666:3:29"},"nodeType":"YulFunctionCall","src":"11666:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11648:6:29"},"nodeType":"YulFunctionCall","src":"11648:51:29"},"nodeType":"YulExpressionStatement","src":"11648:51:29"}]},"name":"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$5541__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11572:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11583:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11594:4:29","type":""}],"src":"11475:230:29"},{"body":{"nodeType":"YulBlock","src":"11894:632:29","statements":[{"body":{"nodeType":"YulBlock","src":"11941:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11950:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11953:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11943:6:29"},"nodeType":"YulFunctionCall","src":"11943:12:29"},"nodeType":"YulExpressionStatement","src":"11943:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11915:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11924:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11911:3:29"},"nodeType":"YulFunctionCall","src":"11911:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11936:3:29","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11907:3:29"},"nodeType":"YulFunctionCall","src":"11907:33:29"},"nodeType":"YulIf","src":"11904:53:29"},{"nodeType":"YulAssignment","src":"11966:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11994:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"11976:17:29"},"nodeType":"YulFunctionCall","src":"11976:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11966:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12013:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12043:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12054:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12039:3:29"},"nodeType":"YulFunctionCall","src":"12039:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12026:12:29"},"nodeType":"YulFunctionCall","src":"12026:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12017:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12092:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12067:24:29"},"nodeType":"YulFunctionCall","src":"12067:31:29"},"nodeType":"YulExpressionStatement","src":"12067:31:29"},{"nodeType":"YulAssignment","src":"12107:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"12117:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12107:6:29"}]},{"nodeType":"YulAssignment","src":"12131:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12158:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12169:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12154:3:29"},"nodeType":"YulFunctionCall","src":"12154:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12141:12:29"},"nodeType":"YulFunctionCall","src":"12141:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12131:6:29"}]},{"nodeType":"YulAssignment","src":"12182:76:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12234:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12245:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12230:3:29"},"nodeType":"YulFunctionCall","src":"12230:18:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12250:7:29"}],"functionName":{"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulIdentifier","src":"12192:37:29"},"nodeType":"YulFunctionCall","src":"12192:66:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12182:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12267:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12298:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12309:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12294:3:29"},"nodeType":"YulFunctionCall","src":"12294:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12281:12:29"},"nodeType":"YulFunctionCall","src":"12281:33:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12271:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12357:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12366:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12369:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12359:6:29"},"nodeType":"YulFunctionCall","src":"12359:12:29"},"nodeType":"YulExpressionStatement","src":"12359:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12329:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12345:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"12349:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12341:3:29"},"nodeType":"YulFunctionCall","src":"12341:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"12353:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12337:3:29"},"nodeType":"YulFunctionCall","src":"12337:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12326:2:29"},"nodeType":"YulFunctionCall","src":"12326:30:29"},"nodeType":"YulIf","src":"12323:50:29"},{"nodeType":"YulVariableDeclaration","src":"12382:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12438:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12449:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12434:3:29"},"nodeType":"YulFunctionCall","src":"12434:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12458:7:29"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"12408:25:29"},"nodeType":"YulFunctionCall","src":"12408:58:29"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"12386:8:29","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"12396:8:29","type":""}]},{"nodeType":"YulAssignment","src":"12475:18:29","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"12485:8:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12475:6:29"}]},{"nodeType":"YulAssignment","src":"12502:18:29","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"12512:8:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12502:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_addresst_uint256t_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11820:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11831:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11843:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11851:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11859:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11867:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11875:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11883:6:29","type":""}],"src":"11710:816:29"},{"body":{"nodeType":"YulBlock","src":"12630:76:29","statements":[{"nodeType":"YulAssignment","src":"12640:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12652:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12663:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12648:3:29"},"nodeType":"YulFunctionCall","src":"12648:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12640:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12682:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"12693:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12675:6:29"},"nodeType":"YulFunctionCall","src":"12675:25:29"},"nodeType":"YulExpressionStatement","src":"12675:25:29"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12599:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12610:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12621:4:29","type":""}],"src":"12531:175:29"},{"body":{"nodeType":"YulBlock","src":"12795:298:29","statements":[{"body":{"nodeType":"YulBlock","src":"12841:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12850:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12853:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12843:6:29"},"nodeType":"YulFunctionCall","src":"12843:12:29"},"nodeType":"YulExpressionStatement","src":"12843:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12816:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12825:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12812:3:29"},"nodeType":"YulFunctionCall","src":"12812:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12837:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12808:3:29"},"nodeType":"YulFunctionCall","src":"12808:32:29"},"nodeType":"YulIf","src":"12805:52:29"},{"nodeType":"YulVariableDeclaration","src":"12866:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12892:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12879:12:29"},"nodeType":"YulFunctionCall","src":"12879:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12870:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12936:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12911:24:29"},"nodeType":"YulFunctionCall","src":"12911:31:29"},"nodeType":"YulExpressionStatement","src":"12911:31:29"},{"nodeType":"YulAssignment","src":"12951:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"12961:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12951:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12975:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13007:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13018:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13003:3:29"},"nodeType":"YulFunctionCall","src":"13003:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12990:12:29"},"nodeType":"YulFunctionCall","src":"12990:32:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12979:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"13053:7:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"13031:21:29"},"nodeType":"YulFunctionCall","src":"13031:30:29"},"nodeType":"YulExpressionStatement","src":"13031:30:29"},{"nodeType":"YulAssignment","src":"13070:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"13080:7:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13070:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12753:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12764:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12776:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12784:6:29","type":""}],"src":"12711:382:29"},{"body":{"nodeType":"YulBlock","src":"13236:484:29","statements":[{"body":{"nodeType":"YulBlock","src":"13283:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13292:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13295:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13285:6:29"},"nodeType":"YulFunctionCall","src":"13285:12:29"},"nodeType":"YulExpressionStatement","src":"13285:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13257:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13266:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13253:3:29"},"nodeType":"YulFunctionCall","src":"13253:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"13278:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13249:3:29"},"nodeType":"YulFunctionCall","src":"13249:33:29"},"nodeType":"YulIf","src":"13246:53:29"},{"nodeType":"YulAssignment","src":"13308:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13336:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13318:17:29"},"nodeType":"YulFunctionCall","src":"13318:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13308:6:29"}]},{"nodeType":"YulAssignment","src":"13355:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13387:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13398:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13383:3:29"},"nodeType":"YulFunctionCall","src":"13383:18:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13365:17:29"},"nodeType":"YulFunctionCall","src":"13365:37:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13355:6:29"}]},{"nodeType":"YulAssignment","src":"13411:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13438:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13449:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13434:3:29"},"nodeType":"YulFunctionCall","src":"13434:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13421:12:29"},"nodeType":"YulFunctionCall","src":"13421:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13411:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"13462:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13493:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13504:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13489:3:29"},"nodeType":"YulFunctionCall","src":"13489:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13476:12:29"},"nodeType":"YulFunctionCall","src":"13476:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13466:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"13551:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13560:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13563:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13553:6:29"},"nodeType":"YulFunctionCall","src":"13553:12:29"},"nodeType":"YulExpressionStatement","src":"13553:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13523:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13539:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"13543:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13535:3:29"},"nodeType":"YulFunctionCall","src":"13535:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"13547:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13531:3:29"},"nodeType":"YulFunctionCall","src":"13531:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13520:2:29"},"nodeType":"YulFunctionCall","src":"13520:30:29"},"nodeType":"YulIf","src":"13517:50:29"},{"nodeType":"YulVariableDeclaration","src":"13576:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13643:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:29"},"nodeType":"YulFunctionCall","src":"13628:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13652:7:29"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"13602:25:29"},"nodeType":"YulFunctionCall","src":"13602:58:29"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"13580:8:29","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"13590:8:29","type":""}]},{"nodeType":"YulAssignment","src":"13669:18:29","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"13679:8:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13669:6:29"}]},{"nodeType":"YulAssignment","src":"13696:18:29","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"13706:8:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13696:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13170:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13181:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13193:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13201:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13209:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13217:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13225:6:29","type":""}],"src":"13098:622:29"},{"body":{"nodeType":"YulBlock","src":"13827:222:29","statements":[{"body":{"nodeType":"YulBlock","src":"13873:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13882:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13885:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13875:6:29"},"nodeType":"YulFunctionCall","src":"13875:12:29"},"nodeType":"YulExpressionStatement","src":"13875:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13848:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13857:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13844:3:29"},"nodeType":"YulFunctionCall","src":"13844:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"13869:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13840:3:29"},"nodeType":"YulFunctionCall","src":"13840:32:29"},"nodeType":"YulIf","src":"13837:52:29"},{"nodeType":"YulAssignment","src":"13898:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13926:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13908:17:29"},"nodeType":"YulFunctionCall","src":"13908:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13898:6:29"}]},{"nodeType":"YulAssignment","src":"13945:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13977:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13988:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13973:3:29"},"nodeType":"YulFunctionCall","src":"13973:18:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13955:17:29"},"nodeType":"YulFunctionCall","src":"13955:37:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13945:6:29"}]},{"nodeType":"YulAssignment","src":"14001:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14028:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14039:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14024:3:29"},"nodeType":"YulFunctionCall","src":"14024:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14011:12:29"},"nodeType":"YulFunctionCall","src":"14011:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14001:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13777:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13788:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13800:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13808:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13816:6:29","type":""}],"src":"13725:324:29"},{"body":{"nodeType":"YulBlock","src":"14173:341:29","statements":[{"body":{"nodeType":"YulBlock","src":"14220:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14229:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14232:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14222:6:29"},"nodeType":"YulFunctionCall","src":"14222:12:29"},"nodeType":"YulExpressionStatement","src":"14222:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14194:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14203:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14190:3:29"},"nodeType":"YulFunctionCall","src":"14190:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"14215:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14186:3:29"},"nodeType":"YulFunctionCall","src":"14186:33:29"},"nodeType":"YulIf","src":"14183:53:29"},{"nodeType":"YulAssignment","src":"14245:38:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14273:9:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"14255:17:29"},"nodeType":"YulFunctionCall","src":"14255:28:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14245:6:29"}]},{"nodeType":"YulAssignment","src":"14292:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14324:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14335:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14320:3:29"},"nodeType":"YulFunctionCall","src":"14320:18:29"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"14302:17:29"},"nodeType":"YulFunctionCall","src":"14302:37:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14292:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"14348:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14378:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14389:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14374:3:29"},"nodeType":"YulFunctionCall","src":"14374:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14361:12:29"},"nodeType":"YulFunctionCall","src":"14361:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14352:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14427:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"14402:24:29"},"nodeType":"YulFunctionCall","src":"14402:31:29"},"nodeType":"YulExpressionStatement","src":"14402:31:29"},{"nodeType":"YulAssignment","src":"14442:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"14452:5:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14442:6:29"}]},{"nodeType":"YulAssignment","src":"14466:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14493:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14504:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14489:3:29"},"nodeType":"YulFunctionCall","src":"14489:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14476:12:29"},"nodeType":"YulFunctionCall","src":"14476:32:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14466:6:29"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14115:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14126:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14138:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14146:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14154:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14162:6:29","type":""}],"src":"14054:460:29"},{"body":{"nodeType":"YulBlock","src":"14693:180:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14710:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14721:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14703:6:29"},"nodeType":"YulFunctionCall","src":"14703:21:29"},"nodeType":"YulExpressionStatement","src":"14703:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14744:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14755:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14740:3:29"},"nodeType":"YulFunctionCall","src":"14740:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"14760:2:29","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14733:6:29"},"nodeType":"YulFunctionCall","src":"14733:30:29"},"nodeType":"YulExpressionStatement","src":"14733:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14783:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14794:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14779:3:29"},"nodeType":"YulFunctionCall","src":"14779:18:29"},{"hexValue":"546f6b656e4272696467653a2062726964676520666565203e2031303025","kind":"string","nodeType":"YulLiteral","src":"14799:32:29","type":"","value":"TokenBridge: bridge fee > 100%"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14772:6:29"},"nodeType":"YulFunctionCall","src":"14772:60:29"},"nodeType":"YulExpressionStatement","src":"14772:60:29"},{"nodeType":"YulAssignment","src":"14841:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14853:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14864:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14849:3:29"},"nodeType":"YulFunctionCall","src":"14849:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14841:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14670:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14684:4:29","type":""}],"src":"14519:354:29"},{"body":{"nodeType":"YulBlock","src":"15052:180:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15069:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15080:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15062:6:29"},"nodeType":"YulFunctionCall","src":"15062:21:29"},"nodeType":"YulExpressionStatement","src":"15062:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15103:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15114:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15099:3:29"},"nodeType":"YulFunctionCall","src":"15099:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"15119:2:29","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15092:6:29"},"nodeType":"YulFunctionCall","src":"15092:30:29"},"nodeType":"YulExpressionStatement","src":"15092:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15142:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15153:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15138:3:29"},"nodeType":"YulFunctionCall","src":"15138:18:29"},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"15158:32:29","type":"","value":"LzApp: invalid endpoint caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15131:6:29"},"nodeType":"YulFunctionCall","src":"15131:60:29"},"nodeType":"YulExpressionStatement","src":"15131:60:29"},{"nodeType":"YulAssignment","src":"15200:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15212:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15223:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15208:3:29"},"nodeType":"YulFunctionCall","src":"15208:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15200:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15029:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15043:4:29","type":""}],"src":"14878:354:29"},{"body":{"nodeType":"YulBlock","src":"15292:325:29","statements":[{"nodeType":"YulAssignment","src":"15302:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15316:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"15319:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15312:3:29"},"nodeType":"YulFunctionCall","src":"15312:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15302:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"15333:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15363:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"15369:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15359:3:29"},"nodeType":"YulFunctionCall","src":"15359:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15337:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"15410:31:29","statements":[{"nodeType":"YulAssignment","src":"15412:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15426:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15434:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15422:3:29"},"nodeType":"YulFunctionCall","src":"15422:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15412:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15390:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15383:6:29"},"nodeType":"YulFunctionCall","src":"15383:26:29"},"nodeType":"YulIf","src":"15380:61:29"},{"body":{"nodeType":"YulBlock","src":"15500:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15521:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15528:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15533:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15524:3:29"},"nodeType":"YulFunctionCall","src":"15524:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15514:6:29"},"nodeType":"YulFunctionCall","src":"15514:31:29"},"nodeType":"YulExpressionStatement","src":"15514:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15565:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15568:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15558:6:29"},"nodeType":"YulFunctionCall","src":"15558:15:29"},"nodeType":"YulExpressionStatement","src":"15558:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15593:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15596:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15586:6:29"},"nodeType":"YulFunctionCall","src":"15586:15:29"},"nodeType":"YulExpressionStatement","src":"15586:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15456:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15479:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15487:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15476:2:29"},"nodeType":"YulFunctionCall","src":"15476:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15453:2:29"},"nodeType":"YulFunctionCall","src":"15453:38:29"},"nodeType":"YulIf","src":"15450:161:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15272:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15281:6:29","type":""}],"src":"15237:380:29"},{"body":{"nodeType":"YulBlock","src":"15769:124:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15792:3:29"},{"name":"value0","nodeType":"YulIdentifier","src":"15797:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"15805:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"15779:12:29"},"nodeType":"YulFunctionCall","src":"15779:33:29"},"nodeType":"YulExpressionStatement","src":"15779:33:29"},{"nodeType":"YulVariableDeclaration","src":"15821:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15835:3:29"},{"name":"value1","nodeType":"YulIdentifier","src":"15840:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:29"},"nodeType":"YulFunctionCall","src":"15831:16:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15825:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15863:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"15867:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15856:6:29"},"nodeType":"YulFunctionCall","src":"15856:13:29"},"nodeType":"YulExpressionStatement","src":"15856:13:29"},{"nodeType":"YulAssignment","src":"15878:9:29","value":{"name":"_1","nodeType":"YulIdentifier","src":"15885:2:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15878:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15737:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15742:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15750:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15761:3:29","type":""}],"src":"15622:271:29"},{"body":{"nodeType":"YulBlock","src":"16072:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16089:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16100:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16082:6:29"},"nodeType":"YulFunctionCall","src":"16082:21:29"},"nodeType":"YulExpressionStatement","src":"16082:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16123:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16134:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16119:3:29"},"nodeType":"YulFunctionCall","src":"16119:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"16139:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16112:6:29"},"nodeType":"YulFunctionCall","src":"16112:30:29"},"nodeType":"YulExpressionStatement","src":"16112:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16162:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16173:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16158:3:29"},"nodeType":"YulFunctionCall","src":"16158:18:29"},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f","kind":"string","nodeType":"YulLiteral","src":"16178:34:29","type":"","value":"LzApp: invalid source sending co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16151:6:29"},"nodeType":"YulFunctionCall","src":"16151:62:29"},"nodeType":"YulExpressionStatement","src":"16151:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16233:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16244:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16229:3:29"},"nodeType":"YulFunctionCall","src":"16229:18:29"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"16249:8:29","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16222:6:29"},"nodeType":"YulFunctionCall","src":"16222:36:29"},"nodeType":"YulExpressionStatement","src":"16222:36:29"},{"nodeType":"YulAssignment","src":"16267:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16279:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16290:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16275:3:29"},"nodeType":"YulFunctionCall","src":"16275:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16267:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16049:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16063:4:29","type":""}],"src":"15898:402:29"},{"body":{"nodeType":"YulBlock","src":"16479:177:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16496:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16507:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16489:6:29"},"nodeType":"YulFunctionCall","src":"16489:21:29"},"nodeType":"YulExpressionStatement","src":"16489:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16530:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16541:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16526:3:29"},"nodeType":"YulFunctionCall","src":"16526:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"16546:2:29","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16519:6:29"},"nodeType":"YulFunctionCall","src":"16519:30:29"},"nodeType":"YulExpressionStatement","src":"16519:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16569:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16580:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16565:3:29"},"nodeType":"YulFunctionCall","src":"16565:18:29"},{"hexValue":"546f6b656e4272696467653a20666565206e6f7420656e6f756768","kind":"string","nodeType":"YulLiteral","src":"16585:29:29","type":"","value":"TokenBridge: fee not enough"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16558:6:29"},"nodeType":"YulFunctionCall","src":"16558:57:29"},"nodeType":"YulExpressionStatement","src":"16558:57:29"},{"nodeType":"YulAssignment","src":"16624:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16636:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16647:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16632:3:29"},"nodeType":"YulFunctionCall","src":"16632:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16624:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16456:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16470:4:29","type":""}],"src":"16305:351:29"},{"body":{"nodeType":"YulBlock","src":"16790:145:29","statements":[{"nodeType":"YulAssignment","src":"16800:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16812:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16823:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16808:3:29"},"nodeType":"YulFunctionCall","src":"16808:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16800:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16842:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16857:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16873:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16878:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16869:3:29"},"nodeType":"YulFunctionCall","src":"16869:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"16882:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16865:3:29"},"nodeType":"YulFunctionCall","src":"16865:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16853:3:29"},"nodeType":"YulFunctionCall","src":"16853:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16835:6:29"},"nodeType":"YulFunctionCall","src":"16835:51:29"},"nodeType":"YulExpressionStatement","src":"16835:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16906:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16917:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16902:3:29"},"nodeType":"YulFunctionCall","src":"16902:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"16922:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16895:6:29"},"nodeType":"YulFunctionCall","src":"16895:34:29"},"nodeType":"YulExpressionStatement","src":"16895:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16751:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16762:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16770:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16781:4:29","type":""}],"src":"16661:274:29"},{"body":{"nodeType":"YulBlock","src":"17114:234:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17131:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17142:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17124:6:29"},"nodeType":"YulFunctionCall","src":"17124:21:29"},"nodeType":"YulExpressionStatement","src":"17124:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17165:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17176:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17161:3:29"},"nodeType":"YulFunctionCall","src":"17161:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"17181:2:29","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17154:6:29"},"nodeType":"YulFunctionCall","src":"17154:30:29"},"nodeType":"YulExpressionStatement","src":"17154:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17204:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17215:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17200:3:29"},"nodeType":"YulFunctionCall","src":"17200:18:29"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"17220:34:29","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17193:6:29"},"nodeType":"YulFunctionCall","src":"17193:62:29"},"nodeType":"YulExpressionStatement","src":"17193:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17275:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17286:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17271:3:29"},"nodeType":"YulFunctionCall","src":"17271:18:29"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"17291:14:29","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17264:6:29"},"nodeType":"YulFunctionCall","src":"17264:42:29"},"nodeType":"YulExpressionStatement","src":"17264:42:29"},{"nodeType":"YulAssignment","src":"17315:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17327:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17338:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17323:3:29"},"nodeType":"YulFunctionCall","src":"17323:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17315:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17091:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17105:4:29","type":""}],"src":"16940:408:29"},{"body":{"nodeType":"YulBlock","src":"17527:234:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17544:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17555:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17537:6:29"},"nodeType":"YulFunctionCall","src":"17537:21:29"},"nodeType":"YulExpressionStatement","src":"17537:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17578:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17589:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17574:3:29"},"nodeType":"YulFunctionCall","src":"17574:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"17594:2:29","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17567:6:29"},"nodeType":"YulFunctionCall","src":"17567:30:29"},"nodeType":"YulExpressionStatement","src":"17567:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17617:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17628:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17613:3:29"},"nodeType":"YulFunctionCall","src":"17613:18:29"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"17633:34:29","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17606:6:29"},"nodeType":"YulFunctionCall","src":"17606:62:29"},"nodeType":"YulExpressionStatement","src":"17606:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17688:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17699:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17684:3:29"},"nodeType":"YulFunctionCall","src":"17684:18:29"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"17704:14:29","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17677:6:29"},"nodeType":"YulFunctionCall","src":"17677:42:29"},"nodeType":"YulExpressionStatement","src":"17677:42:29"},{"nodeType":"YulAssignment","src":"17728:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17740:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17751:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17736:3:29"},"nodeType":"YulFunctionCall","src":"17736:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17728:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17504:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17518:4:29","type":""}],"src":"17353:408:29"},{"body":{"nodeType":"YulBlock","src":"17940:169:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17957:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17968:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17950:6:29"},"nodeType":"YulFunctionCall","src":"17950:21:29"},"nodeType":"YulExpressionStatement","src":"17950:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17991:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18002:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17987:3:29"},"nodeType":"YulFunctionCall","src":"17987:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"18007:2:29","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17980:6:29"},"nodeType":"YulFunctionCall","src":"17980:30:29"},"nodeType":"YulExpressionStatement","src":"17980:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18030:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18041:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18026:3:29"},"nodeType":"YulFunctionCall","src":"18026:18:29"},{"hexValue":"546f6b656e4272696467653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"18046:21:29","type":"","value":"TokenBridge: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18019:6:29"},"nodeType":"YulFunctionCall","src":"18019:49:29"},"nodeType":"YulExpressionStatement","src":"18019:49:29"},{"nodeType":"YulAssignment","src":"18077:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18089:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18100:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18085:3:29"},"nodeType":"YulFunctionCall","src":"18085:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18077:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17917:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17931:4:29","type":""}],"src":"17766:343:29"},{"body":{"nodeType":"YulBlock","src":"18288:249:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18305:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18316:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18298:6:29"},"nodeType":"YulFunctionCall","src":"18298:21:29"},"nodeType":"YulExpressionStatement","src":"18298:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18339:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18350:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18335:3:29"},"nodeType":"YulFunctionCall","src":"18335:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"18355:2:29","type":"","value":"59"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18328:6:29"},"nodeType":"YulFunctionCall","src":"18328:30:29"},"nodeType":"YulExpressionStatement","src":"18328:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18378:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18389:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18374:3:29"},"nodeType":"YulFunctionCall","src":"18374:18:29"},{"hexValue":"546f6b656e4272696467653a20696e70757420746f6b656e20616e64206f7574","kind":"string","nodeType":"YulLiteral","src":"18394:34:29","type":"","value":"TokenBridge: input token and out"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18367:6:29"},"nodeType":"YulFunctionCall","src":"18367:62:29"},"nodeType":"YulExpressionStatement","src":"18367:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18449:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18460:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18445:3:29"},"nodeType":"YulFunctionCall","src":"18445:18:29"},{"hexValue":"70757420746f6b656e20617265206e6f7420737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"18465:29:29","type":"","value":"put token are not supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18438:6:29"},"nodeType":"YulFunctionCall","src":"18438:57:29"},"nodeType":"YulExpressionStatement","src":"18438:57:29"},{"nodeType":"YulAssignment","src":"18504:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18516:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18527:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18512:3:29"},"nodeType":"YulFunctionCall","src":"18512:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18504:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_2fb79bd7615e480fca928d43131c6d74bbf06bbd0b64109fedfb9bad79eaa6e9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18265:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18279:4:29","type":""}],"src":"18114:423:29"},{"body":{"nodeType":"YulBlock","src":"18716:234:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18733:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18744:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18726:6:29"},"nodeType":"YulFunctionCall","src":"18726:21:29"},"nodeType":"YulExpressionStatement","src":"18726:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18767:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18778:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18763:3:29"},"nodeType":"YulFunctionCall","src":"18763:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"18783:2:29","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18756:6:29"},"nodeType":"YulFunctionCall","src":"18756:30:29"},"nodeType":"YulExpressionStatement","src":"18756:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18806:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18817:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18802:3:29"},"nodeType":"YulFunctionCall","src":"18802:18:29"},{"hexValue":"546f6b656e4272696467653a20616d6f756e74496e206d757374206265206772","kind":"string","nodeType":"YulLiteral","src":"18822:34:29","type":"","value":"TokenBridge: amountIn must be gr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18795:6:29"},"nodeType":"YulFunctionCall","src":"18795:62:29"},"nodeType":"YulExpressionStatement","src":"18795:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18877:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18888:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18873:3:29"},"nodeType":"YulFunctionCall","src":"18873:18:29"},{"hexValue":"6561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"18893:14:29","type":"","value":"eater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18866:6:29"},"nodeType":"YulFunctionCall","src":"18866:42:29"},"nodeType":"YulExpressionStatement","src":"18866:42:29"},{"nodeType":"YulAssignment","src":"18917:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18929:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18940:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18925:3:29"},"nodeType":"YulFunctionCall","src":"18925:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18917:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_780e05369a5f638bfbd2815b3c3c9d5e8c2d1ed869b73e67df825e69042cd8ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18693:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18707:4:29","type":""}],"src":"18542:408:29"},{"body":{"nodeType":"YulBlock","src":"18987:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19004:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19011:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19016:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19007:3:29"},"nodeType":"YulFunctionCall","src":"19007:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18997:6:29"},"nodeType":"YulFunctionCall","src":"18997:31:29"},"nodeType":"YulExpressionStatement","src":"18997:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19044:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19047:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19037:6:29"},"nodeType":"YulFunctionCall","src":"19037:15:29"},"nodeType":"YulExpressionStatement","src":"19037:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19068:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19071:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19061:6:29"},"nodeType":"YulFunctionCall","src":"19061:15:29"},"nodeType":"YulExpressionStatement","src":"19061:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18955:127:29"},{"body":{"nodeType":"YulBlock","src":"19135:77:29","statements":[{"nodeType":"YulAssignment","src":"19145:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19156:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"19159:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19152:3:29"},"nodeType":"YulFunctionCall","src":"19152:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19145:3:29"}]},{"body":{"nodeType":"YulBlock","src":"19184:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19186:16:29"},"nodeType":"YulFunctionCall","src":"19186:18:29"},"nodeType":"YulExpressionStatement","src":"19186:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19176:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"19179:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19173:2:29"},"nodeType":"YulFunctionCall","src":"19173:10:29"},"nodeType":"YulIf","src":"19170:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19118:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"19121:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19127:3:29","type":""}],"src":"19087:125:29"},{"body":{"nodeType":"YulBlock","src":"19283:200:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19300:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"19305:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19293:6:29"},"nodeType":"YulFunctionCall","src":"19293:19:29"},"nodeType":"YulExpressionStatement","src":"19293:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19338:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19343:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19334:3:29"},"nodeType":"YulFunctionCall","src":"19334:14:29"},{"name":"start","nodeType":"YulIdentifier","src":"19350:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"19357:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"19321:12:29"},"nodeType":"YulFunctionCall","src":"19321:43:29"},"nodeType":"YulExpressionStatement","src":"19321:43:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19388:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"19393:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19384:3:29"},"nodeType":"YulFunctionCall","src":"19384:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"19402:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19380:3:29"},"nodeType":"YulFunctionCall","src":"19380:27:29"},{"kind":"number","nodeType":"YulLiteral","src":"19409:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19373:6:29"},"nodeType":"YulFunctionCall","src":"19373:38:29"},"nodeType":"YulExpressionStatement","src":"19373:38:29"},{"nodeType":"YulAssignment","src":"19420:57:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19435:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19448:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19456:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19444:3:29"},"nodeType":"YulFunctionCall","src":"19444:15:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19465:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19461:3:29"},"nodeType":"YulFunctionCall","src":"19461:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19440:3:29"},"nodeType":"YulFunctionCall","src":"19440:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19431:3:29"},"nodeType":"YulFunctionCall","src":"19431:39:29"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19427:3:29"},"nodeType":"YulFunctionCall","src":"19427:50:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19420:3:29"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"19252:5:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"19259:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19267:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19275:3:29","type":""}],"src":"19217:266:29"},{"body":{"nodeType":"YulBlock","src":"19643:171:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19660:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19675:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19683:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19671:3:29"},"nodeType":"YulFunctionCall","src":"19671:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19653:6:29"},"nodeType":"YulFunctionCall","src":"19653:38:29"},"nodeType":"YulExpressionStatement","src":"19653:38:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19711:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19722:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19707:3:29"},"nodeType":"YulFunctionCall","src":"19707:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"19727:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19700:6:29"},"nodeType":"YulFunctionCall","src":"19700:30:29"},"nodeType":"YulExpressionStatement","src":"19700:30:29"},{"nodeType":"YulAssignment","src":"19739:69:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19773:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"19781:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19793:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19804:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19789:3:29"},"nodeType":"YulFunctionCall","src":"19789:18:29"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"19747:25:29"},"nodeType":"YulFunctionCall","src":"19747:61:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19739:4:29"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19596:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19607:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19615:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19623:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19634:4:29","type":""}],"src":"19488:326:29"},{"body":{"nodeType":"YulBlock","src":"19993:246:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20010:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20021:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20003:6:29"},"nodeType":"YulFunctionCall","src":"20003:21:29"},"nodeType":"YulExpressionStatement","src":"20003:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20044:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20055:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20040:3:29"},"nodeType":"YulFunctionCall","src":"20040:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20060:2:29","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20033:6:29"},"nodeType":"YulFunctionCall","src":"20033:30:29"},"nodeType":"YulExpressionStatement","src":"20033:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20083:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20094:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20079:3:29"},"nodeType":"YulFunctionCall","src":"20079:18:29"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"20099:34:29","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20072:6:29"},"nodeType":"YulFunctionCall","src":"20072:62:29"},"nodeType":"YulExpressionStatement","src":"20072:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20154:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20165:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20150:3:29"},"nodeType":"YulFunctionCall","src":"20150:18:29"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"20170:26:29","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20143:6:29"},"nodeType":"YulFunctionCall","src":"20143:54:29"},"nodeType":"YulExpressionStatement","src":"20143:54:29"},{"nodeType":"YulAssignment","src":"20206:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20218:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20229:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20214:3:29"},"nodeType":"YulFunctionCall","src":"20214:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20206:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19970:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19984:4:29","type":""}],"src":"19819:420:29"},{"body":{"nodeType":"YulBlock","src":"20418:224:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20435:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20446:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20428:6:29"},"nodeType":"YulFunctionCall","src":"20428:21:29"},"nodeType":"YulExpressionStatement","src":"20428:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20469:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20480:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20465:3:29"},"nodeType":"YulFunctionCall","src":"20465:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20485:2:29","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20458:6:29"},"nodeType":"YulFunctionCall","src":"20458:30:29"},"nodeType":"YulExpressionStatement","src":"20458:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20508:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20519:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20504:3:29"},"nodeType":"YulFunctionCall","src":"20504:18:29"},{"hexValue":"546f6b656e4272696467653a20696e76616c696420746f6b656e206164647265","kind":"string","nodeType":"YulLiteral","src":"20524:34:29","type":"","value":"TokenBridge: invalid token addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20497:6:29"},"nodeType":"YulFunctionCall","src":"20497:62:29"},"nodeType":"YulExpressionStatement","src":"20497:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20579:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20590:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20575:3:29"},"nodeType":"YulFunctionCall","src":"20575:18:29"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"20595:4:29","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20568:6:29"},"nodeType":"YulFunctionCall","src":"20568:32:29"},"nodeType":"YulExpressionStatement","src":"20568:32:29"},{"nodeType":"YulAssignment","src":"20609:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20621:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20632:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20617:3:29"},"nodeType":"YulFunctionCall","src":"20617:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20609:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20395:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20409:4:29","type":""}],"src":"20244:398:29"},{"body":{"nodeType":"YulBlock","src":"20821:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20838:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20849:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20831:6:29"},"nodeType":"YulFunctionCall","src":"20831:21:29"},"nodeType":"YulExpressionStatement","src":"20831:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20872:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20883:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20868:3:29"},"nodeType":"YulFunctionCall","src":"20868:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20888:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20861:6:29"},"nodeType":"YulFunctionCall","src":"20861:30:29"},"nodeType":"YulExpressionStatement","src":"20861:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20911:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20922:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20907:3:29"},"nodeType":"YulFunctionCall","src":"20907:18:29"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265","kind":"string","nodeType":"YulLiteral","src":"20927:34:29","type":"","value":"NonblockingLzApp: caller must be"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20900:6:29"},"nodeType":"YulFunctionCall","src":"20900:62:29"},"nodeType":"YulExpressionStatement","src":"20900:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20982:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20993:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20978:3:29"},"nodeType":"YulFunctionCall","src":"20978:18:29"},{"hexValue":"204c7a417070","kind":"string","nodeType":"YulLiteral","src":"20998:8:29","type":"","value":" LzApp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20971:6:29"},"nodeType":"YulFunctionCall","src":"20971:36:29"},"nodeType":"YulExpressionStatement","src":"20971:36:29"},{"nodeType":"YulAssignment","src":"21016:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21028:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21039:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21024:3:29"},"nodeType":"YulFunctionCall","src":"21024:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21016:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20798:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20812:4:29","type":""}],"src":"20647:402:29"},{"body":{"nodeType":"YulBlock","src":"21228:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21245:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21256:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21238:6:29"},"nodeType":"YulFunctionCall","src":"21238:21:29"},"nodeType":"YulExpressionStatement","src":"21238:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21279:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21290:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21275:3:29"},"nodeType":"YulFunctionCall","src":"21275:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"21295:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21268:6:29"},"nodeType":"YulFunctionCall","src":"21268:30:29"},"nodeType":"YulExpressionStatement","src":"21268:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21318:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21329:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21314:3:29"},"nodeType":"YulFunctionCall","src":"21314:18:29"},{"hexValue":"546f6b656e4272696467653a2074686973206465737420636861696e20696420","kind":"string","nodeType":"YulLiteral","src":"21334:34:29","type":"","value":"TokenBridge: this dest chain id "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21307:6:29"},"nodeType":"YulFunctionCall","src":"21307:62:29"},"nodeType":"YulExpressionStatement","src":"21307:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21389:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21400:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21385:3:29"},"nodeType":"YulFunctionCall","src":"21385:18:29"},{"hexValue":"6973206e6f7420656e61626c6564","kind":"string","nodeType":"YulLiteral","src":"21405:16:29","type":"","value":"is not enabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21378:6:29"},"nodeType":"YulFunctionCall","src":"21378:44:29"},"nodeType":"YulExpressionStatement","src":"21378:44:29"},{"nodeType":"YulAssignment","src":"21431:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21443:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21454:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21439:3:29"},"nodeType":"YulFunctionCall","src":"21439:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21431:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_ecd0d94b5711fe92948563c52b28b3471acc1d7d11ad6715283b8f7f1e036199__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21205:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21219:4:29","type":""}],"src":"21054:410:29"},{"body":{"nodeType":"YulBlock","src":"21616:178:29","statements":[{"nodeType":"YulVariableDeclaration","src":"21626:33:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21648:2:29","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"21652:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21644:3:29"},"nodeType":"YulFunctionCall","src":"21644:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"21656:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21640:3:29"},"nodeType":"YulFunctionCall","src":"21640:18:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21636:3:29"},"nodeType":"YulFunctionCall","src":"21636:23:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21630:2:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21675:3:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21688:2:29","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"21692:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21684:3:29"},"nodeType":"YulFunctionCall","src":"21684:15:29"},{"name":"_1","nodeType":"YulIdentifier","src":"21701:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21680:3:29"},"nodeType":"YulFunctionCall","src":"21680:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21668:6:29"},"nodeType":"YulFunctionCall","src":"21668:37:29"},"nodeType":"YulExpressionStatement","src":"21668:37:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21725:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"21730:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21721:3:29"},"nodeType":"YulFunctionCall","src":"21721:12:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21743:2:29","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"21747:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21739:3:29"},"nodeType":"YulFunctionCall","src":"21739:15:29"},{"name":"_1","nodeType":"YulIdentifier","src":"21756:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21735:3:29"},"nodeType":"YulFunctionCall","src":"21735:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21714:6:29"},"nodeType":"YulFunctionCall","src":"21714:46:29"},"nodeType":"YulExpressionStatement","src":"21714:46:29"},{"nodeType":"YulAssignment","src":"21769:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21780:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"21785:2:29","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21776:3:29"},"nodeType":"YulFunctionCall","src":"21776:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21769:3:29"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21584:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21589:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21597:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21608:3:29","type":""}],"src":"21469:325:29"},{"body":{"nodeType":"YulBlock","src":"21854:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21871:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"21874:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21864:6:29"},"nodeType":"YulFunctionCall","src":"21864:14:29"},"nodeType":"YulExpressionStatement","src":"21864:14:29"},{"nodeType":"YulAssignment","src":"21887:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21905:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21908:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21895:9:29"},"nodeType":"YulFunctionCall","src":"21895:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21887:4:29"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21837:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21845:4:29","type":""}],"src":"21799:120:29"},{"body":{"nodeType":"YulBlock","src":"22004:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"22037:425:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22051:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"22061:1:29","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22055:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22082:2:29"},{"name":"array","nodeType":"YulIdentifier","src":"22086:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22075:6:29"},"nodeType":"YulFunctionCall","src":"22075:17:29"},"nodeType":"YulExpressionStatement","src":"22075:17:29"},{"nodeType":"YulVariableDeclaration","src":"22105:31:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22127:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"22131:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"22117:9:29"},"nodeType":"YulFunctionCall","src":"22117:19:29"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"22109:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22149:57:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22172:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22182:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"22189:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"22201:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22185:3:29"},"nodeType":"YulFunctionCall","src":"22185:19:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22178:3:29"},"nodeType":"YulFunctionCall","src":"22178:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22168:3:29"},"nodeType":"YulFunctionCall","src":"22168:38:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"22153:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"22243:23:29","statements":[{"nodeType":"YulAssignment","src":"22245:19:29","value":{"name":"data","nodeType":"YulIdentifier","src":"22260:4:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"22245:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"22225:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"22237:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22222:2:29"},"nodeType":"YulFunctionCall","src":"22222:20:29"},"nodeType":"YulIf","src":"22219:47:29"},{"nodeType":"YulVariableDeclaration","src":"22279:41:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22293:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22303:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"22310:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22315:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22306:3:29"},"nodeType":"YulFunctionCall","src":"22306:12:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22299:3:29"},"nodeType":"YulFunctionCall","src":"22299:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22289:3:29"},"nodeType":"YulFunctionCall","src":"22289:31:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"22283:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22333:24:29","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"22346:11:29"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"22337:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"22431:21:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22440:5:29"},{"name":"_1","nodeType":"YulIdentifier","src":"22447:2:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22433:6:29"},"nodeType":"YulFunctionCall","src":"22433:17:29"},"nodeType":"YulExpressionStatement","src":"22433:17:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22381:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"22388:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22378:2:29"},"nodeType":"YulFunctionCall","src":"22378:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22392:26:29","statements":[{"nodeType":"YulAssignment","src":"22394:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"22407:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"22414:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22403:3:29"},"nodeType":"YulFunctionCall","src":"22403:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"22394:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"22374:3:29","statements":[]},"src":"22370:82:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"22020:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22025:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22017:2:29"},"nodeType":"YulFunctionCall","src":"22017:11:29"},"nodeType":"YulIf","src":"22014:448:29"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"21976:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"21983:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"21988:10:29","type":""}],"src":"21924:544:29"},{"body":{"nodeType":"YulBlock","src":"22558:81:29","statements":[{"nodeType":"YulAssignment","src":"22568:65:29","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22583:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22601:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"22604:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22597:3:29"},"nodeType":"YulFunctionCall","src":"22597:11:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22614:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22610:3:29"},"nodeType":"YulFunctionCall","src":"22610:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22593:3:29"},"nodeType":"YulFunctionCall","src":"22593:24:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22589:3:29"},"nodeType":"YulFunctionCall","src":"22589:29:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22579:3:29"},"nodeType":"YulFunctionCall","src":"22579:40:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22625:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"22628:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22621:3:29"},"nodeType":"YulFunctionCall","src":"22621:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22576:2:29"},"nodeType":"YulFunctionCall","src":"22576:57:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"22568:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22535:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"22541:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"22549:4:29","type":""}],"src":"22473:166:29"},{"body":{"nodeType":"YulBlock","src":"22738:1254:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22748:24:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22768:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22762:5:29"},"nodeType":"YulFunctionCall","src":"22762:10:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"22752:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"22815:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22817:16:29"},"nodeType":"YulFunctionCall","src":"22817:18:29"},"nodeType":"YulExpressionStatement","src":"22817:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22787:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22803:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"22807:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22799:3:29"},"nodeType":"YulFunctionCall","src":"22799:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"22811:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22795:3:29"},"nodeType":"YulFunctionCall","src":"22795:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22784:2:29"},"nodeType":"YulFunctionCall","src":"22784:30:29"},"nodeType":"YulIf","src":"22781:56:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22889:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22927:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22921:5:29"},"nodeType":"YulFunctionCall","src":"22921:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"22895:25:29"},"nodeType":"YulFunctionCall","src":"22895:38:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"22935:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"22846:42:29"},"nodeType":"YulFunctionCall","src":"22846:96:29"},"nodeType":"YulExpressionStatement","src":"22846:96:29"},{"nodeType":"YulVariableDeclaration","src":"22951:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"22968:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22955:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22978:23:29","value":{"kind":"number","nodeType":"YulLiteral","src":"22997:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"22982:11:29","type":""}]},{"nodeType":"YulAssignment","src":"23010:24:29","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"23023:11:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23010:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"23080:655:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23094:35:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"23113:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23125:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23121:3:29"},"nodeType":"YulFunctionCall","src":"23121:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23109:3:29"},"nodeType":"YulFunctionCall","src":"23109:20:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"23098:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23142:48:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23185:4:29"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"23156:28:29"},"nodeType":"YulFunctionCall","src":"23156:34:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"23146:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23203:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"23212:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23207:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"23290:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23315:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23333:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23338:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23329:3:29"},"nodeType":"YulFunctionCall","src":"23329:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23323:5:29"},"nodeType":"YulFunctionCall","src":"23323:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23308:6:29"},"nodeType":"YulFunctionCall","src":"23308:42:29"},"nodeType":"YulExpressionStatement","src":"23308:42:29"},{"nodeType":"YulAssignment","src":"23367:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23381:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"23389:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23377:3:29"},"nodeType":"YulFunctionCall","src":"23377:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23367:6:29"}]},{"nodeType":"YulAssignment","src":"23408:40:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23425:9:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"23436:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23421:3:29"},"nodeType":"YulFunctionCall","src":"23421:27:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23408:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23237:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"23240:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23234:2:29"},"nodeType":"YulFunctionCall","src":"23234:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23249:28:29","statements":[{"nodeType":"YulAssignment","src":"23251:24:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23260:1:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"23263:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23256:3:29"},"nodeType":"YulFunctionCall","src":"23256:19:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23251:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"23230:3:29","statements":[]},"src":"23226:236:29"},{"body":{"nodeType":"YulBlock","src":"23510:166:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23528:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23555:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23560:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23551:3:29"},"nodeType":"YulFunctionCall","src":"23551:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23545:5:29"},"nodeType":"YulFunctionCall","src":"23545:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"23532:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23595:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"23607:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23634:1:29","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"23637:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23630:3:29"},"nodeType":"YulFunctionCall","src":"23630:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"23646:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23626:3:29"},"nodeType":"YulFunctionCall","src":"23626:24:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23656:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23652:3:29"},"nodeType":"YulFunctionCall","src":"23652:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23622:3:29"},"nodeType":"YulFunctionCall","src":"23622:37:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23618:3:29"},"nodeType":"YulFunctionCall","src":"23618:42:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23603:3:29"},"nodeType":"YulFunctionCall","src":"23603:58:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23588:6:29"},"nodeType":"YulFunctionCall","src":"23588:74:29"},"nodeType":"YulExpressionStatement","src":"23588:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"23481:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"23490:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23478:2:29"},"nodeType":"YulFunctionCall","src":"23478:19:29"},"nodeType":"YulIf","src":"23475:201:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23696:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23710:1:29","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"23713:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23706:3:29"},"nodeType":"YulFunctionCall","src":"23706:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"23722:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23702:3:29"},"nodeType":"YulFunctionCall","src":"23702:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23689:6:29"},"nodeType":"YulFunctionCall","src":"23689:36:29"},"nodeType":"YulExpressionStatement","src":"23689:36:29"}]},"nodeType":"YulCase","src":"23073:662:29","value":{"kind":"number","nodeType":"YulLiteral","src":"23078:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"23752:234:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23766:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"23779:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23770:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"23815:67:29","statements":[{"nodeType":"YulAssignment","src":"23833:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23852:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23857:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23848:3:29"},"nodeType":"YulFunctionCall","src":"23848:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23842:5:29"},"nodeType":"YulFunctionCall","src":"23842:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23833:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"23796:6:29"},"nodeType":"YulIf","src":"23793:89:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23902:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23961:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"23968:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"23908:52:29"},"nodeType":"YulFunctionCall","src":"23908:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23895:6:29"},"nodeType":"YulFunctionCall","src":"23895:81:29"},"nodeType":"YulExpressionStatement","src":"23895:81:29"}]},"nodeType":"YulCase","src":"23744:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"23053:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"23061:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23050:2:29"},"nodeType":"YulFunctionCall","src":"23050:14:29"},"nodeType":"YulSwitch","src":"23043:943:29"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22723:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"22729:3:29","type":""}],"src":"22644:1348:29"},{"body":{"nodeType":"YulBlock","src":"24248:416:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24265:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24280:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24288:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24276:3:29"},"nodeType":"YulFunctionCall","src":"24276:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24258:6:29"},"nodeType":"YulFunctionCall","src":"24258:38:29"},"nodeType":"YulExpressionStatement","src":"24258:38:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24316:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24327:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24312:3:29"},"nodeType":"YulFunctionCall","src":"24312:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24336:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24352:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"24357:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24348:3:29"},"nodeType":"YulFunctionCall","src":"24348:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"24361:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24344:3:29"},"nodeType":"YulFunctionCall","src":"24344:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24332:3:29"},"nodeType":"YulFunctionCall","src":"24332:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24305:6:29"},"nodeType":"YulFunctionCall","src":"24305:60:29"},"nodeType":"YulExpressionStatement","src":"24305:60:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24385:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24396:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24381:3:29"},"nodeType":"YulFunctionCall","src":"24381:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"24401:3:29","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24374:6:29"},"nodeType":"YulFunctionCall","src":"24374:31:29"},"nodeType":"YulExpressionStatement","src":"24374:31:29"},{"nodeType":"YulVariableDeclaration","src":"24414:59:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24445:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24457:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24468:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24453:3:29"},"nodeType":"YulFunctionCall","src":"24453:19:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"24428:16:29"},"nodeType":"YulFunctionCall","src":"24428:45:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"24418:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24493:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24504:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24489:3:29"},"nodeType":"YulFunctionCall","src":"24489:18:29"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24523:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24516:6:29"},"nodeType":"YulFunctionCall","src":"24516:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24509:6:29"},"nodeType":"YulFunctionCall","src":"24509:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24482:6:29"},"nodeType":"YulFunctionCall","src":"24482:50:29"},"nodeType":"YulExpressionStatement","src":"24482:50:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24552:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24563:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24548:3:29"},"nodeType":"YulFunctionCall","src":"24548:19:29"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"24573:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"24581:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24569:3:29"},"nodeType":"YulFunctionCall","src":"24569:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24541:6:29"},"nodeType":"YulFunctionCall","src":"24541:51:29"},"nodeType":"YulExpressionStatement","src":"24541:51:29"},{"nodeType":"YulAssignment","src":"24601:57:29","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24635:6:29"},{"name":"value5","nodeType":"YulIdentifier","src":"24643:6:29"},{"name":"tail_1","nodeType":"YulIdentifier","src":"24651:6:29"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"24609:25:29"},"nodeType":"YulFunctionCall","src":"24609:49:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24601:4:29"}]}]},"name":"abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_calldata_ptr__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24177:9:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"24188:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24196:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24204:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24212:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24220:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24228:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24239:4:29","type":""}],"src":"23997:667:29"},{"body":{"nodeType":"YulBlock","src":"24767:147:29","statements":[{"body":{"nodeType":"YulBlock","src":"24813:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24822:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24825:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24815:6:29"},"nodeType":"YulFunctionCall","src":"24815:12:29"},"nodeType":"YulExpressionStatement","src":"24815:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24788:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"24797:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24784:3:29"},"nodeType":"YulFunctionCall","src":"24784:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"24809:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24780:3:29"},"nodeType":"YulFunctionCall","src":"24780:32:29"},"nodeType":"YulIf","src":"24777:52:29"},{"nodeType":"YulAssignment","src":"24838:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24854:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24848:5:29"},"nodeType":"YulFunctionCall","src":"24848:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24838:6:29"}]},{"nodeType":"YulAssignment","src":"24873:35:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24893:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24904:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24889:3:29"},"nodeType":"YulFunctionCall","src":"24889:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24883:5:29"},"nodeType":"YulFunctionCall","src":"24883:25:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24873:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24725:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24736:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24748:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24756:6:29","type":""}],"src":"24669:245:29"},{"body":{"nodeType":"YulBlock","src":"25093:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25110:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25121:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25103:6:29"},"nodeType":"YulFunctionCall","src":"25103:21:29"},"nodeType":"YulExpressionStatement","src":"25103:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25144:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25155:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25140:3:29"},"nodeType":"YulFunctionCall","src":"25140:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"25160:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25133:6:29"},"nodeType":"YulFunctionCall","src":"25133:30:29"},"nodeType":"YulExpressionStatement","src":"25133:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25183:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25194:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25179:3:29"},"nodeType":"YulFunctionCall","src":"25179:18:29"},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","kind":"string","nodeType":"YulLiteral","src":"25199:31:29","type":"","value":"LzApp: no trusted path record"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25172:6:29"},"nodeType":"YulFunctionCall","src":"25172:59:29"},"nodeType":"YulExpressionStatement","src":"25172:59:29"},{"nodeType":"YulAssignment","src":"25240:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25252:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25263:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25248:3:29"},"nodeType":"YulFunctionCall","src":"25248:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25240:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25070:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25084:4:29","type":""}],"src":"24919:353:29"},{"body":{"nodeType":"YulBlock","src":"25326:79:29","statements":[{"nodeType":"YulAssignment","src":"25336:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25348:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"25351:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25344:3:29"},"nodeType":"YulFunctionCall","src":"25344:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25336:4:29"}]},{"body":{"nodeType":"YulBlock","src":"25377:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25379:16:29"},"nodeType":"YulFunctionCall","src":"25379:18:29"},"nodeType":"YulExpressionStatement","src":"25379:18:29"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"25368:4:29"},{"name":"x","nodeType":"YulIdentifier","src":"25374:1:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25365:2:29"},"nodeType":"YulFunctionCall","src":"25365:11:29"},"nodeType":"YulIf","src":"25362:37:29"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25308:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"25311:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25317:4:29","type":""}],"src":"25277:128:29"},{"body":{"nodeType":"YulBlock","src":"25491:103:29","statements":[{"body":{"nodeType":"YulBlock","src":"25537:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25546:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25549:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25539:6:29"},"nodeType":"YulFunctionCall","src":"25539:12:29"},"nodeType":"YulExpressionStatement","src":"25539:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25512:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"25521:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25508:3:29"},"nodeType":"YulFunctionCall","src":"25508:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"25533:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25504:3:29"},"nodeType":"YulFunctionCall","src":"25504:32:29"},"nodeType":"YulIf","src":"25501:52:29"},{"nodeType":"YulAssignment","src":"25562:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25578:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25572:5:29"},"nodeType":"YulFunctionCall","src":"25572:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25562:6:29"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25457:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25468:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25480:6:29","type":""}],"src":"25410:184:29"},{"body":{"nodeType":"YulBlock","src":"25774:177:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25797:3:29"},{"name":"value0","nodeType":"YulIdentifier","src":"25802:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"25810:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"25784:12:29"},"nodeType":"YulFunctionCall","src":"25784:33:29"},"nodeType":"YulExpressionStatement","src":"25784:33:29"},{"nodeType":"YulVariableDeclaration","src":"25826:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25840:3:29"},{"name":"value1","nodeType":"YulIdentifier","src":"25845:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25836:3:29"},"nodeType":"YulFunctionCall","src":"25836:16:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25830:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"25868:2:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25880:2:29","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"25884:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25876:3:29"},"nodeType":"YulFunctionCall","src":"25876:15:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25905:2:29","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"25909:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25901:3:29"},"nodeType":"YulFunctionCall","src":"25901:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"25913:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25897:3:29"},"nodeType":"YulFunctionCall","src":"25897:18:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25893:3:29"},"nodeType":"YulFunctionCall","src":"25893:23:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25872:3:29"},"nodeType":"YulFunctionCall","src":"25872:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25861:6:29"},"nodeType":"YulFunctionCall","src":"25861:57:29"},"nodeType":"YulExpressionStatement","src":"25861:57:29"},{"nodeType":"YulAssignment","src":"25927:18:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"25938:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"25942:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25934:3:29"},"nodeType":"YulFunctionCall","src":"25934:11:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25927:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25734:3:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25739:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25747:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25755:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25766:3:29","type":""}],"src":"25599:352:29"},{"body":{"nodeType":"YulBlock","src":"26130:223:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26147:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26158:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26140:6:29"},"nodeType":"YulFunctionCall","src":"26140:21:29"},"nodeType":"YulExpressionStatement","src":"26140:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26181:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26192:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26177:3:29"},"nodeType":"YulFunctionCall","src":"26177:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"26197:2:29","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26170:6:29"},"nodeType":"YulFunctionCall","src":"26170:30:29"},"nodeType":"YulExpressionStatement","src":"26170:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26220:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26231:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26216:3:29"},"nodeType":"YulFunctionCall","src":"26216:18:29"},{"hexValue":"546f6b656e4272696467653a20455448206973206e6f7420737570706f727465","kind":"string","nodeType":"YulLiteral","src":"26236:34:29","type":"","value":"TokenBridge: ETH is not supporte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26209:6:29"},"nodeType":"YulFunctionCall","src":"26209:62:29"},"nodeType":"YulExpressionStatement","src":"26209:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26291:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26302:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26287:3:29"},"nodeType":"YulFunctionCall","src":"26287:18:29"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"26307:3:29","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26280:6:29"},"nodeType":"YulFunctionCall","src":"26280:31:29"},"nodeType":"YulExpressionStatement","src":"26280:31:29"},{"nodeType":"YulAssignment","src":"26320:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26332:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26343:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26328:3:29"},"nodeType":"YulFunctionCall","src":"26328:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26320:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26107:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26121:4:29","type":""}],"src":"25956:397:29"},{"body":{"nodeType":"YulBlock","src":"26532:232:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26549:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26560:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26542:6:29"},"nodeType":"YulFunctionCall","src":"26542:21:29"},"nodeType":"YulExpressionStatement","src":"26542:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26583:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26594:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26579:3:29"},"nodeType":"YulFunctionCall","src":"26579:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"26599:2:29","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26572:6:29"},"nodeType":"YulFunctionCall","src":"26572:30:29"},"nodeType":"YulExpressionStatement","src":"26572:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26622:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26633:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26618:3:29"},"nodeType":"YulFunctionCall","src":"26618:18:29"},{"hexValue":"546f6b656e4272696467653a20616d6f756e74206d7573742062652067726561","kind":"string","nodeType":"YulLiteral","src":"26638:34:29","type":"","value":"TokenBridge: amount must be grea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26611:6:29"},"nodeType":"YulFunctionCall","src":"26611:62:29"},"nodeType":"YulExpressionStatement","src":"26611:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26693:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26704:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26689:3:29"},"nodeType":"YulFunctionCall","src":"26689:18:29"},{"hexValue":"746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"26709:12:29","type":"","value":"ter than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26682:6:29"},"nodeType":"YulFunctionCall","src":"26682:40:29"},"nodeType":"YulExpressionStatement","src":"26682:40:29"},{"nodeType":"YulAssignment","src":"26731:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26743:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26754:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26739:3:29"},"nodeType":"YulFunctionCall","src":"26739:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26731:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26509:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26523:4:29","type":""}],"src":"26358:406:29"},{"body":{"nodeType":"YulBlock","src":"26821:116:29","statements":[{"nodeType":"YulAssignment","src":"26831:20:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26846:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"26849:1:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26842:3:29"},"nodeType":"YulFunctionCall","src":"26842:9:29"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"26831:7:29"}]},{"body":{"nodeType":"YulBlock","src":"26909:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26911:16:29"},"nodeType":"YulFunctionCall","src":"26911:18:29"},"nodeType":"YulExpressionStatement","src":"26911:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26880:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26873:6:29"},"nodeType":"YulFunctionCall","src":"26873:9:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26887:1:29"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"26894:7:29"},{"name":"x","nodeType":"YulIdentifier","src":"26903:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26890:3:29"},"nodeType":"YulFunctionCall","src":"26890:15:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26884:2:29"},"nodeType":"YulFunctionCall","src":"26884:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"26870:2:29"},"nodeType":"YulFunctionCall","src":"26870:37:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26863:6:29"},"nodeType":"YulFunctionCall","src":"26863:45:29"},"nodeType":"YulIf","src":"26860:71:29"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26800:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"26803:1:29","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"26809:7:29","type":""}],"src":"26769:168:29"},{"body":{"nodeType":"YulBlock","src":"27116:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27133:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27144:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27126:6:29"},"nodeType":"YulFunctionCall","src":"27126:21:29"},"nodeType":"YulExpressionStatement","src":"27126:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27167:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27178:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27163:3:29"},"nodeType":"YulFunctionCall","src":"27163:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"27183:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27156:6:29"},"nodeType":"YulFunctionCall","src":"27156:30:29"},"nodeType":"YulExpressionStatement","src":"27156:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27206:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27217:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27202:3:29"},"nodeType":"YulFunctionCall","src":"27202:18:29"},{"hexValue":"546f6b656e4272696467653a20656d657267656e637920776974686472617720","kind":"string","nodeType":"YulLiteral","src":"27222:34:29","type":"","value":"TokenBridge: emergency withdraw "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27195:6:29"},"nodeType":"YulFunctionCall","src":"27195:62:29"},"nodeType":"YulExpressionStatement","src":"27195:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27277:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27288:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27273:3:29"},"nodeType":"YulFunctionCall","src":"27273:18:29"},{"hexValue":"6c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"27293:8:29","type":"","value":"locked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27266:6:29"},"nodeType":"YulFunctionCall","src":"27266:36:29"},"nodeType":"YulExpressionStatement","src":"27266:36:29"},{"nodeType":"YulAssignment","src":"27311:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27323:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27334:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27319:3:29"},"nodeType":"YulFunctionCall","src":"27319:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27311:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27093:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27107:4:29","type":""}],"src":"26942:402:29"},{"body":{"nodeType":"YulBlock","src":"27408:116:29","statements":[{"nodeType":"YulAssignment","src":"27418:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27433:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27427:5:29"},"nodeType":"YulFunctionCall","src":"27427:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27418:5:29"}]},{"body":{"nodeType":"YulBlock","src":"27502:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27511:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27514:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27504:6:29"},"nodeType":"YulFunctionCall","src":"27504:12:29"},"nodeType":"YulExpressionStatement","src":"27504:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27462:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27473:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27488:2:29","type":"","value":"80"},{"kind":"number","nodeType":"YulLiteral","src":"27492:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27484:3:29"},"nodeType":"YulFunctionCall","src":"27484:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"27496:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27480:3:29"},"nodeType":"YulFunctionCall","src":"27480:18:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27469:3:29"},"nodeType":"YulFunctionCall","src":"27469:30:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27459:2:29"},"nodeType":"YulFunctionCall","src":"27459:41:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27452:6:29"},"nodeType":"YulFunctionCall","src":"27452:49:29"},"nodeType":"YulIf","src":"27449:69:29"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27387:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27398:5:29","type":""}],"src":"27349:175:29"},{"body":{"nodeType":"YulBlock","src":"27675:327:29","statements":[{"body":{"nodeType":"YulBlock","src":"27722:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27731:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27734:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27724:6:29"},"nodeType":"YulFunctionCall","src":"27724:12:29"},"nodeType":"YulExpressionStatement","src":"27724:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27696:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"27705:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27692:3:29"},"nodeType":"YulFunctionCall","src":"27692:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"27717:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27688:3:29"},"nodeType":"YulFunctionCall","src":"27688:33:29"},"nodeType":"YulIf","src":"27685:53:29"},{"nodeType":"YulAssignment","src":"27747:49:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27786:9:29"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"27757:28:29"},"nodeType":"YulFunctionCall","src":"27757:39:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27747:6:29"}]},{"nodeType":"YulAssignment","src":"27805:35:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27825:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27836:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27821:3:29"},"nodeType":"YulFunctionCall","src":"27821:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27815:5:29"},"nodeType":"YulFunctionCall","src":"27815:25:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"27805:6:29"}]},{"nodeType":"YulAssignment","src":"27849:35:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27869:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27880:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27865:3:29"},"nodeType":"YulFunctionCall","src":"27865:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27859:5:29"},"nodeType":"YulFunctionCall","src":"27859:25:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"27849:6:29"}]},{"nodeType":"YulAssignment","src":"27893:35:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27913:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27924:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27909:3:29"},"nodeType":"YulFunctionCall","src":"27909:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27903:5:29"},"nodeType":"YulFunctionCall","src":"27903:25:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"27893:6:29"}]},{"nodeType":"YulAssignment","src":"27937:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27980:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27991:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27976:3:29"},"nodeType":"YulFunctionCall","src":"27976:19:29"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"27947:28:29"},"nodeType":"YulFunctionCall","src":"27947:49:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"27937:6:29"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27609:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27620:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27632:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27640:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27648:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27656:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27664:6:29","type":""}],"src":"27529:473:29"},{"body":{"nodeType":"YulBlock","src":"28181:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28198:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28209:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28191:6:29"},"nodeType":"YulFunctionCall","src":"28191:21:29"},"nodeType":"YulExpressionStatement","src":"28191:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28232:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28243:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28228:3:29"},"nodeType":"YulFunctionCall","src":"28228:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"28248:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28221:6:29"},"nodeType":"YulFunctionCall","src":"28221:30:29"},"nodeType":"YulExpressionStatement","src":"28221:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28271:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28282:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28267:3:29"},"nodeType":"YulFunctionCall","src":"28267:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"28287:34:29","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28260:6:29"},"nodeType":"YulFunctionCall","src":"28260:62:29"},"nodeType":"YulExpressionStatement","src":"28260:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28342:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28353:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28338:3:29"},"nodeType":"YulFunctionCall","src":"28338:18:29"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"28358:16:29","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28331:6:29"},"nodeType":"YulFunctionCall","src":"28331:44:29"},"nodeType":"YulExpressionStatement","src":"28331:44:29"},{"nodeType":"YulAssignment","src":"28384:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28396:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28407:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28392:3:29"},"nodeType":"YulFunctionCall","src":"28392:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28384:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28158:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28172:4:29","type":""}],"src":"28007:410:29"},{"body":{"nodeType":"YulBlock","src":"28529:87:29","statements":[{"nodeType":"YulAssignment","src":"28539:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28551:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28562:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28547:3:29"},"nodeType":"YulFunctionCall","src":"28547:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28539:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28581:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28596:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28604:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28592:3:29"},"nodeType":"YulFunctionCall","src":"28592:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28574:6:29"},"nodeType":"YulFunctionCall","src":"28574:36:29"},"nodeType":"YulExpressionStatement","src":"28574:36:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28498:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28509:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28520:4:29","type":""}],"src":"28422:194:29"},{"body":{"nodeType":"YulBlock","src":"28744:161:29","statements":[{"nodeType":"YulAssignment","src":"28754:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28766:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28777:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28762:3:29"},"nodeType":"YulFunctionCall","src":"28762:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28754:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28796:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28811:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28827:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"28832:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28823:3:29"},"nodeType":"YulFunctionCall","src":"28823:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"28836:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28819:3:29"},"nodeType":"YulFunctionCall","src":"28819:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28807:3:29"},"nodeType":"YulFunctionCall","src":"28807:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28789:6:29"},"nodeType":"YulFunctionCall","src":"28789:51:29"},"nodeType":"YulExpressionStatement","src":"28789:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28860:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28871:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28856:3:29"},"nodeType":"YulFunctionCall","src":"28856:18:29"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28890:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28883:6:29"},"nodeType":"YulFunctionCall","src":"28883:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28876:6:29"},"nodeType":"YulFunctionCall","src":"28876:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28849:6:29"},"nodeType":"YulFunctionCall","src":"28849:50:29"},"nodeType":"YulExpressionStatement","src":"28849:50:29"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28705:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28716:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28724:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28735:4:29","type":""}],"src":"28621:284:29"},{"body":{"nodeType":"YulBlock","src":"29119:289:29","statements":[{"nodeType":"YulVariableDeclaration","src":"29129:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29139:6:29","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29133:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29161:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29176:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"29184:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29172:3:29"},"nodeType":"YulFunctionCall","src":"29172:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29154:6:29"},"nodeType":"YulFunctionCall","src":"29154:34:29"},"nodeType":"YulExpressionStatement","src":"29154:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29208:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29219:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29204:3:29"},"nodeType":"YulFunctionCall","src":"29204:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29228:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"29236:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29224:3:29"},"nodeType":"YulFunctionCall","src":"29224:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29197:6:29"},"nodeType":"YulFunctionCall","src":"29197:43:29"},"nodeType":"YulExpressionStatement","src":"29197:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29260:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29271:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29256:3:29"},"nodeType":"YulFunctionCall","src":"29256:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"29276:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29249:6:29"},"nodeType":"YulFunctionCall","src":"29249:34:29"},"nodeType":"YulExpressionStatement","src":"29249:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29303:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29314:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29299:3:29"},"nodeType":"YulFunctionCall","src":"29299:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"29319:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29292:6:29"},"nodeType":"YulFunctionCall","src":"29292:31:29"},"nodeType":"YulExpressionStatement","src":"29292:31:29"},{"nodeType":"YulAssignment","src":"29332:70:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"29366:6:29"},{"name":"value4","nodeType":"YulIdentifier","src":"29374:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29386:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29397:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29382:3:29"},"nodeType":"YulFunctionCall","src":"29382:19:29"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"29340:25:29"},"nodeType":"YulFunctionCall","src":"29340:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29332:4:29"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29056:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29067:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29075:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29083:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29091:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29099:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29110:4:29","type":""}],"src":"28910:498:29"},{"body":{"nodeType":"YulBlock","src":"29587:225:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29604:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29615:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29597:6:29"},"nodeType":"YulFunctionCall","src":"29597:21:29"},"nodeType":"YulExpressionStatement","src":"29597:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29638:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29649:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29634:3:29"},"nodeType":"YulFunctionCall","src":"29634:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"29654:2:29","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29627:6:29"},"nodeType":"YulFunctionCall","src":"29627:30:29"},"nodeType":"YulExpressionStatement","src":"29627:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29677:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29688:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29673:3:29"},"nodeType":"YulFunctionCall","src":"29673:18:29"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373","kind":"string","nodeType":"YulLiteral","src":"29693:34:29","type":"","value":"NonblockingLzApp: no stored mess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29666:6:29"},"nodeType":"YulFunctionCall","src":"29666:62:29"},"nodeType":"YulExpressionStatement","src":"29666:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29748:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29759:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29744:3:29"},"nodeType":"YulFunctionCall","src":"29744:18:29"},{"hexValue":"616765","kind":"string","nodeType":"YulLiteral","src":"29764:5:29","type":"","value":"age"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29737:6:29"},"nodeType":"YulFunctionCall","src":"29737:33:29"},"nodeType":"YulExpressionStatement","src":"29737:33:29"},{"nodeType":"YulAssignment","src":"29779:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29791:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"29802:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29787:3:29"},"nodeType":"YulFunctionCall","src":"29787:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29779:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29564:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29578:4:29","type":""}],"src":"29413:399:29"},{"body":{"nodeType":"YulBlock","src":"29991:223:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30008:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30019:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30001:6:29"},"nodeType":"YulFunctionCall","src":"30001:21:29"},"nodeType":"YulExpressionStatement","src":"30001:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30042:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30053:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30038:3:29"},"nodeType":"YulFunctionCall","src":"30038:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"30058:2:29","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30031:6:29"},"nodeType":"YulFunctionCall","src":"30031:30:29"},"nodeType":"YulExpressionStatement","src":"30031:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30081:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30092:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30077:3:29"},"nodeType":"YulFunctionCall","src":"30077:18:29"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f61","kind":"string","nodeType":"YulLiteral","src":"30097:34:29","type":"","value":"NonblockingLzApp: invalid payloa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30070:6:29"},"nodeType":"YulFunctionCall","src":"30070:62:29"},"nodeType":"YulExpressionStatement","src":"30070:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30152:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30163:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30148:3:29"},"nodeType":"YulFunctionCall","src":"30148:18:29"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"30168:3:29","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30141:6:29"},"nodeType":"YulFunctionCall","src":"30141:31:29"},"nodeType":"YulExpressionStatement","src":"30141:31:29"},{"nodeType":"YulAssignment","src":"30181:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30193:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30204:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30189:3:29"},"nodeType":"YulFunctionCall","src":"30189:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30181:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29968:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29982:4:29","type":""}],"src":"29817:397:29"},{"body":{"nodeType":"YulBlock","src":"30428:284:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30445:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30460:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"30468:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30456:3:29"},"nodeType":"YulFunctionCall","src":"30456:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30438:6:29"},"nodeType":"YulFunctionCall","src":"30438:38:29"},"nodeType":"YulExpressionStatement","src":"30438:38:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30496:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30507:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30492:3:29"},"nodeType":"YulFunctionCall","src":"30492:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"30512:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30485:6:29"},"nodeType":"YulFunctionCall","src":"30485:31:29"},"nodeType":"YulExpressionStatement","src":"30485:31:29"},{"nodeType":"YulAssignment","src":"30525:70:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30559:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"30567:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30579:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30590:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30575:3:29"},"nodeType":"YulFunctionCall","src":"30575:19:29"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"30533:25:29"},"nodeType":"YulFunctionCall","src":"30533:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30525:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30615:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30626:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30611:3:29"},"nodeType":"YulFunctionCall","src":"30611:18:29"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30635:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30651:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"30655:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30647:3:29"},"nodeType":"YulFunctionCall","src":"30647:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"30659:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30643:3:29"},"nodeType":"YulFunctionCall","src":"30643:18:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30631:3:29"},"nodeType":"YulFunctionCall","src":"30631:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30604:6:29"},"nodeType":"YulFunctionCall","src":"30604:59:29"},"nodeType":"YulExpressionStatement","src":"30604:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30683:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30694:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30679:3:29"},"nodeType":"YulFunctionCall","src":"30679:18:29"},{"name":"value4","nodeType":"YulIdentifier","src":"30699:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30672:6:29"},"nodeType":"YulFunctionCall","src":"30672:34:29"},"nodeType":"YulExpressionStatement","src":"30672:34:29"}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30365:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"30376:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30384:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30392:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30400:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30408:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30419:4:29","type":""}],"src":"30219:493:29"},{"body":{"nodeType":"YulBlock","src":"30840:135:29","statements":[{"nodeType":"YulAssignment","src":"30850:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30862:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30873:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30858:3:29"},"nodeType":"YulFunctionCall","src":"30858:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30850:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30892:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30917:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30910:6:29"},"nodeType":"YulFunctionCall","src":"30910:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30903:6:29"},"nodeType":"YulFunctionCall","src":"30903:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30885:6:29"},"nodeType":"YulFunctionCall","src":"30885:41:29"},"nodeType":"YulExpressionStatement","src":"30885:41:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30946:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30957:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30942:3:29"},"nodeType":"YulFunctionCall","src":"30942:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"30962:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30935:6:29"},"nodeType":"YulFunctionCall","src":"30935:34:29"},"nodeType":"YulExpressionStatement","src":"30935:34:29"}]},"name":"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30801:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30812:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30820:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30831:4:29","type":""}],"src":"30717:258:29"},{"body":{"nodeType":"YulBlock","src":"31133:205:29","statements":[{"nodeType":"YulAssignment","src":"31143:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31155:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31166:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31151:3:29"},"nodeType":"YulFunctionCall","src":"31151:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31143:4:29"}]},{"nodeType":"YulVariableDeclaration","src":"31178:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31188:6:29","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"31182:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31210:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31225:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"31233:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31221:3:29"},"nodeType":"YulFunctionCall","src":"31221:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31203:6:29"},"nodeType":"YulFunctionCall","src":"31203:34:29"},"nodeType":"YulExpressionStatement","src":"31203:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31257:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31268:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31253:3:29"},"nodeType":"YulFunctionCall","src":"31253:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31277:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"31285:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31273:3:29"},"nodeType":"YulFunctionCall","src":"31273:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31246:6:29"},"nodeType":"YulFunctionCall","src":"31246:43:29"},"nodeType":"YulExpressionStatement","src":"31246:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31309:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31320:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31305:3:29"},"nodeType":"YulFunctionCall","src":"31305:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"31325:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31298:6:29"},"nodeType":"YulFunctionCall","src":"31298:34:29"},"nodeType":"YulExpressionStatement","src":"31298:34:29"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31086:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31097:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31105:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31113:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31124:4:29","type":""}],"src":"30980:358:29"},{"body":{"nodeType":"YulBlock","src":"31444:1101:29","statements":[{"body":{"nodeType":"YulBlock","src":"31485:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"31487:16:29"},"nodeType":"YulFunctionCall","src":"31487:18:29"},"nodeType":"YulExpressionStatement","src":"31487:18:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"31460:3:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31473:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"31477:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31469:3:29"},"nodeType":"YulFunctionCall","src":"31469:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"31481:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31465:3:29"},"nodeType":"YulFunctionCall","src":"31465:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31457:2:29"},"nodeType":"YulFunctionCall","src":"31457:27:29"},"nodeType":"YulIf","src":"31454:53:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31559:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31597:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31591:5:29"},"nodeType":"YulFunctionCall","src":"31591:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"31565:25:29"},"nodeType":"YulFunctionCall","src":"31565:38:29"},{"name":"len","nodeType":"YulIdentifier","src":"31605:3:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"31516:42:29"},"nodeType":"YulFunctionCall","src":"31516:93:29"},"nodeType":"YulExpressionStatement","src":"31516:93:29"},{"nodeType":"YulVariableDeclaration","src":"31618:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31635:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"31622:9:29","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"31679:608:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31693:32:29","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"31712:3:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31721:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31717:3:29"},"nodeType":"YulFunctionCall","src":"31717:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31708:3:29"},"nodeType":"YulFunctionCall","src":"31708:17:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"31697:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31738:48:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31781:4:29"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"31752:28:29"},"nodeType":"YulFunctionCall","src":"31752:34:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"31742:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31799:18:29","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"31808:9:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31803:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"31887:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31912:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31937:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31942:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31933:3:29"},"nodeType":"YulFunctionCall","src":"31933:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31920:12:29"},"nodeType":"YulFunctionCall","src":"31920:33:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31905:6:29"},"nodeType":"YulFunctionCall","src":"31905:49:29"},"nodeType":"YulExpressionStatement","src":"31905:49:29"},{"nodeType":"YulAssignment","src":"31971:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31985:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"31993:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31981:3:29"},"nodeType":"YulFunctionCall","src":"31981:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31971:6:29"}]},{"nodeType":"YulAssignment","src":"32012:33:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"32029:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32040:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32025:3:29"},"nodeType":"YulFunctionCall","src":"32025:20:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"32012:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31841:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"31844:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31838:2:29"},"nodeType":"YulFunctionCall","src":"31838:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31853:21:29","statements":[{"nodeType":"YulAssignment","src":"31855:17:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31864:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"31867:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31860:3:29"},"nodeType":"YulFunctionCall","src":"31860:12:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31855:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"31834:3:29","statements":[]},"src":"31830:229:29"},{"body":{"nodeType":"YulBlock","src":"32104:127:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32129:6:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32158:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32163:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32154:3:29"},"nodeType":"YulFunctionCall","src":"32154:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32141:12:29"},"nodeType":"YulFunctionCall","src":"32141:33:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32192:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"32195:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32188:3:29"},"nodeType":"YulFunctionCall","src":"32188:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"32201:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32184:3:29"},"nodeType":"YulFunctionCall","src":"32184:21:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32211:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32207:3:29"},"nodeType":"YulFunctionCall","src":"32207:6:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"32180:3:29"},"nodeType":"YulFunctionCall","src":"32180:34:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32176:3:29"},"nodeType":"YulFunctionCall","src":"32176:39:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32137:3:29"},"nodeType":"YulFunctionCall","src":"32137:79:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32122:6:29"},"nodeType":"YulFunctionCall","src":"32122:95:29"},"nodeType":"YulExpressionStatement","src":"32122:95:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"32078:7:29"},{"name":"len","nodeType":"YulIdentifier","src":"32087:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32075:2:29"},"nodeType":"YulFunctionCall","src":"32075:16:29"},"nodeType":"YulIf","src":"32072:159:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32251:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32265:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"32268:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32261:3:29"},"nodeType":"YulFunctionCall","src":"32261:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"32274:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32257:3:29"},"nodeType":"YulFunctionCall","src":"32257:19:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32244:6:29"},"nodeType":"YulFunctionCall","src":"32244:33:29"},"nodeType":"YulExpressionStatement","src":"32244:33:29"}]},"nodeType":"YulCase","src":"31672:615:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31677:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"32304:235:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32318:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"32331:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"32322:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32364:74:29","statements":[{"nodeType":"YulAssignment","src":"32382:42:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32408:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32413:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32404:3:29"},"nodeType":"YulFunctionCall","src":"32404:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32391:12:29"},"nodeType":"YulFunctionCall","src":"32391:33:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32382:5:29"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"32348:3:29"},"nodeType":"YulIf","src":"32345:93:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32458:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32517:5:29"},{"name":"len","nodeType":"YulIdentifier","src":"32524:3:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"32464:52:29"},"nodeType":"YulFunctionCall","src":"32464:64:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32451:6:29"},"nodeType":"YulFunctionCall","src":"32451:78:29"},"nodeType":"YulExpressionStatement","src":"32451:78:29"}]},"nodeType":"YulCase","src":"32296:243:29","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"31655:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"31660:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31652:2:29"},"nodeType":"YulFunctionCall","src":"31652:11:29"},"nodeType":"YulSwitch","src":"31645:894:29"}]},"name":"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"31424:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"31430:3:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"31435:3:29","type":""}],"src":"31343:1202:29"},{"body":{"nodeType":"YulBlock","src":"32724:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32741:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32752:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32734:6:29"},"nodeType":"YulFunctionCall","src":"32734:21:29"},"nodeType":"YulExpressionStatement","src":"32734:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32775:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32786:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32771:3:29"},"nodeType":"YulFunctionCall","src":"32771:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"32791:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32764:6:29"},"nodeType":"YulFunctionCall","src":"32764:30:29"},"nodeType":"YulExpressionStatement","src":"32764:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32814:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32825:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32810:3:29"},"nodeType":"YulFunctionCall","src":"32810:18:29"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"32830:34:29","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32803:6:29"},"nodeType":"YulFunctionCall","src":"32803:62:29"},"nodeType":"YulExpressionStatement","src":"32803:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32885:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32896:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32881:3:29"},"nodeType":"YulFunctionCall","src":"32881:18:29"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"32901:8:29","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32874:6:29"},"nodeType":"YulFunctionCall","src":"32874:36:29"},"nodeType":"YulExpressionStatement","src":"32874:36:29"},{"nodeType":"YulAssignment","src":"32919:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32931:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32942:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32927:3:29"},"nodeType":"YulFunctionCall","src":"32927:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32919:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32701:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32715:4:29","type":""}],"src":"32550:402:29"},{"body":{"nodeType":"YulBlock","src":"33138:275:29","statements":[{"nodeType":"YulAssignment","src":"33148:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33160:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33171:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33156:3:29"},"nodeType":"YulFunctionCall","src":"33156:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33148:4:29"}]},{"nodeType":"YulVariableDeclaration","src":"33184:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"33194:6:29","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"33188:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33216:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33231:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"33239:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33227:3:29"},"nodeType":"YulFunctionCall","src":"33227:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33209:6:29"},"nodeType":"YulFunctionCall","src":"33209:34:29"},"nodeType":"YulExpressionStatement","src":"33209:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33263:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33274:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33259:3:29"},"nodeType":"YulFunctionCall","src":"33259:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33283:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"33291:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33279:3:29"},"nodeType":"YulFunctionCall","src":"33279:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33252:6:29"},"nodeType":"YulFunctionCall","src":"33252:43:29"},"nodeType":"YulExpressionStatement","src":"33252:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33315:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33326:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33311:3:29"},"nodeType":"YulFunctionCall","src":"33311:18:29"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33335:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33351:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"33356:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33347:3:29"},"nodeType":"YulFunctionCall","src":"33347:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"33360:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33343:3:29"},"nodeType":"YulFunctionCall","src":"33343:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33331:3:29"},"nodeType":"YulFunctionCall","src":"33331:32:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33304:6:29"},"nodeType":"YulFunctionCall","src":"33304:60:29"},"nodeType":"YulExpressionStatement","src":"33304:60:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33384:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33395:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33380:3:29"},"nodeType":"YulFunctionCall","src":"33380:18:29"},{"name":"value3","nodeType":"YulIdentifier","src":"33400:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33373:6:29"},"nodeType":"YulFunctionCall","src":"33373:34:29"},"nodeType":"YulExpressionStatement","src":"33373:34:29"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33083:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33094:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33102:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33110:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33118:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33129:4:29","type":""}],"src":"32957:456:29"},{"body":{"nodeType":"YulBlock","src":"33508:557:29","statements":[{"body":{"nodeType":"YulBlock","src":"33554:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33563:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33566:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33556:6:29"},"nodeType":"YulFunctionCall","src":"33556:12:29"},"nodeType":"YulExpressionStatement","src":"33556:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33529:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"33538:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33525:3:29"},"nodeType":"YulFunctionCall","src":"33525:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"33550:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33521:3:29"},"nodeType":"YulFunctionCall","src":"33521:32:29"},"nodeType":"YulIf","src":"33518:52:29"},{"nodeType":"YulVariableDeclaration","src":"33579:30:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33599:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33593:5:29"},"nodeType":"YulFunctionCall","src":"33593:16:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33583:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"33652:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33661:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33664:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33654:6:29"},"nodeType":"YulFunctionCall","src":"33654:12:29"},"nodeType":"YulExpressionStatement","src":"33654:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33624:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33640:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"33644:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33636:3:29"},"nodeType":"YulFunctionCall","src":"33636:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"33648:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33632:3:29"},"nodeType":"YulFunctionCall","src":"33632:18:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33621:2:29"},"nodeType":"YulFunctionCall","src":"33621:30:29"},"nodeType":"YulIf","src":"33618:50:29"},{"nodeType":"YulVariableDeclaration","src":"33677:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33691:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"33702:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33687:3:29"},"nodeType":"YulFunctionCall","src":"33687:22:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"33681:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"33757:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33766:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33769:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33759:6:29"},"nodeType":"YulFunctionCall","src":"33759:12:29"},"nodeType":"YulExpressionStatement","src":"33759:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"33736:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"33740:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33732:3:29"},"nodeType":"YulFunctionCall","src":"33732:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33747:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33728:3:29"},"nodeType":"YulFunctionCall","src":"33728:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33721:6:29"},"nodeType":"YulFunctionCall","src":"33721:35:29"},"nodeType":"YulIf","src":"33718:55:29"},{"nodeType":"YulVariableDeclaration","src":"33782:19:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"33798:2:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33792:5:29"},"nodeType":"YulFunctionCall","src":"33792:9:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"33786:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33810:61:29","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"33867:2:29"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"33839:27:29"},"nodeType":"YulFunctionCall","src":"33839:31:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"33823:15:29"},"nodeType":"YulFunctionCall","src":"33823:48:29"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"33814:5:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"33887:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"33894:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33880:6:29"},"nodeType":"YulFunctionCall","src":"33880:17:29"},"nodeType":"YulExpressionStatement","src":"33880:17:29"},{"body":{"nodeType":"YulBlock","src":"33943:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33952:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33955:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33945:6:29"},"nodeType":"YulFunctionCall","src":"33945:12:29"},"nodeType":"YulExpressionStatement","src":"33945:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"33920:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"33924:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33916:3:29"},"nodeType":"YulFunctionCall","src":"33916:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"33929:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33912:3:29"},"nodeType":"YulFunctionCall","src":"33912:20:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33934:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33909:2:29"},"nodeType":"YulFunctionCall","src":"33909:33:29"},"nodeType":"YulIf","src":"33906:53:29"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"34007:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"34011:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34003:3:29"},"nodeType":"YulFunctionCall","src":"34003:11:29"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"34020:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"34027:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34016:3:29"},"nodeType":"YulFunctionCall","src":"34016:14:29"},{"name":"_2","nodeType":"YulIdentifier","src":"34032:2:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"33968:34:29"},"nodeType":"YulFunctionCall","src":"33968:67:29"},"nodeType":"YulExpressionStatement","src":"33968:67:29"},{"nodeType":"YulAssignment","src":"34044:15:29","value":{"name":"array","nodeType":"YulIdentifier","src":"34054:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34044:6:29"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33474:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33485:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33497:6:29","type":""}],"src":"33418:647:29"},{"body":{"nodeType":"YulBlock","src":"34244:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34261:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34272:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34254:6:29"},"nodeType":"YulFunctionCall","src":"34254:21:29"},"nodeType":"YulExpressionStatement","src":"34254:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34295:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34306:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34291:3:29"},"nodeType":"YulFunctionCall","src":"34291:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"34311:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34284:6:29"},"nodeType":"YulFunctionCall","src":"34284:30:29"},"nodeType":"YulExpressionStatement","src":"34284:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34334:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34345:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34330:3:29"},"nodeType":"YulFunctionCall","src":"34330:18:29"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"34350:34:29","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34323:6:29"},"nodeType":"YulFunctionCall","src":"34323:62:29"},"nodeType":"YulExpressionStatement","src":"34323:62:29"},{"nodeType":"YulAssignment","src":"34394:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34406:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34417:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34402:3:29"},"nodeType":"YulFunctionCall","src":"34402:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34394:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34221:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34235:4:29","type":""}],"src":"34070:356:29"},{"body":{"nodeType":"YulBlock","src":"34648:338:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34665:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34680:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"34688:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34676:3:29"},"nodeType":"YulFunctionCall","src":"34676:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34658:6:29"},"nodeType":"YulFunctionCall","src":"34658:38:29"},"nodeType":"YulExpressionStatement","src":"34658:38:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34716:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34727:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34712:3:29"},"nodeType":"YulFunctionCall","src":"34712:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"34732:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34705:6:29"},"nodeType":"YulFunctionCall","src":"34705:31:29"},"nodeType":"YulExpressionStatement","src":"34705:31:29"},{"nodeType":"YulVariableDeclaration","src":"34745:59:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34776:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34788:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34799:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34784:3:29"},"nodeType":"YulFunctionCall","src":"34784:19:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"34759:16:29"},"nodeType":"YulFunctionCall","src":"34759:45:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"34749:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34824:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34835:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34820:3:29"},"nodeType":"YulFunctionCall","src":"34820:18:29"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34844:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34860:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"34864:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34856:3:29"},"nodeType":"YulFunctionCall","src":"34856:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"34868:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34852:3:29"},"nodeType":"YulFunctionCall","src":"34852:18:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34840:3:29"},"nodeType":"YulFunctionCall","src":"34840:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34813:6:29"},"nodeType":"YulFunctionCall","src":"34813:59:29"},"nodeType":"YulExpressionStatement","src":"34813:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34892:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34903:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34888:3:29"},"nodeType":"YulFunctionCall","src":"34888:18:29"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"34912:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"34920:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34908:3:29"},"nodeType":"YulFunctionCall","src":"34908:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34881:6:29"},"nodeType":"YulFunctionCall","src":"34881:50:29"},"nodeType":"YulExpressionStatement","src":"34881:50:29"},{"nodeType":"YulAssignment","src":"34940:40:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34965:6:29"},{"name":"tail_1","nodeType":"YulIdentifier","src":"34973:6:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"34948:16:29"},"nodeType":"YulFunctionCall","src":"34948:32:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34940:4:29"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34593:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34604:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34612:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34620:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34628:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34639:4:29","type":""}],"src":"34431:555:29"},{"body":{"nodeType":"YulBlock","src":"35072:103:29","statements":[{"body":{"nodeType":"YulBlock","src":"35118:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35127:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35130:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35120:6:29"},"nodeType":"YulFunctionCall","src":"35120:12:29"},"nodeType":"YulExpressionStatement","src":"35120:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35093:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"35102:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35089:3:29"},"nodeType":"YulFunctionCall","src":"35089:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"35114:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35085:3:29"},"nodeType":"YulFunctionCall","src":"35085:32:29"},"nodeType":"YulIf","src":"35082:52:29"},{"nodeType":"YulAssignment","src":"35143:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35159:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35153:5:29"},"nodeType":"YulFunctionCall","src":"35153:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"35143:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35038:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35049:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35061:6:29","type":""}],"src":"34991:184:29"},{"body":{"nodeType":"YulBlock","src":"35354:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35371:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35382:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35364:6:29"},"nodeType":"YulFunctionCall","src":"35364:21:29"},"nodeType":"YulExpressionStatement","src":"35364:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35405:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35416:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35401:3:29"},"nodeType":"YulFunctionCall","src":"35401:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"35421:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35394:6:29"},"nodeType":"YulFunctionCall","src":"35394:30:29"},"nodeType":"YulExpressionStatement","src":"35394:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35444:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35455:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35440:3:29"},"nodeType":"YulFunctionCall","src":"35440:18:29"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"35460:34:29","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35433:6:29"},"nodeType":"YulFunctionCall","src":"35433:62:29"},"nodeType":"YulExpressionStatement","src":"35433:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35515:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35526:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35511:3:29"},"nodeType":"YulFunctionCall","src":"35511:18:29"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"35531:16:29","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35504:6:29"},"nodeType":"YulFunctionCall","src":"35504:44:29"},"nodeType":"YulExpressionStatement","src":"35504:44:29"},{"nodeType":"YulAssignment","src":"35557:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35569:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35580:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35565:3:29"},"nodeType":"YulFunctionCall","src":"35565:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35557:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35331:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35345:4:29","type":""}],"src":"35180:410:29"},{"body":{"nodeType":"YulBlock","src":"35769:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35786:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35797:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35779:6:29"},"nodeType":"YulFunctionCall","src":"35779:21:29"},"nodeType":"YulExpressionStatement","src":"35779:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35820:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35831:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35816:3:29"},"nodeType":"YulFunctionCall","src":"35816:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"35836:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35809:6:29"},"nodeType":"YulFunctionCall","src":"35809:30:29"},"nodeType":"YulExpressionStatement","src":"35809:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35859:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35870:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35855:3:29"},"nodeType":"YulFunctionCall","src":"35855:18:29"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"35875:34:29","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35848:6:29"},"nodeType":"YulFunctionCall","src":"35848:62:29"},"nodeType":"YulExpressionStatement","src":"35848:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35930:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35941:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35926:3:29"},"nodeType":"YulFunctionCall","src":"35926:18:29"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"35946:11:29","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35919:6:29"},"nodeType":"YulFunctionCall","src":"35919:39:29"},"nodeType":"YulExpressionStatement","src":"35919:39:29"},{"nodeType":"YulAssignment","src":"35967:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35979:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35990:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35975:3:29"},"nodeType":"YulFunctionCall","src":"35975:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35967:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35746:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35760:4:29","type":""}],"src":"35595:405:29"},{"body":{"nodeType":"YulBlock","src":"36179:181:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36196:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36207:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36189:6:29"},"nodeType":"YulFunctionCall","src":"36189:21:29"},"nodeType":"YulExpressionStatement","src":"36189:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36230:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36241:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36226:3:29"},"nodeType":"YulFunctionCall","src":"36226:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"36246:2:29","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36219:6:29"},"nodeType":"YulFunctionCall","src":"36219:30:29"},"nodeType":"YulExpressionStatement","src":"36219:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36269:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36280:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36265:3:29"},"nodeType":"YulFunctionCall","src":"36265:18:29"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"36285:33:29","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36258:6:29"},"nodeType":"YulFunctionCall","src":"36258:61:29"},"nodeType":"YulExpressionStatement","src":"36258:61:29"},{"nodeType":"YulAssignment","src":"36328:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36340:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36351:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36336:3:29"},"nodeType":"YulFunctionCall","src":"36336:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36328:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36156:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36170:4:29","type":""}],"src":"36005:355:29"},{"body":{"nodeType":"YulBlock","src":"36446:170:29","statements":[{"body":{"nodeType":"YulBlock","src":"36492:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36501:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36504:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36494:6:29"},"nodeType":"YulFunctionCall","src":"36494:12:29"},"nodeType":"YulExpressionStatement","src":"36494:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36467:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"36476:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36463:3:29"},"nodeType":"YulFunctionCall","src":"36463:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"36488:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36459:3:29"},"nodeType":"YulFunctionCall","src":"36459:32:29"},"nodeType":"YulIf","src":"36456:52:29"},{"nodeType":"YulVariableDeclaration","src":"36517:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36536:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36530:5:29"},"nodeType":"YulFunctionCall","src":"36530:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"36521:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36580:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"36555:24:29"},"nodeType":"YulFunctionCall","src":"36555:31:29"},"nodeType":"YulExpressionStatement","src":"36555:31:29"},{"nodeType":"YulAssignment","src":"36595:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"36605:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36595:6:29"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36412:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36423:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36435:6:29","type":""}],"src":"36365:251:29"},{"body":{"nodeType":"YulBlock","src":"36795:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36812:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36823:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36805:6:29"},"nodeType":"YulFunctionCall","src":"36805:21:29"},"nodeType":"YulExpressionStatement","src":"36805:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36846:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36857:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36842:3:29"},"nodeType":"YulFunctionCall","src":"36842:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"36862:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36835:6:29"},"nodeType":"YulFunctionCall","src":"36835:30:29"},"nodeType":"YulExpressionStatement","src":"36835:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36885:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36896:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36881:3:29"},"nodeType":"YulFunctionCall","src":"36881:18:29"},{"hexValue":"546f6b656e42726967653a20746f6b656e2070616972206973206e6f74206372","kind":"string","nodeType":"YulLiteral","src":"36901:34:29","type":"","value":"TokenBrige: token pair is not cr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36874:6:29"},"nodeType":"YulFunctionCall","src":"36874:62:29"},"nodeType":"YulExpressionStatement","src":"36874:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36956:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36967:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36952:3:29"},"nodeType":"YulFunctionCall","src":"36952:18:29"},{"hexValue":"6561746564","kind":"string","nodeType":"YulLiteral","src":"36972:7:29","type":"","value":"eated"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36945:6:29"},"nodeType":"YulFunctionCall","src":"36945:35:29"},"nodeType":"YulExpressionStatement","src":"36945:35:29"},{"nodeType":"YulAssignment","src":"36989:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37001:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37012:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36997:3:29"},"nodeType":"YulFunctionCall","src":"36997:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36989:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3498c6375deb79bfc1c714cbc09be17a49e48160b4461223b50b0ea13a57c6d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36772:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36786:4:29","type":""}],"src":"36621:401:29"},{"body":{"nodeType":"YulBlock","src":"37087:117:29","statements":[{"nodeType":"YulAssignment","src":"37097:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37112:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37106:5:29"},"nodeType":"YulFunctionCall","src":"37106:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37097:5:29"}]},{"body":{"nodeType":"YulBlock","src":"37182:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37191:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37194:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37184:6:29"},"nodeType":"YulFunctionCall","src":"37184:12:29"},"nodeType":"YulExpressionStatement","src":"37184:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37141:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37152:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37167:3:29","type":"","value":"112"},{"kind":"number","nodeType":"YulLiteral","src":"37172:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37163:3:29"},"nodeType":"YulFunctionCall","src":"37163:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"37176:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37159:3:29"},"nodeType":"YulFunctionCall","src":"37159:19:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37148:3:29"},"nodeType":"YulFunctionCall","src":"37148:31:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37138:2:29"},"nodeType":"YulFunctionCall","src":"37138:42:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37131:6:29"},"nodeType":"YulFunctionCall","src":"37131:50:29"},"nodeType":"YulIf","src":"37128:70:29"}]},"name":"abi_decode_uint112_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37066:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37077:5:29","type":""}],"src":"37027:177:29"},{"body":{"nodeType":"YulBlock","src":"37323:336:29","statements":[{"body":{"nodeType":"YulBlock","src":"37369:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37378:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37381:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37371:6:29"},"nodeType":"YulFunctionCall","src":"37371:12:29"},"nodeType":"YulExpressionStatement","src":"37371:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"37344:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"37353:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37340:3:29"},"nodeType":"YulFunctionCall","src":"37340:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"37365:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37336:3:29"},"nodeType":"YulFunctionCall","src":"37336:32:29"},"nodeType":"YulIf","src":"37333:52:29"},{"nodeType":"YulAssignment","src":"37394:50:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37434:9:29"}],"functionName":{"name":"abi_decode_uint112_fromMemory","nodeType":"YulIdentifier","src":"37404:29:29"},"nodeType":"YulFunctionCall","src":"37404:40:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"37394:6:29"}]},{"nodeType":"YulAssignment","src":"37453:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37497:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37508:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37493:3:29"},"nodeType":"YulFunctionCall","src":"37493:18:29"}],"functionName":{"name":"abi_decode_uint112_fromMemory","nodeType":"YulIdentifier","src":"37463:29:29"},"nodeType":"YulFunctionCall","src":"37463:49:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"37453:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"37521:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37544:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37555:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37540:3:29"},"nodeType":"YulFunctionCall","src":"37540:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37534:5:29"},"nodeType":"YulFunctionCall","src":"37534:25:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"37525:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"37613:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37622:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37625:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37615:6:29"},"nodeType":"YulFunctionCall","src":"37615:12:29"},"nodeType":"YulExpressionStatement","src":"37615:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37581:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37592:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"37599:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37588:3:29"},"nodeType":"YulFunctionCall","src":"37588:22:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37578:2:29"},"nodeType":"YulFunctionCall","src":"37578:33:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37571:6:29"},"nodeType":"YulFunctionCall","src":"37571:41:29"},"nodeType":"YulIf","src":"37568:61:29"},{"nodeType":"YulAssignment","src":"37638:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"37648:5:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"37638:6:29"}]}]},"name":"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37273:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"37284:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"37296:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37304:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37312:6:29","type":""}],"src":"37209:450:29"},{"body":{"nodeType":"YulBlock","src":"37710:171:29","statements":[{"body":{"nodeType":"YulBlock","src":"37741:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37762:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37769:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"37774:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37765:3:29"},"nodeType":"YulFunctionCall","src":"37765:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37755:6:29"},"nodeType":"YulFunctionCall","src":"37755:31:29"},"nodeType":"YulExpressionStatement","src":"37755:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37806:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37809:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37799:6:29"},"nodeType":"YulFunctionCall","src":"37799:15:29"},"nodeType":"YulExpressionStatement","src":"37799:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37834:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37837:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37827:6:29"},"nodeType":"YulFunctionCall","src":"37827:15:29"},"nodeType":"YulExpressionStatement","src":"37827:15:29"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37730:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37723:6:29"},"nodeType":"YulFunctionCall","src":"37723:9:29"},"nodeType":"YulIf","src":"37720:132:29"},{"nodeType":"YulAssignment","src":"37861:14:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37870:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"37873:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37866:3:29"},"nodeType":"YulFunctionCall","src":"37866:9:29"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"37861:1:29"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37695:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"37698:1:29","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"37704:1:29","type":""}],"src":"37664:217:29"},{"body":{"nodeType":"YulBlock","src":"37964:177:29","statements":[{"body":{"nodeType":"YulBlock","src":"38010:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38019:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38022:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38012:6:29"},"nodeType":"YulFunctionCall","src":"38012:12:29"},"nodeType":"YulExpressionStatement","src":"38012:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"37985:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"37994:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37981:3:29"},"nodeType":"YulFunctionCall","src":"37981:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"38006:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37977:3:29"},"nodeType":"YulFunctionCall","src":"37977:32:29"},"nodeType":"YulIf","src":"37974:52:29"},{"nodeType":"YulVariableDeclaration","src":"38035:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38061:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38048:12:29"},"nodeType":"YulFunctionCall","src":"38048:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"38039:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38105:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"38080:24:29"},"nodeType":"YulFunctionCall","src":"38080:31:29"},"nodeType":"YulExpressionStatement","src":"38080:31:29"},{"nodeType":"YulAssignment","src":"38120:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"38130:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"38120:6:29"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37930:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"37941:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"37953:6:29","type":""}],"src":"37886:255:29"},{"body":{"nodeType":"YulBlock","src":"38320:226:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38337:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38348:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38330:6:29"},"nodeType":"YulFunctionCall","src":"38330:21:29"},"nodeType":"YulExpressionStatement","src":"38330:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38371:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38382:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38367:3:29"},"nodeType":"YulFunctionCall","src":"38367:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"38387:2:29","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38360:6:29"},"nodeType":"YulFunctionCall","src":"38360:30:29"},"nodeType":"YulExpressionStatement","src":"38360:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38410:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38421:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38406:3:29"},"nodeType":"YulFunctionCall","src":"38406:18:29"},{"hexValue":"546f6b656e4272696467653a20696e76616c696420736f757263652063686169","kind":"string","nodeType":"YulLiteral","src":"38426:34:29","type":"","value":"TokenBridge: invalid source chai"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38399:6:29"},"nodeType":"YulFunctionCall","src":"38399:62:29"},"nodeType":"YulExpressionStatement","src":"38399:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38481:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38492:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38477:3:29"},"nodeType":"YulFunctionCall","src":"38477:18:29"},{"hexValue":"6e206964","kind":"string","nodeType":"YulLiteral","src":"38497:6:29","type":"","value":"n id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38470:6:29"},"nodeType":"YulFunctionCall","src":"38470:34:29"},"nodeType":"YulExpressionStatement","src":"38470:34:29"},{"nodeType":"YulAssignment","src":"38513:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38525:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38536:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38521:3:29"},"nodeType":"YulFunctionCall","src":"38521:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38513:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38297:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38311:4:29","type":""}],"src":"38146:400:29"},{"body":{"nodeType":"YulBlock","src":"38725:238:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38742:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38753:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38735:6:29"},"nodeType":"YulFunctionCall","src":"38735:21:29"},"nodeType":"YulExpressionStatement","src":"38735:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38776:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38787:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38772:3:29"},"nodeType":"YulFunctionCall","src":"38772:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"38792:2:29","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38765:6:29"},"nodeType":"YulFunctionCall","src":"38765:30:29"},"nodeType":"YulExpressionStatement","src":"38765:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38815:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38826:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38811:3:29"},"nodeType":"YulFunctionCall","src":"38811:18:29"},{"hexValue":"546f6b656e4272696467653a20746f6b656e4f75742068617320696e76616c69","kind":"string","nodeType":"YulLiteral","src":"38831:34:29","type":"","value":"TokenBridge: tokenOut has invali"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38804:6:29"},"nodeType":"YulFunctionCall","src":"38804:62:29"},"nodeType":"YulExpressionStatement","src":"38804:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38886:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38897:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38882:3:29"},"nodeType":"YulFunctionCall","src":"38882:18:29"},{"hexValue":"64206c697175696469747920706f6f6c","kind":"string","nodeType":"YulLiteral","src":"38902:18:29","type":"","value":"d liquidity pool"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38875:6:29"},"nodeType":"YulFunctionCall","src":"38875:46:29"},"nodeType":"YulExpressionStatement","src":"38875:46:29"},{"nodeType":"YulAssignment","src":"38930:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38942:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38953:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38938:3:29"},"nodeType":"YulFunctionCall","src":"38938:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38930:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ea1dad71f32d7c074acbeb7f7171c53f6a2b1523820b96d46aa919986cd83ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38702:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38716:4:29","type":""}],"src":"38551:412:29"},{"body":{"nodeType":"YulBlock","src":"39142:225:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39159:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39170:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39152:6:29"},"nodeType":"YulFunctionCall","src":"39152:21:29"},"nodeType":"YulExpressionStatement","src":"39152:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39193:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39204:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39189:3:29"},"nodeType":"YulFunctionCall","src":"39189:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"39209:2:29","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39182:6:29"},"nodeType":"YulFunctionCall","src":"39182:30:29"},"nodeType":"YulExpressionStatement","src":"39182:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39232:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39243:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39228:3:29"},"nodeType":"YulFunctionCall","src":"39228:18:29"},{"hexValue":"546f6b656e4272696467653a20746f6b656e206973206e6f7420737570706f72","kind":"string","nodeType":"YulLiteral","src":"39248:34:29","type":"","value":"TokenBridge: token is not suppor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39221:6:29"},"nodeType":"YulFunctionCall","src":"39221:62:29"},"nodeType":"YulExpressionStatement","src":"39221:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39303:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39314:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39299:3:29"},"nodeType":"YulFunctionCall","src":"39299:18:29"},{"hexValue":"746564","kind":"string","nodeType":"YulLiteral","src":"39319:5:29","type":"","value":"ted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39292:6:29"},"nodeType":"YulFunctionCall","src":"39292:33:29"},"nodeType":"YulExpressionStatement","src":"39292:33:29"},{"nodeType":"YulAssignment","src":"39334:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39346:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39357:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39342:3:29"},"nodeType":"YulFunctionCall","src":"39342:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39334:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39119:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39133:4:29","type":""}],"src":"38968:399:29"},{"body":{"nodeType":"YulBlock","src":"39546:225:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39563:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39574:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39556:6:29"},"nodeType":"YulFunctionCall","src":"39556:21:29"},"nodeType":"YulExpressionStatement","src":"39556:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39597:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39608:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39593:3:29"},"nodeType":"YulFunctionCall","src":"39593:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"39613:2:29","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39586:6:29"},"nodeType":"YulFunctionCall","src":"39586:30:29"},"nodeType":"YulExpressionStatement","src":"39586:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39636:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39647:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39632:3:29"},"nodeType":"YulFunctionCall","src":"39632:18:29"},{"hexValue":"546f6b656e4272696467653a20696e73756666696369656e74206c6971756964","kind":"string","nodeType":"YulLiteral","src":"39652:34:29","type":"","value":"TokenBridge: insufficient liquid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39625:6:29"},"nodeType":"YulFunctionCall","src":"39625:62:29"},"nodeType":"YulExpressionStatement","src":"39625:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39707:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39718:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39703:3:29"},"nodeType":"YulFunctionCall","src":"39703:18:29"},{"hexValue":"697479","kind":"string","nodeType":"YulLiteral","src":"39723:5:29","type":"","value":"ity"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39696:6:29"},"nodeType":"YulFunctionCall","src":"39696:33:29"},"nodeType":"YulExpressionStatement","src":"39696:33:29"},{"nodeType":"YulAssignment","src":"39738:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39750:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39761:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39746:3:29"},"nodeType":"YulFunctionCall","src":"39746:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39738:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39523:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39537:4:29","type":""}],"src":"39372:399:29"},{"body":{"nodeType":"YulBlock","src":"39808:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39825:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39832:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"39837:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39828:3:29"},"nodeType":"YulFunctionCall","src":"39828:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39818:6:29"},"nodeType":"YulFunctionCall","src":"39818:31:29"},"nodeType":"YulExpressionStatement","src":"39818:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39865:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"39868:4:29","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39858:6:29"},"nodeType":"YulFunctionCall","src":"39858:15:29"},"nodeType":"YulExpressionStatement","src":"39858:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39889:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39892:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"39882:6:29"},"nodeType":"YulFunctionCall","src":"39882:15:29"},"nodeType":"YulExpressionStatement","src":"39882:15:29"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"39776:127:29"},{"body":{"nodeType":"YulBlock","src":"40082:232:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40099:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40110:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40092:6:29"},"nodeType":"YulFunctionCall","src":"40092:21:29"},"nodeType":"YulExpressionStatement","src":"40092:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40133:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40144:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40129:3:29"},"nodeType":"YulFunctionCall","src":"40129:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"40149:2:29","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40122:6:29"},"nodeType":"YulFunctionCall","src":"40122:30:29"},"nodeType":"YulExpressionStatement","src":"40122:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40172:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40183:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40168:3:29"},"nodeType":"YulFunctionCall","src":"40168:18:29"},{"hexValue":"546f6b656e4272696467653a205f61646170746572506172616d73206d757374","kind":"string","nodeType":"YulLiteral","src":"40188:34:29","type":"","value":"TokenBridge: _adapterParams must"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40161:6:29"},"nodeType":"YulFunctionCall","src":"40161:62:29"},"nodeType":"YulExpressionStatement","src":"40161:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40243:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40254:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40239:3:29"},"nodeType":"YulFunctionCall","src":"40239:18:29"},{"hexValue":"20626520656d7074792e","kind":"string","nodeType":"YulLiteral","src":"40259:12:29","type":"","value":" be empty."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40232:6:29"},"nodeType":"YulFunctionCall","src":"40232:40:29"},"nodeType":"YulExpressionStatement","src":"40232:40:29"},{"nodeType":"YulAssignment","src":"40281:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40293:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40304:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40289:3:29"},"nodeType":"YulFunctionCall","src":"40289:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40281:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40059:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40073:4:29","type":""}],"src":"39908:406:29"},{"body":{"nodeType":"YulBlock","src":"40518:203:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40535:3:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40548:3:29","type":"","value":"248"},{"name":"value0","nodeType":"YulIdentifier","src":"40553:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"40544:3:29"},"nodeType":"YulFunctionCall","src":"40544:16:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40566:3:29","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"40571:3:29","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"40562:3:29"},"nodeType":"YulFunctionCall","src":"40562:13:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40540:3:29"},"nodeType":"YulFunctionCall","src":"40540:36:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40528:6:29"},"nodeType":"YulFunctionCall","src":"40528:49:29"},"nodeType":"YulExpressionStatement","src":"40528:49:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40597:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"40602:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40593:3:29"},"nodeType":"YulFunctionCall","src":"40593:11:29"},{"name":"value1","nodeType":"YulIdentifier","src":"40606:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40586:6:29"},"nodeType":"YulFunctionCall","src":"40586:27:29"},"nodeType":"YulExpressionStatement","src":"40586:27:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40633:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"40638:2:29","type":"","value":"33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40629:3:29"},"nodeType":"YulFunctionCall","src":"40629:12:29"},{"name":"value2","nodeType":"YulIdentifier","src":"40643:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40622:6:29"},"nodeType":"YulFunctionCall","src":"40622:28:29"},"nodeType":"YulExpressionStatement","src":"40622:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40670:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"40675:2:29","type":"","value":"65"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40666:3:29"},"nodeType":"YulFunctionCall","src":"40666:12:29"},{"name":"value3","nodeType":"YulIdentifier","src":"40680:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40659:6:29"},"nodeType":"YulFunctionCall","src":"40659:28:29"},"nodeType":"YulExpressionStatement","src":"40659:28:29"},{"nodeType":"YulAssignment","src":"40696:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40707:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"40712:2:29","type":"","value":"97"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40703:3:29"},"nodeType":"YulFunctionCall","src":"40703:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40696:3:29"}]}]},"name":"abi_encode_tuple_packed_t_uint8_t_uint256_t_bytes32_t_bytes32__to_t_uint8_t_uint256_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40470:3:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"40475:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40483:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40491:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40499:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40510:3:29","type":""}],"src":"40319:402:29"},{"body":{"nodeType":"YulBlock","src":"40900:164:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40917:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40928:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40910:6:29"},"nodeType":"YulFunctionCall","src":"40910:21:29"},"nodeType":"YulExpressionStatement","src":"40910:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40951:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40962:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40947:3:29"},"nodeType":"YulFunctionCall","src":"40947:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"40967:2:29","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40940:6:29"},"nodeType":"YulFunctionCall","src":"40940:30:29"},"nodeType":"YulExpressionStatement","src":"40940:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40990:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41001:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40986:3:29"},"nodeType":"YulFunctionCall","src":"40986:18:29"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"41006:16:29","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40979:6:29"},"nodeType":"YulFunctionCall","src":"40979:44:29"},"nodeType":"YulExpressionStatement","src":"40979:44:29"},{"nodeType":"YulAssignment","src":"41032:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41044:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41055:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41040:3:29"},"nodeType":"YulFunctionCall","src":"41040:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41032:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40877:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40891:4:29","type":""}],"src":"40726:338:29"},{"body":{"nodeType":"YulBlock","src":"41243:167:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41260:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41271:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41253:6:29"},"nodeType":"YulFunctionCall","src":"41253:21:29"},"nodeType":"YulExpressionStatement","src":"41253:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41294:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41305:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41290:3:29"},"nodeType":"YulFunctionCall","src":"41290:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"41310:2:29","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41283:6:29"},"nodeType":"YulFunctionCall","src":"41283:30:29"},"nodeType":"YulExpressionStatement","src":"41283:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41333:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41344:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41329:3:29"},"nodeType":"YulFunctionCall","src":"41329:18:29"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"41349:19:29","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41322:6:29"},"nodeType":"YulFunctionCall","src":"41322:47:29"},"nodeType":"YulExpressionStatement","src":"41322:47:29"},{"nodeType":"YulAssignment","src":"41378:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41390:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41401:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41386:3:29"},"nodeType":"YulFunctionCall","src":"41386:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41378:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41220:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41234:4:29","type":""}],"src":"41069:341:29"},{"body":{"nodeType":"YulBlock","src":"41589:233:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41606:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41617:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41599:6:29"},"nodeType":"YulFunctionCall","src":"41599:21:29"},"nodeType":"YulExpressionStatement","src":"41599:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41640:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41651:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41636:3:29"},"nodeType":"YulFunctionCall","src":"41636:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"41656:2:29","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41629:6:29"},"nodeType":"YulFunctionCall","src":"41629:30:29"},"nodeType":"YulExpressionStatement","src":"41629:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41679:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41690:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41675:3:29"},"nodeType":"YulFunctionCall","src":"41675:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"41695:34:29","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41668:6:29"},"nodeType":"YulFunctionCall","src":"41668:62:29"},"nodeType":"YulExpressionStatement","src":"41668:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41750:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41761:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41746:3:29"},"nodeType":"YulFunctionCall","src":"41746:18:29"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"41766:13:29","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41739:6:29"},"nodeType":"YulFunctionCall","src":"41739:41:29"},"nodeType":"YulExpressionStatement","src":"41739:41:29"},{"nodeType":"YulAssignment","src":"41789:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41801:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"41812:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41797:3:29"},"nodeType":"YulFunctionCall","src":"41797:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41789:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41566:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41580:4:29","type":""}],"src":"41415:407:29"},{"body":{"nodeType":"YulBlock","src":"41964:150:29","statements":[{"nodeType":"YulVariableDeclaration","src":"41974:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41994:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41988:5:29"},"nodeType":"YulFunctionCall","src":"41988:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41978:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42049:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"42057:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42045:3:29"},"nodeType":"YulFunctionCall","src":"42045:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"42064:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"42069:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"42010:34:29"},"nodeType":"YulFunctionCall","src":"42010:66:29"},"nodeType":"YulExpressionStatement","src":"42010:66:29"},{"nodeType":"YulAssignment","src":"42085:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42096:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"42101:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42092:3:29"},"nodeType":"YulFunctionCall","src":"42092:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42085:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41940:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41945:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41956:3:29","type":""}],"src":"41827:287:29"},{"body":{"nodeType":"YulBlock","src":"42382:453:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42399:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42414:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"42422:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42410:3:29"},"nodeType":"YulFunctionCall","src":"42410:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42392:6:29"},"nodeType":"YulFunctionCall","src":"42392:38:29"},"nodeType":"YulExpressionStatement","src":"42392:38:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42450:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"42461:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42446:3:29"},"nodeType":"YulFunctionCall","src":"42446:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"42466:3:29","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42439:6:29"},"nodeType":"YulFunctionCall","src":"42439:31:29"},"nodeType":"YulExpressionStatement","src":"42439:31:29"},{"nodeType":"YulVariableDeclaration","src":"42479:59:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42510:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42522:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"42533:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42518:3:29"},"nodeType":"YulFunctionCall","src":"42518:19:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"42493:16:29"},"nodeType":"YulFunctionCall","src":"42493:45:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"42483:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42558:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"42569:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42554:3:29"},"nodeType":"YulFunctionCall","src":"42554:18:29"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"42578:6:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42594:2:29","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"42598:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"42590:3:29"},"nodeType":"YulFunctionCall","src":"42590:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"42602:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42586:3:29"},"nodeType":"YulFunctionCall","src":"42586:18:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42574:3:29"},"nodeType":"YulFunctionCall","src":"42574:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42547:6:29"},"nodeType":"YulFunctionCall","src":"42547:59:29"},"nodeType":"YulExpressionStatement","src":"42547:59:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42626:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"42637:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42622:3:29"},"nodeType":"YulFunctionCall","src":"42622:18:29"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"42646:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"42654:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42642:3:29"},"nodeType":"YulFunctionCall","src":"42642:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42615:6:29"},"nodeType":"YulFunctionCall","src":"42615:50:29"},"nodeType":"YulExpressionStatement","src":"42615:50:29"},{"nodeType":"YulVariableDeclaration","src":"42674:46:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"42705:6:29"},{"name":"tail_1","nodeType":"YulIdentifier","src":"42713:6:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"42688:16:29"},"nodeType":"YulFunctionCall","src":"42688:32:29"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"42678:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42740:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"42751:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42736:3:29"},"nodeType":"YulFunctionCall","src":"42736:19:29"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"42761:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"42769:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42757:3:29"},"nodeType":"YulFunctionCall","src":"42757:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42729:6:29"},"nodeType":"YulFunctionCall","src":"42729:51:29"},"nodeType":"YulExpressionStatement","src":"42729:51:29"},{"nodeType":"YulAssignment","src":"42789:40:29","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"42814:6:29"},{"name":"tail_2","nodeType":"YulIdentifier","src":"42822:6:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"42797:16:29"},"nodeType":"YulFunctionCall","src":"42797:32:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42789:4:29"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42319:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"42330:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"42338:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42346:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42354:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42362:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42373:4:29","type":""}],"src":"42119:716:29"},{"body":{"nodeType":"YulBlock","src":"42918:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"42964:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42973:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42976:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42966:6:29"},"nodeType":"YulFunctionCall","src":"42966:12:29"},"nodeType":"YulExpressionStatement","src":"42966:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"42939:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"42948:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42935:3:29"},"nodeType":"YulFunctionCall","src":"42935:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"42960:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"42931:3:29"},"nodeType":"YulFunctionCall","src":"42931:32:29"},"nodeType":"YulIf","src":"42928:52:29"},{"nodeType":"YulVariableDeclaration","src":"42989:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43008:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43002:5:29"},"nodeType":"YulFunctionCall","src":"43002:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"42993:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43049:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"43027:21:29"},"nodeType":"YulFunctionCall","src":"43027:28:29"},"nodeType":"YulExpressionStatement","src":"43027:28:29"},{"nodeType":"YulAssignment","src":"43064:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"43074:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"43064:6:29"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42884:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"42895:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"42907:6:29","type":""}],"src":"42840:245:29"},{"body":{"nodeType":"YulBlock","src":"43264:232:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43281:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43292:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43274:6:29"},"nodeType":"YulFunctionCall","src":"43274:21:29"},"nodeType":"YulExpressionStatement","src":"43274:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43315:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43326:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43311:3:29"},"nodeType":"YulFunctionCall","src":"43311:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"43331:2:29","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43304:6:29"},"nodeType":"YulFunctionCall","src":"43304:30:29"},"nodeType":"YulExpressionStatement","src":"43304:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43354:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43365:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43350:3:29"},"nodeType":"YulFunctionCall","src":"43350:18:29"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"43370:34:29","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43343:6:29"},"nodeType":"YulFunctionCall","src":"43343:62:29"},"nodeType":"YulExpressionStatement","src":"43343:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43425:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43436:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43421:3:29"},"nodeType":"YulFunctionCall","src":"43421:18:29"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"43441:12:29","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43414:6:29"},"nodeType":"YulFunctionCall","src":"43414:40:29"},"nodeType":"YulExpressionStatement","src":"43414:40:29"},{"nodeType":"YulAssignment","src":"43463:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43475:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43486:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43471:3:29"},"nodeType":"YulFunctionCall","src":"43471:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43463:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43241:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43255:4:29","type":""}],"src":"43090:406:29"},{"body":{"nodeType":"YulBlock","src":"43675:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43692:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43703:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43685:6:29"},"nodeType":"YulFunctionCall","src":"43685:21:29"},"nodeType":"YulExpressionStatement","src":"43685:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43726:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43737:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43722:3:29"},"nodeType":"YulFunctionCall","src":"43722:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"43742:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43715:6:29"},"nodeType":"YulFunctionCall","src":"43715:30:29"},"nodeType":"YulExpressionStatement","src":"43715:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43765:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43776:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43761:3:29"},"nodeType":"YulFunctionCall","src":"43761:18:29"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"43781:34:29","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43754:6:29"},"nodeType":"YulFunctionCall","src":"43754:62:29"},"nodeType":"YulExpressionStatement","src":"43754:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43836:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43847:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43832:3:29"},"nodeType":"YulFunctionCall","src":"43832:18:29"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"43852:15:29","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43825:6:29"},"nodeType":"YulFunctionCall","src":"43825:43:29"},"nodeType":"YulExpressionStatement","src":"43825:43:29"},{"nodeType":"YulAssignment","src":"43877:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43889:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43900:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43885:3:29"},"nodeType":"YulFunctionCall","src":"43885:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43877:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43652:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43666:4:29","type":""}],"src":"43501:409:29"},{"body":{"nodeType":"YulBlock","src":"44072:218:29","statements":[{"nodeType":"YulAssignment","src":"44082:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44094:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44105:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44090:3:29"},"nodeType":"YulFunctionCall","src":"44090:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44082:4:29"}]},{"nodeType":"YulVariableDeclaration","src":"44117:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44135:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"44140:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"44131:3:29"},"nodeType":"YulFunctionCall","src":"44131:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"44144:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44127:3:29"},"nodeType":"YulFunctionCall","src":"44127:19:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"44121:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44162:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44177:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"44185:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44173:3:29"},"nodeType":"YulFunctionCall","src":"44173:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44155:6:29"},"nodeType":"YulFunctionCall","src":"44155:34:29"},"nodeType":"YulExpressionStatement","src":"44155:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44209:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44220:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44205:3:29"},"nodeType":"YulFunctionCall","src":"44205:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44229:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"44237:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44225:3:29"},"nodeType":"YulFunctionCall","src":"44225:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44198:6:29"},"nodeType":"YulFunctionCall","src":"44198:43:29"},"nodeType":"YulExpressionStatement","src":"44198:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44261:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44272:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44257:3:29"},"nodeType":"YulFunctionCall","src":"44257:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"44277:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44250:6:29"},"nodeType":"YulFunctionCall","src":"44250:34:29"},"nodeType":"YulExpressionStatement","src":"44250:34:29"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44025:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"44036:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44044:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44052:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44063:4:29","type":""}],"src":"43915:375:29"},{"body":{"nodeType":"YulBlock","src":"44469:238:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44486:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44497:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44479:6:29"},"nodeType":"YulFunctionCall","src":"44479:21:29"},"nodeType":"YulExpressionStatement","src":"44479:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44520:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44531:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44516:3:29"},"nodeType":"YulFunctionCall","src":"44516:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"44536:2:29","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44509:6:29"},"nodeType":"YulFunctionCall","src":"44509:30:29"},"nodeType":"YulExpressionStatement","src":"44509:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44559:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44570:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44555:3:29"},"nodeType":"YulFunctionCall","src":"44555:18:29"},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"44575:34:29","type":"","value":"LzApp: destination chain is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44548:6:29"},"nodeType":"YulFunctionCall","src":"44548:62:29"},"nodeType":"YulExpressionStatement","src":"44548:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44630:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44641:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44626:3:29"},"nodeType":"YulFunctionCall","src":"44626:18:29"},{"hexValue":"61207472757374656420736f75726365","kind":"string","nodeType":"YulLiteral","src":"44646:18:29","type":"","value":"a trusted source"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44619:6:29"},"nodeType":"YulFunctionCall","src":"44619:46:29"},"nodeType":"YulExpressionStatement","src":"44619:46:29"},{"nodeType":"YulAssignment","src":"44674:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44686:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44697:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44682:3:29"},"nodeType":"YulFunctionCall","src":"44682:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44674:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44446:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44460:4:29","type":""}],"src":"44295:412:29"},{"body":{"nodeType":"YulBlock","src":"45021:528:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45038:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45053:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"45061:6:29","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45049:3:29"},"nodeType":"YulFunctionCall","src":"45049:19:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45031:6:29"},"nodeType":"YulFunctionCall","src":"45031:38:29"},"nodeType":"YulExpressionStatement","src":"45031:38:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45089:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45100:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45085:3:29"},"nodeType":"YulFunctionCall","src":"45085:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"45105:3:29","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45078:6:29"},"nodeType":"YulFunctionCall","src":"45078:31:29"},"nodeType":"YulExpressionStatement","src":"45078:31:29"},{"nodeType":"YulVariableDeclaration","src":"45118:59:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45149:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45161:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45172:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45157:3:29"},"nodeType":"YulFunctionCall","src":"45157:19:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"45132:16:29"},"nodeType":"YulFunctionCall","src":"45132:45:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"45122:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45197:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45208:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45193:3:29"},"nodeType":"YulFunctionCall","src":"45193:18:29"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"45217:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"45225:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45213:3:29"},"nodeType":"YulFunctionCall","src":"45213:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45186:6:29"},"nodeType":"YulFunctionCall","src":"45186:50:29"},"nodeType":"YulExpressionStatement","src":"45186:50:29"},{"nodeType":"YulVariableDeclaration","src":"45245:46:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"45276:6:29"},{"name":"tail_1","nodeType":"YulIdentifier","src":"45284:6:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"45259:16:29"},"nodeType":"YulFunctionCall","src":"45259:32:29"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"45249:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"45300:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45318:3:29","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"45323:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"45314:3:29"},"nodeType":"YulFunctionCall","src":"45314:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"45327:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45310:3:29"},"nodeType":"YulFunctionCall","src":"45310:19:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"45304:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45349:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45360:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45345:3:29"},"nodeType":"YulFunctionCall","src":"45345:18:29"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"45369:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"45377:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45365:3:29"},"nodeType":"YulFunctionCall","src":"45365:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45338:6:29"},"nodeType":"YulFunctionCall","src":"45338:43:29"},"nodeType":"YulExpressionStatement","src":"45338:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45401:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45412:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45397:3:29"},"nodeType":"YulFunctionCall","src":"45397:19:29"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"45422:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"45430:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45418:3:29"},"nodeType":"YulFunctionCall","src":"45418:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45390:6:29"},"nodeType":"YulFunctionCall","src":"45390:44:29"},"nodeType":"YulExpressionStatement","src":"45390:44:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45454:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45465:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45450:3:29"},"nodeType":"YulFunctionCall","src":"45450:19:29"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"45475:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"45483:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45471:3:29"},"nodeType":"YulFunctionCall","src":"45471:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45443:6:29"},"nodeType":"YulFunctionCall","src":"45443:51:29"},"nodeType":"YulExpressionStatement","src":"45443:51:29"},{"nodeType":"YulAssignment","src":"45503:40:29","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"45528:6:29"},{"name":"tail_2","nodeType":"YulIdentifier","src":"45536:6:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"45511:16:29"},"nodeType":"YulFunctionCall","src":"45511:32:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45503:4:29"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44950:9:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"44961:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"44969:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"44977:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"44985:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44993:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45001:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45012:4:29","type":""}],"src":"44712:837:29"},{"body":{"nodeType":"YulBlock","src":"45728:225:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45745:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45756:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45738:6:29"},"nodeType":"YulFunctionCall","src":"45738:21:29"},"nodeType":"YulExpressionStatement","src":"45738:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45779:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45790:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45775:3:29"},"nodeType":"YulFunctionCall","src":"45775:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"45795:2:29","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45768:6:29"},"nodeType":"YulFunctionCall","src":"45768:30:29"},"nodeType":"YulExpressionStatement","src":"45768:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45818:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45829:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45814:3:29"},"nodeType":"YulFunctionCall","src":"45814:18:29"},{"hexValue":"546f6b656e4272696467653a20696e76616c6964207061796c6f6164206c656e","kind":"string","nodeType":"YulLiteral","src":"45834:34:29","type":"","value":"TokenBridge: invalid payload len"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45807:6:29"},"nodeType":"YulFunctionCall","src":"45807:62:29"},"nodeType":"YulExpressionStatement","src":"45807:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45889:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45900:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45885:3:29"},"nodeType":"YulFunctionCall","src":"45885:18:29"},{"hexValue":"677468","kind":"string","nodeType":"YulLiteral","src":"45905:5:29","type":"","value":"gth"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45878:6:29"},"nodeType":"YulFunctionCall","src":"45878:33:29"},"nodeType":"YulExpressionStatement","src":"45878:33:29"},{"nodeType":"YulAssignment","src":"45920:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45932:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45943:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45928:3:29"},"nodeType":"YulFunctionCall","src":"45928:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45920:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45705:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45719:4:29","type":""}],"src":"45554:399:29"},{"body":{"nodeType":"YulBlock","src":"45990:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46007:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46014:3:29","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"46019:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"46010:3:29"},"nodeType":"YulFunctionCall","src":"46010:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46000:6:29"},"nodeType":"YulFunctionCall","src":"46000:31:29"},"nodeType":"YulExpressionStatement","src":"46000:31:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46047:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"46050:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46040:6:29"},"nodeType":"YulFunctionCall","src":"46040:15:29"},"nodeType":"YulExpressionStatement","src":"46040:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46071:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46074:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46064:6:29"},"nodeType":"YulFunctionCall","src":"46064:15:29"},"nodeType":"YulExpressionStatement","src":"46064:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"45958:127:29"},{"body":{"nodeType":"YulBlock","src":"46264:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46281:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"46292:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46274:6:29"},"nodeType":"YulFunctionCall","src":"46274:21:29"},"nodeType":"YulExpressionStatement","src":"46274:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46315:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"46326:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46311:3:29"},"nodeType":"YulFunctionCall","src":"46311:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"46331:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46304:6:29"},"nodeType":"YulFunctionCall","src":"46304:30:29"},"nodeType":"YulExpressionStatement","src":"46304:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46354:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"46365:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46350:3:29"},"nodeType":"YulFunctionCall","src":"46350:18:29"},{"hexValue":"546f6b656e4272696467653a20756e6b6e6f776e207061636b65742074797065","kind":"string","nodeType":"YulLiteral","src":"46370:34:29","type":"","value":"TokenBridge: unknown packet type"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46343:6:29"},"nodeType":"YulFunctionCall","src":"46343:62:29"},"nodeType":"YulExpressionStatement","src":"46343:62:29"},{"nodeType":"YulAssignment","src":"46414:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46426:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"46437:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46422:3:29"},"nodeType":"YulFunctionCall","src":"46422:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46414:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46241:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46255:4:29","type":""}],"src":"46090:356:29"},{"body":{"nodeType":"YulBlock","src":"46515:358:29","statements":[{"nodeType":"YulVariableDeclaration","src":"46525:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"46540:1:29","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"46529:7:29","type":""}]},{"nodeType":"YulAssignment","src":"46550:16:29","value":{"name":"power_1","nodeType":"YulIdentifier","src":"46559:7:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"46550:5:29"}]},{"nodeType":"YulAssignment","src":"46575:13:29","value":{"name":"_base","nodeType":"YulIdentifier","src":"46583:5:29"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"46575:4:29"}]},{"body":{"nodeType":"YulBlock","src":"46639:228:29","statements":[{"body":{"nodeType":"YulBlock","src":"46684:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"46686:16:29"},"nodeType":"YulFunctionCall","src":"46686:18:29"},"nodeType":"YulExpressionStatement","src":"46686:18:29"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"46659:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46673:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"46669:3:29"},"nodeType":"YulFunctionCall","src":"46669:6:29"},{"name":"base","nodeType":"YulIdentifier","src":"46677:4:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"46665:3:29"},"nodeType":"YulFunctionCall","src":"46665:17:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46656:2:29"},"nodeType":"YulFunctionCall","src":"46656:27:29"},"nodeType":"YulIf","src":"46653:53:29"},{"body":{"nodeType":"YulBlock","src":"46745:29:29","statements":[{"nodeType":"YulAssignment","src":"46747:25:29","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"46760:5:29"},{"name":"base","nodeType":"YulIdentifier","src":"46767:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"46756:3:29"},"nodeType":"YulFunctionCall","src":"46756:16:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"46747:5:29"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"46726:8:29"},{"name":"power_1","nodeType":"YulIdentifier","src":"46736:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"46722:3:29"},"nodeType":"YulFunctionCall","src":"46722:22:29"},"nodeType":"YulIf","src":"46719:55:29"},{"nodeType":"YulAssignment","src":"46787:23:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"46799:4:29"},{"name":"base","nodeType":"YulIdentifier","src":"46805:4:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"46795:3:29"},"nodeType":"YulFunctionCall","src":"46795:15:29"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"46787:4:29"}]},{"nodeType":"YulAssignment","src":"46823:34:29","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"46839:7:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"46848:8:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"46835:3:29"},"nodeType":"YulFunctionCall","src":"46835:22:29"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"46823:8:29"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"46608:8:29"},{"name":"power_1","nodeType":"YulIdentifier","src":"46618:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46605:2:29"},"nodeType":"YulFunctionCall","src":"46605:21:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"46627:3:29","statements":[]},"pre":{"nodeType":"YulBlock","src":"46601:3:29","statements":[]},"src":"46597:270:29"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"46479:5:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"46486:8:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"46499:5:29","type":""},{"name":"base","nodeType":"YulTypedName","src":"46506:4:29","type":""}],"src":"46451:422:29"},{"body":{"nodeType":"YulBlock","src":"46937:747:29","statements":[{"body":{"nodeType":"YulBlock","src":"46975:52:29","statements":[{"nodeType":"YulAssignment","src":"46989:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"46998:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"46989:5:29"}]},{"nodeType":"YulLeave","src":"47012:5:29"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"46957:8:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46950:6:29"},"nodeType":"YulFunctionCall","src":"46950:16:29"},"nodeType":"YulIf","src":"46947:80:29"},{"body":{"nodeType":"YulBlock","src":"47060:52:29","statements":[{"nodeType":"YulAssignment","src":"47074:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"47083:1:29","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"47074:5:29"}]},{"nodeType":"YulLeave","src":"47097:5:29"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"47046:4:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"47039:6:29"},"nodeType":"YulFunctionCall","src":"47039:12:29"},"nodeType":"YulIf","src":"47036:76:29"},{"cases":[{"body":{"nodeType":"YulBlock","src":"47148:52:29","statements":[{"nodeType":"YulAssignment","src":"47162:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"47171:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"47162:5:29"}]},{"nodeType":"YulLeave","src":"47185:5:29"}]},"nodeType":"YulCase","src":"47141:59:29","value":{"kind":"number","nodeType":"YulLiteral","src":"47146:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"47216:123:29","statements":[{"body":{"nodeType":"YulBlock","src":"47251:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"47253:16:29"},"nodeType":"YulFunctionCall","src":"47253:18:29"},"nodeType":"YulExpressionStatement","src":"47253:18:29"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"47236:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"47246:3:29","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"47233:2:29"},"nodeType":"YulFunctionCall","src":"47233:17:29"},"nodeType":"YulIf","src":"47230:43:29"},{"nodeType":"YulAssignment","src":"47286:25:29","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"47299:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"47309:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"47295:3:29"},"nodeType":"YulFunctionCall","src":"47295:16:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"47286:5:29"}]},{"nodeType":"YulLeave","src":"47324:5:29"}]},"nodeType":"YulCase","src":"47209:130:29","value":{"kind":"number","nodeType":"YulLiteral","src":"47214:1:29","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"47128:4:29"},"nodeType":"YulSwitch","src":"47121:218:29"},{"body":{"nodeType":"YulBlock","src":"47437:70:29","statements":[{"nodeType":"YulAssignment","src":"47451:28:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"47464:4:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"47470:8:29"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"47460:3:29"},"nodeType":"YulFunctionCall","src":"47460:19:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"47451:5:29"}]},{"nodeType":"YulLeave","src":"47492:5:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"47361:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"47367:2:29","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47358:2:29"},"nodeType":"YulFunctionCall","src":"47358:12:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"47375:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"47385:2:29","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47372:2:29"},"nodeType":"YulFunctionCall","src":"47372:16:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47354:3:29"},"nodeType":"YulFunctionCall","src":"47354:35:29"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"47398:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"47404:3:29","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47395:2:29"},"nodeType":"YulFunctionCall","src":"47395:13:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"47413:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"47423:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47410:2:29"},"nodeType":"YulFunctionCall","src":"47410:16:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47391:3:29"},"nodeType":"YulFunctionCall","src":"47391:36:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"47351:2:29"},"nodeType":"YulFunctionCall","src":"47351:77:29"},"nodeType":"YulIf","src":"47348:159:29"},{"nodeType":"YulVariableDeclaration","src":"47516:57:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"47558:4:29"},{"name":"exponent","nodeType":"YulIdentifier","src":"47564:8:29"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"47539:18:29"},"nodeType":"YulFunctionCall","src":"47539:34:29"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"47520:7:29","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"47529:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"47618:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"47620:16:29"},"nodeType":"YulFunctionCall","src":"47620:18:29"},"nodeType":"YulExpressionStatement","src":"47620:18:29"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"47588:7:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47605:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"47601:3:29"},"nodeType":"YulFunctionCall","src":"47601:6:29"},{"name":"base_1","nodeType":"YulIdentifier","src":"47609:6:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"47597:3:29"},"nodeType":"YulFunctionCall","src":"47597:19:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"47585:2:29"},"nodeType":"YulFunctionCall","src":"47585:32:29"},"nodeType":"YulIf","src":"47582:58:29"},{"nodeType":"YulAssignment","src":"47649:29:29","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"47662:7:29"},{"name":"base_1","nodeType":"YulIdentifier","src":"47671:6:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47658:3:29"},"nodeType":"YulFunctionCall","src":"47658:20:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"47649:5:29"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"46908:4:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"46914:8:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"46927:5:29","type":""}],"src":"46878:806:29"},{"body":{"nodeType":"YulBlock","src":"47757:72:29","statements":[{"nodeType":"YulAssignment","src":"47767:56:29","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"47797:4:29"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"47807:8:29"},{"kind":"number","nodeType":"YulLiteral","src":"47817:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47803:3:29"},"nodeType":"YulFunctionCall","src":"47803:19:29"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"47776:20:29"},"nodeType":"YulFunctionCall","src":"47776:47:29"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"47767:5:29"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"47728:4:29","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"47734:8:29","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"47747:5:29","type":""}],"src":"47689:140:29"},{"body":{"nodeType":"YulBlock","src":"48008:176:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48025:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48036:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48018:6:29"},"nodeType":"YulFunctionCall","src":"48018:21:29"},"nodeType":"YulExpressionStatement","src":"48018:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48059:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48070:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48055:3:29"},"nodeType":"YulFunctionCall","src":"48055:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"48075:2:29","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48048:6:29"},"nodeType":"YulFunctionCall","src":"48048:30:29"},"nodeType":"YulExpressionStatement","src":"48048:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48098:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48109:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48094:3:29"},"nodeType":"YulFunctionCall","src":"48094:18:29"},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","kind":"string","nodeType":"YulLiteral","src":"48114:28:29","type":"","value":"LzApp: minGasLimit not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48087:6:29"},"nodeType":"YulFunctionCall","src":"48087:56:29"},"nodeType":"YulExpressionStatement","src":"48087:56:29"},{"nodeType":"YulAssignment","src":"48152:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48164:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48175:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48160:3:29"},"nodeType":"YulFunctionCall","src":"48160:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48152:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47985:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47999:4:29","type":""}],"src":"47834:350:29"},{"body":{"nodeType":"YulBlock","src":"48363:177:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48380:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48391:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48373:6:29"},"nodeType":"YulFunctionCall","src":"48373:21:29"},"nodeType":"YulExpressionStatement","src":"48373:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48414:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48425:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48410:3:29"},"nodeType":"YulFunctionCall","src":"48410:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"48430:2:29","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48403:6:29"},"nodeType":"YulFunctionCall","src":"48403:30:29"},"nodeType":"YulExpressionStatement","src":"48403:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48453:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48464:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48449:3:29"},"nodeType":"YulFunctionCall","src":"48449:18:29"},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"48469:29:29","type":"","value":"LzApp: gas limit is too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48442:6:29"},"nodeType":"YulFunctionCall","src":"48442:57:29"},"nodeType":"YulExpressionStatement","src":"48442:57:29"},{"nodeType":"YulAssignment","src":"48508:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48520:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48531:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48516:3:29"},"nodeType":"YulFunctionCall","src":"48516:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48508:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48340:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48354:4:29","type":""}],"src":"48189:351:29"},{"body":{"nodeType":"YulBlock","src":"48719:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48736:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48747:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48729:6:29"},"nodeType":"YulFunctionCall","src":"48729:21:29"},"nodeType":"YulExpressionStatement","src":"48729:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48770:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48781:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48766:3:29"},"nodeType":"YulFunctionCall","src":"48766:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"48786:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48759:6:29"},"nodeType":"YulFunctionCall","src":"48759:30:29"},"nodeType":"YulExpressionStatement","src":"48759:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48809:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48820:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48805:3:29"},"nodeType":"YulFunctionCall","src":"48805:18:29"},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","kind":"string","nodeType":"YulLiteral","src":"48825:34:29","type":"","value":"LzApp: payload size is too large"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48798:6:29"},"nodeType":"YulFunctionCall","src":"48798:62:29"},"nodeType":"YulExpressionStatement","src":"48798:62:29"},{"nodeType":"YulAssignment","src":"48869:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48881:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"48892:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48877:3:29"},"nodeType":"YulFunctionCall","src":"48877:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48869:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48696:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48710:4:29","type":""}],"src":"48545:356:29"},{"body":{"nodeType":"YulBlock","src":"49080:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49097:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49108:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49090:6:29"},"nodeType":"YulFunctionCall","src":"49090:21:29"},"nodeType":"YulExpressionStatement","src":"49090:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49131:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49142:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49127:3:29"},"nodeType":"YulFunctionCall","src":"49127:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"49147:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49120:6:29"},"nodeType":"YulFunctionCall","src":"49120:30:29"},"nodeType":"YulExpressionStatement","src":"49120:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49170:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49181:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49166:3:29"},"nodeType":"YulFunctionCall","src":"49166:18:29"},{"hexValue":"546f6b656e4272696467653a206661696c656420746f2067657420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"49186:34:29","type":"","value":"TokenBridge: failed to get token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49159:6:29"},"nodeType":"YulFunctionCall","src":"49159:62:29"},"nodeType":"YulExpressionStatement","src":"49159:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49241:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49252:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49237:3:29"},"nodeType":"YulFunctionCall","src":"49237:18:29"},{"hexValue":"20646563696d616c73","kind":"string","nodeType":"YulLiteral","src":"49257:11:29","type":"","value":" decimals"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49230:6:29"},"nodeType":"YulFunctionCall","src":"49230:39:29"},"nodeType":"YulExpressionStatement","src":"49230:39:29"},{"nodeType":"YulAssignment","src":"49278:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49290:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49301:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49286:3:29"},"nodeType":"YulFunctionCall","src":"49286:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49278:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49057:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49071:4:29","type":""}],"src":"48906:405:29"},{"body":{"nodeType":"YulBlock","src":"49395:194:29","statements":[{"body":{"nodeType":"YulBlock","src":"49441:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49450:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49453:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49443:6:29"},"nodeType":"YulFunctionCall","src":"49443:12:29"},"nodeType":"YulExpressionStatement","src":"49443:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"49416:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"49425:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49412:3:29"},"nodeType":"YulFunctionCall","src":"49412:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"49437:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"49408:3:29"},"nodeType":"YulFunctionCall","src":"49408:32:29"},"nodeType":"YulIf","src":"49405:52:29"},{"nodeType":"YulVariableDeclaration","src":"49466:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49485:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49479:5:29"},"nodeType":"YulFunctionCall","src":"49479:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"49470:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"49543:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49552:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49555:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49545:6:29"},"nodeType":"YulFunctionCall","src":"49545:12:29"},"nodeType":"YulExpressionStatement","src":"49545:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49517:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49528:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"49535:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"49524:3:29"},"nodeType":"YulFunctionCall","src":"49524:16:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"49514:2:29"},"nodeType":"YulFunctionCall","src":"49514:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49507:6:29"},"nodeType":"YulFunctionCall","src":"49507:35:29"},"nodeType":"YulIf","src":"49504:55:29"},{"nodeType":"YulAssignment","src":"49568:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"49578:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"49568:6:29"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49361:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"49372:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"49384:6:29","type":""}],"src":"49316:273:29"},{"body":{"nodeType":"YulBlock","src":"49768:178:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49785:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49796:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49778:6:29"},"nodeType":"YulFunctionCall","src":"49778:21:29"},"nodeType":"YulExpressionStatement","src":"49778:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49819:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49830:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49815:3:29"},"nodeType":"YulFunctionCall","src":"49815:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"49835:2:29","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49808:6:29"},"nodeType":"YulFunctionCall","src":"49808:30:29"},"nodeType":"YulExpressionStatement","src":"49808:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49858:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49869:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49854:3:29"},"nodeType":"YulFunctionCall","src":"49854:18:29"},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","kind":"string","nodeType":"YulLiteral","src":"49874:30:29","type":"","value":"LzApp: invalid adapterParams"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49847:6:29"},"nodeType":"YulFunctionCall","src":"49847:58:29"},"nodeType":"YulExpressionStatement","src":"49847:58:29"},{"nodeType":"YulAssignment","src":"49914:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49926:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49937:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49922:3:29"},"nodeType":"YulFunctionCall","src":"49922:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49914:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49745:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49759:4:29","type":""}],"src":"49594:352:29"},{"body":{"nodeType":"YulBlock","src":"50125:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50142:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50153:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50135:6:29"},"nodeType":"YulFunctionCall","src":"50135:21:29"},"nodeType":"YulExpressionStatement","src":"50135:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50176:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50187:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50172:3:29"},"nodeType":"YulFunctionCall","src":"50172:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"50192:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50165:6:29"},"nodeType":"YulFunctionCall","src":"50165:30:29"},"nodeType":"YulExpressionStatement","src":"50165:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50215:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50226:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50211:3:29"},"nodeType":"YulFunctionCall","src":"50211:18:29"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"50231:34:29","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50204:6:29"},"nodeType":"YulFunctionCall","src":"50204:62:29"},"nodeType":"YulExpressionStatement","src":"50204:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50286:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50297:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50282:3:29"},"nodeType":"YulFunctionCall","src":"50282:18:29"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"50302:8:29","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50275:6:29"},"nodeType":"YulFunctionCall","src":"50275:36:29"},"nodeType":"YulExpressionStatement","src":"50275:36:29"},{"nodeType":"YulAssignment","src":"50320:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50332:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50343:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50328:3:29"},"nodeType":"YulFunctionCall","src":"50328:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50320:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50102:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50116:4:29","type":""}],"src":"49951:402:29"},{"body":{"nodeType":"YulBlock","src":"50532:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50549:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50560:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50542:6:29"},"nodeType":"YulFunctionCall","src":"50542:21:29"},"nodeType":"YulExpressionStatement","src":"50542:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50583:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50594:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50579:3:29"},"nodeType":"YulFunctionCall","src":"50579:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"50599:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50572:6:29"},"nodeType":"YulFunctionCall","src":"50572:30:29"},"nodeType":"YulExpressionStatement","src":"50572:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50622:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50633:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50618:3:29"},"nodeType":"YulFunctionCall","src":"50618:18:29"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"50638:31:29","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50611:6:29"},"nodeType":"YulFunctionCall","src":"50611:59:29"},"nodeType":"YulExpressionStatement","src":"50611:59:29"},{"nodeType":"YulAssignment","src":"50679:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50691:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50702:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50687:3:29"},"nodeType":"YulFunctionCall","src":"50687:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50679:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50509:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50523:4:29","type":""}],"src":"50358:353:29"},{"body":{"nodeType":"YulBlock","src":"50837:98:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50854:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50865:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50847:6:29"},"nodeType":"YulFunctionCall","src":"50847:21:29"},"nodeType":"YulExpressionStatement","src":"50847:21:29"},{"nodeType":"YulAssignment","src":"50877:52:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50902:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50914:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"50925:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50910:3:29"},"nodeType":"YulFunctionCall","src":"50910:18:29"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"50885:16:29"},"nodeType":"YulFunctionCall","src":"50885:44:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50877:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50806:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50817:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50828:4:29","type":""}],"src":"50716:219:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_uint64(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n    }\n    function abi_decode_tuple_t_uint16t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_struct_CallParams_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 64) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_uint16t_addresst_uint256t_addresst_addresst_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := abi_decode_struct_CallParams_calldata(add(headStart, 160), dataEnd)\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint16t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_uint16t_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_struct_CallParams_calldata(add(headStart, 32), dataEnd)\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$5541__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint16t_addresst_uint256t_struct$_CallParams_$53_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_struct_CallParams_calldata(add(headStart, 96), dataEnd)\n        let offset := calldataload(add(headStart, 160))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"TokenBridge: bridge fee > 100%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LzApp: invalid endpoint caller\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LzApp: invalid source sending co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"TokenBridge: fee not enough\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"TokenBridge: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2fb79bd7615e480fca928d43131c6d74bbf06bbd0b64109fedfb9bad79eaa6e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"TokenBridge: input token and out\")\n        mstore(add(headStart, 96), \"put token are not supported\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_780e05369a5f638bfbd2815b3c3c9d5e8c2d1ed869b73e67df825e69042cd8ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"TokenBridge: amountIn must be gr\")\n        mstore(add(headStart, 96), \"eater than 0\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"TokenBridge: invalid token addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"NonblockingLzApp: caller must be\")\n        mstore(add(headStart, 96), \" LzApp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ecd0d94b5711fe92948563c52b28b3471acc1d7d11ad6715283b8f7f1e036199__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"TokenBridge: this dest chain id \")\n        mstore(add(headStart, 96), \"is not enabled\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_calldata_ptr__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_bytes(value2, add(headStart, 160))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        tail := abi_encode_bytes_calldata(value4, value5, tail_1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LzApp: no trusted path record\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(sub(shl(96, 1), 1))))\n        end := add(_1, 20)\n    }\n    function abi_encode_tuple_t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"TokenBridge: ETH is not supporte\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TokenBridge: amount must be grea\")\n        mstore(add(headStart, 96), \"ter than 0\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"TokenBridge: emergency withdraw \")\n        mstore(add(headStart, 96), \"locked\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(80, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"NonblockingLzApp: no stored mess\")\n        mstore(add(headStart, 96), \"age\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"NonblockingLzApp: invalid payloa\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), value4)\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage(slot, src, len)\n    {\n        if gt(len, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value3, tail_1)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e3498c6375deb79bfc1c714cbc09be17a49e48160b4461223b50b0ea13a57c6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"TokenBrige: token pair is not cr\")\n        mstore(add(headStart, 96), \"eated\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(112, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TokenBridge: invalid source chai\")\n        mstore(add(headStart, 96), \"n id\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9ea1dad71f32d7c074acbeb7f7171c53f6a2b1523820b96d46aa919986cd83ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"TokenBridge: tokenOut has invali\")\n        mstore(add(headStart, 96), \"d liquidity pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TokenBridge: token is not suppor\")\n        mstore(add(headStart, 96), \"ted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TokenBridge: insufficient liquid\")\n        mstore(add(headStart, 96), \"ity\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TokenBridge: _adapterParams must\")\n        mstore(add(headStart, 96), \" be empty.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint8_t_uint256_t_bytes32_t_bytes32__to_t_uint8_t_uint256_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(248, value0), shl(248, 255)))\n        mstore(add(pos, 1), value1)\n        mstore(add(pos, 33), value2)\n        mstore(add(pos, 65), value3)\n        end := add(pos, 97)\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 160)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 160))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"LzApp: destination chain is not \")\n        mstore(add(headStart, 96), \"a trusted source\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value2, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value5, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TokenBridge: invalid payload len\")\n        mstore(add(headStart, 96), \"gth\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"TokenBridge: unknown packet type\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"LzApp: minGasLimit not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"LzApp: gas limit is too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LzApp: payload size is too large\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"TokenBridge: failed to get token\")\n        mstore(add(headStart, 96), \" decimals\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"LzApp: invalid adapterParams\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"967":[{"length":32,"start":3821},{"length":32,"start":3885},{"length":32,"start":4882},{"length":32,"start":4946},{"length":32,"start":5070}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xD5900 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH3 0x1D3567 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x1095B6D7 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x25A9F792 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x3BD0536B EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x564B81EF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x59D91CD7 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x5B769F3C EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x69A6B3DB EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0x73AFBCAA EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x7A38D760 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x7D5F5BD4 EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0x93F26A4C EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x97167964 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0x9E42FF90 EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xA2F27AE0 EQ PUSH2 0x7C5 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0xABE685CD EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xB5F97073 EQ PUSH2 0x83B JUMPI DUP1 PUSH4 0xB790D7C1 EQ PUSH2 0x872 JUMPI DUP1 PUSH4 0xB90FC4A5 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x8A5 JUMPI DUP1 PUSH4 0xBEA4DFB5 EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0xCB8D3B1F EQ PUSH2 0x8FA JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x93A JUMPI DUP1 PUSH4 0xD71E409E EQ PUSH2 0x94D JUMPI DUP1 PUSH4 0xDE9B9488 EQ PUSH2 0x96D JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x984 JUMPI DUP1 PUSH4 0xDF4BBC1C EQ PUSH2 0x9A4 JUMPI DUP1 PUSH4 0xE3179C3E EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0xEAB45D9C EQ PUSH2 0xA03 JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0xED629C5C EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0xEE7A4596 EQ PUSH2 0xA65 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2BB JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x4566 JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x46A3 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x46E2 JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0xEA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x102 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x4758 JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x11D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH1 0xFE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x4851 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x4928 JUMP JUMPDEST PUSH2 0x1308 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x13C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CHAINID PUSH2 0x399 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0x4985 JUMP JUMPDEST PUSH2 0x146F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x49BC JUMP JUMPDEST PUSH2 0x100 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A19 JUMP JUMPDEST PUSH2 0x162F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x1685 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x63A CALLDATASIZE PUSH1 0x4 PUSH2 0x4A36 JUMP JUMPDEST PUSH2 0x168F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH2 0x65A CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x4AB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 SLOAD PUSH2 0x688 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BB PUSH2 0x6B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AC5 JUMP JUMPDEST PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x6EB CALLDATASIZE PUSH1 0x4 PUSH2 0x4B26 JUMP JUMPDEST PUSH1 0xFD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH2 0x18C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B59 JUMP JUMPDEST PUSH2 0x18D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x772 PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH2 0x7C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x190E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x7E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x1A24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x800 CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x1AB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFB SLOAD PUSH2 0x45D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH2 0x856 CALLDATASIZE PUSH1 0x4 PUSH2 0x4566 JUMP JUMPDEST PUSH2 0x106 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B77 JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x46E2 JUMP JUMPDEST PUSH2 0x1DCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x1ED5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x1F28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x1FAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x915 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BE6 JUMP JUMPDEST PUSH2 0x208F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x935 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C04 JUMP JUMPDEST PUSH2 0x20F4 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x948 CALLDATASIZE PUSH1 0x4 PUSH2 0x45F5 JUMP JUMPDEST PUSH2 0x2162 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x968 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A19 JUMP JUMPDEST PUSH2 0x237A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x109 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x4C72 JUMP JUMPDEST PUSH2 0x23F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x9BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x9F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xA1E CALLDATASIZE PUSH1 0x4 PUSH2 0x4A19 JUMP JUMPDEST PUSH2 0x245C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xA3E CALLDATASIZE PUSH1 0x4 PUSH2 0x47FF JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0xA80 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0xAB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x250C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH2 0xAD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CAE JUMP JUMPDEST PUSH2 0x2582 JUMP JUMPDEST PUSH2 0xADE PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A2062726964676520666565203E20313030250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x102 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x9A749C8193BFD56B2B2A05C0BD18FBB0F69801A3FD6576C40B90537FD0FC3854 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xBF3 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC1F SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0xC87 JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xCAF JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xCA5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xD80 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2676 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD91 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDFE PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xE1D PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D3F JUMP JUMPDEST PUSH2 0xE5E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x26EF JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF15A0A3784DEA9B4FE33BC98E2450745E262D310237B2868EA8EF56967FF3ECB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE99 SWAP3 SWAP2 SWAP1 PUSH2 0x4D74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xEAF PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D8D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF5D PUSH2 0x2745 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4DC7 JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFA8 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2769 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x108 SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xFE2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xFFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4E01 JUMP JUMPDEST PUSH2 0x1006 PUSH2 0x28D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1048 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E70757420746F6B656E20616E64206F7574 PUSH1 0x44 DUP3 ADD MSTORE PUSH27 0x1C1D5D081D1BDAD95B88185C99481B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x2A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x10C3 DUP9 CALLER DUP10 PUSH2 0x292D JUMP JUMPDEST SWAP7 POP PUSH1 0x0 PUSH2 0x10D1 DUP10 DUP10 PUSH2 0x2A3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 GT PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E74496E206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP11 SWAP3 SWAP1 PUSH2 0x1161 SWAP1 DUP5 SWAP1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1177 SWAP1 POP DUP11 DUP3 DUP10 DUP10 DUP10 DUP10 DUP10 CALLVALUE PUSH2 0x2C9F JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5660 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 PUSH1 0x40 MLOAD PUSH2 0x11B4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x11C7 PUSH1 0x1 PUSH1 0xC9 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x11F3 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x121F SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x126C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1241 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x126C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x124F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1283 SWAP3 SWAP2 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12A6 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x12DA SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4E80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1350 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D8D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1382 PUSH2 0x2745 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4DC7 JUMP JUMPDEST PUSH2 0x13B1 DUP3 PUSH2 0x2761 JUMP JUMPDEST PUSH2 0x13BD DUP3 DUP3 PUSH1 0x1 PUSH2 0x2769 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x145C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1477 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x14A6 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420746F6B656E206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE390BCEC6614D6B1F8AE47A4D9D46531CE328E3D293ECD6DDD015CB01EFF0300 SWAP1 PUSH2 0xB67 SWAP1 DUP4 SWAP1 PUSH2 0x4851 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x1627 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2D41 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1637 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5362D4BD13945E8D116B90D83A7050FA61CEB02BB79BFAE783377ADB46916D94 SWAP1 PUSH2 0xB67 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x168D PUSH2 0x2617 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1697 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A2074686973206465737420636861696E20696420 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1A5CC81B9BDD08195B98589B1959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x1761 SWAP1 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x177F SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17AB SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x180D DUP5 DUP5 PUSH2 0x3137 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181C PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1831 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4723 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x40A7BB1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP4 EQ ISZERO SWAP4 POP AND SWAP1 PUSH4 0x40A7BB10 SWAP1 PUSH2 0x1873 SWAP1 DUP12 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x4FB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B3 SWAP2 SWAP1 PUSH2 0x5008 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x18D9 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x18E7 DUP3 DUP3 PUSH2 0x35D DUP6 PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13BD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH2 0x1DCA JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x1931 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x195D SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x197F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x198D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1A02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x1A1D PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0x1A15 SWAP2 SWAP1 PUSH2 0x502C JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x3260 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH4 0x70A08231 SWAP1 PUSH2 0x1A63 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x503F JUMP JUMPDEST PUSH2 0x1AAE SWAP2 SWAP1 PUSH2 0x502C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABC PUSH2 0x2617 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5058 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x1AFC SWAP1 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B7D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1B99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4E01 JUMP JUMPDEST PUSH2 0x1BA1 PUSH2 0x28D4 JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BD6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20455448206973206E6F7420737570706F727465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP7 GT PUSH2 0x1C8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E74206D7573742062652067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x746572207468616E203 PUSH1 0xB4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST DUP6 CALLVALUE LT ISZERO PUSH2 0x1CAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4D3F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP11 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x1D2D SWAP1 DUP5 SWAP1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x1D3D PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x1D4E JUMPI DUP2 PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x1D5A DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x1D65 SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D8C DUP11 PUSH2 0x1D75 DUP11 DUP5 PUSH2 0x5079 JUMP JUMPDEST PUSH1 0x0 DUP13 DUP12 DUP12 DUP12 DUP16 CALLVALUE PUSH2 0x1D87 SWAP2 SWAP1 PUSH2 0x502C JUMP JUMPDEST PUSH2 0x2C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5660 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xD80 PUSH1 0x1 PUSH1 0xC9 SSTORE JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1DEF JUMPI POP PUSH2 0x109 SLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x1E4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20656D657267656E637920776974686472617720 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B1BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1E73 SWAP1 DUP5 SWAP1 PUSH2 0x502C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E8D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x26EF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x49507695F37B729944475CF3388760A14760FEF784B7AB5CA8863A5F3F8BE6BD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EC8 SWAP3 SWAP2 SWAP1 PUSH2 0x4D74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1EDD PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xB67 SWAP1 DUP4 SWAP1 PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x50A7 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1FCE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1FEF JUMPI POP PUSH2 0x1FDD ADDRESS PUSH2 0x336D JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1FEF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x200B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x50F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2036 PUSH2 0x337C JUMP JUMPDEST PUSH2 0x203E PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x2047 DUP3 PUSH2 0x33D2 JUMP JUMPDEST PUSH2 0x204F PUSH2 0x3402 JUMP JUMPDEST PUSH2 0x2057 PUSH2 0x3431 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x2097 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xB1656BD3B50DDB6B12EF259C86E9CB359952B53C4403CFB5A83E23C515A35E22 SWAP2 ADD PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x20FC PUSH2 0x2617 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0x2134 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5145 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x214E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x2186 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2217 SWAP3 SWAP2 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0x2276 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x229A SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x4D2F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x2332 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2D41 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2369 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2382 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE DUP1 PUSH2 0x23A6 JUMPI PUSH1 0x0 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x23B3 TIMESTAMP PUSH3 0x93A80 PUSH2 0x4E44 JUMP JUMPDEST PUSH2 0x109 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x27A37FC51E6C5D14309BBED3A54787C8788223B5D9CD5FE10605661665DD8415 SWAP2 ADD PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x23FA PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xFD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x2464 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x108 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1584AD594A70CBE1E6515592E1272A987D922B097EAD875069CEBE8B40C004A4 SWAP1 PUSH2 0xB67 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x24BA PUSH2 0x2617 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x24D8 DUP3 DUP5 DUP4 PUSH2 0x51AE JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E80 JUMP JUMPDEST PUSH2 0x2514 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x3629 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP8 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x260C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5267 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x2620 PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26D9 GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x269E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x367B JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1627 JUMPI PUSH2 0x1627 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x3705 JUMP JUMPDEST PUSH2 0x1761 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x270E SWAP3 SWAP2 SWAP1 PUSH2 0x4D74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFA8 PUSH2 0x2617 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x279C JUMPI PUSH2 0x1761 DUP4 PUSH2 0x3878 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x27F6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x27F3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x503F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x28C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST POP PUSH2 0x1761 DUP4 DUP4 DUP4 PUSH2 0x3912 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SLOAD SUB PUSH2 0x2926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295C SWAP2 SWAP1 PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299D SWAP2 SWAP1 PUSH2 0x503F JUMP JUMPDEST SWAP1 POP PUSH2 0x29B4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 ADDRESS DUP7 PUSH2 0x393D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x29E3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A24 SWAP2 SWAP1 PUSH2 0x503F JUMP JUMPDEST SWAP1 POP PUSH2 0x2A30 DUP3 DUP3 PUSH2 0x502C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8AA1B31 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A9F SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E42726967653A20746F6B656E2070616972206973206E6F74206372 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x19585D1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0F PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x2B20 JUMPI DUP2 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x2B2C DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x2B37 SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BA3 SWAP2 SWAP1 PUSH2 0x534F JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C16 SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C5D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP6 DUP11 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x2C44 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C4E SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C58 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x2C91 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP6 DUP11 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x2C7D SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C87 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x2C91 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2CA9 DUP4 DUP4 PUSH2 0x3137 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB6 DUP9 DUP9 DUP9 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D18 DUP10 DUP3 PUSH2 0x2CCA PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x4723 JUMP JUMPDEST PUSH2 0x2CDA PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x4723 JUMP JUMPDEST DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP PUSH2 0x3975 SWAP2 POP POP JUMP JUMPDEST POP POP PUSH2 0x101 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP9 SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC9 SSTORE JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x107 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2DB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420736F757263652063686169 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1B881A59 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2DC0 DUP6 PUSH2 0x3AFE JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP1 DUP3 ISZERO PUSH2 0x2DF0 JUMPI PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x2DE9 DUP7 PUSH2 0x3C38 JUMP JUMPDEST SWAP1 POP PUSH2 0x2ED6 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8AA1B31 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E57 SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E4F75742068617320696E76616C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x19081B1A5C5D5A591A5D1E481C1BDBDB PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x2ED2 DUP8 DUP5 PUSH2 0x3C8A JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2F0B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x105 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2F27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x4E01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x104 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2F9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E206973206E6F7420737570706F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3012 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E73756666696369656E74206C6971756964 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697479 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x301C DUP3 DUP3 PUSH2 0x502C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x103 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x102 SLOAD PUSH2 0x3046 JUMPI DUP2 PUSH1 0x0 PUSH2 0x304F JUMP JUMPDEST PUSH2 0x304F DUP3 PUSH2 0x3E9D JUMP JUMPDEST POP PUSH2 0x108 SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x306E JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x30BF JUMPI PUSH2 0x108 SLOAD PUSH2 0x308B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 PUSH2 0x3ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5640 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x312A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x30D4 JUMPI DUP5 PUSH2 0x30D8 JUMP JUMPDEST PUSH2 0xDEAD JUMPDEST SWAP5 POP PUSH2 0x30EE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP7 DUP5 PUSH2 0x26EF JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5640 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x3121 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x108 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x3157 JUMPI POP PUSH2 0x101 SLOAD PUSH2 0xFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x31A6 JUMPI PUSH2 0x101 SLOAD PUSH2 0x13BD SWAP1 PUSH2 0xFFFF AND PUSH1 0x0 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x3F5F SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A205F61646170746572506172616D73206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1031329032B6B83A3C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3214 DUP5 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3221 DUP5 PUSH2 0x402F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x21 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x41 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x61 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x81 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x326E DUP2 PUSH1 0x1F PUSH2 0x4E44 JUMP JUMPDEST LT ISZERO PUSH2 0x32AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x32B7 DUP3 DUP5 PUSH2 0x4E44 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x32FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x331A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3353 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x333B JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x33CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x168D PUSH2 0x403B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x33F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x406B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x168D PUSH2 0x409B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x3451 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x3472 JUMPI POP PUSH2 0x3460 ADDRESS PUSH2 0x336D JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x3472 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x348E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x50F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x34B1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x106 PUSH1 0x20 MSTORE PUSH32 0xD1FE999288D0A7E8ED972CAA3B05BCA25ECCD5B4E714D8EC2D4F2D8E22126216 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 OR SWAP1 SWAP2 SSTORE PUSH32 0x5C4185F72335224D2CF1CA1428FC3B5B56133884156DB2AD5F59D4B2FFEF13C1 DUP1 SLOAD DUP3 AND PUSH20 0x2514895C72F50D8BD4B4F9B1110F0D6BD2C97526 OR SWAP1 SSTORE PUSH32 0xDE8C4E26FF4F8E9560AFBCCF153706B866627645B028D1EA07877FD698662DAB DUP1 SLOAD DUP3 AND PUSH20 0xB8C458C957A6E6CA7CC53ED95BEA548C52AFAA24 OR SWAP1 SSTORE PUSH3 0x13881 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5337A075601BC8FA859E72E939688626DA1AE8A471B1DB80F8E6AE13DCF28BED DUP1 SLOAD SWAP1 SWAP3 AND PUSH20 0xD0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA OR SWAP1 SWAP2 SSTORE PUSH2 0x35C8 CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x106 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36A0 JUMPI PUSH2 0x36A0 PUSH2 0x4865 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36CA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x36EC JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3737 SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x3794 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x543E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40C2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x3819 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3819 SWAP2 SWAP1 PUSH2 0x549C JUMP JUMPDEST PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x3881 DUP2 PUSH2 0x336D JUMP JUMPDEST PUSH2 0x38E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x56A0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x391B DUP4 PUSH2 0x40D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3928 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1761 JUMPI PUSH2 0x3937 DUP4 DUP4 PUSH2 0x4111 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x3937 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x270E JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x3993 SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39BF SWAP1 PUSH2 0x4CFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x3A7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x3A88 DUP8 DUP8 MLOAD PUSH2 0x4136 JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x3AC3 SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x54B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x62 EQ PUSH2 0x3B61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C6964207061796C6F6164206C656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xCEE8D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3B76 JUMPI PUSH2 0x3B76 PUSH2 0x5513 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B8F JUMPI PUSH2 0x3B8F PUSH2 0x53C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BA5 JUMPI PUSH2 0x3BA5 PUSH2 0x53C1 JUMP JUMPDEST EQ PUSH2 0x3BF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20756E6B6E6F776E207061636B65742074797065 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x21 DUP7 ADD MLOAD SWAP5 POP PUSH1 0x41 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x61 DUP7 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x61 DUP2 MLOAD DUP2 LT PUSH2 0x3C1A JUMPI PUSH2 0x3C1A PUSH2 0x5513 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x1 EQ SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C43 PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x3C54 JUMPI DUP2 PUSH2 0x3C6B JUMP JUMPDEST PUSH2 0x3C60 DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x3C6B SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3C80 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8AA1B31 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CEF SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3CFB PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 SLT PUSH2 0x3D0C JUMPI DUP2 PUSH2 0x3D23 JUMP JUMPDEST PUSH2 0x3D18 DUP3 PUSH1 0x0 NOT PUSH2 0x502C JUMP JUMPDEST PUSH2 0x3D23 SWAP1 PUSH1 0x1 PUSH2 0x4E44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D8F SWAP2 SWAP1 PUSH2 0x534F JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E02 SWAP2 SWAP1 PUSH2 0x531B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3E49 JUMPI DUP5 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP13 PUSH2 0x3E30 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x3E3A SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x3E44 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x3E7D JUMP JUMPDEST DUP5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP13 PUSH2 0x3E69 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x3E73 SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x3E7D SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST SWAP1 POP PUSH2 0x3E88 DUP10 PUSH2 0x41A7 JUMP JUMPDEST PUSH2 0x3E93 SWAP1 PUSH1 0xA PUSH2 0x560D JUMP JUMPDEST PUSH2 0x2C91 SWAP1 DUP3 PUSH2 0x5079 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH2 0x102 SLOAD DUP5 PUSH2 0x3EB2 SWAP2 SWAP1 PUSH2 0x5079 JUMP JUMPDEST PUSH2 0x3EBC SWAP2 SWAP1 PUSH2 0x539F JUMP JUMPDEST SWAP1 POP PUSH2 0x3EC8 DUP2 DUP5 PUSH2 0x502C JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3937 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F6A DUP4 PUSH2 0x42A5 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x3FD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x131E905C1C0E881B5A5B91D85CD31A5B5A5D081B9BDD081CD95D PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x3FE2 DUP4 DUP3 PUSH2 0x4E44 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4C7A4170703A20676173206C696D697420697320746F6F206C6F77 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4062 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x168D CALLER PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4092 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x4300 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x260F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x4338 JUMP JUMPDEST PUSH2 0x40DA DUP2 PUSH2 0x3878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A1D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x56E0 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x4413 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xFE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x4157 JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x41ED SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4228 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x422D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x4291 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A206661696C656420746F2067657420746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20646563696D616C73 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x561C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 MLOAD LT ISZERO PUSH2 0x42F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x4C7A4170703A20696E76616C69642061646170746572506172616D73 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST POP PUSH1 0x22 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH2 0x432F PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0xFA8 DUP2 PUSH2 0x4481 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x43B5 SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x43F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4408 DUP8 DUP4 DUP4 DUP8 PUSH2 0x44CA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x4430 SWAP2 SWAP1 PUSH2 0x5422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x446B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4470 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A30 DUP7 DUP4 DUP4 DUP8 PUSH2 0x44CA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x44A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x53D7 JUMP JUMPDEST PUSH1 0xFB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4537 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x4530 JUMPI PUSH2 0x44E4 DUP6 PUSH2 0x336D JUMP JUMPDEST PUSH2 0x4530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB2C JUMP JUMPDEST POP DUP2 PUSH2 0x260F JUMP JUMPDEST PUSH2 0x260F DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x454C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x4AB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x45A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x45BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x45D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x460E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4617 DUP8 PUSH2 0x457F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x463F DUP11 DUP4 DUP12 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x4653 PUSH1 0x40 DUP11 ADD PUSH2 0x45DE JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4676 DUP10 DUP3 DUP11 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x469A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A1D DUP3 PUSH2 0x457F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46BF DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x46F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4702 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4712 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1D DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x477E DUP10 PUSH2 0x457F JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x478E DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x47A5 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x47B5 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP4 POP PUSH2 0x47C4 DUP11 PUSH1 0xA0 DUP12 ADD PUSH2 0x4740 JUMP JUMPDEST SWAP3 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x47DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47EB DUP12 DUP3 DUP13 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x481D DUP5 PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4844 DUP7 DUP3 DUP8 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x48A3 JUMPI PUSH2 0x48A3 PUSH2 0x4865 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x48C4 JUMPI PUSH2 0x48C4 PUSH2 0x4865 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x48E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x48F6 PUSH2 0x48F1 DUP3 PUSH2 0x48AB JUMP JUMPDEST PUSH2 0x487B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x490B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x493B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4946 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x496D DUP6 DUP3 DUP7 ADD PUSH2 0x48D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49A1 DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x49B1 DUP2 PUSH2 0x4977 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x49D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49DA DUP5 PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x49F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A01 DUP7 DUP3 DUP8 ADD PUSH2 0x48D2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4A10 PUSH1 0x40 DUP6 ADD PUSH2 0x45DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A1D DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A52 DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x49B1 DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A65 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4A9E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4A62 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A1D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AE4 DUP6 PUSH2 0x457F JUMP JUMPDEST SWAP4 POP PUSH2 0x4AF3 DUP7 PUSH1 0x20 DUP8 ADD PUSH2 0x4740 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4B0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B1A DUP8 DUP3 DUP9 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B42 DUP4 PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH2 0x4B50 PUSH1 0x20 DUP5 ADD PUSH2 0x457F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4A52 DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4B90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B99 DUP8 PUSH2 0x457F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x4BA9 DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x4BBF DUP9 PUSH1 0x60 DUP10 ADD PUSH2 0x4740 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4676 DUP10 DUP3 DUP11 ADD PUSH2 0x4596 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49A1 DUP2 PUSH2 0x46CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C25 DUP7 PUSH2 0x457F JUMP JUMPDEST SWAP5 POP PUSH2 0x4C33 PUSH1 0x20 DUP8 ADD PUSH2 0x457F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C61 DUP9 DUP3 DUP10 ADD PUSH2 0x4596 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4C87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C90 DUP5 PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH2 0x4C9E PUSH1 0x20 DUP6 ADD PUSH2 0x457F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CCD DUP6 PUSH2 0x457F JUMP JUMPDEST SWAP4 POP PUSH2 0x4CDB PUSH1 0x20 DUP7 ADD PUSH2 0x457F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x4CEB DUP2 PUSH2 0x46CD JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4D0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4752 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0xA8DED6CADC84E4D2C8CECA7440CCCACA40DCDEE840CADCDEEACED PUSH1 0x2B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5680 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5680 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x151BDAD95B909C9A5919D94E881C185D5CD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x4E2E JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x260C PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x4E57 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4EC5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1627 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4ED1 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4F12 JUMPI PUSH2 0x4F12 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x4F26 DUP2 PUSH2 0x4F20 DUP5 SLOAD PUSH2 0x4CFB JUMP JUMPDEST DUP5 PUSH2 0x4E9E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4F55 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4F43 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x4F4D DUP6 DUP3 PUSH2 0x4EE4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4F84 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4F65 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4FA2 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4FE0 SWAP1 DUP4 ADD DUP8 PUSH2 0x4A86 JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x4FFB DUP2 DUP6 DUP8 PUSH2 0x4E57 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x501B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x4E2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x4E2E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x50BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50C8 DUP7 PUSH2 0x5090 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x50EB PUSH1 0x80 DUP8 ADD PUSH2 0x5090 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4408 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x4E57 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5191 PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x4E57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x51C5 JUMPI PUSH2 0x51C5 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x51D9 DUP4 PUSH2 0x51D3 DUP4 SLOAD PUSH2 0x4CFB JUMP JUMPDEST DUP4 PUSH2 0x4E9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5207 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x51F5 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x51FF DUP7 DUP3 PUSH2 0x4EE4 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5238 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5218 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x5255 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x528F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x52A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x52AE PUSH2 0x48F1 DUP3 PUSH2 0x48AB JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x52C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x52D4 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4A62 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x52FA PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4408 DUP2 DUP6 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x532D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1D DUP2 PUSH2 0x46CD JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x536D DUP5 PUSH2 0x5338 JUMP JUMPDEST SWAP3 POP PUSH2 0x537B PUSH1 0x20 DUP6 ADD PUSH2 0x5338 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x53BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5434 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4A62 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x545B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x547C DUP2 DUP7 PUSH2 0x4A86 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5490 DUP2 DUP6 PUSH2 0x4A86 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A1D DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x54D6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x4A86 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x54E8 DUP2 DUP9 PUSH2 0x4A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x4FFB DUP2 DUP6 PUSH2 0x4A86 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x5564 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x554A JUMPI PUSH2 0x554A PUSH2 0x4E2E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x5557 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x552E JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x557B JUMPI POP PUSH1 0x1 PUSH2 0x1AAE JUMP JUMPDEST DUP2 PUSH2 0x5588 JUMPI POP PUSH1 0x0 PUSH2 0x1AAE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x559E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x55A8 JUMPI PUSH2 0x55C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x55B9 JUMPI PUSH2 0x55B9 PUSH2 0x4E2E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1AAE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x55E7 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x55F1 DUP4 DUP4 PUSH2 0x5529 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x5605 JUMPI PUSH2 0x5605 PUSH2 0x4E2E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x556C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x562E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1A1D JUMPI PUSH1 0x0 DUP1 REVERT INVALID REVERT NOT PUSH25 0x1F43410D9594FD4C02DD1D98DBE99099CBD222D5851A6E183C CHAINID DUP14 CALLER 0xCA CALLDATALOAD DUP4 DIV PUSH20 0x7E16805DDC68AB8F04E14751A94BB8FD0A3FECC7 DUP5 0xB6 SAR 0xC SMOD DUP10 DELEGATECALL PUSH1 0x46 PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC7F26B83FF96E1F2B6A682F SGT CODESIZE MSTORE 0xF6 PUSH26 0x8A09C465DA95921460CEFB3847402498416464726573733A206C PUSH16 0x772D6C6576656C2064656C6567617465 KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220519325 PUSH11 0xF1F34B4B6FB78D99ECD58 0x1E CREATE LOG1 SHR EQ 0xEA STOP MSTORE8 AND PUSH23 0x81C6D01822B54064736F6C634300081400330000000000 ","sourceMap":"1196:15509:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7202:232;;;;;;;;;;-1:-1:-1;7202:232:17;;;;;:::i;:::-;;:::i;:::-;;1606:842:22;;;;;;;;;;-1:-1:-1;1606:842:22;;;;;:::i;:::-;;:::i;5230:123::-;;;;;;;;;;-1:-1:-1;5230:123:22;;;;;:::i;:::-;;:::i;7133:142::-;;;;;;;;;;-1:-1:-1;7133:142:22;;;;;:::i;:::-;;:::i;8184:345:17:-;;;;;;;;;;-1:-1:-1;8184:345:17;;;;;:::i;:::-;;:::i;5361:129:22:-;;;;;;;;;;-1:-1:-1;5361:129:22;;;;;:::i;:::-;;:::i;1521:23:17:-;;;;;;;;;;;;;;;;;;;2947:25:29;;;2935:2;2920:18;1521:23:17;;;;;;;;3387:195:8;;;;;;;;;;-1:-1:-1;3387:195:8;;;;;:::i;:::-;;:::i;3375:1072:17:-;;;;;;:::i;:::-;;:::i;7373:250:22:-;;;;;;;;;;-1:-1:-1;7373:250:22;;;;;:::i;:::-;;:::i;:::-;;;5154:14:29;;5147:22;5129:41;;5117:2;5102:18;7373:250:22;4989:187:29;948:53:22;;;;;;;;;;-1:-1:-1;948:53:22;;;;;:::i;:::-;;;;;;;;;;;;;;1932:19:17;;;;;;;;;;-1:-1:-1;1932:19:17;;;;-1:-1:-1;;;;;1932:19:17;;;;;;;;;;:::i;5498:178:22:-;;;;;;;;;;-1:-1:-1;5498:178:22;;;;;:::i;:::-;;:::i;3901:220:8:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;12623:155:17:-;;;;;;;;;;-1:-1:-1;12731:9:17;12623:155;;2032:36;;;;;;;;;;-1:-1:-1;2032:36:17;;;;-1:-1:-1;;;2032:36:17;;;;;;7060:134;;;;;;;;;;-1:-1:-1;7060:134:17;;;;;:::i;:::-;;:::i;7442:189::-;;;;;;;;;;-1:-1:-1;7442:189:17;;;;;:::i;:::-;;:::i;960:85:23:-;;;;;;;;;;-1:-1:-1;960:85:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:24:17;;;;;;;;;;-1:-1:-1;2001:24:17;;;;-1:-1:-1;;;2001:24:17;;;;;;2327:389:23;;;;;;;;;;-1:-1:-1;2327:389:23;;;;;:::i;:::-;;:::i;1622:47:17:-;;;;;;;;;;-1:-1:-1;1622:47:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;7639:137;;;;;;;;;;-1:-1:-1;7639:137:17;;;;;:::i;:::-;;:::i;9452:57::-;;;;;;;;;;;;;:::i;6765:287::-;;;;;;;;;;-1:-1:-1;6765:287:17;;;;;:::i;:::-;;:::i;818:51:22:-;;;;;;;;;;-1:-1:-1;818:51:22;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1487:25:17:-;;;;;;;;;;-1:-1:-1;1487:25:17;;;;;;;;;;;9507:6:29;9495:19;;;9477:38;;9465:2;9450:18;1487:25:17;9333:188:29;5561:533:17;;;;;;;;;;-1:-1:-1;5561:533:17;;;;;:::i;:::-;;:::i;:::-;;;;10317:25:29;;;10373:2;10358:18;;10351:34;;;;10290:18;5561:533:17;10143:248:29;876:65:22;;;;;;;;;;-1:-1:-1;876:65:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1441:85:2;;;;;;;;;;;;;:::i;8831:239:17:-;;;;;;;;;;-1:-1:-1;8831:239:17;;;;;:::i;:::-;;:::i;1008:23:22:-;;;;;;;;;;-1:-1:-1;1008:23:22;;;;-1:-1:-1;;;;;1008:23:22;;;1437:41:17;;;;;;;;;;;;1477:1;1437:41;;;;;11222:4:29;11210:17;;;11192:36;;11180:2;11165:18;1437:41:17;11050:184:29;2117:37:17;;;;;;;;;;-1:-1:-1;2117:37:17;;;;-1:-1:-1;;;;;2117:37:17;;;6327:330:22;;;;;;;;;;-1:-1:-1;6327:330:22;;;;;:::i;:::-;;:::i;9584:147:17:-;;;;;;;;;;-1:-1:-1;9584:147:17;;;;;:::i;:::-;;:::i;6038:281:22:-;;;;;;;;;;-1:-1:-1;6038:281:22;;;;;:::i;:::-;;:::i;1387:43:17:-;;;;;;;;;;;;1425:5;1387:43;;775:36:22;;;;;;;;;;-1:-1:-1;775:36:22;;;;-1:-1:-1;;;;;775:36:22;;;1754:41:17;;;;;;;;;;-1:-1:-1;1754:41:17;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1754:41:17;;;4455:1098;;;;;;:::i;:::-;;:::i;8537:286::-;;;;;;;;;;-1:-1:-1;8537:286:17;;;;;:::i;:::-;;:::i;6665:136:22:-;;;;;;;;;;-1:-1:-1;6665:136:22;;;;;:::i;:::-;;:::i;12191:424:17:-;;;;;;;;;;;;;:::i;2506:278::-;;;;;;;;;;-1:-1:-1;2506:278:17;;;;;:::i;:::-;;:::i;7784:167::-;;;;;;;;;;-1:-1:-1;7784:167:17;;;;;:::i;:::-;;:::i;4975:247:22:-;;;;;;;;;;-1:-1:-1;4975:247:22;;;;;:::i;:::-;;:::i;2945:810:23:-;;;;;;:::i;:::-;;:::i;9078:296:17:-;;;;;;;;;;-1:-1:-1;9078:296:17;;;;;:::i;:::-;;:::i;2075:33::-;;;;;;;;;;;;;;;;6809:262:22;;;;;;;;;;-1:-1:-1;6809:262:22;;;;;:::i;:::-;;:::i;1833:42:17:-;;;;;;;;;;-1:-1:-1;1833:42:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;1553:38;;;;;;;;;;-1:-1:-1;1553:38:17;;;;;:::i;:::-;;;;;;;;;;;;;;7959:217;;;;;;;;;;-1:-1:-1;7959:217:17;;;;;:::i;:::-;;:::i;5823:207:22:-;;;;;;;;;;-1:-1:-1;5823:207:22;;;;;:::i;:::-;;:::i;1960:34:17:-;;;;;;;;;;-1:-1:-1;1960:34:17;;;;-1:-1:-1;;;1960:34:17;;;;;;1676:44;;;;;;;;;;-1:-1:-1;1676:44:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;2314:198:2;;;;;;;;;;-1:-1:-1;2314:198:2;;;;;:::i;:::-;;:::i;4659:254:22:-;;;;;;;;;;-1:-1:-1;4659:254:22;;;;;:::i;:::-;;:::i;7202:232:17:-;1334:13:2;:11;:13::i;:::-;1425:5:17::1;7283:12;:30;;7275:73;;;::::0;-1:-1:-1;;;7275:73:17;;14721:2:29;7275:73:17::1;::::0;::::1;14703:21:29::0;14760:2;14740:18;;;14733:30;14799:32;14779:18;;;14772:60;14849:18;;7275:73:17::1;;;;;;;;;7359:11;:26:::0;;;7401:25:::1;::::0;2947::29;;;7401::17::1;::::0;2935:2:29;2920:18;7401:25:17::1;;;;;;;;7202:232:::0;:::o;1606:842:22:-;1889:10;;-1:-1:-1;;;;;1889:10:22;929::11;-1:-1:-1;;;;;1865:35:22;;1857:78;;;;-1:-1:-1;;;1857:78:22;;15080:2:29;1857:78:22;;;15062:21:29;15119:2;15099:18;;;15092:30;15158:32;15138:18;;;15131:60;15208:18;;1857:78:22;14878:354:29;1857:78:22;1977:32;;;1948:26;1977:32;;;:19;:32;;;;;1948:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2197:13;:20;2175:11;;:18;;:42;:70;;;;;2244:1;2221:13;:20;:24;2175:70;:124;;;;-1:-1:-1;2275:24:22;;;;;;2249:22;;;;2259:11;;;;2249:22;:::i;:::-;;;;;;;;:50;2175:124;2153:212;;;;-1:-1:-1;;;2153:212:22;;16100:2:29;2153:212:22;;;16082:21:29;16139:2;16119:18;;;16112:30;16178:34;16158:18;;;16151:62;-1:-1:-1;;;16229:18:29;;;16222:36;16275:19;;2153:212:22;15898:402:29;2153:212:22;2378:62;2397:11;2410;;2378:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2378:62:22;;;;;;;;;;;;;;;;;;;;;;2423:6;;-1:-1:-1;2378:62:22;-1:-1:-1;2431:8:22;;;;;;2378:62;;2431:8;;;;2378:62;;;;;;;;;-1:-1:-1;2378:18:22;;-1:-1:-1;;;2378:62:22:i;:::-;1780:668;1606:842;;;;;;:::o;5230:123::-;1334:13:2;:11;:13::i;:::-;5310:10:22::1;::::0;:35:::1;::::0;-1:-1:-1;;;5310:35:22;;9507:6:29;9495:19;;5310:35:22::1;::::0;::::1;9477:38:29::0;-1:-1:-1;;;;;5310:10:22;;::::1;::::0;:25:::1;::::0;9450:18:29;;5310:35:22::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5230:123:::0;:::o;7133:142::-;1334:13:2;:11;:13::i;:::-;7224:35:22::1;::::0;;::::1;;::::0;;;:22:::1;:35;::::0;;;;:43;7133:142::o;8184:345:17:-;1334:13:2;:11;:13::i;:::-;8312:10:17::1;8325:20;8338:6;8325:12;:20::i;:::-;8312:33;;8377:5;8364:9;:18;;8356:58;;;;-1:-1:-1::0;;;8356:58:17::1;;;;;;;:::i;:::-;8427:43;-1:-1:-1::0;;;;;8427:27:17;::::1;8455:3:::0;8460:9;8427:27:::1;:43::i;:::-;8498:6;-1:-1:-1::0;;;;;8486:35:17::1;;8506:3;8511:9;8486:35;;;;;;;:::i;:::-;;;;;;;;8301:228;8184:345:::0;;;:::o;5361:129:22:-;1334:13:2;:11;:13::i;:::-;5444:10:22::1;::::0;:38:::1;::::0;-1:-1:-1;;;5444:38:22;;9507:6:29;9495:19;;5444:38:22::1;::::0;::::1;9477::29::0;-1:-1:-1;;;;;5444:10:22;;::::1;::::0;:28:::1;::::0;9450:18:29;;5444:38:22::1;9333:188:29::0;3387:195:8;-1:-1:-1;;;;;1898:6:8;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:8;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:8;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:8;;1963:87;;;;-1:-1:-1;;;1963:87:8;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3375:1072:17:-;2222:12;;3676:8;;-1:-1:-1;;;2222:12:17;;;;2221:13;:38;;;;-1:-1:-1;;;;;;2239:20:17;;;;;;:12;:20;;;;;;;;2238:21;2221:38;2213:70;;;;-1:-1:-1;;;2213:70:17;;;;;;;:::i;:::-;2505:21:9::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;3732:25:17;::::2;;::::0;;;:15:::2;:25;::::0;;;;;::::2;;:55:::0;::::2;;;-1:-1:-1::0;;;;;;3761:26:17;::::2;;::::0;;;:15:::2;:26;::::0;;;;;::::2;;3732:55;3710:165;;;::::0;-1:-1:-1;;;3710:165:17;;18316:2:29;3710:165:17::2;::::0;::::2;18298:21:29::0;18355:2;18335:18;;;18328:30;18394:34;18374:18;;;18367:62;-1:-1:-1;;;18445:18:29;;;18438:57;18512:19;;3710:165:17::2;18114:423:29::0;3710:165:17::2;3921:47;3936:8;3946:10;3958:9;3921:14;:47::i;:::-;3909:59;;3979:17;3999:37;4016:8;4026:9;3999:16;:37::i;:::-;3979:57;;4087:1;4075:9;:13;4067:70;;;::::0;-1:-1:-1;;;4067:70:17;;18744:2:29;4067:70:17::2;::::0;::::2;18726:21:29::0;18783:2;18763:18;;;18756:30;18822:34;18802:18;;;18795:62;-1:-1:-1;;;18873:18:29;;;18866:42;18925:19;;4067:70:17::2;18542:408:29::0;4067:70:17::2;-1:-1:-1::0;;;;;4148:16:17;::::2;;::::0;;;:6:::2;:16;::::0;;;;:29;;4168:9;;4148:16;:29:::2;::::0;4168:9;;4148:29:::2;:::i;:::-;::::0;;;-1:-1:-1;4233:141:17::2;::::0;-1:-1:-1;4258:14:17;4274:12;4288:9;4299:10;4325:11;4338:14;;4354:9:::2;4233:10;:141::i;:::-;4417:10;-1:-1:-1::0;;;;;4390:49:17::2;4405:10;-1:-1:-1::0;;;;;4390:49:17::2;4395:8;-1:-1:-1::0;;;;;4390:49:17::2;-1:-1:-1::0;;;;;;;;;;;4429:9:17::2;4390:49;;;;2947:25:29::0;;2935:2;2920:18;;2801:177;4390:49:17::2;;;;;;;;3699:748;2547:20:9::1;1787:1:::0;3053:7;:22;2873:209;2547:20:::1;3375:1072:17::0;;;;;;;;;:::o;7373:250:22:-;7515:32;;;7469:4;7515:32;;;:19;:32;;;;;7486:61;;7469:4;;7515:32;7486:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7603:11;;7593:22;;;;;;;:::i;:::-;;;;;;;;7575:13;7565:24;;;;;;:50;7558:57;;;7373:250;;;;;:::o;5498:178::-;1334:13:2;:11;:13::i;:::-;5613:10:22::1;::::0;:55:::1;::::0;-1:-1:-1;;;5613:55:22;;-1:-1:-1;;;;;5613:10:22;;::::1;::::0;:29:::1;::::0;:55:::1;::::0;5643:11;;5656;;;;5613:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3901:220:8::0;-1:-1:-1;;;;;1898:6:8;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:8;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:8;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:8;;1963:87;;;;-1:-1:-1;;;1963:87:8;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:8;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:8;;20021:2:29;2308:92:8;;;20003:21:29;20060:2;20040:18;;;20033:30;20099:34;20079:18;;;20072:62;-1:-1:-1;;;20150:18:29;;;20143:54;20214:19;;2308:92:8;19819:420:29;2308:92:8;-1:-1:-1;;;;;;;;;;;;3006:131:8;:::o;7060:134:17:-;1334:13:2;:11;:13::i;:::-;7150:27:17::1;::::0;;;::::1;;::::0;;;:11:::1;:27;::::0;;;;:36;;-1:-1:-1;;7150:36:17::1;::::0;::::1;;::::0;;;::::1;::::0;;7060:134::o;7442:189::-;1334:13:2;:11;:13::i;:::-;-1:-1:-1;;;;;7512:19:17;::::1;7504:66;;;::::0;-1:-1:-1;;;7504:66:17;;20446:2:29;7504:66:17::1;::::0;::::1;20428:21:29::0;20485:2;20465:18;;;20458:30;20524:34;20504:18;;;20497:62;-1:-1:-1;;;20575:18:29;;;20568:32;20617:19;;7504:66:17::1;20244:398:29::0;7504:66:17::1;7581:4;:12:::0;;-1:-1:-1;;;;;;7581:12:17::1;-1:-1:-1::0;;;;;7581:12:17;::::1;;::::0;;7609:14:::1;::::0;::::1;::::0;::::1;::::0;7581:12;;7609:14:::1;:::i;2327:389:23:-:0;929:10:11;2584:4:23;2560:29;2552:80;;;;-1:-1:-1;;;2552:80:23;;20849:2:29;2552:80:23;;;20831:21:29;20888:2;20868:18;;;20861:30;20927:34;20907:18;;;20900:62;-1:-1:-1;;;20978:18:29;;;20971:36;21024:19;;2552:80:23;20647:402:29;2552:80:23;2643:65;2665:11;2678;;2643:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2643:65:23;;;;;;;;;;;;;;;;;;;;;;2691:6;;-1:-1:-1;2643:65:23;-1:-1:-1;2699:8:23;;;;;;2643:65;;2699:8;;;;2643:65;;;;;;;;;-1:-1:-1;2643:21:23;;-1:-1:-1;;;2643:65:23:i;:::-;2327:389;;;;;;:::o;7639:137:17:-;1334:13:2;:11;:13::i;:::-;7707:12:17::1;:22:::0;;;::::1;;-1:-1:-1::0;;;7707:22:17::1;-1:-1:-1::0;;;;7707:22:17;;::::1;;::::0;;7745:23:::1;::::0;::::1;::::0;::::1;::::0;7722:7;5154:14:29;5147:22;5129:41;;5117:2;5102:18;;4989:187;9452:57:17;1334:13:2;:11;:13::i;:::-;9452:57:17:o;6765:287::-;1334:13:2;:11;:13::i;:::-;6870:27:17::1;::::0;::::1;;::::0;;;:11:::1;:27;::::0;;;;;::::1;;6862:86;;;::::0;-1:-1:-1;;;6862:86:17;;21256:2:29;6862:86:17::1;::::0;::::1;21238:21:29::0;21295:2;21275:18;;;21268:30;21334:34;21314:18;;;21307:62;-1:-1:-1;;;21385:18:29;;;21378:44;21439:19;;6862:86:17::1;21054:410:29::0;6862:86:17::1;6997:47;::::0;-1:-1:-1;;;;;;21648:2:29;21684:15;;;21680:24;;6997:47:17::1;::::0;::::1;21668:37:29::0;7038:4:17::1;21739:15:29::0;;21735:24;21721:12;;;21714:46;21776:12;;6997:47:17::1;::::0;;-1:-1:-1;;6997:47:17;;::::1;::::0;;;;;;6959:35:::1;::::0;::::1;;::::0;;;:19:::1;6997:47;6959:35:::0;;;:85:::1;::::0;:35;:85:::1;:::i;:::-;;6765:287:::0;;:::o;818:51:22:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5561:533:17:-;5742:14;5758:11;5782:35;5802:14;;5782:19;:35::i;:::-;5828:20;5851:45;5870:1;5881;5893;5851:18;:45::i;:::-;5828:68;-1:-1:-1;5907:13:17;;5923:29;;;;;;;;:::i;:::-;5997:10;;:89;;-1:-1:-1;;;5997:89:17;;-1:-1:-1;;;;;5923:43:17;;;;;;;;;-1:-1:-1;5997:10:17;;:23;;:89;;6021:14;;6045:4;;6052:7;;5923:43;;6071:14;;;;5997:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5977:109;;;;;;5561:533;;;;;;;:::o;1441:85:2:-;1513:6;;-1:-1:-1;;;;;1513:6:2;;1441:85::o;8831:239:17:-;1334:13:2;:11;:13::i;:::-;8965:46:17::1;8977:6;8985:3;8990:20;9003:6;8990:12;:20::i;8965:46::-;-1:-1:-1::0;;;;;9047:14:17;::::1;;::::0;;;:6:::1;:14;::::0;;;;;9022:40:::1;::::0;9034:6;;9042:3;;9022:11:::1;:40::i;6327:330:22:-:0;6451:35;;;6431:17;6451:35;;;:19;:35;;;;;6431:55;;6406:12;;6431:17;6451:35;6431:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6505:4;:11;6520:1;6505:16;6497:58;;;;-1:-1:-1;;;6497:58:22;;25121:2:29;6497:58:22;;;25103:21:29;25160:2;25140:18;;;25133:30;25199:31;25179:18;;;25172:59;25248:18;;6497:58:22;24919:353:29;6497:58:22;6573:31;6584:1;6601:2;6587:4;:11;:16;;;;:::i;:::-;6573:4;;:31;:10;:31::i;:::-;6566:38;6327:330;-1:-1:-1;;;6327:330:22:o;9584:147:17:-;-1:-1:-1;;;;;9709:14:17;;9643:4;9709:14;;;:6;:14;;;;;;;9667:39;;-1:-1:-1;;;9667:39:17;;9643:4;;9709:14;;9667:24;;:39;;9700:4;;9667:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;9660:63;9584:147;-1:-1:-1;;9584:147:17:o;6038:281:22:-;1334:13:2;:11;:13::i;:::-;6210:14:22::1;;6234:4;6193:47;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;6193:47:22;;::::1;::::0;;;;;;6155:35:::1;::::0;::::1;;::::0;;;:19:::1;6193:47;6155:35:::0;;;:85:::1;::::0;:35;:85:::1;:::i;:::-;;6256:55;6280:14;6296;;6256:55;;;;;;;;:::i;:::-;;;;;;;;6038:281:::0;;;:::o;4455:1098:17:-;4699:4;;-1:-1:-1;;;;;4699:4:17;;;-1:-1:-1;;;2222:12:17;;;;2221:13;:38;;;;-1:-1:-1;;;;;;2239:20:17;;;;;;:12;:20;;;;;;;;2238:21;2221:38;2213:70;;;;-1:-1:-1;;;2213:70:17;;;;;;;:::i;:::-;2505:21:9::1;:19;:21::i;:::-;4745:4:17::2;::::0;-1:-1:-1;;;;;4745:4:17::2;4780:19:::0;;;::::2;::::0;:45:::2;;-1:-1:-1::0;;;;;;4803:22:17;::::2;;::::0;;;:15:::2;:22;::::0;;;;;::::2;;4780:45;4772:91;;;::::0;-1:-1:-1;;;4772:91:17;;26158:2:29;4772:91:17::2;::::0;::::2;26140:21:29::0;26197:2;26177:18;;;26170:30;26236:34;26216:18;;;26209:62;-1:-1:-1;;;26287:18:29;;;26280:31;26328:19;;4772:91:17::2;25956:397:29::0;4772:91:17::2;4894:1;4882:9;:13;4874:68;;;::::0;-1:-1:-1;;;4874:68:17;;26560:2:29;4874:68:17::2;::::0;::::2;26542:21:29::0;26599:2;26579:18;;;26572:30;26638:34;26618:18;;;26611:62;-1:-1:-1;;;26689:18:29;;;26682:40;26739:19;;4874:68:17::2;26358:406:29::0;4874:68:17::2;4974:9;4961;:22;;4953:62;;;;-1:-1:-1::0;;;4953:62:17::2;;;;;;;:::i;:::-;5067:5;-1:-1:-1::0;;;;;5061:20:17::2;;5089:9;5061:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;;;;;5112:13:17;::::2;;::::0;;;:6:::2;:13;::::0;;;;:26;;5129:9;;-1:-1:-1;5112:13:17;;-1:-1:-1;5112:26:17::2;::::0;5129:9;;5112:26:::2;:::i;:::-;::::0;;;-1:-1:-1;5151:6:17::2;::::0;-1:-1:-1;5160:34:17::2;:32;:34::i;:::-;5151:43;;5205:7;5221:1:::0;5216:2:::2;:6;5215:50;;5262:2;5215:50;;;5225:25;5247:2:::0;-1:-1:-1;;5225:25:17::2;:::i;:::-;:29;::::0;5253:1:::2;5225:29;:::i;:::-;5205:60:::0;-1:-1:-1;5321:157:17::2;5346:14:::0;5362::::2;5367:9:::0;5205:60;5362:14:::2;:::i;:::-;5386:3;5392:10;5417:11;5430:14;;5458:9;5446;:21;;;;:::i;:::-;5321:10;:157::i;:::-;5494:51;::::0;2947:25:29;;;-1:-1:-1;;;;;5494:51:17;::::2;::::0;5511:10:::2;::::0;5507:1:::2;::::0;-1:-1:-1;;;;;;;;;;;5494:51:17;2935:2:29;2920:18;5494:51:17::2;;;;;;;4718:835;;;2547:20:9::1;1787:1:::0;3053:7;:22;2873:209;8537:286:17;1334:13:2;:11;:13::i;:::-;2367:24:17::1;::::0;-1:-1:-1;;;2367:24:17;::::1;;;:68:::0;::::1;;;;2414:21;;2395:15;:40;;2367:68;2359:119;;;::::0;-1:-1:-1;;;2359:119:17;;27144:2:29;2359:119:17::1;::::0;::::1;27126:21:29::0;27183:2;27163:18;;;27156:30;27222:34;27202:18;;;27195:62;-1:-1:-1;;;27273:18:29;;;27266:36;27319:19;;2359:119:17::1;26942:402:29::0;2359:119:17::1;-1:-1:-1::0;;;;;8689:14:17;::::2;;::::0;;;:6:::2;:14;::::0;;;;:25;;8707:7;;8689:14;:25:::2;::::0;8707:7;;8689:25:::2;:::i;:::-;::::0;;;-1:-1:-1;8725:41:17::2;::::0;-1:-1:-1;;;;;;8725:27:17;::::2;8753:3:::0;8758:7;8725:27:::2;:41::i;:::-;8794:6;-1:-1:-1::0;;;;;8782:33:17::2;;8802:3;8807:7;8782:33;;;;;;;:::i;:::-;;;;;;;;8537:286:::0;;;:::o;6665:136:22:-;1334:13:2;:11;:13::i;:::-;6735:8:22::1;:20:::0;;-1:-1:-1;;;;;;6735:20:22::1;-1:-1:-1::0;;;;;6735:20:22;::::1;;::::0;;6771:22:::1;::::0;::::1;::::0;::::1;::::0;6735:20;;6771:22:::1;:::i;12191:424:17:-:0;12256:3;12350:10;12481:8;;;;;;;;;-1:-1:-1;;;;;12481:8:17;-1:-1:-1;;;;;12481:24:17;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12300:207:17;;12191:424;-1:-1:-1;;;;;12191:424:17:o;2506:278::-;3279:19:7;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:7;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:7;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:7;;;;;;;:::i;:::-;3536:12;:16;;-1:-1:-1;;3536:16:7;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:7;;;;;3562:65;2600:24:17::1;:22;:24::i;:::-;2635:16;:14;:16::i;:::-;2662:43;2686:18;2662:23;:43::i;:::-;2716:24;:22;:24::i;:::-;2751:25;:23;:25::i;:::-;3651:14:7::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:7;;;3721:14;;-1:-1:-1;11192:36:29;;-1:-1:-1;;;;;;;;;;;3721:14:7;11180:2:29;11165:18;3721:14:7;;;;;;;;3269:483;2506:278:17;:::o;7784:167::-;1334:13:2;:11;:13::i;:::-;-1:-1:-1;;;;;7867:20:17;::::1;;::::0;;;:12:::1;:20;::::0;;;;;;;;:30;;-1:-1:-1;;7867:30:17::1;::::0;::::1;;::::0;;::::1;::::0;;;7913;;28789:51:29;;;28856:18;;;28849:50;7913:30:17::1;::::0;28762:18:29;7913:30:17::1;28621:284:29::0;4975:247:22;1334:13:2;:11;:13::i;:::-;5152:10:22::1;::::0;:62:::1;::::0;-1:-1:-1;;;5152:62:22;;-1:-1:-1;;;;;5152:10:22;;::::1;::::0;:20:::1;::::0;:62:::1;::::0;5173:8;;5183;;5193:11;;5206:7;;;;5152:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;2945:810:23::0;3199:27;;;3177:19;3199:27;;;:14;:27;;;;;;:40;;;;3227:11;;;;3199:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3199:48:23;;;;;;;;;;;;-1:-1:-1;3199:48:23;3258:73;;;;-1:-1:-1;;;3258:73:23;;29615:2:29;3258:73:23;;;29597:21:29;29654:2;29634:18;;;29627:30;29693:34;29673:18;;;29666:62;-1:-1:-1;;;29744:18:29;;;29737:33;29787:19;;3258:73:23;29413:399:29;3258:73:23;3373:11;3360:8;;3350:19;;;;;;;:::i;:::-;;;;;;;;:34;3342:80;;;;-1:-1:-1;;;3342:80:23;;30019:2:29;3342:80:23;;;30001:21:29;30058:2;30038:18;;;30031:30;30097:34;30077:18;;;30070:62;-1:-1:-1;;;30148:18:29;;;30141:31;30189:19;;3342:80:23;29817:397:29;3342:80:23;3470:27;;;3529:1;3470:27;;;:14;:27;;;;;;:40;;;;3498:11;;;;3470:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3470:48:23;;;;;;;;;;;;:61;;;;3600:65;;;;;;;;;;;;;;;;;;;3622:11;;3635;;3600:65;;;;;;3635:11;3600:65;;3635:11;3600:65;;;;;;;;;-1:-1:-1;;3600:65:23;;;;;;;;;;;;;;;;;;;;;;3648:6;;-1:-1:-1;3600:65:23;-1:-1:-1;3656:8:23;;;;;;3600:65;;3656:8;;;;3600:65;;;;;;;;;-1:-1:-1;3600:21:23;;-1:-1:-1;;;3600:65:23:i;:::-;3681:66;3701:11;3714;;3727:6;3735:11;3681:66;;;;;;;;;;:::i;:::-;;;;;;;;3121:634;2945:810;;;;;;:::o;9078:296:17:-;1334:13:2;:11;:13::i;:::-;9155:24:17::1;:34:::0;;-1:-1:-1;;;;9155:34:17::1;-1:-1:-1::0;;;9155:34:17;::::1;;;;::::0;;;9224:39:::1;;9262:1;9224:39;;;9234:25;:15;9252:7;9234:25;:::i;:::-;9200:21;:63:::0;;;9311:55:::1;::::0;;30910:14:29;;30903:22;30885:41;;30957:2;30942:18;;30935:34;;;;9311:55:17::1;::::0;30858:18:29;9311:55:17::1;30717:258:29::0;6809:262:22;1334:13:2;:11;:13::i;:::-;6949:28:22::1;::::0;;::::1;;::::0;;;:15:::1;:28;::::0;;;;;;;:41;;::::1;::::0;;;;;;;;;;:51;;;7016:47;;31203:34:29;;;31253:18;;31246:43;;;;31305:18;;;31298:34;;;7016:47:22::1;::::0;31166:2:29;31151:18;7016:47:22::1;30980:358:29::0;7959:217:17;1334:13:2;:11;:13::i;:::-;8054:22:17::1;:48:::0;;;::::1;;-1:-1:-1::0;;;8054:48:17::1;-1:-1:-1::0;;;;8054:48:17;;::::1;;::::0;;8118:50:::1;::::0;::::1;::::0;::::1;::::0;8079:23;5154:14:29;5147:22;5129:41;;5117:2;5102:18;;4989:187;5823:207:22;1334:13:2;:11;:13::i;:::-;5924:35:22::1;::::0;::::1;;::::0;;;:19:::1;:35;::::0;;;;:43:::1;5962:5:::0;;5924:35;:43:::1;:::i;:::-;;5983:39;6000:14;6016:5;;5983:39;;;;;;;;:::i;2314:198:2:-:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:2;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:2;;32752:2:29;2394:73:2::1;::::0;::::1;32734:21:29::0;32791:2;32771:18;;;32764:30;32830:34;32810:18;;;32803:62;-1:-1:-1;;;32881:18:29;;;32874:36;32927:19;;2394:73:2::1;32550:402:29::0;2394:73:2::1;2477:28;2496:8;2477:18;:28::i;4659:254:22:-:0;4837:10;;:68;;-1:-1:-1;;;4837:68:22;;33194:6:29;33227:15;;;4837:68:22;;;33209:34:29;33279:15;;33259:18;;;33252:43;4886:4:22;33311:18:29;;;33304:60;33380:18;;;33373:34;;;4805:12:22;;-1:-1:-1;;;;;4837:10:22;;:20;;33156:19:29;;4837:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4837:68:22;;;;;;;;;;;;:::i;:::-;4830:75;;4659:254;;;;;;;:::o;1599:130:2:-;929:10:11;1662:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1662:23:2;;1654:68;;;;-1:-1:-1;;;1654:68:2;;34272:2:29;1654:68:2;;;34254:21:29;;;34291:18;;;34284:30;34350:34;34330:18;;;34323:62;34402:18;;1654:68:2;34070:356:29;1329:607:23;1522:12;1536:19;1559:203;1607:9;1631:3;1672:34;;;1708:11;1721;1734:6;1742:8;1649:102;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1649:102:23;;;;;;;;;;;;;;-1:-1:-1;;;;;1649:102:23;-1:-1:-1;;;;;;1649:102:23;;;;;;;;;;1567:4;;1559:203;;:33;:203::i;:::-;1521:241;;;;1822:7;1817:112;;1846:71;1866:11;1879;1892:6;1900:8;1910:6;1846:19;:71::i;941:175:15:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:15;-1:-1:-1;;;;;;1050:58:15;;;;;;;;;;1023:19;:86::i;1457:151:5:-;-1:-1:-1;;;;;;;;;;;1536:65:5;-1:-1:-1;;;;;1536:65:5;;1457:151::o;2789:84:17:-;1334:13:2;:11;:13::i;2820:944:5:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:5;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:5;;;;;;;;-1:-1:-1;;3383:63:5;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:5;;35382:2:29;3610:56:5;;;35364:21:29;35421:2;35401:18;;;35394:30;35460:34;35440:18;;;35433:62;-1:-1:-1;;;35511:18:29;;;35504:44;35565:19;;3610:56:5;35180:410:29;3379:302:5;-1:-1:-1;;;;;;;;;;;3496:28:5;;3488:82;;;;-1:-1:-1;;;3488:82:5;;35797:2:29;3488:82:5;;;35779:21:29;35836:2;35816:18;;;35809:30;35875:34;35855:18;;;35848:62;-1:-1:-1;;;35926:18:29;;;35919:39;35975:19;;3488:82:5;35595:405:29;3488:82:5;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2580:287:9:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:9;;36207:2:29;2704:63:9;;;36189:21:29;36246:2;36226:18;;;36219:30;36285:33;36265:18;;;36258:61;36336:18;;2704:63:9;36005:355:29;2704:63:9;1830:1;2842:7;:18;2580:287::o;11671:451:17:-;11796:4;11857:18;11885:8;-1:-1:-1;;;;;11878:26:17;;11913:4;11878:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11857:62;-1:-1:-1;11930:66:17;-1:-1:-1;;;;;11930:33:17;;11964:5;11979:4;11986:9;11930:33;:66::i;:::-;12027:41;;-1:-1:-1;;;12027:41:17;;12007:17;;-1:-1:-1;;;;;12027:26:17;;;;;:41;;12062:4;;12027:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12007:61;-1:-1:-1;12086:28:17;12101:13;12007:61;12086:28;:::i;:::-;12079:35;11671:451;-1:-1:-1;;;;;;11671:451:17:o;12786:717::-;12878:4;12901:12;12923:8;-1:-1:-1;;;;;12916:21:17;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12901:38;-1:-1:-1;;;;;;12958:20:17;;12950:70;;;;-1:-1:-1;;;12950:70:17;;36823:2:29;12950:70:17;;;36805:21:29;36862:2;36842:18;;;36835:30;36901:34;36881:18;;;36874:62;-1:-1:-1;;;36952:18:29;;;36945:35;36997:19;;12950:70:17;36621:401:29;12950:70:17;13031:6;13040:34;:32;:34::i;:::-;13031:43;;13109:7;13125:1;13120:2;:6;13119:50;;13166:2;13119:50;;;13129:25;13151:2;-1:-1:-1;;13129:25:17;:::i;:::-;:29;;13157:1;13129:29;:::i;:::-;13109:60;;13180:26;13226:4;13180:51;;13243:10;13255;13271:9;-1:-1:-1;;;;;13271:21:17;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13242:52;;;;;13305:10;13340:8;-1:-1:-1;;;;;13318:30:17;:9;-1:-1:-1;;;;;13318:16:17;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13318:30:17;;:154;;13469:2;-1:-1:-1;;;;;13464:8:17;13459:2;13449:7;13443:2;-1:-1:-1;;;;;13438:8:17;:18;;;;:::i;:::-;:23;;;;:::i;:::-;:34;;;;:::i;:::-;13318:154;;;13407:2;-1:-1:-1;;;;;13402:8:17;13397:2;13387:7;13381:2;-1:-1:-1;;;;;13376:8:17;:18;;;;:::i;:::-;:23;;;;:::i;:::-;:34;;;;:::i;:::-;13305:167;12786:717;-1:-1:-1;;;;;;;;;;12786:717:17:o;6102:655::-;6374:35;6394:14;;6374:19;:35::i;:::-;6420:20;6443:55;6462:12;6476:9;6487:10;6443:18;:55::i;:::-;6420:78;-1:-1:-1;6509:201:17;6531:14;6420:78;6582:25;;;;:11;:25;:::i;:::-;6622:29;;;;;;;;:::i;:::-;6666:14;;6509:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6695:4:17;;-1:-1:-1;6509:7:17;;-1:-1:-1;;6509:201:17:i;:::-;-1:-1:-1;;6721:11:17;:28;;-1:-1:-1;;6721:28:17;;;;;;;;;;;;;-1:-1:-1;;;;;;6102:655:17:o;2873:209:9:-;1787:1;3053:7;:22;2873:209::o;9812:1647:17:-;9990:26;;;;;;;:11;:26;;;;;;;;9982:75;;;;-1:-1:-1;;;9982:75:17;;38348:2:29;9982:75:17;;;38330:21:29;38387:2;38367:18;;;38360:30;38426:34;38406:18;;;38399:62;-1:-1:-1;;;38477:18:29;;;38470:34;38521:19;;9982:75:17;38146:400:29;9982:75:17;10071:16;10089;10107:10;10119:11;10134:31;10156:8;10134:21;:31::i;:::-;10070:95;;;;;;;;10176:13;10200:14;10228:6;10225:366;;;10259:4;;-1:-1:-1;;;;;10259:4:17;;-1:-1:-1;10290:29:17;10307:11;10290:16;:29::i;:::-;10278:41;;10225:366;;;10360:8;10352:16;;10383:12;10405:5;-1:-1:-1;;;;;10398:18:17;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10383:35;-1:-1:-1;;;;;;10441:20:17;;10433:81;;;;-1:-1:-1;;;10433:81:17;;38753:2:29;10433:81:17;;;38735:21:29;38792:2;38772:18;;;38765:30;38831:34;38811:18;;;38804:62;-1:-1:-1;;;38882:18:29;;;38875:46;38938:19;;10433:81:17;38551:412:29;10433:81:17;10541:38;10560:11;10573:5;10541:18;:38::i;:::-;10529:50;;10337:254;10225:366;10610:12;;-1:-1:-1;;;10610:12:17;;;;10609:13;:37;;;;-1:-1:-1;;;;;;10627:19:17;;;;;;:12;:19;;;;;;;;10626:20;10609:37;10601:69;;;;-1:-1:-1;;;10601:69:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;10689:22:17;;;;;;:15;:22;;;;;;;;10681:70;;;;-1:-1:-1;;;10681:70:17;;39170:2:29;10681:70:17;;;39152:21:29;39209:2;39189:18;;;39182:30;39248:34;39228:18;;;39221:62;-1:-1:-1;;;39299:18:29;;;39292:33;39342:19;;10681:70:17;38968:399:29;10681:70:17;-1:-1:-1;;;;;10797:13:17;;10784:10;10797:13;;;:6;:13;;;;;;10829:18;;;;10821:66;;;;-1:-1:-1;;;10821:66:17;;39574:2:29;10821:66:17;;;39556:21:29;39613:2;39593:18;;;39586:30;39652:34;39632:18;;;39625:62;-1:-1:-1;;;39703:18:29;;;39696:33;39746:19;;10821:66:17;39372:399:29;10821:66:17;10914:17;10922:9;10914:5;:17;:::i;:::-;-1:-1:-1;;;;;10898:13:17;;;;;;:6;:13;;;;;:33;10980:11;;:53;;11020:9;11031:1;10980:53;;;10998:18;11006:9;10998:7;:18::i;:::-;-1:-1:-1;11096:4:17;;10964:69;;-1:-1:-1;;;;;;11087:13:17;;;11096:4;;11087:13;:23;;;;;11104:6;11087:23;11083:369;;;11140:4;;11127:42;;-1:-1:-1;;;;;11140:4:17;11154:2;11159:9;11127:12;:42::i;:::-;11189:34;;2947:25:29;;;-1:-1:-1;;;;;11189:34:17;;;11205:1;;-1:-1:-1;;;;;;;;;;;11189:34:17;2935:2:29;2920:18;11189:34:17;;;;;;;11083:369;;;-1:-1:-1;;;;;11261:16:17;;;:39;;11298:2;11261:39;;;11288:6;11261:39;11256:44;-1:-1:-1;11350:41:17;-1:-1:-1;;;;;11350:26:17;;11256:44;11381:9;11350:26;:41::i;:::-;11426:2;-1:-1:-1;;;;;11411:29:17;11419:5;-1:-1:-1;;;;;11411:29:17;-1:-1:-1;;;;;;;;;;;11430:9:17;11411:29;;;;2947:25:29;;2935:2;2920:18;;2801:177;11411:29:17;;;;;;;;11083:369;9971:1488;;;;;;;9812:1647;;;;:::o;16348:354::-;16437:22;;-1:-1:-1;;;16437:22:17;;;;:41;;;;-1:-1:-1;16463:11:17;;;;:15;;16437:41;16433:262;;;16510:11;;16495:74;;16510:11;;;16551:14;;16495:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16495:74:17;-1:-1:-1;16495:14:17;;-1:-1:-1;;16495:74:17:i;16433:262::-;16610:26;;16602:81;;;;-1:-1:-1;;;16602:81:17;;40110:2:29;16602:81:17;;;40092:21:29;40149:2;40129:18;;;40122:30;40188:34;40168:18;;;40161:62;-1:-1:-1;;;40239:18:29;;;40232:40;40289:19;;16602:81:17;39908:406:29;15150:402:17;15283:12;15308:20;15331:30;15354:6;15331:22;:30::i;:::-;15308:53;;15372:23;15398:33;15421:9;15398:22;:33::i;:::-;15462:82;;15485:18;15462:82;;;40528:49:29;40593:11;;;40586:27;;;40629:12;;;40622:28;;;40666:12;;;40659:28;;;15372:59:17;;-1:-1:-1;40703:12:29;;15462:82:17;;;;;;;;;;;;15442:102;;;;15150:402;;;;;:::o;9471:2833:20:-;9591:12;9640:7;9624:12;9640:7;9634:2;9624:12;:::i;:::-;:23;;9616:50;;;;-1:-1:-1;;;9616:50:20;;40928:2:29;9616:50:20;;;40910:21:29;40967:2;40947:18;;;40940:30;-1:-1:-1;;;40986:18:29;;;40979:44;41040:18;;9616:50:20;40726:338:29;9616:50:20;9702:16;9711:7;9702:6;:16;:::i;:::-;9685:6;:13;:33;;9677:63;;;;-1:-1:-1;;;9677:63:20;;41271:2:29;9677:63:20;;;41253:21:29;41310:2;41290:18;;;41283:30;-1:-1:-1;;;41329:18:29;;;41322:47;41386:18;;9677:63:20;41069:341:29;9677:63:20;9753:22;9819:15;;9848:2005;;;;11997:4;11991:11;11978:24;;12186:1;12175:9;12168:20;12236:4;12225:9;12221:20;12215:4;12208:34;9812:2445;;9848:2005;10033:4;10027:11;10014:24;;10702:2;10693:7;10689:16;11090:9;11083:17;11077:4;11073:28;11061:9;11050;11046:25;11042:60;11139:7;11135:2;11131:16;11396:6;11382:9;11375:17;11369:4;11365:28;11353:9;11345:6;11341:22;11337:57;11333:70;11167:434;11430:3;11426:2;11423:11;11167:434;;;11572:9;;11561:21;;11472:4;11464:13;;;;11505;11167:434;;;-1:-1:-1;;11621:26:20;;;11833:2;11816:11;-1:-1:-1;;11812:25:20;11806:4;11799:39;-1:-1:-1;9812:2445:20;-1:-1:-1;12287:9:20;9471:2833;-1:-1:-1;;;;9471:2833:20:o;1423:320:10:-;-1:-1:-1;;;;;1713:19:10;;:23;;;1423:320::o;1042:67:8:-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;1003:95:2:-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1065:26:2::1;:24;:26::i;673:141:23:-:0;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;762:44:23::1;796:9;762:33;:44::i;1868:111:9:-:0;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1938:34:9::1;:32;:34::i;2878:489:17:-:0;3279:19:7;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:7;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:7;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:7;;;;;;;:::i;:::-;3536:12;:16;;-1:-1:-1;;3536:16:7;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:7;;;;;3562:65;2945:9:17::1;:19;::::0;;:64;;-1:-1:-1;;;;;;2945:64:17;;::::1;2967:42;2945:64;::::0;;;3031:13;:58;;;::::1;3047:42;3031:58;::::0;;3111:15;:60;;;::::1;3129:42;3111:60;::::0;;3203:5:::1;2945:19;3193:16:::0;;;;:61;;;;::::1;3212:42;3193:61;::::0;;;3291:12:::1;12731:9:::0;;12623:155;3291:12:::1;3347:14;::::0;;;:9:::1;:14;::::0;;;;;3314:8:::1;:48:::0;;-1:-1:-1;;;;;;3314:48:17::1;-1:-1:-1::0;;;;;3347:14:17;;::::1;3314:48:::0;;;::::1;::::0;;-1:-1:-1;3647:99:7;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:7;;;3721:14;;-1:-1:-1;11192:36:29;;-1:-1:-1;;;;;;;;;;;3721:14:7;11180:2:29;11165:18;3721:14:7;11050:184:29;2666:187:2;2758:6;;;-1:-1:-1;;;;;2774:17:2;;;-1:-1:-1;;;;;;2774:17:2;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1132:1309:21:-;1291:4;1297:12;1359;1382:13;1406:24;1443:8;1433:19;;-1:-1:-1;;;;;1433:19:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1433:19:21;;1406:46;;1962:1;1932;1894:9;1888:16;1855:4;1844:9;1840:20;1805:1;1766:7;1736:4;1713:275;1701:287;;2057:16;2046:27;;2102:8;2093:7;2090:21;2087:78;;;2142:8;2131:19;;2087:78;2252:7;2239:11;2232:28;2374:7;2371:1;2364:4;2351:11;2347:22;2332:50;2411:8;;;;-1:-1:-1;1132:1309:21;-1:-1:-1;;;;;;1132:1309:21:o;1944:375:23:-;2220:8;2210:19;;;;;;2159:14;:27;2174:11;2159:27;;;;;;;;;;;;;;;2187:11;2159:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2159:48:23;;;;;;;;;:70;;;;2245:66;;;;2259:11;;2272;;2200:6;;2293:8;;2303:7;;2245:66;:::i;:::-;;;;;;;;1944:375;;;;;:::o;5196:642:15:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:15;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:15;;43292:2:29;5720:111:15;;;43274:21:29;43331:2;43311:18;;;43304:30;43370:34;43350:18;;;43343:62;-1:-1:-1;;;43421:18:29;;;43414:40;43471:19;;5720:111:15;43090:406:29;1699:281:5;1780:48;1810:17;1780:29;:48::i;:::-;1772:106;;;;-1:-1:-1;;;1772:106:5;;43703:2:29;1772:106:5;;;43685:21:29;43742:2;43722:18;;;43715:30;43781:34;43761:18;;;43754:62;-1:-1:-1;;;43832:18:29;;;43825:43;43885:19;;1772:106:5;43501:409:29;1772:106:5;-1:-1:-1;;;;;;;;;;;1888:85:5;;-1:-1:-1;;;;;;1888:85:5;-1:-1:-1;;;;;1888:85:5;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;1355:203:15:-;1482:68;;-1:-1:-1;;;;;44173:15:29;;;1482:68:15;;;44155:34:29;44225:15;;44205:18;;;44198:43;44257:18;;;44250:34;;;1455:96:15;;1475:5;;-1:-1:-1;;;1505:27:15;44090:18:29;;1482:68:15;43915:375:29;2780:614:22;3064:32;;;3035:26;3064:32;;;:19;:32;;;;;3035:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3115:13;:20;3139:1;3115:25;3107:86;;;;-1:-1:-1;;;3107:86:22;;44497:2:29;3107:86:22;;;44479:21:29;44536:2;44516:18;;;44509:30;44575:34;44555:18;;;44548:62;-1:-1:-1;;;44626:18:29;;;44619:46;44682:19;;3107:86:22;44295:412:29;3107:86:22;3204:47;3222:11;3235:8;:15;3204:17;:47::i;:::-;3262:10;;:124;;-1:-1:-1;;;3262:124:22;;-1:-1:-1;;;;;3262:10:22;;;;:15;;3285:10;;3262:124;;3297:11;;3310:13;;3325:8;;3335:14;;3351:18;;3371:14;;3262:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3024:370;2780:614;;;;;;:::o;15663:677:17:-;15763:10;15788:13;15816:16;15847:11;15894:8;:15;15913:2;15894:21;15886:69;;;;-1:-1:-1;;;15886:69:17;;45756:2:29;15886:69:17;;;45738:21:29;45795:2;45775:18;;;45768:30;45834:34;45814:18;;;45807:62;-1:-1:-1;;;45885:18:29;;;45878:33;45928:19;;15886:69:17;45554:399:29;15886:69:17;15966:21;16007:8;16016:1;16007:11;;;;;;;;:::i;:::-;;;;;;;15990:30;;;;;;;;:::i;:::-;15966:54;-1:-1:-1;16053:23:17;16039:10;:37;;;;;;;;:::i;:::-;;16031:82;;;;-1:-1:-1;;;16031:82:17;;46292:2:29;16031:82:17;;;46274:21:29;;;46311:18;;;46304:30;46370:34;46350:18;;;46343:62;46422:18;;16031:82:17;46090:356:29;16031:82:17;16177:2;16167:8;16163:17;16157:24;16148:33;;16224:2;16214:8;16210:17;16204:24;16195:33;;16274:2;16264:8;16260:17;16254:24;16242:36;;16314:8;16323:2;16314:12;;;;;;;;:::i;:::-;;;;;;;;;16308:19;;:24;;16331:1;16308:24;16299:33;;15875:465;15663:677;;;;;:::o;14225:275::-;14291:4;14313:6;14322:34;:32;:34::i;:::-;14313:43;;14391:7;14407:1;14402:2;:6;14401:50;;14448:2;14401:50;;;14411:25;14433:2;-1:-1:-1;;14411:25:17;:::i;:::-;:29;;14439:1;14411:29;:::i;:::-;14391:60;-1:-1:-1;14391:60:17;14469:18;:11;14483:4;14469:18;:::i;:::-;:23;;;;:::i;13511:706::-;13624:4;13641:12;13663:8;-1:-1:-1;;;;;13656:21:17;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13641:38;;13690:6;13699:34;:32;:34::i;:::-;13690:43;;13768:7;13784:1;13779:2;:6;13778:50;;13825:2;13778:50;;;13788:25;13810:2;-1:-1:-1;;13788:25:17;:::i;:::-;:29;;13816:1;13788:29;:::i;:::-;13768:60;;13839:26;13885:4;13839:51;;13902:10;13914;13930:9;-1:-1:-1;;;;;13930:21:17;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13901:52;;;;;13964:14;14004:8;-1:-1:-1;;;;;13982:30:17;:9;-1:-1:-1;;;;;13982:16:17;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13982:30:17;;13981:170;;14149:2;14143;-1:-1:-1;;;;;14138:8:17;14132:2;-1:-1:-1;;;;;14127:8:17;14113:11;:22;;;;:::i;:::-;:33;;;;:::i;:::-;:38;;;;:::i;:::-;13981:170;;;14080:2;14074;-1:-1:-1;;;;;14069:8:17;14063:2;-1:-1:-1;;;;;14058:8:17;14044:11;:22;;;;:::i;:::-;:33;;;;:::i;:::-;:38;;;;:::i;:::-;13964:187;;14185:24;14200:8;14185:14;:24::i;:::-;14181:28;;:2;:28;:::i;:::-;14169:40;;:9;:40;:::i;14836:223::-;14912:19;14933:8;1425:5;14979:11;;14967:9;:23;;;;:::i;:::-;14966:42;;;;:::i;:::-;14960:48;-1:-1:-1;15036:15:17;14960:48;15036:9;:15;:::i;:::-;15019:32;;14836:223;;;:::o;11467:196::-;11593:30;;-1:-1:-1;;;11593:30:17;;;;;2947:25:29;;;-1:-1:-1;;;;;11593:21:17;;;;;2920:18:29;;11593:30:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11634:21:17;;-1:-1:-1;;;;;11634:12:17;;;-1:-1:-1;11634:21:17;;;;;-1:-1:-1;11647:7:17;;11634:21;;;;11647:7;11634:12;:21;;;;;;;;;;;;;;;;;;;3402:463:22;3581:21;3605:28;3618:14;3605:12;:28::i;:::-;3663;;;;3644:16;3663:28;;;:15;:28;;;;;;;;:35;;;;;;;;;;3581:52;;-1:-1:-1;3717:15:22;3709:54;;;;-1:-1:-1;;;3709:54:22;;48036:2:29;3709:54:22;;;48018:21:29;48075:2;48055:18;;;48048:30;-1:-1:-1;;;48094:18:29;;;48087:56;48160:18;;3709:54:22;47834:350:29;3709:54:22;3802:23;3816:9;3802:11;:23;:::i;:::-;3782:16;:43;;3774:83;;;;-1:-1:-1;;;3774:83:22;;48391:2:29;3774:83:22;;;48373:21:29;48430:2;48410:18;;;48403:30;-1:-1:-1;;;48449:18:29;;;48442:57;48516:18;;3774:83:22;48189:351:29;3115:148:1;-1:-1:-1;;;;;3232:23:1;;3115:148::o;1104:111:2:-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1176:32:2::1;929:10:11::0;1176:18:2::1;:32::i;822:130:23:-:0;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;921:23:23::1;934:9;921:12;:23::i;1985:109:9:-:0;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;4108:223:16:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;2086:152:5:-;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:5;;;;;;;;2086:152;:::o;6685:198:10:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;4152:402:22:-;4275:35;;;4251:21;4275:35;;;:22;:35;;;;;;;4325:21;;;4321:138;;-1:-1:-1;761:5:22;4321:138;4493:16;4477:12;:32;;4469:77;;;;-1:-1:-1;;;4469:77:22;;48747:2:29;4469:77:22;;;48729:21:29;;;48766:18;;;48759:30;48825:34;48805:18;;;48798:62;48877:18;;4469:77:22;48545:356:29;14508:320:17;14657:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14657:37:17;-1:-1:-1;;;14657:37:17;;;14625:80;;14571:5;;;;;;-1:-1:-1;;;;;14625:17:17;;;:80;;14657:37;14625:80;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14589:116;;;;14724:7;14716:61;;;;-1:-1:-1;;;14716:61:17;;49108:2:29;14716:61:17;;;49090:21:29;49147:2;49127:18;;;49120:30;49186:34;49166:18;;;49159:62;-1:-1:-1;;;49237:18:29;;;49230:39;49286:19;;14716:61:17;48906:405:29;14716:61:17;14806:4;14795:25;;;;;;;;;;;;:::i;3873:271:22:-;3955:13;4014:2;3989:14;:21;:27;;3981:68;;;;-1:-1:-1;;;3981:68:22;;49796:2:29;3981:68:22;;;49778:21:29;49835:2;49815:18;;;49808:30;-1:-1:-1;;;49854:18:29;;;49847:58;49922:18;;3981:68:22;49594:352:29;3981:68:22;-1:-1:-1;4122:2:22;4102:23;4096:30;;3873:271::o;1306:146::-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1384:16:22::1;:14;:16::i;:::-;1411:33;1434:9;1411:22;:33::i;5165:446:16:-:0;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:16;;50153:2:29;5354:81:16;;;50135:21:29;50192:2;50172:18;;;50165:30;50231:34;50211:18;;;50204:62;-1:-1:-1;;;50282:18:29;;;50275:36;50328:19;;5354:81:16;49951:402:29;5354:81:16;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:16;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:16:o;7069:325:10:-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:10;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;1460:138:22:-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1548:10:22::1;:42:::0;;-1:-1:-1;;;;;;1548:42:22::1;-1:-1:-1::0;;;;;1548:42:22;;;::::1;::::0;;;::::1;::::0;;1460:138::o;7671:628:16:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;-1:-1:-1;;;8113:60:16;;50560:2:29;8113:60:16;;;50542:21:29;50599:2;50579:18;;;50572:30;50638:31;50618:18;;;50611:59;50687:18;;8113:60:16;50358:353:29;8113:60:16;-1:-1:-1;8208:10:16;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:16;;;;;;;;:::i;14:180:29:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:29;;14:180;-1:-1:-1;14:180:29:o;199:159::-;266:20;;326:6;315:18;;305:29;;295:57;;348:1;345;338:12;295:57;199:159;;;:::o;363:347::-;414:8;424:6;478:3;471:4;463:6;459:17;455:27;445:55;;496:1;493;486:12;445:55;-1:-1:-1;519:20:29;;-1:-1:-1;;;;;551:30:29;;548:50;;;594:1;591;584:12;548:50;631:4;623:6;619:17;607:29;;683:3;676:4;667:6;659;655:19;651:30;648:39;645:59;;;700:1;697;690:12;645:59;363:347;;;;;:::o;715:171::-;782:20;;-1:-1:-1;;;;;831:30:29;;821:41;;811:69;;876:1;873;866:12;891:862;997:6;1005;1013;1021;1029;1037;1090:3;1078:9;1069:7;1065:23;1061:33;1058:53;;;1107:1;1104;1097:12;1058:53;1130:28;1148:9;1130:28;:::i;:::-;1120:38;-1:-1:-1;1209:2:29;1194:18;;1181:32;-1:-1:-1;;;;;1262:14:29;;;1259:34;;;1289:1;1286;1279:12;1259:34;1328:58;1378:7;1369:6;1358:9;1354:22;1328:58;:::i;:::-;1405:8;;-1:-1:-1;1302:84:29;-1:-1:-1;1302:84:29;;-1:-1:-1;1459:37:29;1492:2;1477:18;;1459:37;:::i;:::-;1449:47;;1549:2;1538:9;1534:18;1521:32;1505:48;;1578:2;1568:8;1565:16;1562:36;;;1594:1;1591;1584:12;1562:36;;1633:60;1685:7;1674:8;1663:9;1659:24;1633:60;:::i;:::-;891:862;;;;-1:-1:-1;891:862:29;;-1:-1:-1;891:862:29;;1712:8;;891:862;-1:-1:-1;;;891:862:29:o;1758:184::-;1816:6;1869:2;1857:9;1848:7;1844:23;1840:32;1837:52;;;1885:1;1882;1875:12;1837:52;1908:28;1926:9;1908:28;:::i;1947:252::-;2014:6;2022;2075:2;2063:9;2054:7;2050:23;2046:32;2043:52;;;2091:1;2088;2081:12;2043:52;2114:28;2132:9;2114:28;:::i;:::-;2104:38;2189:2;2174:18;;;;2161:32;;-1:-1:-1;;;1947:252:29:o;2204:131::-;-1:-1:-1;;;;;2279:31:29;;2269:42;;2259:70;;2325:1;2322;2315:12;2340:456;2417:6;2425;2433;2486:2;2474:9;2465:7;2461:23;2457:32;2454:52;;;2502:1;2499;2492:12;2454:52;2541:9;2528:23;2560:31;2585:5;2560:31;:::i;:::-;2610:5;-1:-1:-1;2667:2:29;2652:18;;2639:32;2680:33;2639:32;2680:33;:::i;:::-;2340:456;;2732:7;;-1:-1:-1;;;2786:2:29;2771:18;;;;2758:32;;2340:456::o;2983:247::-;3042:6;3095:2;3083:9;3074:7;3070:23;3066:32;3063:52;;;3111:1;3108;3101:12;3063:52;3150:9;3137:23;3169:31;3194:5;3169:31;:::i;3235:158::-;3298:5;3343:2;3334:6;3329:3;3325:16;3321:25;3318:45;;;3359:1;3356;3349:12;3318:45;-1:-1:-1;3381:6:29;3235:158;-1:-1:-1;3235:158:29:o;3398:1100::-;3549:6;3557;3565;3573;3581;3589;3597;3605;3658:3;3646:9;3637:7;3633:23;3629:33;3626:53;;;3675:1;3672;3665:12;3626:53;3698:28;3716:9;3698:28;:::i;:::-;3688:38;;3776:2;3765:9;3761:18;3748:32;3789:31;3814:5;3789:31;:::i;:::-;3839:5;-1:-1:-1;3891:2:29;3876:18;;3863:32;;-1:-1:-1;3947:2:29;3932:18;;3919:32;3960:33;3919:32;3960:33;:::i;:::-;4012:7;-1:-1:-1;4071:3:29;4056:19;;4043:33;4085;4043;4085;:::i;:::-;4137:7;-1:-1:-1;4163:67:29;4222:7;4216:3;4201:19;;4163:67;:::i;:::-;4153:77;-1:-1:-1;4281:3:29;4266:19;;4253:33;-1:-1:-1;;;;;4298:30:29;;4295:50;;;4341:1;4338;4331:12;4295:50;4380:58;4430:7;4421:6;4410:9;4406:22;4380:58;:::i;:::-;3398:1100;;;;-1:-1:-1;3398:1100:29;;-1:-1:-1;3398:1100:29;;;;;;4457:8;-1:-1:-1;;;3398:1100:29:o;4503:481::-;4581:6;4589;4597;4650:2;4638:9;4629:7;4625:23;4621:32;4618:52;;;4666:1;4663;4656:12;4618:52;4689:28;4707:9;4689:28;:::i;:::-;4679:38;-1:-1:-1;4768:2:29;4753:18;;4740:32;-1:-1:-1;;;;;4784:30:29;;4781:50;;;4827:1;4824;4817:12;4781:50;4866:58;4916:7;4907:6;4896:9;4892:22;4866:58;:::i;:::-;4503:481;;4943:8;;-1:-1:-1;4840:84:29;;-1:-1:-1;;;;4503:481:29:o;5181:203::-;-1:-1:-1;;;;;5345:32:29;;;;5327:51;;5315:2;5300:18;;5181:203::o;5389:127::-;5450:10;5445:3;5441:20;5438:1;5431:31;5481:4;5478:1;5471:15;5505:4;5502:1;5495:15;5521:275;5592:2;5586:9;5657:2;5638:13;;-1:-1:-1;;5634:27:29;5622:40;;-1:-1:-1;;;;;5677:34:29;;5713:22;;;5674:62;5671:88;;;5739:18;;:::i;:::-;5775:2;5768:22;5521:275;;-1:-1:-1;5521:275:29:o;5801:186::-;5849:4;-1:-1:-1;;;;;5871:30:29;;5868:56;;;5904:18;;:::i;:::-;-1:-1:-1;5970:2:29;5949:15;-1:-1:-1;;5945:29:29;5976:4;5941:40;;5801:186::o;5992:462::-;6034:5;6087:3;6080:4;6072:6;6068:17;6064:27;6054:55;;6105:1;6102;6095:12;6054:55;6141:6;6128:20;6172:48;6188:31;6216:2;6188:31;:::i;:::-;6172:48;:::i;:::-;6245:2;6236:7;6229:19;6291:3;6284:4;6279:2;6271:6;6267:15;6263:26;6260:35;6257:55;;;6308:1;6305;6298:12;6257:55;6373:2;6366:4;6358:6;6354:17;6347:4;6338:7;6334:18;6321:55;6421:1;6396:16;;;6414:4;6392:27;6385:38;;;;6400:7;5992:462;-1:-1:-1;;;5992:462:29:o;6459:455::-;6536:6;6544;6597:2;6585:9;6576:7;6572:23;6568:32;6565:52;;;6613:1;6610;6603:12;6565:52;6652:9;6639:23;6671:31;6696:5;6671:31;:::i;:::-;6721:5;-1:-1:-1;6777:2:29;6762:18;;6749:32;-1:-1:-1;;;;;6793:30:29;;6790:50;;;6836:1;6833;6826:12;6790:50;6859:49;6900:7;6891:6;6880:9;6876:22;6859:49;:::i;:::-;6849:59;;;6459:455;;;;;:::o;7101:118::-;7187:5;7180:13;7173:21;7166:5;7163:32;7153:60;;7209:1;7206;7199:12;7224:313;7288:6;7296;7349:2;7337:9;7328:7;7324:23;7320:32;7317:52;;;7365:1;7362;7355:12;7317:52;7388:28;7406:9;7388:28;:::i;:::-;7378:38;;7466:2;7455:9;7451:18;7438:32;7479:28;7501:5;7479:28;:::i;:::-;7526:5;7516:15;;;7224:313;;;;;:::o;7542:464::-;7626:6;7634;7642;7695:2;7683:9;7674:7;7670:23;7666:32;7663:52;;;7711:1;7708;7701:12;7663:52;7734:28;7752:9;7734:28;:::i;:::-;7724:38;-1:-1:-1;7813:2:29;7798:18;;7785:32;-1:-1:-1;;;;;7829:30:29;;7826:50;;;7872:1;7869;7862:12;7826:50;7895:49;7936:7;7927:6;7916:9;7912:22;7895:49;:::i;:::-;7885:59;;;7963:37;7996:2;7985:9;7981:18;7963:37;:::i;:::-;7953:47;;7542:464;;;;;:::o;8011:241::-;8067:6;8120:2;8108:9;8099:7;8095:23;8091:32;8088:52;;;8136:1;8133;8126:12;8088:52;8175:9;8162:23;8194:28;8216:5;8194:28;:::i;8257:319::-;8324:6;8332;8385:2;8373:9;8364:7;8360:23;8356:32;8353:52;;;8401:1;8398;8391:12;8353:52;8424:28;8442:9;8424:28;:::i;:::-;8414:38;;8502:2;8491:9;8487:18;8474:32;8515:31;8540:5;8515:31;:::i;8581:250::-;8666:1;8676:113;8690:6;8687:1;8684:13;8676:113;;;8766:11;;;8760:18;8747:11;;;8740:39;8712:2;8705:10;8676:113;;;-1:-1:-1;;8823:1:29;8805:16;;8798:27;8581:250::o;8836:270::-;8877:3;8915:5;8909:12;8942:6;8937:3;8930:19;8958:76;9027:6;9020:4;9015:3;9011:14;9004:4;8997:5;8993:16;8958:76;:::i;:::-;9088:2;9067:15;-1:-1:-1;;9063:29:29;9054:39;;;;9095:4;9050:50;;8836:270;-1:-1:-1;;8836:270:29:o;9111:217::-;9258:2;9247:9;9240:21;9221:4;9278:44;9318:2;9307:9;9303:18;9295:6;9278:44;:::i;9526:612::-;9641:6;9649;9657;9665;9718:3;9706:9;9697:7;9693:23;9689:33;9686:53;;;9735:1;9732;9725:12;9686:53;9758:28;9776:9;9758:28;:::i;:::-;9748:38;;9805:66;9863:7;9858:2;9847:9;9843:18;9805:66;:::i;:::-;9795:76;-1:-1:-1;9922:2:29;9907:18;;9894:32;-1:-1:-1;;;;;9938:30:29;;9935:50;;;9981:1;9978;9971:12;9935:50;10020:58;10070:7;10061:6;10050:9;10046:22;10020:58;:::i;:::-;9526:612;;;;-1:-1:-1;10097:8:29;-1:-1:-1;;;;9526:612:29:o;10396:256::-;10462:6;10470;10523:2;10511:9;10502:7;10498:23;10494:32;10491:52;;;10539:1;10536;10529:12;10491:52;10562:28;10580:9;10562:28;:::i;:::-;10552:38;;10609:37;10642:2;10631:9;10627:18;10609:37;:::i;:::-;10599:47;;10396:256;;;;;:::o;10657:388::-;10725:6;10733;10786:2;10774:9;10765:7;10761:23;10757:32;10754:52;;;10802:1;10799;10792:12;10754:52;10841:9;10828:23;10860:31;10885:5;10860:31;:::i;11710:816::-;11843:6;11851;11859;11867;11875;11883;11936:3;11924:9;11915:7;11911:23;11907:33;11904:53;;;11953:1;11950;11943:12;11904:53;11976:28;11994:9;11976:28;:::i;:::-;11966:38;;12054:2;12043:9;12039:18;12026:32;12067:31;12092:5;12067:31;:::i;:::-;12117:5;-1:-1:-1;12169:2:29;12154:18;;12141:32;;-1:-1:-1;12192:66:29;12250:7;12245:2;12230:18;;12192:66;:::i;:::-;12182:76;-1:-1:-1;12309:3:29;12294:19;;12281:33;-1:-1:-1;;;;;12326:30:29;;12323:50;;;12369:1;12366;12359:12;12323:50;12408:58;12458:7;12449:6;12438:9;12434:22;12408:58;:::i;12711:382::-;12776:6;12784;12837:2;12825:9;12816:7;12812:23;12808:32;12805:52;;;12853:1;12850;12843:12;12805:52;12892:9;12879:23;12911:31;12936:5;12911:31;:::i;13098:622::-;13193:6;13201;13209;13217;13225;13278:3;13266:9;13257:7;13253:23;13249:33;13246:53;;;13295:1;13292;13285:12;13246:53;13318:28;13336:9;13318:28;:::i;:::-;13308:38;;13365:37;13398:2;13387:9;13383:18;13365:37;:::i;:::-;13355:47;-1:-1:-1;13449:2:29;13434:18;;13421:32;;-1:-1:-1;13504:2:29;13489:18;;13476:32;-1:-1:-1;;;;;13520:30:29;;13517:50;;;13563:1;13560;13553:12;13517:50;13602:58;13652:7;13643:6;13632:9;13628:22;13602:58;:::i;:::-;13098:622;;;;-1:-1:-1;13098:622:29;;-1:-1:-1;13679:8:29;;13576:84;13098:622;-1:-1:-1;;;13098:622:29:o;13725:324::-;13800:6;13808;13816;13869:2;13857:9;13848:7;13844:23;13840:32;13837:52;;;13885:1;13882;13875:12;13837:52;13908:28;13926:9;13908:28;:::i;:::-;13898:38;;13955:37;13988:2;13977:9;13973:18;13955:37;:::i;:::-;13945:47;;14039:2;14028:9;14024:18;14011:32;14001:42;;13725:324;;;;;:::o;14054:460::-;14138:6;14146;14154;14162;14215:3;14203:9;14194:7;14190:23;14186:33;14183:53;;;14232:1;14229;14222:12;14183:53;14255:28;14273:9;14255:28;:::i;:::-;14245:38;;14302:37;14335:2;14324:9;14320:18;14302:37;:::i;:::-;14292:47;;14389:2;14378:9;14374:18;14361:32;14402:31;14427:5;14402:31;:::i;:::-;14054:460;;;;-1:-1:-1;14452:5:29;;14504:2;14489:18;14476:32;;-1:-1:-1;;14054:460:29:o;15237:380::-;15316:1;15312:12;;;;15359;;;15380:61;;15434:4;15426:6;15422:17;15412:27;;15380:61;15487:2;15479:6;15476:14;15456:18;15453:38;15450:161;;15533:10;15528:3;15524:20;15521:1;15514:31;15568:4;15565:1;15558:15;15596:4;15593:1;15586:15;15622:271;15805:6;15797;15792:3;15779:33;15761:3;15831:16;;15856:13;;;15831:16;15622:271;-1:-1:-1;15622:271:29:o;16305:351::-;16507:2;16489:21;;;16546:2;16526:18;;;16519:30;-1:-1:-1;;;16580:2:29;16565:18;;16558:57;16647:2;16632:18;;16305:351::o;16661:274::-;-1:-1:-1;;;;;16853:32:29;;;;16835:51;;16917:2;16902:18;;16895:34;16823:2;16808:18;;16661:274::o;16940:408::-;17142:2;17124:21;;;17181:2;17161:18;;;17154:30;-1:-1:-1;;;;;;;;;;;17215:2:29;17200:18;;17193:62;-1:-1:-1;;;17286:2:29;17271:18;;17264:42;17338:3;17323:19;;16940:408::o;17353:::-;17555:2;17537:21;;;17594:2;17574:18;;;17567:30;-1:-1:-1;;;;;;;;;;;17628:2:29;17613:18;;17606:62;-1:-1:-1;;;17699:2:29;17684:18;;17677:42;17751:3;17736:19;;17353:408::o;17766:343::-;17968:2;17950:21;;;18007:2;17987:18;;;17980:30;-1:-1:-1;;;18041:2:29;18026:18;;18019:49;18100:2;18085:18;;17766:343::o;18955:127::-;19016:10;19011:3;19007:20;19004:1;18997:31;19047:4;19044:1;19037:15;19071:4;19068:1;19061:15;19087:125;19152:9;;;19173:10;;;19170:36;;;19186:18;;:::i;19217:266::-;19305:6;19300:3;19293:19;19357:6;19350:5;19343:4;19338:3;19334:14;19321:43;-1:-1:-1;19409:1:29;19384:16;;;19402:4;19380:27;;;19373:38;;;;19465:2;19444:15;;;-1:-1:-1;;19440:29:29;19431:39;;;19427:50;;19217:266::o;19488:326::-;19683:6;19675;19671:19;19660:9;19653:38;19727:2;19722;19711:9;19707:18;19700:30;19634:4;19747:61;19804:2;19793:9;19789:18;19781:6;19773;19747:61;:::i;21924:544::-;22025:2;22020:3;22017:11;22014:448;;;22061:1;22086:5;22082:2;22075:17;22131:4;22127:2;22117:19;22201:2;22189:10;22185:19;22182:1;22178:27;22172:4;22168:38;22237:4;22225:10;22222:20;22219:47;;;-1:-1:-1;22260:4:29;22219:47;22315:2;22310:3;22306:12;22303:1;22299:20;22293:4;22289:31;22279:41;;22370:82;22388:2;22381:5;22378:13;22370:82;;;22433:17;;;22414:1;22403:13;22370:82;;22473:166;-1:-1:-1;;22601:1:29;22597:11;;;22593:24;22589:29;22579:40;22625:1;22621:11;;;;22576:57;;22473:166::o;22644:1348::-;22762:10;;-1:-1:-1;;;;;22784:30:29;;22781:56;;;22817:18;;:::i;:::-;22846:96;22935:6;22895:38;22927:4;22921:11;22895:38;:::i;:::-;22889:4;22846:96;:::i;:::-;22997:4;;23061:2;23050:14;;23078:1;23073:662;;;;23779:1;23796:6;23793:89;;;-1:-1:-1;23848:19:29;;;23842:26;23793:89;23908:67;23968:6;23961:5;23908:67;:::i;:::-;23902:4;23895:81;;23043:943;;23073:662;21871:1;21864:14;;;21908:4;21895:18;;-1:-1:-1;;23109:20:29;;;23226:236;23240:7;23237:1;23234:14;23226:236;;;23329:19;;;23323:26;23308:42;;23421:27;;;;23389:1;23377:14;;;;23256:19;;23226:236;;;23230:3;23490:6;23481:7;23478:19;23475:201;;;23551:19;;;23545:26;-1:-1:-1;;23634:1:29;23630:14;;;23646:3;23626:24;23622:37;23618:42;23603:58;23588:74;;23475:201;-1:-1:-1;;;;;23722:1:29;23706:14;;;23702:22;23689:36;;-1:-1:-1;22644:1348:29:o;23997:667::-;24288:6;24276:19;;24258:38;;-1:-1:-1;;;;;24332:32:29;;24327:2;24312:18;;24305:60;24352:3;24396:2;24381:18;;24374:31;;;-1:-1:-1;;24428:45:29;;24453:19;;24445:6;24428:45;:::i;:::-;24523:6;24516:14;24509:22;24504:2;24493:9;24489:18;24482:50;24581:9;24573:6;24569:22;24563:3;24552:9;24548:19;24541:51;24609:49;24651:6;24643;24635;24609:49;:::i;:::-;24601:57;23997:667;-1:-1:-1;;;;;;;;;23997:667:29:o;24669:245::-;24748:6;24756;24809:2;24797:9;24788:7;24784:23;24780:32;24777:52;;;24825:1;24822;24815:12;24777:52;-1:-1:-1;;24848:16:29;;24904:2;24889:18;;;24883:25;24848:16;;24883:25;;-1:-1:-1;24669:245:29:o;25277:128::-;25344:9;;;25365:11;;;25362:37;;;25379:18;;:::i;25410:184::-;25480:6;25533:2;25521:9;25512:7;25508:23;25504:32;25501:52;;;25549:1;25546;25539:12;25501:52;-1:-1:-1;25572:16:29;;25410:184;-1:-1:-1;25410:184:29:o;25599:352::-;25810:6;25802;25797:3;25784:33;25905:2;25876:15;;;;-1:-1:-1;;;;;;25872:45:29;25836:16;;25861:57;;;25942:2;25934:11;;25599:352;-1:-1:-1;25599:352:29:o;26769:168::-;26842:9;;;26873;;26890:15;;;26884:22;;26870:37;26860:71;;26911:18;;:::i;27349:175::-;27427:13;;-1:-1:-1;;;;;27469:30:29;;27459:41;;27449:69;;27514:1;27511;27504:12;27529:473;27632:6;27640;27648;27656;27664;27717:3;27705:9;27696:7;27692:23;27688:33;27685:53;;;27734:1;27731;27724:12;27685:53;27757:39;27786:9;27757:39;:::i;:::-;27747:49;;27836:2;27825:9;27821:18;27815:25;27805:35;;27880:2;27869:9;27865:18;27859:25;27849:35;;27924:2;27913:9;27909:18;27903:25;27893:35;;27947:49;27991:3;27980:9;27976:19;27947:49;:::i;:::-;27937:59;;27529:473;;;;;;;;:::o;28007:410::-;28209:2;28191:21;;;28248:2;28228:18;;;28221:30;28287:34;28282:2;28267:18;;28260:62;-1:-1:-1;;;28353:2:29;28338:18;;28331:44;28407:3;28392:19;;28007:410::o;28910:498::-;29110:4;29139:6;29184:2;29176:6;29172:15;29161:9;29154:34;29236:2;29228:6;29224:15;29219:2;29208:9;29204:18;29197:43;;29276:6;29271:2;29260:9;29256:18;29249:34;29319:3;29314:2;29303:9;29299:18;29292:31;29340:62;29397:3;29386:9;29382:19;29374:6;29366;29340:62;:::i;30219:493::-;30468:6;30460;30456:19;30445:9;30438:38;30512:3;30507:2;30496:9;30492:18;30485:31;30419:4;30533:62;30590:3;30579:9;30575:19;30567:6;30559;30533:62;:::i;:::-;-1:-1:-1;;;;;30631:31:29;;;;30651:2;30611:18;;30604:59;-1:-1:-1;30694:2:29;30679:18;30672:34;30525:70;30219:493;-1:-1:-1;;;30219:493:29:o;31343:1202::-;-1:-1:-1;;;;;31457:27:29;;31454:53;;;31487:18;;:::i;:::-;31516:93;31605:3;31565:38;31597:4;31591:11;31565:38;:::i;:::-;31559:4;31516:93;:::i;:::-;31635:1;31660:2;31655:3;31652:11;31677:1;31672:615;;;;32331:1;32348:3;32345:93;;;-1:-1:-1;32404:19:29;;;32391:33;32345:93;32464:64;32524:3;32517:5;32464:64;:::i;:::-;32458:4;32451:78;;31645:894;;31672:615;21871:1;21864:14;;;21908:4;21895:18;;-1:-1:-1;;31708:17:29;;;31808:9;31830:229;31844:7;31841:1;31838:14;31830:229;;;31933:19;;;31920:33;31905:49;;32040:4;32025:20;;;;31993:1;31981:14;;;;31860:12;31830:229;;;31834:3;32087;32078:7;32075:16;32072:159;;;32211:1;32207:6;32201:3;32195;32192:1;32188:11;32184:21;32180:34;32176:39;32163:9;32158:3;32154:19;32141:33;32137:79;32129:6;32122:95;32072:159;;;32274:1;32268:3;32265:1;32261:11;32257:19;32251:4;32244:33;31645:894;;31343:1202;;;:::o;33418:647::-;33497:6;33550:2;33538:9;33529:7;33525:23;33521:32;33518:52;;;33566:1;33563;33556:12;33518:52;33593:16;;-1:-1:-1;;;;;33621:30:29;;33618:50;;;33664:1;33661;33654:12;33618:50;33687:22;;33740:4;33732:13;;33728:27;-1:-1:-1;33718:55:29;;33769:1;33766;33759:12;33718:55;33798:2;33792:9;33823:48;33839:31;33867:2;33839:31;:::i;33823:48::-;33894:2;33887:5;33880:17;33934:7;33929:2;33924;33920;33916:11;33912:20;33909:33;33906:53;;;33955:1;33952;33945:12;33906:53;33968:67;34032:2;34027;34020:5;34016:14;34011:2;34007;34003:11;33968:67;:::i;:::-;34054:5;33418:647;-1:-1:-1;;;;;33418:647:29:o;34431:555::-;34688:6;34680;34676:19;34665:9;34658:38;34732:3;34727:2;34716:9;34712:18;34705:31;34639:4;34759:45;34799:3;34788:9;34784:19;34776:6;34759:45;:::i;:::-;-1:-1:-1;;;;;34840:31:29;;34860:2;34820:18;;34813:59;34908:22;;;34903:2;34888:18;;34881:50;34948:32;34912:6;34965;34948:32;:::i;36365:251::-;36435:6;36488:2;36476:9;36467:7;36463:23;36459:32;36456:52;;;36504:1;36501;36494:12;36456:52;36536:9;36530:16;36555:31;36580:5;36555:31;:::i;37027:177::-;37106:13;;-1:-1:-1;;;;;37148:31:29;;37138:42;;37128:70;;37194:1;37191;37184:12;37209:450;37296:6;37304;37312;37365:2;37353:9;37344:7;37340:23;37336:32;37333:52;;;37381:1;37378;37371:12;37333:52;37404:40;37434:9;37404:40;:::i;:::-;37394:50;;37463:49;37508:2;37497:9;37493:18;37463:49;:::i;:::-;37453:59;;37555:2;37544:9;37540:18;37534:25;37599:10;37592:5;37588:22;37581:5;37578:33;37568:61;;37625:1;37622;37615:12;37568:61;37648:5;37638:15;;;37209:450;;;;;:::o;37664:217::-;37704:1;37730;37720:132;;37774:10;37769:3;37765:20;37762:1;37755:31;37809:4;37806:1;37799:15;37837:4;37834:1;37827:15;37720:132;-1:-1:-1;37866:9:29;;37664:217::o;39776:127::-;39837:10;39832:3;39828:20;39825:1;39818:31;39868:4;39865:1;39858:15;39892:4;39889:1;39882:15;41415:407;41617:2;41599:21;;;41656:2;41636:18;;;41629:30;41695:34;41690:2;41675:18;;41668:62;-1:-1:-1;;;41761:2:29;41746:18;;41739:41;41812:3;41797:19;;41415:407::o;41827:287::-;41956:3;41994:6;41988:13;42010:66;42069:6;42064:3;42057:4;42049:6;42045:17;42010:66;:::i;:::-;42092:16;;;;;41827:287;-1:-1:-1;;41827:287:29:o;42119:716::-;42422:6;42414;42410:19;42399:9;42392:38;42466:3;42461:2;42450:9;42446:18;42439:31;42373:4;42493:45;42533:3;42522:9;42518:19;42510:6;42493:45;:::i;:::-;-1:-1:-1;;;;;42574:31:29;;42594:2;42554:18;;42547:59;42642:22;;;42637:2;42622:18;;42615:50;42688:32;42646:6;42705;42688:32;:::i;:::-;42674:46;;42769:9;42761:6;42757:22;42751:3;42740:9;42736:19;42729:51;42797:32;42822:6;42814;42797:32;:::i;:::-;42789:40;42119:716;-1:-1:-1;;;;;;;;42119:716:29:o;42840:245::-;42907:6;42960:2;42948:9;42939:7;42935:23;42931:32;42928:52;;;42976:1;42973;42966:12;42928:52;43008:9;43002:16;43027:28;43049:5;43027:28;:::i;44712:837::-;45061:6;45053;45049:19;45038:9;45031:38;45105:3;45100:2;45089:9;45085:18;45078:31;45012:4;45132:45;45172:3;45161:9;45157:19;45149:6;45132:45;:::i;:::-;45225:9;45217:6;45213:22;45208:2;45197:9;45193:18;45186:50;45259:32;45284:6;45276;45259:32;:::i;:::-;-1:-1:-1;;;;;45365:15:29;;;45360:2;45345:18;;45338:43;45418:15;;45412:3;45397:19;;45390:44;45471:22;;;45318:3;45450:19;;45443:51;45245:46;-1:-1:-1;45511:32:29;45245:46;45528:6;45511:32;:::i;45958:127::-;46019:10;46014:3;46010:20;46007:1;46000:31;46050:4;46047:1;46040:15;46074:4;46071:1;46064:15;46451:422;46540:1;46583:5;46540:1;46597:270;46618:7;46608:8;46605:21;46597:270;;;46677:4;46673:1;46669:6;46665:17;46659:4;46656:27;46653:53;;;46686:18;;:::i;:::-;46736:7;46726:8;46722:22;46719:55;;;46756:16;;;;46719:55;46835:22;;;;46795:15;;;;46597:270;;;46601:3;46451:422;;;;;:::o;46878:806::-;46927:5;46957:8;46947:80;;-1:-1:-1;46998:1:29;47012:5;;46947:80;47046:4;47036:76;;-1:-1:-1;47083:1:29;47097:5;;47036:76;47128:4;47146:1;47141:59;;;;47214:1;47209:130;;;;47121:218;;47141:59;47171:1;47162:10;;47185:5;;;47209:130;47246:3;47236:8;47233:17;47230:43;;;47253:18;;:::i;:::-;-1:-1:-1;;47309:1:29;47295:16;;47324:5;;47121:218;;47423:2;47413:8;47410:16;47404:3;47398:4;47395:13;47391:36;47385:2;47375:8;47372:16;47367:2;47361:4;47358:12;47354:35;47351:77;47348:159;;;-1:-1:-1;47460:19:29;;;47492:5;;47348:159;47539:34;47564:8;47558:4;47539:34;:::i;:::-;47609:6;47605:1;47601:6;47597:19;47588:7;47585:32;47582:58;;;47620:18;;:::i;:::-;47658:20;;46878:806;-1:-1:-1;;;46878:806:29:o;47689:140::-;47747:5;47776:47;47817:4;47807:8;47803:19;47797:4;47776:47;:::i;49316:273::-;49384:6;49437:2;49425:9;49416:7;49412:23;49408:32;49405:52;;;49453:1;49450;49443:12;49405:52;49485:9;49479:16;49535:4;49528:5;49524:16;49517:5;49514:27;49504:55;;49555:1;49552;49545:12"},"gasEstimates":{"creation":{"codeDepositCost":"4466400","executionCost":"infinite","totalCost":"infinite"},"external":{"BP_DENOMINATOR()":"998","DEFAULT_PAYLOAD_SIZE_LIMIT()":"1152","SHARED_DECIMALS()":"908","accruedFeeLD(address)":"infinite","bridgeFeeBP()":"2394","dataFeed()":"3087","emergencyWithdrawEnabled()":"2657","emergencyWithdrawTime()":"3384","enableChain(uint16)":"3663","enableEmergencyWithdraw(bool)":"51378","failedMessages(uint16,bytes,uint64)":"infinite","forceResumeReceive(uint16,bytes)":"infinite","getChainID()":"488","getChainlinkDataFeedLatestAnswer()":"infinite","getConfig(uint16,uint16,address,uint256)":"infinite","getTrustedRemoteAddress(uint16)":"infinite","globalPaused()":"2745","initialize(address)":"infinite","isTrustedRemote(uint16,bytes)":"infinite","lzEndpoint()":"3197","lzReceive(uint16,bytes,uint64,bytes)":"infinite","minDstGasLookup(uint16,uint16)":"infinite","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"infinite","owner()":"3008","pausedTokens(address)":"3779","payloadSizeLimitLookup(uint16)":"2694","precrime()":"3043","priceFeed(uint256)":"3359","proxiableUUID()":"infinite","quoteForSend(uint16,(address,address),bytes)":"infinite","renounceOwnership()":"infinite","retryMessage(uint16,bytes,uint64,bytes)":"infinite","sendETHToDest(uint16,address,uint256,(address,address),bytes)":"infinite","sendTokenToDest(uint16,address,uint256,address,address,(address,address),bytes)":"infinite","setBridgeFeeBP(uint256)":"25603","setConfig(uint16,uint16,uint256,bytes)":"infinite","setEnableChain(uint16,bool)":"27260","setGlobalPause(bool)":"28316","setMinDstGas(uint16,uint16,uint256)":"infinite","setPayloadSizeLimit(uint16,uint256)":"24745","setPrecrime(address)":"28802","setReceiveVersion(uint16)":"infinite","setSendVersion(uint16)":"infinite","setTokenPause(address,bool)":"infinite","setTrustedRemote(uint16,bytes)":"infinite","setTrustedRemoteAddress(uint16,bytes)":"infinite","setUseCustomAdapterParams(bool)":"29020","setWETH(address)":"28287","supportedTokens(address)":"2987","toLzChainId()":"2885","transferOwnership(address)":"infinite","trustAddress(uint16,address)":"infinite","trustedRemoteLookup(uint16)":"infinite","tvlSDs(address)":"3668","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","useCustomAdapterParams()":"3559","weth()":"2581","withdrawEmergency(address,address)":"infinite","withdrawFee(address,address,uint256)":"infinite","withdrawTVL(address,address,uint256)":"infinite"},"internal":{"__Bridge_init_unchained()":"infinite","_authorizeUpgrade(address)":"infinite","_checkAdapterParams(bytes calldata)":"infinite","_decodeReceivePayload(bytes memory)":"infinite","_encodeSendPayload(uint256,address,address)":"infinite","_lockTokenFrom(address,address,uint256)":"infinite","_nonblockingLzReceive(uint16,bytes memory,uint64,bytes memory)":"infinite","_payFee(uint256)":"infinite","_redeemETHTo(address,address payable,uint256)":"infinite","_sendToken(uint16,uint256,address,address,struct LzLib.CallParams calldata,bytes calldata,uint256)":"infinite","_tokenDecimals(address)":"infinite","calaOutEthAmount(uint256)":"infinite","calcInTokenPrice(address,uint256)":"infinite","calcOutTokenAmount(uint256,address)":"infinite"}},"methodIdentifiers":{"BP_DENOMINATOR()":"abe685cd","DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","SHARED_DECIMALS()":"97167964","accruedFeeLD(address)":"a2f27ae0","bridgeFeeBP()":"25a9f792","dataFeed()":"9e42ff90","emergencyWithdrawEnabled()":"5747e69f","emergencyWithdrawTime()":"de9b9488","enableChain(uint16)":"df4bbc1c","enableEmergencyWithdraw(bool)":"d71e409e","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainID()":"564b81ef","getChainlinkDataFeedLatestAnswer()":"bea4dfb5","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","globalPaused()":"61a552dc","initialize(address)":"c4d66de8","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","pausedTokens(address)":"ee7a4596","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","priceFeed(uint256)":"b5f97073","proxiableUUID()":"52d1902d","quoteForSend(uint16,(address,address),bytes)":"7d5f5bd4","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","sendETHToDest(uint16,address,uint256,(address,address),bytes)":"b790d7c1","sendTokenToDest(uint16,address,uint256,address,address,(address,address),bytes)":"3bd0536b","setBridgeFeeBP(uint256)":"000d5900","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setEnableChain(uint16,bool)":"59d91cd7","setGlobalPause(bool)":"69a6b3db","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTokenPause(address,bool)":"cb8d3b1f","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","setUseCustomAdapterParams(bool)":"eab45d9c","setWETH(address)":"5b769f3c","supportedTokens(address)":"68c4ac26","toLzChainId()":"7a38d760","transferOwnership(address)":"f2fde38b","trustAddress(uint16,address)":"73afbcaa","trustedRemoteLookup(uint16)":"7533d788","tvlSDs(address)":"e3179c3e","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","useCustomAdapterParams()":"ed629c5c","weth()":"3fc8cef3","withdrawEmergency(address,address)":"93f26a4c","withdrawFee(address,address,uint256)":"1095b6d7","withdrawTVL(address,address,uint256)":"b90fc4a5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"EnableEmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Receive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RegisterToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Send\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"aptosChainId\",\"type\":\"uint16\"}],\"name\":\"SetAptosChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bridgeFeeBP\",\"type\":\"uint256\"}],\"name\":\"SetBridgeBP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetGlobalPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"localChainId\",\"type\":\"uint16\"}],\"name\":\"SetLocalChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetTokenPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"SetUseCustomAdapterParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"name\":\"SetWETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawTVL\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BP_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHARED_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"accruedFeeLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeFeeBP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dataFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"enableChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"enableEmergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainlinkDataFeedLatestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroEndpoint\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_toLzDestChain\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"quoteForSend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_toLzDestChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendETHToDest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_toLzDestChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendTokenToDest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bridgeFeeBP\",\"type\":\"uint256\"}],\"name\":\"setBridgeFeeBP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_lzDestChainId\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setEnableChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setGlobalPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setTokenPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"setUseCustomAdapterParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"name\":\"setWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toLzChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_lzDestChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_otherContract\",\"type\":\"address\"}],\"name\":\"trustAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tvlSDs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useCustomAdapterParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"}],\"name\":\"withdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTVL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getChainlinkDataFeedLatestAnswer()\":{\"notice\":\"Returns the ETH/USD latest answer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/TokenBridge.sol\":\"TokenBridge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/bridge/TokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity 0.8.20;\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\r\\nimport \\\"./lzApp/NonblockingLzApp.sol\\\";\\r\\nimport \\\"./interfaces/IWETH.sol\\\";\\r\\nimport \\\"./interfaces/ITokenBridge.sol\\\";\\r\\nimport \\\"../token/interfaces/IExchange.sol\\\";\\r\\nimport \\\"../token/interfaces/IToken.sol\\\";\\r\\n\\r\\n// Mumbai (Polygon Testnet)\\r\\n// chainId: 10109\\r\\n// endpoint: 0xf69186dfBa60DdB133E91E9A4B5673624293d8F8\\r\\n\\r\\n// Fantom (Testnet)\\r\\n// chainId: 10112\\r\\n// endpoint: 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf\\r\\n\\r\\n// BNB Chain (Testnet)\\r\\n// chainId: 10102\\r\\n// endpoint: 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1\\r\\n\\r\\n// Sepolia (Testnet)\\r\\n// chainId: 10161\\r\\n// endpoint: 0xae92d5aD7583AD66E49A0c67BAd18F6ba52dDDc1\\r\\n\\r\\ncontract TokenBridge is \\r\\n    UUPSUpgradeable, \\r\\n    OwnableUpgradeable, \\r\\n    ReentrancyGuardUpgradeable,\\r\\n    NonblockingLzApp,\\r\\n    ITokenBridge\\r\\n{\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    uint public constant BP_DENOMINATOR = 10000;\\r\\n    uint8 public constant SHARED_DECIMALS = 6;\\r\\n\\r\\n    uint16 public toLzChainId;\\r\\n\\r\\n    uint public bridgeFeeBP;\\r\\n\\r\\n    mapping(address => uint) public tvlSDs; // token address => tvl\\r\\n    mapping(address => bool) public supportedTokens;\\r\\n    mapping(address => bool) public pausedTokens; // token address => paused\\r\\n    mapping(uint => address) public priceFeed; // chain id => ETH-USD address\\r\\n    mapping(uint16 => bool) public enableChain; // whether lzDestchain id is enabled or not\\r\\n    \\r\\n    address public weth;\\r\\n\\r\\n    bool public useCustomAdapterParams;\\r\\n    bool public globalPaused;\\r\\n    bool public emergencyWithdrawEnabled;\\r\\n    uint public emergencyWithdrawTime;\\r\\n\\r\\n    AggregatorV3Interface public dataFeed;\\r\\n\\r\\n    modifier whenNotPaused(address _token) {\\r\\n        require(!globalPaused && !pausedTokens[_token], \\\"TokenBridge: paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier emergencyWithdrawUnlocked() {\\r\\n        require(emergencyWithdrawEnabled && block.timestamp >= emergencyWithdrawTime, \\\"TokenBridge: emergency withdraw locked\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function initialize(\\r\\n        address _layerZeroEndpoint\\r\\n    ) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init();\\r\\n        __NonblockingLzApp_init(_layerZeroEndpoint);\\r\\n        __ReentrancyGuard_init();\\r\\n        __Bridge_init_unchained();\\r\\n    }\\r\\n\\r\\n\\tfunction _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n\\tfunction __Bridge_init_unchained() internal initializer {\\r\\n        priceFeed[11155111] = 0x694AA1769357215DE4FAC081bf1f309aDC325306; // ETH-USD\\r\\n        priceFeed[97] = 0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526; // BNB-USD\\r\\n        priceFeed[4002] = 0xB8C458C957a6e6ca7Cc53eD95bEA548c52AFaA24; // FTM-USD\\r\\n        priceFeed[80001] = 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada; // MATIC-USD\\r\\n\\r\\n        uint cid = getChainID();\\r\\n        dataFeed = AggregatorV3Interface(priceFeed[cid]);\\r\\n\\t}\\r\\n\\r\\n    function sendTokenToDest(\\r\\n        uint16 _toLzDestChain,\\r\\n        address _tokenIn,\\r\\n        uint _amountIn,\\r\\n        address _tokenOut,\\r\\n        address _toAddress,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable override whenNotPaused(_tokenIn) nonReentrant {\\r\\n        require(\\r\\n            supportedTokens[_tokenIn] && supportedTokens[_tokenOut], \\r\\n            \\\"TokenBridge: input token and output token are not supported\\\"\\r\\n        );\\r\\n        // lock token\\r\\n        _amountIn = _lockTokenFrom(_tokenIn, msg.sender, _amountIn);\\r\\n        uint _priceFeedIn = calcInTokenPrice(_tokenIn, _amountIn);\\r\\n        // add tvl\\r\\n        require(_amountIn > 0, \\\"TokenBridge: amountIn must be greater than 0\\\");\\r\\n        tvlSDs[_tokenIn] += _amountIn;\\r\\n        // send to remote destination chain\\r\\n        _sendToken(\\r\\n            _toLzDestChain, _priceFeedIn, _tokenOut, _toAddress, \\r\\n            _callParams, _adapterParams, msg.value\\r\\n        );\\r\\n        emit Send(_tokenIn, msg.sender, _toAddress, _amountIn);\\r\\n    }\\r\\n\\r\\n    function sendETHToDest(\\r\\n        uint16 _toLzDestChain,\\r\\n        address _toAddress,\\r\\n        uint _amountIn,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable override whenNotPaused(weth) nonReentrant {\\r\\n        address _weth = weth; // save gas\\r\\n        require(_weth != address(0) && supportedTokens[_weth], \\\"TokenBridge: ETH is not supported\\\");\\r\\n        require(_amountIn > 0, \\\"TokenBridge: amount must be greater than 0\\\");\\r\\n        require(msg.value >= _amountIn, \\\"TokenBridge: fee not enough\\\");\\r\\n\\r\\n        // wrap eth and add tvl\\r\\n        IWETH(_weth).deposit{value: _amountIn}();\\r\\n        tvlSDs[_weth] += _amountIn;\\r\\n\\r\\n        int np = getChainlinkDataFeedLatestAnswer();\\r\\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\\r\\n        // send to remote destination chain\\r\\n        _sendToken(\\r\\n            _toLzDestChain, pn * _amountIn, address(0x0), _toAddress,\\r\\n            _callParams, _adapterParams, msg.value - _amountIn\\r\\n        );\\r\\n        emit Send(address(0), msg.sender, _toAddress, _amountIn);\\r\\n    }\\r\\n\\r\\n    function quoteForSend(\\r\\n        uint16 _toLzDestChain,\\r\\n        LzLib.CallParams calldata _callParams, \\r\\n        bytes calldata _adapterParams\\r\\n    ) external view override returns(uint nativeFee, uint zroFee) {\\r\\n        _checkAdapterParams(_adapterParams);\\r\\n        bytes memory payload = _encodeSendPayload(0, address(0), address(0));\\r\\n        bool payInZRO = _callParams.zroPaymentAddress != address(0);\\r\\n        return\\r\\n            lzEndpoint.estimateFees(_toLzDestChain, address(this), payload, payInZRO, _adapterParams);\\r\\n    }\\r\\n\\r\\n    function _sendToken(\\r\\n        uint16 _toLzDestChain,\\r\\n        uint _priceFeedIn,\\r\\n        address _tokenOut,\\r\\n        address _toAddress,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams,\\r\\n        uint _fee\\r\\n    ) internal {\\r\\n        _checkAdapterParams(_adapterParams);\\r\\n        bytes memory payload = _encodeSendPayload(_priceFeedIn, _tokenOut, _toAddress);\\r\\n        _lzSend(\\r\\n            _toLzDestChain,\\r\\n            payload,\\r\\n            _callParams.refundAddress,\\r\\n            _callParams.zroPaymentAddress,\\r\\n            _adapterParams,\\r\\n            _fee\\r\\n        );\\r\\n        toLzChainId = _toLzDestChain;\\r\\n    }\\r\\n\\r\\n    function trustAddress(uint16 _lzDestChainId, address _otherContract) public onlyOwner {\\r\\n        require(enableChain[_lzDestChainId], \\\"TokenBridge: this dest chain id is not enabled\\\");\\r\\n        trustedRemoteLookup[_lzDestChainId] = abi.encodePacked(_otherContract, address(this));\\r\\n    }\\r\\n\\r\\n    function setEnableChain(uint16 _lzDestChainId, bool enable) external onlyOwner {\\r\\n        enableChain[_lzDestChainId] = enable;\\r\\n    }\\r\\n\\r\\n    function setBridgeFeeBP(uint _bridgeFeeBP) external onlyOwner {\\r\\n        require(_bridgeFeeBP <= BP_DENOMINATOR, \\\"TokenBridge: bridge fee > 100%\\\");\\r\\n        bridgeFeeBP = _bridgeFeeBP;\\r\\n        emit SetBridgeBP(_bridgeFeeBP);\\r\\n    }\\r\\n\\r\\n    function setWETH(address _weth) external onlyOwner {\\r\\n        require(_weth != address(0), \\\"TokenBridge: invalid token address\\\");\\r\\n        weth = _weth;\\r\\n        emit SetWETH(_weth);\\r\\n    }\\r\\n\\r\\n    function setGlobalPause(bool _paused) external onlyOwner {\\r\\n        globalPaused = _paused;\\r\\n        emit SetGlobalPause(_paused);\\r\\n    }\\r\\n\\r\\n    function setTokenPause(address _token, bool _paused) external onlyOwner {\\r\\n        pausedTokens[_token] = _paused;\\r\\n        emit SetTokenPause(_token, _paused);\\r\\n    }\\r\\n\\r\\n    function setUseCustomAdapterParams(bool _useCustomAdapterParams) external onlyOwner {\\r\\n        useCustomAdapterParams = _useCustomAdapterParams;\\r\\n        emit SetUseCustomAdapterParams(_useCustomAdapterParams);\\r\\n    }\\r\\n\\r\\n    function withdrawFee(\\r\\n        address _token,\\r\\n        address _to,\\r\\n        uint _amountLD\\r\\n    ) public onlyOwner {\\r\\n        uint feeLD = accruedFeeLD(_token);\\r\\n        require(_amountLD <= feeLD, \\\"TokenBridge: fee not enough\\\");\\r\\n\\r\\n        IERC20(_token).safeTransfer(_to, _amountLD);\\r\\n        emit WithdrawFee(_token, _to, _amountLD);\\r\\n    }\\r\\n\\r\\n    function withdrawTVL(\\r\\n        address _token,\\r\\n        address _to,\\r\\n        uint _amount\\r\\n    ) public onlyOwner emergencyWithdrawUnlocked {\\r\\n        tvlSDs[_token] -= _amount;\\r\\n        IERC20(_token).safeTransfer(_to, _amount);\\r\\n        emit WithdrawTVL(_token, _to, _amount);\\r\\n    }\\r\\n\\r\\n    function withdrawEmergency(address _token, address _to) external onlyOwner {\\r\\n        // modifier redundant for extra safety\\r\\n        withdrawFee(_token, _to, accruedFeeLD(_token));\\r\\n        withdrawTVL(_token, _to, tvlSDs[_token]);\\r\\n    }\\r\\n\\r\\n    function enableEmergencyWithdraw(bool enabled) external onlyOwner {\\r\\n        emergencyWithdrawEnabled = enabled;\\r\\n        emergencyWithdrawTime = enabled ? block.timestamp + 1 weeks : 0; // overrides existing lock time\\r\\n        emit EnableEmergencyWithdraw(enabled, emergencyWithdrawTime);\\r\\n    }\\r\\n\\r\\n    // override the renounce ownership inherited by zeppelin ownable\\r\\n    function renounceOwnership() public override onlyOwner {}\\r\\n\\r\\n    // receive ETH from WETH\\r\\n    receive() external payable {}\\r\\n\\r\\n    function accruedFeeLD(address _token) public view returns (uint) {\\r\\n        return IERC20(_token).balanceOf(address(this)) - tvlSDs[_token];\\r\\n    }\\r\\n\\r\\n    // ---------------------- internal functions ----------------------\\r\\n    function _nonblockingLzReceive(\\r\\n        uint16 _srcLzChainId,\\r\\n        bytes memory,\\r\\n        uint64,\\r\\n        bytes memory _payload\\r\\n    ) internal override {\\r\\n        require(enableChain[_srcLzChainId], \\\"TokenBridge: invalid source chain id\\\");\\r\\n\\r\\n        (uint priceFeedIn, address tokenOut, address to, bool unwrap) = _decodeReceivePayload(_payload);\\r\\n        address token;\\r\\n        uint amountOut;\\r\\n        if(unwrap) {\\r\\n            token = weth;\\r\\n            amountOut = calaOutEthAmount(priceFeedIn);\\r\\n        } else {\\r\\n            token = tokenOut;\\r\\n            address pair = IToken(token).pair();\\r\\n            require(pair != address(0x0), \\\"TokenBridge: tokenOut has invalid liquidity pool\\\");\\r\\n            amountOut = calcOutTokenAmount(priceFeedIn, token);\\r\\n        }\\r\\n        require(!globalPaused && !pausedTokens[token], \\\"TokenBridge: paused\\\");\\r\\n        require(supportedTokens[token], \\\"TokenBridge: token is not supported\\\");\\r\\n\\r\\n        // sub tvl\\r\\n        uint tvlSD = tvlSDs[token];\\r\\n        require(tvlSD >= amountOut, \\\"TokenBridge: insufficient liquidity\\\");\\r\\n        tvlSDs[token] = tvlSD - amountOut;\\r\\n\\r\\n        // pay fee\\r\\n        (amountOut, ) = bridgeFeeBP > 0 ? _payFee(amountOut) : (amountOut, 0);\\r\\n\\r\\n        // redeem token to receiver\\r\\n        if (token == weth && unwrap) {\\r\\n            _redeemETHTo(weth, payable(to), amountOut);\\r\\n            emit Receive(address(0), to, amountOut);\\r\\n        } else {\\r\\n            to = to == address(0) ? address(0xdEaD) : to; // avoid failure in safeTransfer()\\r\\n            IERC20(token).safeTransfer(to, amountOut);\\r\\n            emit Receive(token, to, amountOut);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _redeemETHTo(\\r\\n        address _weth,\\r\\n        address payable _to,\\r\\n        uint _amount\\r\\n    ) internal {\\r\\n        IWETH(_weth).withdraw(_amount);\\r\\n        _to.transfer(_amount);\\r\\n    }\\r\\n\\r\\n    function _lockTokenFrom(\\r\\n        address _tokenIn,\\r\\n        address _from,\\r\\n        uint _amountIn\\r\\n    ) internal returns (uint) {\\r\\n        // support token with transfer fee\\r\\n        uint balanceBefore = IERC20(_tokenIn).balanceOf(address(this));\\r\\n        IERC20(_tokenIn).safeTransferFrom(_from, address(this), _amountIn);\\r\\n        uint balanceAfter = IERC20(_tokenIn).balanceOf(address(this));\\r\\n        return balanceAfter - balanceBefore;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the ETH/USD latest answer.\\r\\n     */\\r\\n    function getChainlinkDataFeedLatestAnswer() public view returns (int) {\\r\\n        // prettier-ignore\\r\\n        (\\r\\n            /* uint80 roundID */,\\r\\n            int answer,\\r\\n            /*uint startedAt*/,\\r\\n            /*uint timeStamp*/,\\r\\n            /*uint80 answeredInRound*/\\r\\n        ) = dataFeed.latestRoundData();\\r\\n        return answer;\\r\\n        // (answer < 0)? type(uint).max - uint(answer) + 1 : uint(answer);\\r\\n    }\\r\\n\\r\\n    function getChainID() public view returns (uint) {\\r\\n        uint id;\\r\\n        assembly {\\r\\n            id := chainid()\\r\\n        }\\r\\n        return id;\\r\\n    }\\r\\n\\r\\n    function calcInTokenPrice( address _tokenIn, uint _amount )\\r\\n        internal view returns (uint) \\r\\n    {\\r\\n        address pair = IToken(_tokenIn).pair();\\r\\n        require(pair != address(0x0), \\\"TokenBrige: token pair is not created\\\");\\r\\n        int np = getChainlinkDataFeedLatestAnswer(); // price of native coin\\r\\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\\r\\n        IPancakeSwapPair tokenPair = IPancakeSwapPair(pair);\\r\\n        (uint112 r0, uint112 r1, ) = tokenPair.getReserves();\\r\\n        uint price = tokenPair.token0() == _tokenIn? \\r\\n                        uint(r0) * _amount * pn / uint(r1): \\r\\n                        uint(r1) * _amount * pn / uint(r0);\\r\\n        return price;\\r\\n    }\\r\\n\\r\\n    function calcOutTokenAmount(\\r\\n        uint priceFeedIn, \\r\\n        address tokenOut\\r\\n    )  internal view returns(uint) {\\r\\n        address pair = IToken(tokenOut).pair();\\r\\n        int np = getChainlinkDataFeedLatestAnswer(); // price of native coin\\r\\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\\r\\n        IPancakeSwapPair tokenPair = IPancakeSwapPair(pair);\\r\\n        (uint112 r0, uint112 r1, ) = tokenPair.getReserves();\\r\\n        uint amountOut = (tokenPair.token0() == tokenOut)?\\r\\n                            priceFeedIn * uint(r1) / uint(r0) / pn:\\r\\n                            priceFeedIn * uint(r0) / uint(r1) / pn;\\r\\n        return amountOut * 10**_tokenDecimals(tokenOut);\\r\\n    }\\r\\n\\r\\n    function calaOutEthAmount(uint priceFeedIn) internal view returns(uint)\\r\\n    {\\r\\n        int np = getChainlinkDataFeedLatestAnswer(); // price of native coin\\r\\n        uint pn = (np < 0)? type(uint).max - uint(np) + 1 : uint(np);\\r\\n        return priceFeedIn * 1e18 / pn;\\r\\n    }\\r\\n\\r\\n    function _tokenDecimals(address _token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = _token.staticcall(\\r\\n            abi.encodeWithSignature(\\\"decimals()\\\")\\r\\n        );\\r\\n        require(success, \\\"TokenBridge: failed to get token decimals\\\");\\r\\n        return abi.decode(data, (uint8));\\r\\n    }\\r\\n\\r\\n    function _payFee(uint _amountIn) \\r\\n        internal view returns \\r\\n        (uint amountAfterFee, uint fee) \\r\\n    {\\r\\n        fee = (_amountIn * bridgeFeeBP) / BP_DENOMINATOR;\\r\\n        amountAfterFee = _amountIn - fee;\\r\\n    }\\r\\n\\r\\n    // send payload: packet type(1) + remote token(32) + receiver(32) + amount(8)\\r\\n    function _encodeSendPayload(\\r\\n        uint _price,\\r\\n        address _token,\\r\\n        address _reciever\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        bytes32 tokenBytes32 = LzLib.addressToBytes32(_token);\\r\\n        bytes32 recieverBytes32 = LzLib.addressToBytes32(_reciever);\\r\\n        return\\r\\n            abi.encodePacked(uint8(PacketType.SEND_TO), _price, tokenBytes32, recieverBytes32);\\r\\n    }\\r\\n\\r\\n    // receive payload: packet type(1) + remote token(32) + receiver(32) + amount(8) + unwrap flag(1)\\r\\n    function _decodeReceivePayload(bytes memory _payload)\\r\\n        internal pure returns (\\r\\n            uint price,\\r\\n            address token,\\r\\n            address reciever,\\r\\n            bool unwrap\\r\\n        )\\r\\n    {\\r\\n        require(_payload.length == 98, \\\"TokenBridge: invalid payload length\\\");\\r\\n        PacketType packetType = PacketType(uint8(_payload[0]));\\r\\n        require(packetType == PacketType.RECEIVE_FROM, \\\"TokenBridge: unknown packet type\\\");\\r\\n        assembly {\\r\\n            price := mload(add(_payload, 33))\\r\\n            token := mload(add(_payload, 65))\\r\\n            reciever := mload(add(_payload, 97))\\r\\n        }\\r\\n        unwrap = uint8(_payload[97]) == 1;\\r\\n    }\\r\\n\\r\\n    function _checkAdapterParams(bytes calldata _adapterParams) internal view {\\r\\n        if (useCustomAdapterParams && toLzChainId > 0) {\\r\\n            _checkGasLimit(toLzChainId, uint16(PacketType.SEND_TO), _adapterParams, 0);\\r\\n        } else {\\r\\n            require(_adapterParams.length == 0, \\\"TokenBridge: _adapterParams must be empty.\\\");\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x1360beb350b21515180c99d28e8224a0cd01b66f2f6031c14a94d584828359b0\",\"license\":\"BUSL-1.1\"},\"contracts/bridge/interfaces/ITokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.6.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\n\\r\\ninterface ITokenBridge {\\r\\n    enum PacketType {\\r\\n        SEND_TO,\\r\\n        RECEIVE_FROM\\r\\n    }\\r\\n\\r\\n    function sendTokenToDest(\\r\\n        uint16 _toLzDestChain,\\r\\n        address _tokenIn,\\r\\n        uint _amountIn,\\r\\n        address _tokenOut,\\r\\n        address _toAddress,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendETHToDest(\\r\\n        uint16 _toLzDestChain,\\r\\n        address _toAddress,\\r\\n        uint _amountIn,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteForSend(\\r\\n        uint16 _toLzDestChain,\\r\\n        LzLib.CallParams calldata _callParams, \\r\\n        bytes calldata _adapterParams\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    event Send(address indexed token, address indexed from, address indexed to, uint amountLD);\\r\\n    event Receive(address indexed token, address indexed to, uint amountLD);\\r\\n    event RegisterToken(address token);\\r\\n    event SetBridgeBP(uint bridgeFeeBP);\\r\\n    event SetWETH(address weth);\\r\\n    event SetGlobalPause(bool paused);\\r\\n    event SetTokenPause(address token, bool paused);\\r\\n    event SetLocalChainId(uint16 localChainId);\\r\\n    event SetAptosChainId(uint16 aptosChainId);\\r\\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\\r\\n    event WithdrawFee(address indexed token, address to, uint amountLD);\\r\\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\\r\\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\\r\\n}\\r\\n\",\"keccak256\":\"0x6b67de228d07a1122d4afc4c2bb62ffc9f8b3fe4a53182e637487f9f9e5afabf\",\"license\":\"BUSL-1.1\"},\"contracts/bridge/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n    function withdraw(uint) external;\\r\\n\\r\\n    function approve(address to, uint value) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x35d711a3c1dcd8a5c7380c665516661094181754f0df97cbdfb38e1cff4440ea\",\"license\":\"BUSL-1.1\"},\"contracts/bridge/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\r\\n/*\\r\\n * @title Solidity Bytes Arrays Utils\\r\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\r\\n *\\r\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\r\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\r\\n */\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nlibrary BytesLib {\\r\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            // Get a location of some free memory and store it in tempBytes as\\r\\n            // Solidity does for memory variables.\\r\\n            tempBytes := mload(0x40)\\r\\n\\r\\n            // Store the length of the first bytes array at the beginning of\\r\\n            // the memory for tempBytes.\\r\\n            let length := mload(_preBytes)\\r\\n            mstore(tempBytes, length)\\r\\n\\r\\n            // Maintain a memory counter for the current write location in the\\r\\n            // temp bytes array by adding the 32 bytes for the array length to\\r\\n            // the starting location.\\r\\n            let mc := add(tempBytes, 0x20)\\r\\n            // Stop copying when the memory counter reaches the length of the\\r\\n            // first bytes array.\\r\\n            let end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                // Initialize a copy counter to the start of the _preBytes data,\\r\\n                // 32 bytes into its memory.\\r\\n                let cc := add(_preBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                // Increase both counters by 32 bytes each iteration.\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\r\\n                // at a time.\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Add the length of _postBytes to the current length of tempBytes\\r\\n            // and store it as the new length in the first 32 bytes of the\\r\\n            // tempBytes memory.\\r\\n            length := mload(_postBytes)\\r\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\r\\n\\r\\n            // Move the memory counter back from a multiple of 0x20 to the\\r\\n            // actual end of the _preBytes data.\\r\\n            mc := end\\r\\n            // Stop copying when the memory counter reaches the new combined\\r\\n            // length of the arrays.\\r\\n            end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                let cc := add(_postBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Update the free-memory pointer by padding our last write location\\r\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\r\\n            // next 32 byte block, then round down to the nearest multiple of\\r\\n            // 32. If the sum of the length of the two arrays is zero then add\\r\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\r\\n            mstore(\\r\\n                0x40,\\r\\n                and(\\r\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\r\\n                    not(31) // Round down to the nearest 32 bytes.\\r\\n                )\\r\\n            )\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\r\\n        assembly {\\r\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\r\\n            // of the array. (We don't need to use the offset into the slot\\r\\n            // because arrays use the entire slot.)\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Arrays of 31 bytes or less have an even value in their slot,\\r\\n            // while longer arrays have an odd value. The actual length is\\r\\n            // the slot divided by two for odd values, and the lowest order\\r\\n            // byte divided by two for even values.\\r\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\r\\n            // two to get the length. If the slot is odd, bitwise and the slot\\r\\n            // with -1 and divide by two.\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n            let newlength := add(slength, mlength)\\r\\n            // slength can contain both the length and contents of the array\\r\\n            // if length < 32 bytes so let's prepare for that\\r\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n            switch add(lt(slength, 32), lt(newlength, 32))\\r\\n            case 2 {\\r\\n                // Since the new array still fits in the slot, we just need to\\r\\n                // update the contents of the slot.\\r\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\r\\n                sstore(\\r\\n                    _preBytes.slot,\\r\\n                    // all the modifications to the slot are inside this\\r\\n                    // next block\\r\\n                    add(\\r\\n                        // we can just add to the slot contents because the\\r\\n                        // bytes we want to change are the LSBs\\r\\n                        fslot,\\r\\n                        add(\\r\\n                            mul(\\r\\n                                div(\\r\\n                                    // load the bytes from memory\\r\\n                                    mload(add(_postBytes, 0x20)),\\r\\n                                    // zero all bytes to the right\\r\\n                                    exp(0x100, sub(32, mlength))\\r\\n                                ),\\r\\n                                // and now shift left the number of bytes to\\r\\n                                // leave space for the length in the slot\\r\\n                                exp(0x100, sub(32, newlength))\\r\\n                            ),\\r\\n                            // increase length by the double of the memory\\r\\n                            // bytes length\\r\\n                            mul(mlength, 2)\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            }\\r\\n            case 1 {\\r\\n                // The stored value fits in the slot, but the combined value\\r\\n                // will exceed it.\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // The contents of the _postBytes array start 32 bytes into\\r\\n                // the structure. Our first read should obtain the `submod`\\r\\n                // bytes that can fit into the unused space in the last word\\r\\n                // of the stored array. To get this, we read 32 bytes starting\\r\\n                // from `submod`, so the data we read overlaps with the array\\r\\n                // contents by `submod` bytes. Masking the lowest-order\\r\\n                // `submod` bytes allows us to add that value directly to the\\r\\n                // stored value.\\r\\n\\r\\n                let submod := sub(32, slength)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    sc := add(sc, 1)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n            default {\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                // Start copying to the last used word of the stored array.\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // Copy over the first `submod` bytes of the new data as in\\r\\n                // case 1 above.\\r\\n                let slengthmod := mod(slength, 32)\\r\\n                let mlengthmod := mod(mlength, 32)\\r\\n                let submod := sub(32, slengthmod)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function slice(\\r\\n        bytes memory _bytes,\\r\\n        uint _start,\\r\\n        uint _length\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\r\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\r\\n\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            switch iszero(_length)\\r\\n            case 0 {\\r\\n                // Get a location of some free memory and store it in tempBytes as\\r\\n                // Solidity does for memory variables.\\r\\n                tempBytes := mload(0x40)\\r\\n\\r\\n                // The first word of the slice result is potentially a partial\\r\\n                // word read from the original array. To read it, we calculate\\r\\n                // the length of that partial word and start copying that many\\r\\n                // bytes into the array. The first word we copy will start with\\r\\n                // data we don't care about, but the last `lengthmod` bytes will\\r\\n                // land at the beginning of the contents of the new array. When\\r\\n                // we're done copying, we overwrite the full first word with\\r\\n                // the actual length of the slice.\\r\\n                let lengthmod := and(_length, 31)\\r\\n\\r\\n                // The multiplication in the next line is necessary\\r\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\r\\n                // the following copy loop was copying the origin's length\\r\\n                // and then ending prematurely not copying everything it should.\\r\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\r\\n                let end := add(mc, _length)\\r\\n\\r\\n                for {\\r\\n                    // The multiplication in the next line has the same exact purpose\\r\\n                    // as the one above.\\r\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\r\\n                } lt(mc, end) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    mstore(mc, mload(cc))\\r\\n                }\\r\\n\\r\\n                mstore(tempBytes, _length)\\r\\n\\r\\n                //update free-memory pointer\\r\\n                //allocating the array padded to 32 bytes like the compiler does now\\r\\n                mstore(0x40, and(add(mc, 31), not(31)))\\r\\n            }\\r\\n            //if we want a zero-length slice let's just return a zero-length array\\r\\n            default {\\r\\n                tempBytes := mload(0x40)\\r\\n                //zero out the 32 bytes slice we are about to return\\r\\n                //we need to do it because Solidity does not garbage collect\\r\\n                mstore(tempBytes, 0)\\r\\n\\r\\n                mstore(0x40, add(tempBytes, 0x20))\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\r\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\r\\n        address tempAddress;\\r\\n\\r\\n        assembly {\\r\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\r\\n        }\\r\\n\\r\\n        return tempAddress;\\r\\n    }\\r\\n\\r\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\r\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\r\\n        uint8 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\r\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\r\\n        uint16 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\r\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\r\\n        uint32 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\r\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\r\\n        uint64 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\r\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\r\\n        uint96 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\r\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\r\\n        uint128 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\r\\n        uint tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\r\\n        bytes32 tempBytes32;\\r\\n\\r\\n        assembly {\\r\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempBytes32;\\r\\n    }\\r\\n\\r\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            let length := mload(_preBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(length, mload(_postBytes))\\r\\n            case 1 {\\r\\n                // cb is a circuit breaker in the for loop since there's\\r\\n                //  no said feature for inline assembly loops\\r\\n                // cb = 1 - don't breaker\\r\\n                // cb = 0 - break\\r\\n                let cb := 1\\r\\n\\r\\n                let mc := add(_preBytes, 0x20)\\r\\n                let end := add(mc, length)\\r\\n\\r\\n                for {\\r\\n                    let cc := add(_postBytes, 0x20)\\r\\n                    // the next line is the loop condition:\\r\\n                    // while(uint256(mc < end) + cb == 2)\\r\\n                } eq(add(lt(mc, end), cb), 2) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    // if any of these checks fails then arrays are not equal\\r\\n                    if iszero(eq(mload(mc), mload(cc))) {\\r\\n                        // unsuccess:\\r\\n                        success := 0\\r\\n                        cb := 0\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n\\r\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            // we know _preBytes_offset is 0\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Decode the length of the stored array like in concatStorage().\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(slength, mlength)\\r\\n            case 1 {\\r\\n                // slength can contain both the length and contents of the array\\r\\n                // if length < 32 bytes so let's prepare for that\\r\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n                if iszero(iszero(slength)) {\\r\\n                    switch lt(slength, 32)\\r\\n                    case 1 {\\r\\n                        // blank the last byte which is the length\\r\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\r\\n\\r\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\r\\n                            // unsuccess:\\r\\n                            success := 0\\r\\n                        }\\r\\n                    }\\r\\n                    default {\\r\\n                        // cb is a circuit breaker in the for loop since there's\\r\\n                        //  no said feature for inline assembly loops\\r\\n                        // cb = 1 - don't breaker\\r\\n                        // cb = 0 - break\\r\\n                        let cb := 1\\r\\n\\r\\n                        // get the keccak hash to get the contents of the array\\r\\n                        mstore(0x0, _preBytes.slot)\\r\\n                        let sc := keccak256(0x0, 0x20)\\r\\n\\r\\n                        let mc := add(_postBytes, 0x20)\\r\\n                        let end := add(mc, mlength)\\r\\n\\r\\n                        // the next line is the loop condition:\\r\\n                        // while(uint256(mc < end) + cb == 2)\\r\\n                        for {\\r\\n\\r\\n                        } eq(add(lt(mc, end), cb), 2) {\\r\\n                            sc := add(sc, 1)\\r\\n                            mc := add(mc, 0x20)\\r\\n                        } {\\r\\n                            if iszero(eq(sload(sc), mload(mc))) {\\r\\n                                // unsuccess:\\r\\n                                success := 0\\r\\n                                cb := 0\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7792f84cab13c1cfb572a558192ca3dd601615e1328d80130bd3e2784ac7eea4\",\"license\":\"Unlicense\"},\"contracts/bridge/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.7.6;\\r\\n\\r\\nlibrary ExcessivelySafeCall {\\r\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\r\\n\\r\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\r\\n    /// contract. This prevents the called contract from causing reversion of\\r\\n    /// the caller in as many ways as we can.\\r\\n    /// @dev The main difference between this and a solidity low-level call is\\r\\n    /// that we limit the number of bytes that the callee can cause to be\\r\\n    /// copied to caller memory. This prevents stupid things like malicious\\r\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\r\\n    /// to memory.\\r\\n    /// @param _target The address to call\\r\\n    /// @param _gas The amount of gas to forward to the remote contract\\r\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\r\\n    /// to memory.\\r\\n    /// @param _calldata The data to send to the remote contract\\r\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\r\\n    /// `_maxCopy` bytes.\\r\\n    function excessivelySafeCall(\\r\\n        address _target,\\r\\n        uint _gas,\\r\\n        uint16 _maxCopy,\\r\\n        bytes memory _calldata\\r\\n    ) internal returns (bool, bytes memory) {\\r\\n        // set up for assembly call\\r\\n        uint _toCopy;\\r\\n        bool _success;\\r\\n        bytes memory _returnData = new bytes(_maxCopy);\\r\\n        // dispatch message to recipient\\r\\n        // by assembly calling \\\"handle\\\" function\\r\\n        // we call via assembly to avoid memcopying a very large returndata\\r\\n        // returned by a malicious contract\\r\\n        assembly {\\r\\n            _success := call(\\r\\n                _gas, // gas\\r\\n                _target, // recipient\\r\\n                0, // ether value\\r\\n                add(_calldata, 0x20), // inloc\\r\\n                mload(_calldata), // inlen\\r\\n                0, // outloc\\r\\n                0 // outlen\\r\\n            )\\r\\n            // limit our copy to 256 bytes\\r\\n            _toCopy := returndatasize()\\r\\n            if gt(_toCopy, _maxCopy) {\\r\\n                _toCopy := _maxCopy\\r\\n            }\\r\\n            // Store the length of the copied bytes\\r\\n            mstore(_returnData, _toCopy)\\r\\n            // copy the bytes from returndata[0:_toCopy]\\r\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\r\\n        }\\r\\n        return (_success, _returnData);\\r\\n    }\\r\\n\\r\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\r\\n    /// contract. This prevents the called contract from causing reversion of\\r\\n    /// the caller in as many ways as we can.\\r\\n    /// @dev The main difference between this and a solidity low-level call is\\r\\n    /// that we limit the number of bytes that the callee can cause to be\\r\\n    /// copied to caller memory. This prevents stupid things like malicious\\r\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\r\\n    /// to memory.\\r\\n    /// @param _target The address to call\\r\\n    /// @param _gas The amount of gas to forward to the remote contract\\r\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\r\\n    /// to memory.\\r\\n    /// @param _calldata The data to send to the remote contract\\r\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\r\\n    /// `_maxCopy` bytes.\\r\\n    function excessivelySafeStaticCall(\\r\\n        address _target,\\r\\n        uint _gas,\\r\\n        uint16 _maxCopy,\\r\\n        bytes memory _calldata\\r\\n    ) internal view returns (bool, bytes memory) {\\r\\n        // set up for assembly call\\r\\n        uint _toCopy;\\r\\n        bool _success;\\r\\n        bytes memory _returnData = new bytes(_maxCopy);\\r\\n        // dispatch message to recipient\\r\\n        // by assembly calling \\\"handle\\\" function\\r\\n        // we call via assembly to avoid memcopying a very large returndata\\r\\n        // returned by a malicious contract\\r\\n        assembly {\\r\\n            _success := staticcall(\\r\\n                _gas, // gas\\r\\n                _target, // recipient\\r\\n                add(_calldata, 0x20), // inloc\\r\\n                mload(_calldata), // inlen\\r\\n                0, // outloc\\r\\n                0 // outlen\\r\\n            )\\r\\n            // limit our copy to 256 bytes\\r\\n            _toCopy := returndatasize()\\r\\n            if gt(_toCopy, _maxCopy) {\\r\\n                _toCopy := _maxCopy\\r\\n            }\\r\\n            // Store the length of the copied bytes\\r\\n            mstore(_returnData, _toCopy)\\r\\n            // copy the bytes from returndata[0:_toCopy]\\r\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\r\\n        }\\r\\n        return (_success, _returnData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Swaps function selectors in encoded contract calls\\r\\n     * @dev Allows reuse of encoded calldata for functions with identical\\r\\n     * argument types but different names. It simply swaps out the first 4 bytes\\r\\n     * for the new selector. This function modifies memory in place, and should\\r\\n     * only be used with caution.\\r\\n     * @param _newSelector The new 4-byte selector\\r\\n     * @param _buf The encoded contract args\\r\\n     */\\r\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\r\\n        require(_buf.length >= 4);\\r\\n        uint _mask = LOW_28_MASK;\\r\\n        assembly {\\r\\n            // load the first word of\\r\\n            let _word := mload(add(_buf, 0x20))\\r\\n            // mask out the top 4 bytes\\r\\n            // /x\\r\\n            _word := and(_word, _mask)\\r\\n            _word := or(_newSelector, _word)\\r\\n            mstore(add(_buf, 0x20), _word)\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7c99d40e0c339d5db9548b42b7a6c5e7626fe87357735a086c1989266ca46365\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/bridge/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\r\\nimport \\\"../libraries/BytesLib.sol\\\";\\r\\n\\r\\n/*\\r\\n * a generic LzReceiver implementation\\r\\n */\\r\\nabstract contract LzApp is Initializable, OwnableUpgradeable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\r\\n    using BytesLib for bytes;\\r\\n\\r\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\r\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\r\\n\\r\\n    ILayerZeroEndpoint public lzEndpoint;\\r\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\r\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\r\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\r\\n    address public precrime;\\r\\n\\r\\n    event SetPrecrime(address precrime);\\r\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\r\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\r\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\r\\n\\r\\n    function __LzApp_init(address _endpoint) internal onlyInitializing {\\r\\n        __Ownable_init();\\r\\n        __LzApp_init_unchained(_endpoint);\\r\\n    }\\r\\n\\r\\n    function __LzApp_init_unchained(address _endpoint) internal onlyInitializing {\\r\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\r\\n    }\\r\\n\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) public virtual override {\\r\\n        // lzReceive must be called by the endpoint for security\\r\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\r\\n\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\r\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\r\\n        require(\\r\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\r\\n            \\\"LzApp: invalid source sending contract\\\"\\r\\n        );\\r\\n\\r\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n\\r\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\r\\n    function _blockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) internal virtual;\\r\\n\\r\\n    function _lzSend(\\r\\n        uint16 _dstChainId,\\r\\n        bytes memory _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes memory _adapterParams,\\r\\n        uint _nativeFee\\r\\n    ) internal virtual {\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\r\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\r\\n        _checkPayloadSize(_dstChainId, _payload.length);\\r\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\r\\n    }\\r\\n\\r\\n    function _checkGasLimit(\\r\\n        uint16 _dstChainId,\\r\\n        uint16 _type,\\r\\n        bytes memory _adapterParams,\\r\\n        uint _extraGas\\r\\n    ) internal view virtual {\\r\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\r\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\r\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\r\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\r\\n    }\\r\\n\\r\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\r\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\r\\n        assembly {\\r\\n            gasLimit := mload(add(_adapterParams, 34))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\r\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\r\\n        if (payloadSizeLimit == 0) {\\r\\n            // use default if not set\\r\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\r\\n        }\\r\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\r\\n    }\\r\\n\\r\\n    //---------------------------UserApplication config----------------------------------------\\r\\n    function getConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        address,\\r\\n        uint _configType\\r\\n    ) external view returns (bytes memory) {\\r\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\r\\n    }\\r\\n\\r\\n    // generic config for LayerZero user Application\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external override onlyOwner {\\r\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\r\\n    }\\r\\n\\r\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setSendVersion(_version);\\r\\n    }\\r\\n\\r\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setReceiveVersion(_version);\\r\\n    }\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\r\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\r\\n    }\\r\\n\\r\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\r\\n    // this function set the trusted path for the cross-chain communication\\r\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\r\\n        trustedRemoteLookup[_remoteChainId] = _path;\\r\\n        emit SetTrustedRemote(_remoteChainId, _path);\\r\\n    }\\r\\n\\r\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\r\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\r\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\r\\n    }\\r\\n\\r\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\r\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\r\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\r\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\r\\n    }\\r\\n\\r\\n    function setPrecrime(address _precrime) external onlyOwner {\\r\\n        precrime = _precrime;\\r\\n        emit SetPrecrime(_precrime);\\r\\n    }\\r\\n\\r\\n    function setMinDstGas(\\r\\n        uint16 _dstChainId,\\r\\n        uint16 _packetType,\\r\\n        uint _minGas\\r\\n    ) external onlyOwner {\\r\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\r\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\r\\n    }\\r\\n\\r\\n    // if the size is 0, it means default size limit\\r\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\r\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\r\\n    }\\r\\n\\r\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\r\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\r\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\r\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb5958eb7c21000b1b6021c3de912616d568636a120ede1a5f1930d8d06645d84\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"./LzApp.sol\\\";\\r\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\r\\n\\r\\n/*\\r\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\r\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\r\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\r\\n */\\r\\nabstract contract NonblockingLzApp is Initializable, LzApp {\\r\\n    using ExcessivelySafeCall for address;\\r\\n\\r\\n    function __NonblockingLzApp_init(address _endpoint) internal onlyInitializing {\\r\\n        __NonblockingLzApp_init_unchained(_endpoint);\\r\\n    }\\r\\n\\r\\n    function __NonblockingLzApp_init_unchained(address _endpoint) internal onlyInitializing {\\r\\n        __LzApp_init(_endpoint);\\r\\n    }\\r\\n\\r\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\r\\n\\r\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\r\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\r\\n\\r\\n    // overriding the virtual function in LzReceiver\\r\\n    function _blockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) internal virtual override {\\r\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\r\\n            gasleft(),\\r\\n            150,\\r\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\r\\n        );\\r\\n        // try-catch all errors/exceptions\\r\\n        if (!success) {\\r\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _storeFailedMessage(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload,\\r\\n        bytes memory _reason\\r\\n    ) internal virtual {\\r\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\r\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\r\\n    }\\r\\n\\r\\n    function nonblockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) public virtual {\\r\\n        // only internal transaction\\r\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\r\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n\\r\\n    //@notice override this function\\r\\n    function _nonblockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) internal virtual;\\r\\n\\r\\n    function retryMessage(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) public payable virtual {\\r\\n        // assert there is message to retry\\r\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\r\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\r\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\r\\n        // clear the stored message\\r\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\r\\n        // execute the message. revert if it fails again\\r\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0aebb957f704d62ffd2655c10378cc3601cad0115384fde90b3bb8a7f951b73f\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(\\r\\n        uint16 _dstChainId,\\r\\n        bytes calldata _destination,\\r\\n        bytes calldata _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint _gasLimit,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        address _userApplication,\\r\\n        bytes calldata _payload,\\r\\n        bool _payInZRO,\\r\\n        bytes calldata _adapterParam\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        address _userApplication,\\r\\n        uint _configType\\r\\n    ) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0x038a0822ff0ed7840f1871e33f02ab2f86f1e15d49569d1775aa5bc9ec89faf5\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x66647bb1e973a693f4420f294688283cca5235ed950dc7a6f5f4394bf9ecf3c0\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x3d1c7a12c577b3339252875a90da60c59617f8b299f88e35cd8b9b190b762a73\",\"license\":\"MIT\"},\"contracts/token/interfaces/IExchange.sol\":{\"content\":\"\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\",\"keccak256\":\"0x787732e5d2daf0ecf33e3d7dce453bdace333be0919c8a7f79ac3a2f5fa69a8c\",\"license\":\"UNLICENSED\"},\"contracts/token/interfaces/IToken.sol\":{\"content\":\"\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IToken {\\r\\n\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\tfunction totalSupply() external view returns (uint256);\\r\\n\\tfunction balanceOf(address) external view returns (uint256);\\r\\n\\tfunction leftTime() external view returns(uint);\\r\\n    function router() external view returns(address);\\r\\n    function pair() external view returns(address);\\r\\n\\r\\n\\tfunction transfer(address, uint256) external returns (bool);\\r\\n\\tfunction allowance(address, address) external view returns (uint256);\\r\\n\\r\\n\\tfunction approve(address, uint256) external returns (bool);\\r\\n\\tfunction transferFrom(address, address, uint256) external returns (bool);\\r\\n\\r\\n\\tfunction increaseAllowance(address, uint256) external returns (bool);\\r\\n\\tfunction decreaseAllowance(address, uint256) external returns (bool);\\r\\n\\r\\n\\tfunction burn(uint256) external;\\r\\n\\tfunction faucet() external ;\\r\\n\\tfunction setInitialAddresses(address) external;\\r\\n    function addLiquidity(uint256) external;    \\r\\n}\",\"keccak256\":\"0x99317ff5c13f2ec4afc479c3bcc07e7c4bd475fc20853f885494982efb220ffd\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":756,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1071,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":1527,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":281,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"_owner","offset":0,"slot":"151","type":"t_address"},{"astId":401,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":1086,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"_status","offset":0,"slot":"201","type":"t_uint256"},{"astId":1155,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"__gap","offset":0,"slot":"202","type":"t_array(t_uint256)49_storage"},{"astId":4600,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"lzEndpoint","offset":0,"slot":"251","type":"t_contract(ILayerZeroEndpoint)5541"},{"astId":4604,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"trustedRemoteLookup","offset":0,"slot":"252","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":4610,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"minDstGasLookup","offset":0,"slot":"253","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":4614,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"payloadSizeLimitLookup","offset":0,"slot":"254","type":"t_mapping(t_uint16,t_uint256)"},{"astId":4616,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"precrime","offset":0,"slot":"255","type":"t_address"},{"astId":5181,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"failedMessages","offset":0,"slot":"256","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"},{"astId":2494,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"toLzChainId","offset":0,"slot":"257","type":"t_uint16"},{"astId":2496,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"bridgeFeeBP","offset":0,"slot":"258","type":"t_uint256"},{"astId":2500,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"tvlSDs","offset":0,"slot":"259","type":"t_mapping(t_address,t_uint256)"},{"astId":2504,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"supportedTokens","offset":0,"slot":"260","type":"t_mapping(t_address,t_bool)"},{"astId":2508,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"pausedTokens","offset":0,"slot":"261","type":"t_mapping(t_address,t_bool)"},{"astId":2512,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"priceFeed","offset":0,"slot":"262","type":"t_mapping(t_uint256,t_address)"},{"astId":2516,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"enableChain","offset":0,"slot":"263","type":"t_mapping(t_uint16,t_bool)"},{"astId":2518,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"weth","offset":0,"slot":"264","type":"t_address"},{"astId":2520,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"useCustomAdapterParams","offset":20,"slot":"264","type":"t_bool"},{"astId":2522,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"globalPaused","offset":21,"slot":"264","type":"t_bool"},{"astId":2524,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"emergencyWithdrawEnabled","offset":22,"slot":"264","type":"t_bool"},{"astId":2526,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"emergencyWithdrawTime","offset":0,"slot":"265","type":"t_uint256"},{"astId":2529,"contract":"contracts/bridge/TokenBridge.sol:TokenBridge","label":"dataFeed","offset":0,"slot":"266","type":"t_contract(AggregatorV3Interface)45"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(ILayerZeroEndpoint)5541":{"encoding":"inplace","label":"contract ILayerZeroEndpoint","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bool)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"getChainlinkDataFeedLatestAnswer()":{"notice":"Returns the ETH/USD latest answer."}},"version":1}}},"contracts/bridge/interfaces/ITokenBridge.sol":{"ITokenBridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"EnableEmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Receive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"RegisterToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Send","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"aptosChainId","type":"uint16"}],"name":"SetAptosChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bridgeFeeBP","type":"uint256"}],"name":"SetBridgeBP","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetGlobalPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"localChainId","type":"uint16"}],"name":"SetLocalChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetTokenPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useCustomAdapterParams","type":"bool"}],"name":"SetUseCustomAdapterParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"weth","type":"address"}],"name":"SetWETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawTVL","type":"event"},{"inputs":[{"internalType":"uint16","name":"_toLzDestChain","type":"uint16"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"quoteForSend","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_toLzDestChain","type":"uint16"},{"internalType":"address","name":"_toAddress","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendETHToDest","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_toLzDestChain","type":"uint16"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_toAddress","type":"address"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendTokenToDest","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"quoteForSend(uint16,(address,address),bytes)":"7d5f5bd4","sendETHToDest(uint16,address,uint256,(address,address),bytes)":"b790d7c1","sendTokenToDest(uint16,address,uint256,address,address,(address,address),bytes)":"3bd0536b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"EnableEmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Receive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RegisterToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Send\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"aptosChainId\",\"type\":\"uint16\"}],\"name\":\"SetAptosChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bridgeFeeBP\",\"type\":\"uint256\"}],\"name\":\"SetBridgeBP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetGlobalPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"localChainId\",\"type\":\"uint16\"}],\"name\":\"SetLocalChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetTokenPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"SetUseCustomAdapterParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"name\":\"SetWETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawTVL\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_toLzDestChain\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"quoteForSend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_toLzDestChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendETHToDest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_toLzDestChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendTokenToDest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/interfaces/ITokenBridge.sol\":\"ITokenBridge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"},\"contracts/bridge/interfaces/ITokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.6.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\n\\r\\ninterface ITokenBridge {\\r\\n    enum PacketType {\\r\\n        SEND_TO,\\r\\n        RECEIVE_FROM\\r\\n    }\\r\\n\\r\\n    function sendTokenToDest(\\r\\n        uint16 _toLzDestChain,\\r\\n        address _tokenIn,\\r\\n        uint _amountIn,\\r\\n        address _tokenOut,\\r\\n        address _toAddress,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendETHToDest(\\r\\n        uint16 _toLzDestChain,\\r\\n        address _toAddress,\\r\\n        uint _amountIn,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteForSend(\\r\\n        uint16 _toLzDestChain,\\r\\n        LzLib.CallParams calldata _callParams, \\r\\n        bytes calldata _adapterParams\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    event Send(address indexed token, address indexed from, address indexed to, uint amountLD);\\r\\n    event Receive(address indexed token, address indexed to, uint amountLD);\\r\\n    event RegisterToken(address token);\\r\\n    event SetBridgeBP(uint bridgeFeeBP);\\r\\n    event SetWETH(address weth);\\r\\n    event SetGlobalPause(bool paused);\\r\\n    event SetTokenPause(address token, bool paused);\\r\\n    event SetLocalChainId(uint16 localChainId);\\r\\n    event SetAptosChainId(uint16 aptosChainId);\\r\\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\\r\\n    event WithdrawFee(address indexed token, address to, uint amountLD);\\r\\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\\r\\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\\r\\n}\\r\\n\",\"keccak256\":\"0x6b67de228d07a1122d4afc4c2bb62ffc9f8b3fe4a53182e637487f9f9e5afabf\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/interfaces/IWETH.sol":{"IWETH":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/bridge/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n    function withdraw(uint) external;\\r\\n\\r\\n    function approve(address to, uint value) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x35d711a3c1dcd8a5c7380c665516661094181754f0df97cbdfb38e1cff4440ea\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/libraries/BytesLib.sol":{"BytesLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb9c0aaf854228756a0e49b70c2c2954e4347c62f0ab9c7e5a184ce16d63e18e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SWAP13 EXP 0xAF DUP6 TIMESTAMP 0x28 PUSH22 0x6A0E49B70C2C2954E4347C62F0AB9C7E5A184CE16D63 0xE1 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"379:19098:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;379:19098:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb9c0aaf854228756a0e49b70c2c2954e4347c62f0ab9c7e5a184ce16d63e18e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SWAP13 EXP 0xAF DUP6 TIMESTAMP 0x28 PUSH22 0x6A0E49B70C2C2954E4347C62F0AB9C7E5A184CE16D63 0xE1 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"379:19098:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"concat(bytes memory,bytes memory)":"infinite","concatStorage(bytes storage pointer,bytes memory)":"infinite","equal(bytes memory,bytes memory)":"infinite","equalStorage(bytes storage pointer,bytes memory)":"infinite","slice(bytes memory,uint256,uint256)":"infinite","toAddress(bytes memory,uint256)":"infinite","toBytes32(bytes memory,uint256)":"infinite","toUint128(bytes memory,uint256)":"infinite","toUint16(bytes memory,uint256)":"infinite","toUint256(bytes memory,uint256)":"infinite","toUint32(bytes memory,uint256)":"infinite","toUint64(bytes memory,uint256)":"infinite","toUint8(bytes memory,uint256)":"infinite","toUint96(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/bridge/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\r\\n/*\\r\\n * @title Solidity Bytes Arrays Utils\\r\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\r\\n *\\r\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\r\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\r\\n */\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nlibrary BytesLib {\\r\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            // Get a location of some free memory and store it in tempBytes as\\r\\n            // Solidity does for memory variables.\\r\\n            tempBytes := mload(0x40)\\r\\n\\r\\n            // Store the length of the first bytes array at the beginning of\\r\\n            // the memory for tempBytes.\\r\\n            let length := mload(_preBytes)\\r\\n            mstore(tempBytes, length)\\r\\n\\r\\n            // Maintain a memory counter for the current write location in the\\r\\n            // temp bytes array by adding the 32 bytes for the array length to\\r\\n            // the starting location.\\r\\n            let mc := add(tempBytes, 0x20)\\r\\n            // Stop copying when the memory counter reaches the length of the\\r\\n            // first bytes array.\\r\\n            let end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                // Initialize a copy counter to the start of the _preBytes data,\\r\\n                // 32 bytes into its memory.\\r\\n                let cc := add(_preBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                // Increase both counters by 32 bytes each iteration.\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\r\\n                // at a time.\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Add the length of _postBytes to the current length of tempBytes\\r\\n            // and store it as the new length in the first 32 bytes of the\\r\\n            // tempBytes memory.\\r\\n            length := mload(_postBytes)\\r\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\r\\n\\r\\n            // Move the memory counter back from a multiple of 0x20 to the\\r\\n            // actual end of the _preBytes data.\\r\\n            mc := end\\r\\n            // Stop copying when the memory counter reaches the new combined\\r\\n            // length of the arrays.\\r\\n            end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                let cc := add(_postBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Update the free-memory pointer by padding our last write location\\r\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\r\\n            // next 32 byte block, then round down to the nearest multiple of\\r\\n            // 32. If the sum of the length of the two arrays is zero then add\\r\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\r\\n            mstore(\\r\\n                0x40,\\r\\n                and(\\r\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\r\\n                    not(31) // Round down to the nearest 32 bytes.\\r\\n                )\\r\\n            )\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\r\\n        assembly {\\r\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\r\\n            // of the array. (We don't need to use the offset into the slot\\r\\n            // because arrays use the entire slot.)\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Arrays of 31 bytes or less have an even value in their slot,\\r\\n            // while longer arrays have an odd value. The actual length is\\r\\n            // the slot divided by two for odd values, and the lowest order\\r\\n            // byte divided by two for even values.\\r\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\r\\n            // two to get the length. If the slot is odd, bitwise and the slot\\r\\n            // with -1 and divide by two.\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n            let newlength := add(slength, mlength)\\r\\n            // slength can contain both the length and contents of the array\\r\\n            // if length < 32 bytes so let's prepare for that\\r\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n            switch add(lt(slength, 32), lt(newlength, 32))\\r\\n            case 2 {\\r\\n                // Since the new array still fits in the slot, we just need to\\r\\n                // update the contents of the slot.\\r\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\r\\n                sstore(\\r\\n                    _preBytes.slot,\\r\\n                    // all the modifications to the slot are inside this\\r\\n                    // next block\\r\\n                    add(\\r\\n                        // we can just add to the slot contents because the\\r\\n                        // bytes we want to change are the LSBs\\r\\n                        fslot,\\r\\n                        add(\\r\\n                            mul(\\r\\n                                div(\\r\\n                                    // load the bytes from memory\\r\\n                                    mload(add(_postBytes, 0x20)),\\r\\n                                    // zero all bytes to the right\\r\\n                                    exp(0x100, sub(32, mlength))\\r\\n                                ),\\r\\n                                // and now shift left the number of bytes to\\r\\n                                // leave space for the length in the slot\\r\\n                                exp(0x100, sub(32, newlength))\\r\\n                            ),\\r\\n                            // increase length by the double of the memory\\r\\n                            // bytes length\\r\\n                            mul(mlength, 2)\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            }\\r\\n            case 1 {\\r\\n                // The stored value fits in the slot, but the combined value\\r\\n                // will exceed it.\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // The contents of the _postBytes array start 32 bytes into\\r\\n                // the structure. Our first read should obtain the `submod`\\r\\n                // bytes that can fit into the unused space in the last word\\r\\n                // of the stored array. To get this, we read 32 bytes starting\\r\\n                // from `submod`, so the data we read overlaps with the array\\r\\n                // contents by `submod` bytes. Masking the lowest-order\\r\\n                // `submod` bytes allows us to add that value directly to the\\r\\n                // stored value.\\r\\n\\r\\n                let submod := sub(32, slength)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    sc := add(sc, 1)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n            default {\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                // Start copying to the last used word of the stored array.\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // Copy over the first `submod` bytes of the new data as in\\r\\n                // case 1 above.\\r\\n                let slengthmod := mod(slength, 32)\\r\\n                let mlengthmod := mod(mlength, 32)\\r\\n                let submod := sub(32, slengthmod)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function slice(\\r\\n        bytes memory _bytes,\\r\\n        uint _start,\\r\\n        uint _length\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\r\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\r\\n\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            switch iszero(_length)\\r\\n            case 0 {\\r\\n                // Get a location of some free memory and store it in tempBytes as\\r\\n                // Solidity does for memory variables.\\r\\n                tempBytes := mload(0x40)\\r\\n\\r\\n                // The first word of the slice result is potentially a partial\\r\\n                // word read from the original array. To read it, we calculate\\r\\n                // the length of that partial word and start copying that many\\r\\n                // bytes into the array. The first word we copy will start with\\r\\n                // data we don't care about, but the last `lengthmod` bytes will\\r\\n                // land at the beginning of the contents of the new array. When\\r\\n                // we're done copying, we overwrite the full first word with\\r\\n                // the actual length of the slice.\\r\\n                let lengthmod := and(_length, 31)\\r\\n\\r\\n                // The multiplication in the next line is necessary\\r\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\r\\n                // the following copy loop was copying the origin's length\\r\\n                // and then ending prematurely not copying everything it should.\\r\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\r\\n                let end := add(mc, _length)\\r\\n\\r\\n                for {\\r\\n                    // The multiplication in the next line has the same exact purpose\\r\\n                    // as the one above.\\r\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\r\\n                } lt(mc, end) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    mstore(mc, mload(cc))\\r\\n                }\\r\\n\\r\\n                mstore(tempBytes, _length)\\r\\n\\r\\n                //update free-memory pointer\\r\\n                //allocating the array padded to 32 bytes like the compiler does now\\r\\n                mstore(0x40, and(add(mc, 31), not(31)))\\r\\n            }\\r\\n            //if we want a zero-length slice let's just return a zero-length array\\r\\n            default {\\r\\n                tempBytes := mload(0x40)\\r\\n                //zero out the 32 bytes slice we are about to return\\r\\n                //we need to do it because Solidity does not garbage collect\\r\\n                mstore(tempBytes, 0)\\r\\n\\r\\n                mstore(0x40, add(tempBytes, 0x20))\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\r\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\r\\n        address tempAddress;\\r\\n\\r\\n        assembly {\\r\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\r\\n        }\\r\\n\\r\\n        return tempAddress;\\r\\n    }\\r\\n\\r\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\r\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\r\\n        uint8 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\r\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\r\\n        uint16 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\r\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\r\\n        uint32 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\r\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\r\\n        uint64 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\r\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\r\\n        uint96 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\r\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\r\\n        uint128 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\r\\n        uint tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\r\\n        bytes32 tempBytes32;\\r\\n\\r\\n        assembly {\\r\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempBytes32;\\r\\n    }\\r\\n\\r\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            let length := mload(_preBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(length, mload(_postBytes))\\r\\n            case 1 {\\r\\n                // cb is a circuit breaker in the for loop since there's\\r\\n                //  no said feature for inline assembly loops\\r\\n                // cb = 1 - don't breaker\\r\\n                // cb = 0 - break\\r\\n                let cb := 1\\r\\n\\r\\n                let mc := add(_preBytes, 0x20)\\r\\n                let end := add(mc, length)\\r\\n\\r\\n                for {\\r\\n                    let cc := add(_postBytes, 0x20)\\r\\n                    // the next line is the loop condition:\\r\\n                    // while(uint256(mc < end) + cb == 2)\\r\\n                } eq(add(lt(mc, end), cb), 2) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    // if any of these checks fails then arrays are not equal\\r\\n                    if iszero(eq(mload(mc), mload(cc))) {\\r\\n                        // unsuccess:\\r\\n                        success := 0\\r\\n                        cb := 0\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n\\r\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            // we know _preBytes_offset is 0\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Decode the length of the stored array like in concatStorage().\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(slength, mlength)\\r\\n            case 1 {\\r\\n                // slength can contain both the length and contents of the array\\r\\n                // if length < 32 bytes so let's prepare for that\\r\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n                if iszero(iszero(slength)) {\\r\\n                    switch lt(slength, 32)\\r\\n                    case 1 {\\r\\n                        // blank the last byte which is the length\\r\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\r\\n\\r\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\r\\n                            // unsuccess:\\r\\n                            success := 0\\r\\n                        }\\r\\n                    }\\r\\n                    default {\\r\\n                        // cb is a circuit breaker in the for loop since there's\\r\\n                        //  no said feature for inline assembly loops\\r\\n                        // cb = 1 - don't breaker\\r\\n                        // cb = 0 - break\\r\\n                        let cb := 1\\r\\n\\r\\n                        // get the keccak hash to get the contents of the array\\r\\n                        mstore(0x0, _preBytes.slot)\\r\\n                        let sc := keccak256(0x0, 0x20)\\r\\n\\r\\n                        let mc := add(_postBytes, 0x20)\\r\\n                        let end := add(mc, mlength)\\r\\n\\r\\n                        // the next line is the loop condition:\\r\\n                        // while(uint256(mc < end) + cb == 2)\\r\\n                        for {\\r\\n\\r\\n                        } eq(add(lt(mc, end), cb), 2) {\\r\\n                            sc := add(sc, 1)\\r\\n                            mc := add(mc, 0x20)\\r\\n                        } {\\r\\n                            if iszero(eq(sload(sc), mload(mc))) {\\r\\n                                // unsuccess:\\r\\n                                success := 0\\r\\n                                cb := 0\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7792f84cab13c1cfb572a558192ca3dd601615e1328d80130bd3e2784ac7eea4\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/libraries/ExcessivelySafeCall.sol":{"ExcessivelySafeCall":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026b2ece9e42262622022e2abbb9b81b0cb0deae90a5933facab69c82d50b5b3864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xB2 0xEC 0xE9 0xE4 0x22 PUSH3 0x622022 0xE2 0xAB 0xBB SWAP12 DUP2 0xB0 0xCB 0xD 0xEA 0xE9 EXP MSIZE CALLER STATICCALL 0xCA 0xB6 SWAP13 DUP3 0xD5 SIGNEXTEND JUMPDEST CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"75:5515:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;75:5515:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026b2ece9e42262622022e2abbb9b81b0cb0deae90a5933facab69c82d50b5b3864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xB2 0xEC 0xE9 0xE4 0x22 PUSH3 0x622022 0xE2 0xAB 0xBB SWAP12 DUP2 0xB0 0xCB 0xD 0xEA 0xE9 EXP MSIZE CALLER STATICCALL 0xCA 0xB6 SWAP13 DUP3 0xD5 SIGNEXTEND JUMPDEST CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"75:5515:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"excessivelySafeCall(address,uint256,uint16,bytes memory)":"infinite","excessivelySafeStaticCall(address,uint256,uint16,bytes memory)":"infinite","swapSelector(bytes4,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/libraries/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/bridge/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.7.6;\\r\\n\\r\\nlibrary ExcessivelySafeCall {\\r\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\r\\n\\r\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\r\\n    /// contract. This prevents the called contract from causing reversion of\\r\\n    /// the caller in as many ways as we can.\\r\\n    /// @dev The main difference between this and a solidity low-level call is\\r\\n    /// that we limit the number of bytes that the callee can cause to be\\r\\n    /// copied to caller memory. This prevents stupid things like malicious\\r\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\r\\n    /// to memory.\\r\\n    /// @param _target The address to call\\r\\n    /// @param _gas The amount of gas to forward to the remote contract\\r\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\r\\n    /// to memory.\\r\\n    /// @param _calldata The data to send to the remote contract\\r\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\r\\n    /// `_maxCopy` bytes.\\r\\n    function excessivelySafeCall(\\r\\n        address _target,\\r\\n        uint _gas,\\r\\n        uint16 _maxCopy,\\r\\n        bytes memory _calldata\\r\\n    ) internal returns (bool, bytes memory) {\\r\\n        // set up for assembly call\\r\\n        uint _toCopy;\\r\\n        bool _success;\\r\\n        bytes memory _returnData = new bytes(_maxCopy);\\r\\n        // dispatch message to recipient\\r\\n        // by assembly calling \\\"handle\\\" function\\r\\n        // we call via assembly to avoid memcopying a very large returndata\\r\\n        // returned by a malicious contract\\r\\n        assembly {\\r\\n            _success := call(\\r\\n                _gas, // gas\\r\\n                _target, // recipient\\r\\n                0, // ether value\\r\\n                add(_calldata, 0x20), // inloc\\r\\n                mload(_calldata), // inlen\\r\\n                0, // outloc\\r\\n                0 // outlen\\r\\n            )\\r\\n            // limit our copy to 256 bytes\\r\\n            _toCopy := returndatasize()\\r\\n            if gt(_toCopy, _maxCopy) {\\r\\n                _toCopy := _maxCopy\\r\\n            }\\r\\n            // Store the length of the copied bytes\\r\\n            mstore(_returnData, _toCopy)\\r\\n            // copy the bytes from returndata[0:_toCopy]\\r\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\r\\n        }\\r\\n        return (_success, _returnData);\\r\\n    }\\r\\n\\r\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\r\\n    /// contract. This prevents the called contract from causing reversion of\\r\\n    /// the caller in as many ways as we can.\\r\\n    /// @dev The main difference between this and a solidity low-level call is\\r\\n    /// that we limit the number of bytes that the callee can cause to be\\r\\n    /// copied to caller memory. This prevents stupid things like malicious\\r\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\r\\n    /// to memory.\\r\\n    /// @param _target The address to call\\r\\n    /// @param _gas The amount of gas to forward to the remote contract\\r\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\r\\n    /// to memory.\\r\\n    /// @param _calldata The data to send to the remote contract\\r\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\r\\n    /// `_maxCopy` bytes.\\r\\n    function excessivelySafeStaticCall(\\r\\n        address _target,\\r\\n        uint _gas,\\r\\n        uint16 _maxCopy,\\r\\n        bytes memory _calldata\\r\\n    ) internal view returns (bool, bytes memory) {\\r\\n        // set up for assembly call\\r\\n        uint _toCopy;\\r\\n        bool _success;\\r\\n        bytes memory _returnData = new bytes(_maxCopy);\\r\\n        // dispatch message to recipient\\r\\n        // by assembly calling \\\"handle\\\" function\\r\\n        // we call via assembly to avoid memcopying a very large returndata\\r\\n        // returned by a malicious contract\\r\\n        assembly {\\r\\n            _success := staticcall(\\r\\n                _gas, // gas\\r\\n                _target, // recipient\\r\\n                add(_calldata, 0x20), // inloc\\r\\n                mload(_calldata), // inlen\\r\\n                0, // outloc\\r\\n                0 // outlen\\r\\n            )\\r\\n            // limit our copy to 256 bytes\\r\\n            _toCopy := returndatasize()\\r\\n            if gt(_toCopy, _maxCopy) {\\r\\n                _toCopy := _maxCopy\\r\\n            }\\r\\n            // Store the length of the copied bytes\\r\\n            mstore(_returnData, _toCopy)\\r\\n            // copy the bytes from returndata[0:_toCopy]\\r\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\r\\n        }\\r\\n        return (_success, _returnData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Swaps function selectors in encoded contract calls\\r\\n     * @dev Allows reuse of encoded calldata for functions with identical\\r\\n     * argument types but different names. It simply swaps out the first 4 bytes\\r\\n     * for the new selector. This function modifies memory in place, and should\\r\\n     * only be used with caution.\\r\\n     * @param _newSelector The new 4-byte selector\\r\\n     * @param _buf The encoded contract args\\r\\n     */\\r\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\r\\n        require(_buf.length >= 4);\\r\\n        uint _mask = LOW_28_MASK;\\r\\n        assembly {\\r\\n            // load the first word of\\r\\n            let _word := mload(add(_buf, 0x20))\\r\\n            // mask out the top 4 bytes\\r\\n            // /x\\r\\n            _word := and(_word, _mask)\\r\\n            _word := or(_newSelector, _word)\\r\\n            mstore(add(_buf, 0x20), _word)\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7c99d40e0c339d5db9548b42b7a6c5e7626fe87357735a086c1989266ca46365\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/lzApp/LzApp.sol":{"LzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/lzApp/LzApp.sol\":\"LzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/bridge/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\r\\n/*\\r\\n * @title Solidity Bytes Arrays Utils\\r\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\r\\n *\\r\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\r\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\r\\n */\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nlibrary BytesLib {\\r\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            // Get a location of some free memory and store it in tempBytes as\\r\\n            // Solidity does for memory variables.\\r\\n            tempBytes := mload(0x40)\\r\\n\\r\\n            // Store the length of the first bytes array at the beginning of\\r\\n            // the memory for tempBytes.\\r\\n            let length := mload(_preBytes)\\r\\n            mstore(tempBytes, length)\\r\\n\\r\\n            // Maintain a memory counter for the current write location in the\\r\\n            // temp bytes array by adding the 32 bytes for the array length to\\r\\n            // the starting location.\\r\\n            let mc := add(tempBytes, 0x20)\\r\\n            // Stop copying when the memory counter reaches the length of the\\r\\n            // first bytes array.\\r\\n            let end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                // Initialize a copy counter to the start of the _preBytes data,\\r\\n                // 32 bytes into its memory.\\r\\n                let cc := add(_preBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                // Increase both counters by 32 bytes each iteration.\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\r\\n                // at a time.\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Add the length of _postBytes to the current length of tempBytes\\r\\n            // and store it as the new length in the first 32 bytes of the\\r\\n            // tempBytes memory.\\r\\n            length := mload(_postBytes)\\r\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\r\\n\\r\\n            // Move the memory counter back from a multiple of 0x20 to the\\r\\n            // actual end of the _preBytes data.\\r\\n            mc := end\\r\\n            // Stop copying when the memory counter reaches the new combined\\r\\n            // length of the arrays.\\r\\n            end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                let cc := add(_postBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Update the free-memory pointer by padding our last write location\\r\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\r\\n            // next 32 byte block, then round down to the nearest multiple of\\r\\n            // 32. If the sum of the length of the two arrays is zero then add\\r\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\r\\n            mstore(\\r\\n                0x40,\\r\\n                and(\\r\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\r\\n                    not(31) // Round down to the nearest 32 bytes.\\r\\n                )\\r\\n            )\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\r\\n        assembly {\\r\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\r\\n            // of the array. (We don't need to use the offset into the slot\\r\\n            // because arrays use the entire slot.)\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Arrays of 31 bytes or less have an even value in their slot,\\r\\n            // while longer arrays have an odd value. The actual length is\\r\\n            // the slot divided by two for odd values, and the lowest order\\r\\n            // byte divided by two for even values.\\r\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\r\\n            // two to get the length. If the slot is odd, bitwise and the slot\\r\\n            // with -1 and divide by two.\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n            let newlength := add(slength, mlength)\\r\\n            // slength can contain both the length and contents of the array\\r\\n            // if length < 32 bytes so let's prepare for that\\r\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n            switch add(lt(slength, 32), lt(newlength, 32))\\r\\n            case 2 {\\r\\n                // Since the new array still fits in the slot, we just need to\\r\\n                // update the contents of the slot.\\r\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\r\\n                sstore(\\r\\n                    _preBytes.slot,\\r\\n                    // all the modifications to the slot are inside this\\r\\n                    // next block\\r\\n                    add(\\r\\n                        // we can just add to the slot contents because the\\r\\n                        // bytes we want to change are the LSBs\\r\\n                        fslot,\\r\\n                        add(\\r\\n                            mul(\\r\\n                                div(\\r\\n                                    // load the bytes from memory\\r\\n                                    mload(add(_postBytes, 0x20)),\\r\\n                                    // zero all bytes to the right\\r\\n                                    exp(0x100, sub(32, mlength))\\r\\n                                ),\\r\\n                                // and now shift left the number of bytes to\\r\\n                                // leave space for the length in the slot\\r\\n                                exp(0x100, sub(32, newlength))\\r\\n                            ),\\r\\n                            // increase length by the double of the memory\\r\\n                            // bytes length\\r\\n                            mul(mlength, 2)\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            }\\r\\n            case 1 {\\r\\n                // The stored value fits in the slot, but the combined value\\r\\n                // will exceed it.\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // The contents of the _postBytes array start 32 bytes into\\r\\n                // the structure. Our first read should obtain the `submod`\\r\\n                // bytes that can fit into the unused space in the last word\\r\\n                // of the stored array. To get this, we read 32 bytes starting\\r\\n                // from `submod`, so the data we read overlaps with the array\\r\\n                // contents by `submod` bytes. Masking the lowest-order\\r\\n                // `submod` bytes allows us to add that value directly to the\\r\\n                // stored value.\\r\\n\\r\\n                let submod := sub(32, slength)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    sc := add(sc, 1)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n            default {\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                // Start copying to the last used word of the stored array.\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // Copy over the first `submod` bytes of the new data as in\\r\\n                // case 1 above.\\r\\n                let slengthmod := mod(slength, 32)\\r\\n                let mlengthmod := mod(mlength, 32)\\r\\n                let submod := sub(32, slengthmod)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function slice(\\r\\n        bytes memory _bytes,\\r\\n        uint _start,\\r\\n        uint _length\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\r\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\r\\n\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            switch iszero(_length)\\r\\n            case 0 {\\r\\n                // Get a location of some free memory and store it in tempBytes as\\r\\n                // Solidity does for memory variables.\\r\\n                tempBytes := mload(0x40)\\r\\n\\r\\n                // The first word of the slice result is potentially a partial\\r\\n                // word read from the original array. To read it, we calculate\\r\\n                // the length of that partial word and start copying that many\\r\\n                // bytes into the array. The first word we copy will start with\\r\\n                // data we don't care about, but the last `lengthmod` bytes will\\r\\n                // land at the beginning of the contents of the new array. When\\r\\n                // we're done copying, we overwrite the full first word with\\r\\n                // the actual length of the slice.\\r\\n                let lengthmod := and(_length, 31)\\r\\n\\r\\n                // The multiplication in the next line is necessary\\r\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\r\\n                // the following copy loop was copying the origin's length\\r\\n                // and then ending prematurely not copying everything it should.\\r\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\r\\n                let end := add(mc, _length)\\r\\n\\r\\n                for {\\r\\n                    // The multiplication in the next line has the same exact purpose\\r\\n                    // as the one above.\\r\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\r\\n                } lt(mc, end) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    mstore(mc, mload(cc))\\r\\n                }\\r\\n\\r\\n                mstore(tempBytes, _length)\\r\\n\\r\\n                //update free-memory pointer\\r\\n                //allocating the array padded to 32 bytes like the compiler does now\\r\\n                mstore(0x40, and(add(mc, 31), not(31)))\\r\\n            }\\r\\n            //if we want a zero-length slice let's just return a zero-length array\\r\\n            default {\\r\\n                tempBytes := mload(0x40)\\r\\n                //zero out the 32 bytes slice we are about to return\\r\\n                //we need to do it because Solidity does not garbage collect\\r\\n                mstore(tempBytes, 0)\\r\\n\\r\\n                mstore(0x40, add(tempBytes, 0x20))\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\r\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\r\\n        address tempAddress;\\r\\n\\r\\n        assembly {\\r\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\r\\n        }\\r\\n\\r\\n        return tempAddress;\\r\\n    }\\r\\n\\r\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\r\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\r\\n        uint8 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\r\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\r\\n        uint16 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\r\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\r\\n        uint32 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\r\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\r\\n        uint64 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\r\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\r\\n        uint96 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\r\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\r\\n        uint128 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\r\\n        uint tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\r\\n        bytes32 tempBytes32;\\r\\n\\r\\n        assembly {\\r\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempBytes32;\\r\\n    }\\r\\n\\r\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            let length := mload(_preBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(length, mload(_postBytes))\\r\\n            case 1 {\\r\\n                // cb is a circuit breaker in the for loop since there's\\r\\n                //  no said feature for inline assembly loops\\r\\n                // cb = 1 - don't breaker\\r\\n                // cb = 0 - break\\r\\n                let cb := 1\\r\\n\\r\\n                let mc := add(_preBytes, 0x20)\\r\\n                let end := add(mc, length)\\r\\n\\r\\n                for {\\r\\n                    let cc := add(_postBytes, 0x20)\\r\\n                    // the next line is the loop condition:\\r\\n                    // while(uint256(mc < end) + cb == 2)\\r\\n                } eq(add(lt(mc, end), cb), 2) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    // if any of these checks fails then arrays are not equal\\r\\n                    if iszero(eq(mload(mc), mload(cc))) {\\r\\n                        // unsuccess:\\r\\n                        success := 0\\r\\n                        cb := 0\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n\\r\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            // we know _preBytes_offset is 0\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Decode the length of the stored array like in concatStorage().\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(slength, mlength)\\r\\n            case 1 {\\r\\n                // slength can contain both the length and contents of the array\\r\\n                // if length < 32 bytes so let's prepare for that\\r\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n                if iszero(iszero(slength)) {\\r\\n                    switch lt(slength, 32)\\r\\n                    case 1 {\\r\\n                        // blank the last byte which is the length\\r\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\r\\n\\r\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\r\\n                            // unsuccess:\\r\\n                            success := 0\\r\\n                        }\\r\\n                    }\\r\\n                    default {\\r\\n                        // cb is a circuit breaker in the for loop since there's\\r\\n                        //  no said feature for inline assembly loops\\r\\n                        // cb = 1 - don't breaker\\r\\n                        // cb = 0 - break\\r\\n                        let cb := 1\\r\\n\\r\\n                        // get the keccak hash to get the contents of the array\\r\\n                        mstore(0x0, _preBytes.slot)\\r\\n                        let sc := keccak256(0x0, 0x20)\\r\\n\\r\\n                        let mc := add(_postBytes, 0x20)\\r\\n                        let end := add(mc, mlength)\\r\\n\\r\\n                        // the next line is the loop condition:\\r\\n                        // while(uint256(mc < end) + cb == 2)\\r\\n                        for {\\r\\n\\r\\n                        } eq(add(lt(mc, end), cb), 2) {\\r\\n                            sc := add(sc, 1)\\r\\n                            mc := add(mc, 0x20)\\r\\n                        } {\\r\\n                            if iszero(eq(sload(sc), mload(mc))) {\\r\\n                                // unsuccess:\\r\\n                                success := 0\\r\\n                                cb := 0\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7792f84cab13c1cfb572a558192ca3dd601615e1328d80130bd3e2784ac7eea4\",\"license\":\"Unlicense\"},\"contracts/bridge/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\r\\nimport \\\"../libraries/BytesLib.sol\\\";\\r\\n\\r\\n/*\\r\\n * a generic LzReceiver implementation\\r\\n */\\r\\nabstract contract LzApp is Initializable, OwnableUpgradeable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\r\\n    using BytesLib for bytes;\\r\\n\\r\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\r\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\r\\n\\r\\n    ILayerZeroEndpoint public lzEndpoint;\\r\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\r\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\r\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\r\\n    address public precrime;\\r\\n\\r\\n    event SetPrecrime(address precrime);\\r\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\r\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\r\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\r\\n\\r\\n    function __LzApp_init(address _endpoint) internal onlyInitializing {\\r\\n        __Ownable_init();\\r\\n        __LzApp_init_unchained(_endpoint);\\r\\n    }\\r\\n\\r\\n    function __LzApp_init_unchained(address _endpoint) internal onlyInitializing {\\r\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\r\\n    }\\r\\n\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) public virtual override {\\r\\n        // lzReceive must be called by the endpoint for security\\r\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\r\\n\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\r\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\r\\n        require(\\r\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\r\\n            \\\"LzApp: invalid source sending contract\\\"\\r\\n        );\\r\\n\\r\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n\\r\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\r\\n    function _blockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) internal virtual;\\r\\n\\r\\n    function _lzSend(\\r\\n        uint16 _dstChainId,\\r\\n        bytes memory _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes memory _adapterParams,\\r\\n        uint _nativeFee\\r\\n    ) internal virtual {\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\r\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\r\\n        _checkPayloadSize(_dstChainId, _payload.length);\\r\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\r\\n    }\\r\\n\\r\\n    function _checkGasLimit(\\r\\n        uint16 _dstChainId,\\r\\n        uint16 _type,\\r\\n        bytes memory _adapterParams,\\r\\n        uint _extraGas\\r\\n    ) internal view virtual {\\r\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\r\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\r\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\r\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\r\\n    }\\r\\n\\r\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\r\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\r\\n        assembly {\\r\\n            gasLimit := mload(add(_adapterParams, 34))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\r\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\r\\n        if (payloadSizeLimit == 0) {\\r\\n            // use default if not set\\r\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\r\\n        }\\r\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\r\\n    }\\r\\n\\r\\n    //---------------------------UserApplication config----------------------------------------\\r\\n    function getConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        address,\\r\\n        uint _configType\\r\\n    ) external view returns (bytes memory) {\\r\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\r\\n    }\\r\\n\\r\\n    // generic config for LayerZero user Application\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external override onlyOwner {\\r\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\r\\n    }\\r\\n\\r\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setSendVersion(_version);\\r\\n    }\\r\\n\\r\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setReceiveVersion(_version);\\r\\n    }\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\r\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\r\\n    }\\r\\n\\r\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\r\\n    // this function set the trusted path for the cross-chain communication\\r\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\r\\n        trustedRemoteLookup[_remoteChainId] = _path;\\r\\n        emit SetTrustedRemote(_remoteChainId, _path);\\r\\n    }\\r\\n\\r\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\r\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\r\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\r\\n    }\\r\\n\\r\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\r\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\r\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\r\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\r\\n    }\\r\\n\\r\\n    function setPrecrime(address _precrime) external onlyOwner {\\r\\n        precrime = _precrime;\\r\\n        emit SetPrecrime(_precrime);\\r\\n    }\\r\\n\\r\\n    function setMinDstGas(\\r\\n        uint16 _dstChainId,\\r\\n        uint16 _packetType,\\r\\n        uint _minGas\\r\\n    ) external onlyOwner {\\r\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\r\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\r\\n    }\\r\\n\\r\\n    // if the size is 0, it means default size limit\\r\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\r\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\r\\n    }\\r\\n\\r\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\r\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\r\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\r\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb5958eb7c21000b1b6021c3de912616d568636a120ede1a5f1930d8d06645d84\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(\\r\\n        uint16 _dstChainId,\\r\\n        bytes calldata _destination,\\r\\n        bytes calldata _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint _gasLimit,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        address _userApplication,\\r\\n        bytes calldata _payload,\\r\\n        bool _payInZRO,\\r\\n        bytes calldata _adapterParam\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        address _userApplication,\\r\\n        uint _configType\\r\\n    ) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0x038a0822ff0ed7840f1871e33f02ab2f86f1e15d49569d1775aa5bc9ec89faf5\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x66647bb1e973a693f4420f294688283cca5235ed950dc7a6f5f4394bf9ecf3c0\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x3d1c7a12c577b3339252875a90da60c59617f8b299f88e35cd8b9b190b762a73\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1527,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":281,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":401,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":4600,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"lzEndpoint","offset":0,"slot":"101","type":"t_contract(ILayerZeroEndpoint)5541"},{"astId":4604,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"trustedRemoteLookup","offset":0,"slot":"102","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":4610,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"minDstGasLookup","offset":0,"slot":"103","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":4614,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"104","type":"t_mapping(t_uint16,t_uint256)"},{"astId":4616,"contract":"contracts/bridge/lzApp/LzApp.sol:LzApp","label":"precrime","offset":0,"slot":"105","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(ILayerZeroEndpoint)5541":{"encoding":"inplace","label":"contract ILayerZeroEndpoint","numberOfBytes":"20"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/lzApp/NonblockingLzApp.sol":{"NonblockingLzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/lzApp/NonblockingLzApp.sol\":\"NonblockingLzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/bridge/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\r\\n/*\\r\\n * @title Solidity Bytes Arrays Utils\\r\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\r\\n *\\r\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\r\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\r\\n */\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nlibrary BytesLib {\\r\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            // Get a location of some free memory and store it in tempBytes as\\r\\n            // Solidity does for memory variables.\\r\\n            tempBytes := mload(0x40)\\r\\n\\r\\n            // Store the length of the first bytes array at the beginning of\\r\\n            // the memory for tempBytes.\\r\\n            let length := mload(_preBytes)\\r\\n            mstore(tempBytes, length)\\r\\n\\r\\n            // Maintain a memory counter for the current write location in the\\r\\n            // temp bytes array by adding the 32 bytes for the array length to\\r\\n            // the starting location.\\r\\n            let mc := add(tempBytes, 0x20)\\r\\n            // Stop copying when the memory counter reaches the length of the\\r\\n            // first bytes array.\\r\\n            let end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                // Initialize a copy counter to the start of the _preBytes data,\\r\\n                // 32 bytes into its memory.\\r\\n                let cc := add(_preBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                // Increase both counters by 32 bytes each iteration.\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\r\\n                // at a time.\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Add the length of _postBytes to the current length of tempBytes\\r\\n            // and store it as the new length in the first 32 bytes of the\\r\\n            // tempBytes memory.\\r\\n            length := mload(_postBytes)\\r\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\r\\n\\r\\n            // Move the memory counter back from a multiple of 0x20 to the\\r\\n            // actual end of the _preBytes data.\\r\\n            mc := end\\r\\n            // Stop copying when the memory counter reaches the new combined\\r\\n            // length of the arrays.\\r\\n            end := add(mc, length)\\r\\n\\r\\n            for {\\r\\n                let cc := add(_postBytes, 0x20)\\r\\n            } lt(mc, end) {\\r\\n                mc := add(mc, 0x20)\\r\\n                cc := add(cc, 0x20)\\r\\n            } {\\r\\n                mstore(mc, mload(cc))\\r\\n            }\\r\\n\\r\\n            // Update the free-memory pointer by padding our last write location\\r\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\r\\n            // next 32 byte block, then round down to the nearest multiple of\\r\\n            // 32. If the sum of the length of the two arrays is zero then add\\r\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\r\\n            mstore(\\r\\n                0x40,\\r\\n                and(\\r\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\r\\n                    not(31) // Round down to the nearest 32 bytes.\\r\\n                )\\r\\n            )\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\r\\n        assembly {\\r\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\r\\n            // of the array. (We don't need to use the offset into the slot\\r\\n            // because arrays use the entire slot.)\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Arrays of 31 bytes or less have an even value in their slot,\\r\\n            // while longer arrays have an odd value. The actual length is\\r\\n            // the slot divided by two for odd values, and the lowest order\\r\\n            // byte divided by two for even values.\\r\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\r\\n            // two to get the length. If the slot is odd, bitwise and the slot\\r\\n            // with -1 and divide by two.\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n            let newlength := add(slength, mlength)\\r\\n            // slength can contain both the length and contents of the array\\r\\n            // if length < 32 bytes so let's prepare for that\\r\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n            switch add(lt(slength, 32), lt(newlength, 32))\\r\\n            case 2 {\\r\\n                // Since the new array still fits in the slot, we just need to\\r\\n                // update the contents of the slot.\\r\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\r\\n                sstore(\\r\\n                    _preBytes.slot,\\r\\n                    // all the modifications to the slot are inside this\\r\\n                    // next block\\r\\n                    add(\\r\\n                        // we can just add to the slot contents because the\\r\\n                        // bytes we want to change are the LSBs\\r\\n                        fslot,\\r\\n                        add(\\r\\n                            mul(\\r\\n                                div(\\r\\n                                    // load the bytes from memory\\r\\n                                    mload(add(_postBytes, 0x20)),\\r\\n                                    // zero all bytes to the right\\r\\n                                    exp(0x100, sub(32, mlength))\\r\\n                                ),\\r\\n                                // and now shift left the number of bytes to\\r\\n                                // leave space for the length in the slot\\r\\n                                exp(0x100, sub(32, newlength))\\r\\n                            ),\\r\\n                            // increase length by the double of the memory\\r\\n                            // bytes length\\r\\n                            mul(mlength, 2)\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            }\\r\\n            case 1 {\\r\\n                // The stored value fits in the slot, but the combined value\\r\\n                // will exceed it.\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // The contents of the _postBytes array start 32 bytes into\\r\\n                // the structure. Our first read should obtain the `submod`\\r\\n                // bytes that can fit into the unused space in the last word\\r\\n                // of the stored array. To get this, we read 32 bytes starting\\r\\n                // from `submod`, so the data we read overlaps with the array\\r\\n                // contents by `submod` bytes. Masking the lowest-order\\r\\n                // `submod` bytes allows us to add that value directly to the\\r\\n                // stored value.\\r\\n\\r\\n                let submod := sub(32, slength)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    sc := add(sc, 1)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n            default {\\r\\n                // get the keccak hash to get the contents of the array\\r\\n                mstore(0x0, _preBytes.slot)\\r\\n                // Start copying to the last used word of the stored array.\\r\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\r\\n\\r\\n                // save new length\\r\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\r\\n\\r\\n                // Copy over the first `submod` bytes of the new data as in\\r\\n                // case 1 above.\\r\\n                let slengthmod := mod(slength, 32)\\r\\n                let mlengthmod := mod(mlength, 32)\\r\\n                let submod := sub(32, slengthmod)\\r\\n                let mc := add(_postBytes, submod)\\r\\n                let end := add(_postBytes, mlength)\\r\\n                let mask := sub(exp(0x100, submod), 1)\\r\\n\\r\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\r\\n\\r\\n                for {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } lt(mc, end) {\\r\\n                    sc := add(sc, 1)\\r\\n                    mc := add(mc, 0x20)\\r\\n                } {\\r\\n                    sstore(sc, mload(mc))\\r\\n                }\\r\\n\\r\\n                mask := exp(0x100, sub(mc, end))\\r\\n\\r\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function slice(\\r\\n        bytes memory _bytes,\\r\\n        uint _start,\\r\\n        uint _length\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\r\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\r\\n\\r\\n        bytes memory tempBytes;\\r\\n\\r\\n        assembly {\\r\\n            switch iszero(_length)\\r\\n            case 0 {\\r\\n                // Get a location of some free memory and store it in tempBytes as\\r\\n                // Solidity does for memory variables.\\r\\n                tempBytes := mload(0x40)\\r\\n\\r\\n                // The first word of the slice result is potentially a partial\\r\\n                // word read from the original array. To read it, we calculate\\r\\n                // the length of that partial word and start copying that many\\r\\n                // bytes into the array. The first word we copy will start with\\r\\n                // data we don't care about, but the last `lengthmod` bytes will\\r\\n                // land at the beginning of the contents of the new array. When\\r\\n                // we're done copying, we overwrite the full first word with\\r\\n                // the actual length of the slice.\\r\\n                let lengthmod := and(_length, 31)\\r\\n\\r\\n                // The multiplication in the next line is necessary\\r\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\r\\n                // the following copy loop was copying the origin's length\\r\\n                // and then ending prematurely not copying everything it should.\\r\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\r\\n                let end := add(mc, _length)\\r\\n\\r\\n                for {\\r\\n                    // The multiplication in the next line has the same exact purpose\\r\\n                    // as the one above.\\r\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\r\\n                } lt(mc, end) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    mstore(mc, mload(cc))\\r\\n                }\\r\\n\\r\\n                mstore(tempBytes, _length)\\r\\n\\r\\n                //update free-memory pointer\\r\\n                //allocating the array padded to 32 bytes like the compiler does now\\r\\n                mstore(0x40, and(add(mc, 31), not(31)))\\r\\n            }\\r\\n            //if we want a zero-length slice let's just return a zero-length array\\r\\n            default {\\r\\n                tempBytes := mload(0x40)\\r\\n                //zero out the 32 bytes slice we are about to return\\r\\n                //we need to do it because Solidity does not garbage collect\\r\\n                mstore(tempBytes, 0)\\r\\n\\r\\n                mstore(0x40, add(tempBytes, 0x20))\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return tempBytes;\\r\\n    }\\r\\n\\r\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\r\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\r\\n        address tempAddress;\\r\\n\\r\\n        assembly {\\r\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\r\\n        }\\r\\n\\r\\n        return tempAddress;\\r\\n    }\\r\\n\\r\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\r\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\r\\n        uint8 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\r\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\r\\n        uint16 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\r\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\r\\n        uint32 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\r\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\r\\n        uint64 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\r\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\r\\n        uint96 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\r\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\r\\n        uint128 tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\r\\n        uint tempUint;\\r\\n\\r\\n        assembly {\\r\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempUint;\\r\\n    }\\r\\n\\r\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\r\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\r\\n        bytes32 tempBytes32;\\r\\n\\r\\n        assembly {\\r\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\r\\n        }\\r\\n\\r\\n        return tempBytes32;\\r\\n    }\\r\\n\\r\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            let length := mload(_preBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(length, mload(_postBytes))\\r\\n            case 1 {\\r\\n                // cb is a circuit breaker in the for loop since there's\\r\\n                //  no said feature for inline assembly loops\\r\\n                // cb = 1 - don't breaker\\r\\n                // cb = 0 - break\\r\\n                let cb := 1\\r\\n\\r\\n                let mc := add(_preBytes, 0x20)\\r\\n                let end := add(mc, length)\\r\\n\\r\\n                for {\\r\\n                    let cc := add(_postBytes, 0x20)\\r\\n                    // the next line is the loop condition:\\r\\n                    // while(uint256(mc < end) + cb == 2)\\r\\n                } eq(add(lt(mc, end), cb), 2) {\\r\\n                    mc := add(mc, 0x20)\\r\\n                    cc := add(cc, 0x20)\\r\\n                } {\\r\\n                    // if any of these checks fails then arrays are not equal\\r\\n                    if iszero(eq(mload(mc), mload(cc))) {\\r\\n                        // unsuccess:\\r\\n                        success := 0\\r\\n                        cb := 0\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n\\r\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\r\\n        bool success = true;\\r\\n\\r\\n        assembly {\\r\\n            // we know _preBytes_offset is 0\\r\\n            let fslot := sload(_preBytes.slot)\\r\\n            // Decode the length of the stored array like in concatStorage().\\r\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\r\\n            let mlength := mload(_postBytes)\\r\\n\\r\\n            // if lengths don't match the arrays are not equal\\r\\n            switch eq(slength, mlength)\\r\\n            case 1 {\\r\\n                // slength can contain both the length and contents of the array\\r\\n                // if length < 32 bytes so let's prepare for that\\r\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\r\\n                if iszero(iszero(slength)) {\\r\\n                    switch lt(slength, 32)\\r\\n                    case 1 {\\r\\n                        // blank the last byte which is the length\\r\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\r\\n\\r\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\r\\n                            // unsuccess:\\r\\n                            success := 0\\r\\n                        }\\r\\n                    }\\r\\n                    default {\\r\\n                        // cb is a circuit breaker in the for loop since there's\\r\\n                        //  no said feature for inline assembly loops\\r\\n                        // cb = 1 - don't breaker\\r\\n                        // cb = 0 - break\\r\\n                        let cb := 1\\r\\n\\r\\n                        // get the keccak hash to get the contents of the array\\r\\n                        mstore(0x0, _preBytes.slot)\\r\\n                        let sc := keccak256(0x0, 0x20)\\r\\n\\r\\n                        let mc := add(_postBytes, 0x20)\\r\\n                        let end := add(mc, mlength)\\r\\n\\r\\n                        // the next line is the loop condition:\\r\\n                        // while(uint256(mc < end) + cb == 2)\\r\\n                        for {\\r\\n\\r\\n                        } eq(add(lt(mc, end), cb), 2) {\\r\\n                            sc := add(sc, 1)\\r\\n                            mc := add(mc, 0x20)\\r\\n                        } {\\r\\n                            if iszero(eq(sload(sc), mload(mc))) {\\r\\n                                // unsuccess:\\r\\n                                success := 0\\r\\n                                cb := 0\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            default {\\r\\n                // unsuccess:\\r\\n                success := 0\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return success;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7792f84cab13c1cfb572a558192ca3dd601615e1328d80130bd3e2784ac7eea4\",\"license\":\"Unlicense\"},\"contracts/bridge/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.7.6;\\r\\n\\r\\nlibrary ExcessivelySafeCall {\\r\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\r\\n\\r\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\r\\n    /// contract. This prevents the called contract from causing reversion of\\r\\n    /// the caller in as many ways as we can.\\r\\n    /// @dev The main difference between this and a solidity low-level call is\\r\\n    /// that we limit the number of bytes that the callee can cause to be\\r\\n    /// copied to caller memory. This prevents stupid things like malicious\\r\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\r\\n    /// to memory.\\r\\n    /// @param _target The address to call\\r\\n    /// @param _gas The amount of gas to forward to the remote contract\\r\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\r\\n    /// to memory.\\r\\n    /// @param _calldata The data to send to the remote contract\\r\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\r\\n    /// `_maxCopy` bytes.\\r\\n    function excessivelySafeCall(\\r\\n        address _target,\\r\\n        uint _gas,\\r\\n        uint16 _maxCopy,\\r\\n        bytes memory _calldata\\r\\n    ) internal returns (bool, bytes memory) {\\r\\n        // set up for assembly call\\r\\n        uint _toCopy;\\r\\n        bool _success;\\r\\n        bytes memory _returnData = new bytes(_maxCopy);\\r\\n        // dispatch message to recipient\\r\\n        // by assembly calling \\\"handle\\\" function\\r\\n        // we call via assembly to avoid memcopying a very large returndata\\r\\n        // returned by a malicious contract\\r\\n        assembly {\\r\\n            _success := call(\\r\\n                _gas, // gas\\r\\n                _target, // recipient\\r\\n                0, // ether value\\r\\n                add(_calldata, 0x20), // inloc\\r\\n                mload(_calldata), // inlen\\r\\n                0, // outloc\\r\\n                0 // outlen\\r\\n            )\\r\\n            // limit our copy to 256 bytes\\r\\n            _toCopy := returndatasize()\\r\\n            if gt(_toCopy, _maxCopy) {\\r\\n                _toCopy := _maxCopy\\r\\n            }\\r\\n            // Store the length of the copied bytes\\r\\n            mstore(_returnData, _toCopy)\\r\\n            // copy the bytes from returndata[0:_toCopy]\\r\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\r\\n        }\\r\\n        return (_success, _returnData);\\r\\n    }\\r\\n\\r\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\r\\n    /// contract. This prevents the called contract from causing reversion of\\r\\n    /// the caller in as many ways as we can.\\r\\n    /// @dev The main difference between this and a solidity low-level call is\\r\\n    /// that we limit the number of bytes that the callee can cause to be\\r\\n    /// copied to caller memory. This prevents stupid things like malicious\\r\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\r\\n    /// to memory.\\r\\n    /// @param _target The address to call\\r\\n    /// @param _gas The amount of gas to forward to the remote contract\\r\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\r\\n    /// to memory.\\r\\n    /// @param _calldata The data to send to the remote contract\\r\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\r\\n    /// `_maxCopy` bytes.\\r\\n    function excessivelySafeStaticCall(\\r\\n        address _target,\\r\\n        uint _gas,\\r\\n        uint16 _maxCopy,\\r\\n        bytes memory _calldata\\r\\n    ) internal view returns (bool, bytes memory) {\\r\\n        // set up for assembly call\\r\\n        uint _toCopy;\\r\\n        bool _success;\\r\\n        bytes memory _returnData = new bytes(_maxCopy);\\r\\n        // dispatch message to recipient\\r\\n        // by assembly calling \\\"handle\\\" function\\r\\n        // we call via assembly to avoid memcopying a very large returndata\\r\\n        // returned by a malicious contract\\r\\n        assembly {\\r\\n            _success := staticcall(\\r\\n                _gas, // gas\\r\\n                _target, // recipient\\r\\n                add(_calldata, 0x20), // inloc\\r\\n                mload(_calldata), // inlen\\r\\n                0, // outloc\\r\\n                0 // outlen\\r\\n            )\\r\\n            // limit our copy to 256 bytes\\r\\n            _toCopy := returndatasize()\\r\\n            if gt(_toCopy, _maxCopy) {\\r\\n                _toCopy := _maxCopy\\r\\n            }\\r\\n            // Store the length of the copied bytes\\r\\n            mstore(_returnData, _toCopy)\\r\\n            // copy the bytes from returndata[0:_toCopy]\\r\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\r\\n        }\\r\\n        return (_success, _returnData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Swaps function selectors in encoded contract calls\\r\\n     * @dev Allows reuse of encoded calldata for functions with identical\\r\\n     * argument types but different names. It simply swaps out the first 4 bytes\\r\\n     * for the new selector. This function modifies memory in place, and should\\r\\n     * only be used with caution.\\r\\n     * @param _newSelector The new 4-byte selector\\r\\n     * @param _buf The encoded contract args\\r\\n     */\\r\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\r\\n        require(_buf.length >= 4);\\r\\n        uint _mask = LOW_28_MASK;\\r\\n        assembly {\\r\\n            // load the first word of\\r\\n            let _word := mload(add(_buf, 0x20))\\r\\n            // mask out the top 4 bytes\\r\\n            // /x\\r\\n            _word := and(_word, _mask)\\r\\n            _word := or(_newSelector, _word)\\r\\n            mstore(add(_buf, 0x20), _word)\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7c99d40e0c339d5db9548b42b7a6c5e7626fe87357735a086c1989266ca46365\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/bridge/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\r\\nimport \\\"../libraries/BytesLib.sol\\\";\\r\\n\\r\\n/*\\r\\n * a generic LzReceiver implementation\\r\\n */\\r\\nabstract contract LzApp is Initializable, OwnableUpgradeable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\r\\n    using BytesLib for bytes;\\r\\n\\r\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\r\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\r\\n\\r\\n    ILayerZeroEndpoint public lzEndpoint;\\r\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\r\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\r\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\r\\n    address public precrime;\\r\\n\\r\\n    event SetPrecrime(address precrime);\\r\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\r\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\r\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\r\\n\\r\\n    function __LzApp_init(address _endpoint) internal onlyInitializing {\\r\\n        __Ownable_init();\\r\\n        __LzApp_init_unchained(_endpoint);\\r\\n    }\\r\\n\\r\\n    function __LzApp_init_unchained(address _endpoint) internal onlyInitializing {\\r\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\r\\n    }\\r\\n\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) public virtual override {\\r\\n        // lzReceive must be called by the endpoint for security\\r\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\r\\n\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\r\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\r\\n        require(\\r\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\r\\n            \\\"LzApp: invalid source sending contract\\\"\\r\\n        );\\r\\n\\r\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n\\r\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\r\\n    function _blockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) internal virtual;\\r\\n\\r\\n    function _lzSend(\\r\\n        uint16 _dstChainId,\\r\\n        bytes memory _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes memory _adapterParams,\\r\\n        uint _nativeFee\\r\\n    ) internal virtual {\\r\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\r\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\r\\n        _checkPayloadSize(_dstChainId, _payload.length);\\r\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\r\\n    }\\r\\n\\r\\n    function _checkGasLimit(\\r\\n        uint16 _dstChainId,\\r\\n        uint16 _type,\\r\\n        bytes memory _adapterParams,\\r\\n        uint _extraGas\\r\\n    ) internal view virtual {\\r\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\r\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\r\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\r\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\r\\n    }\\r\\n\\r\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\r\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\r\\n        assembly {\\r\\n            gasLimit := mload(add(_adapterParams, 34))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\r\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\r\\n        if (payloadSizeLimit == 0) {\\r\\n            // use default if not set\\r\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\r\\n        }\\r\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\r\\n    }\\r\\n\\r\\n    //---------------------------UserApplication config----------------------------------------\\r\\n    function getConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        address,\\r\\n        uint _configType\\r\\n    ) external view returns (bytes memory) {\\r\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\r\\n    }\\r\\n\\r\\n    // generic config for LayerZero user Application\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external override onlyOwner {\\r\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\r\\n    }\\r\\n\\r\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setSendVersion(_version);\\r\\n    }\\r\\n\\r\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\r\\n        lzEndpoint.setReceiveVersion(_version);\\r\\n    }\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\r\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\r\\n    }\\r\\n\\r\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\r\\n    // this function set the trusted path for the cross-chain communication\\r\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\r\\n        trustedRemoteLookup[_remoteChainId] = _path;\\r\\n        emit SetTrustedRemote(_remoteChainId, _path);\\r\\n    }\\r\\n\\r\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\r\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\r\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\r\\n    }\\r\\n\\r\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\r\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\r\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\r\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\r\\n    }\\r\\n\\r\\n    function setPrecrime(address _precrime) external onlyOwner {\\r\\n        precrime = _precrime;\\r\\n        emit SetPrecrime(_precrime);\\r\\n    }\\r\\n\\r\\n    function setMinDstGas(\\r\\n        uint16 _dstChainId,\\r\\n        uint16 _packetType,\\r\\n        uint _minGas\\r\\n    ) external onlyOwner {\\r\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\r\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\r\\n    }\\r\\n\\r\\n    // if the size is 0, it means default size limit\\r\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\r\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\r\\n    }\\r\\n\\r\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\r\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\r\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\r\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb5958eb7c21000b1b6021c3de912616d568636a120ede1a5f1930d8d06645d84\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"./LzApp.sol\\\";\\r\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\r\\n\\r\\n/*\\r\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\r\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\r\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\r\\n */\\r\\nabstract contract NonblockingLzApp is Initializable, LzApp {\\r\\n    using ExcessivelySafeCall for address;\\r\\n\\r\\n    function __NonblockingLzApp_init(address _endpoint) internal onlyInitializing {\\r\\n        __NonblockingLzApp_init_unchained(_endpoint);\\r\\n    }\\r\\n\\r\\n    function __NonblockingLzApp_init_unchained(address _endpoint) internal onlyInitializing {\\r\\n        __LzApp_init(_endpoint);\\r\\n    }\\r\\n\\r\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\r\\n\\r\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\r\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\r\\n\\r\\n    // overriding the virtual function in LzReceiver\\r\\n    function _blockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) internal virtual override {\\r\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\r\\n            gasleft(),\\r\\n            150,\\r\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\r\\n        );\\r\\n        // try-catch all errors/exceptions\\r\\n        if (!success) {\\r\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _storeFailedMessage(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload,\\r\\n        bytes memory _reason\\r\\n    ) internal virtual {\\r\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\r\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\r\\n    }\\r\\n\\r\\n    function nonblockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) public virtual {\\r\\n        // only internal transaction\\r\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\r\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n    }\\r\\n\\r\\n    //@notice override this function\\r\\n    function _nonblockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes memory _payload\\r\\n    ) internal virtual;\\r\\n\\r\\n    function retryMessage(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) public payable virtual {\\r\\n        // assert there is message to retry\\r\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\r\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\r\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\r\\n        // clear the stored message\\r\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\r\\n        // execute the message. revert if it fails again\\r\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\r\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0aebb957f704d62ffd2655c10378cc3601cad0115384fde90b3bb8a7f951b73f\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(\\r\\n        uint16 _dstChainId,\\r\\n        bytes calldata _destination,\\r\\n        bytes calldata _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint _gasLimit,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        address _userApplication,\\r\\n        bytes calldata _payload,\\r\\n        bool _payInZRO,\\r\\n        bytes calldata _adapterParam\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        address _userApplication,\\r\\n        uint _configType\\r\\n    ) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0x038a0822ff0ed7840f1871e33f02ab2f86f1e15d49569d1775aa5bc9ec89faf5\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x66647bb1e973a693f4420f294688283cca5235ed950dc7a6f5f4394bf9ecf3c0\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x3d1c7a12c577b3339252875a90da60c59617f8b299f88e35cd8b9b190b762a73\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":774,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":777,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1527,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":281,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":401,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":4600,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"lzEndpoint","offset":0,"slot":"101","type":"t_contract(ILayerZeroEndpoint)5541"},{"astId":4604,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"trustedRemoteLookup","offset":0,"slot":"102","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":4610,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"minDstGasLookup","offset":0,"slot":"103","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":4614,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"104","type":"t_mapping(t_uint16,t_uint256)"},{"astId":4616,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"precrime","offset":0,"slot":"105","type":"t_address"},{"astId":5181,"contract":"contracts/bridge/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"failedMessages","offset":0,"slot":"106","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(ILayerZeroEndpoint)5541":{"encoding":"inplace","label":"contract ILayerZeroEndpoint","numberOfBytes":"20"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ILayerZeroEndpoint":{"abi":[{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParam","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_destination","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParam\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol\":\"ILayerZeroEndpoint\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/bridge/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\r\\n\\r\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(\\r\\n        uint16 _dstChainId,\\r\\n        bytes calldata _destination,\\r\\n        bytes calldata _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the unbound message ordering nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint _gasLimit,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        address _userApplication,\\r\\n        bytes calldata _payload,\\r\\n        bool _payInZRO,\\r\\n        bytes calldata _adapterParam\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    // @notice get this Endpoint's immutable source identifier\\r\\n    function getChainId() external view returns (uint16);\\r\\n\\r\\n    // @notice the interface to retry failed message on this Endpoint destination\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    // @param _payload - the payload to be retried\\r\\n    function retryPayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\r\\n    // @param _userApplication - the user app address on this EVM chain\\r\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for send() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isSendingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice query if the non-reentrancy guard for receive() is on\\r\\n    // @return true if the guard is on. false otherwise\\r\\n    function isReceivingPayload() external view returns (bool);\\r\\n\\r\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    function getConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        address _userApplication,\\r\\n        uint _configType\\r\\n    ) external view returns (bytes memory);\\r\\n\\r\\n    // @notice get the send() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\r\\n\\r\\n    // @notice get the lzReceive() LayerZero messaging library version\\r\\n    // @param _userApplication - the contract address of the user application\\r\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\r\\n}\\r\\n\",\"keccak256\":\"0x038a0822ff0ed7840f1871e33f02ab2f86f1e15d49569d1775aa5bc9ec89faf5\",\"license\":\"MIT\"},\"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x3d1c7a12c577b3339252875a90da60c59617f8b299f88e35cd8b9b190b762a73\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzReceive(uint16,bytes,uint64,bytes)":"001d3567"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/bridge/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroReceiver {\\r\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\r\\n    // @param _srcChainId - the source endpoint identifier\\r\\n    // @param _srcAddress - the source sending contract address from the source chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\r\\n    function lzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        uint64 _nonce,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x66647bb1e973a693f4420f294688283cca5235ed950dc7a6f5f4394bf9ecf3c0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ILayerZeroUserApplicationConfig":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"forceResumeReceive(uint16,bytes)":"42d65a8d","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":\"ILayerZeroUserApplicationConfig\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/bridge/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface ILayerZeroUserApplicationConfig {\\r\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\r\\n    // @param _version - messaging library version\\r\\n    // @param _chainId - the chainId for the pending config change\\r\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\r\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\r\\n    function setConfig(\\r\\n        uint16 _version,\\r\\n        uint16 _chainId,\\r\\n        uint _configType,\\r\\n        bytes calldata _config\\r\\n    ) external;\\r\\n\\r\\n    // @notice set the send() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setSendVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\r\\n    // @param _version - new messaging library version\\r\\n    function setReceiveVersion(uint16 _version) external;\\r\\n\\r\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\r\\n    // @param _srcChainId - the chainId of the source chain\\r\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x3d1c7a12c577b3339252875a90da60c59617f8b299f88e35cd8b9b190b762a73\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/token/interfaces/IExchange.sol":{"IPancakeSwapFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pair","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PairCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPairs","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allPairsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"createPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeToSetter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeToSetter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allPairs(uint256)":"1e3dd18b","allPairsLength()":"574f2ba3","createPair(address,address)":"c9c65396","feeTo()":"017e7e58","feeToSetter()":"094b7415","getPair(address,address)":"e6a43905","setFeeTo(address)":"f46901ed","setFeeToSetter(address)":"a2e74af6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/interfaces/IExchange.sol\":\"IPancakeSwapFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/token/interfaces/IExchange.sol\":{\"content\":\"\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\",\"keccak256\":\"0x787732e5d2daf0ecf33e3d7dce453bdace333be0919c8a7f79ac3a2f5fa69a8c\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IPancakeSwapPair":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint112","name":"reserve0","type":"uint112"},{"indexed":false,"internalType":"uint112","name":"reserve1","type":"uint112"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"reserve0","type":"uint112"},{"internalType":"uint112","name":"reserve1","type":"uint112"},{"internalType":"uint32","name":"blockTimestampLast","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"price0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","MINIMUM_LIQUIDITY()":"ba9a7a56","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address)":"89afcb44","decimals()":"313ce567","factory()":"c45a0155","getReserves()":"0902f1ac","initialize(address,address)":"485cc955","kLast()":"7464fc3d","mint(address)":"6a627842","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","price0CumulativeLast()":"5909c0d5","price1CumulativeLast()":"5a3d5493","skim(address)":"bc25cf77","swap(uint256,uint256,address,bytes)":"022c0d9f","symbol()":"95d89b41","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/interfaces/IExchange.sol\":\"IPancakeSwapPair\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/token/interfaces/IExchange.sol\":{\"content\":\"\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\",\"keccak256\":\"0x787732e5d2daf0ecf33e3d7dce453bdace333be0919c8a7f79ac3a2f5fa69a8c\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IPancakeSwapRouter":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":"af2979eb","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"5b0d5984","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":"b6f9de95","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"791ac947","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"5c11d795","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/interfaces/IExchange.sol\":\"IPancakeSwapRouter\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/token/interfaces/IExchange.sol\":{\"content\":\"\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\",\"keccak256\":\"0x787732e5d2daf0ecf33e3d7dce453bdace333be0919c8a7f79ac3a2f5fa69a8c\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/token/interfaces/IToken.sol":{"IToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"faucet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"leftTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setInitialAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(uint256)":"51c6590a","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","faucet()":"de5f72fd","increaseAllowance(address,uint256)":"39509351","leftTime()":"d78317bf","name()":"06fdde03","pair()":"a8aa1b31","router()":"f887ea40","setInitialAddresses(address)":"28ec13ee","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leftTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setInitialAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/interfaces/IToken.sol\":\"IToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/token/interfaces/IToken.sol\":{\"content\":\"\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IToken {\\r\\n\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\tfunction totalSupply() external view returns (uint256);\\r\\n\\tfunction balanceOf(address) external view returns (uint256);\\r\\n\\tfunction leftTime() external view returns(uint);\\r\\n    function router() external view returns(address);\\r\\n    function pair() external view returns(address);\\r\\n\\r\\n\\tfunction transfer(address, uint256) external returns (bool);\\r\\n\\tfunction allowance(address, address) external view returns (uint256);\\r\\n\\r\\n\\tfunction approve(address, uint256) external returns (bool);\\r\\n\\tfunction transferFrom(address, address, uint256) external returns (bool);\\r\\n\\r\\n\\tfunction increaseAllowance(address, uint256) external returns (bool);\\r\\n\\tfunction decreaseAllowance(address, uint256) external returns (bool);\\r\\n\\r\\n\\tfunction burn(uint256) external;\\r\\n\\tfunction faucet() external ;\\r\\n\\tfunction setInitialAddresses(address) external;\\r\\n    function addLiquidity(uint256) external;    \\r\\n}\",\"keccak256\":\"0x99317ff5c13f2ec4afc479c3bcc07e7c4bd475fc20853f885494982efb220ffd\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}