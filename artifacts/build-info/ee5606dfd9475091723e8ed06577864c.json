{"id":"ee5606dfd9475091723e8ed06577864c","_format":"hh-sol-build-info-1","solcVersion":"0.8.15","solcLongVersion":"0.8.15+commit.e14f2714","input":{"language":"Solidity","sources":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\nlibrary BytesLib {\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(\n                0x40,\n                and(\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n                    not(31) // Round down to the nearest 32 bytes.\n                )\n            )\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint _start,\n        uint _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1, \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                    // the next line is the loop condition:\n                    // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {\n\n                        } eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.7.6;\n\nlibrary ExcessivelySafeCall {\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := call(\n                _gas, // gas\n                _target, // recipient\n                0, // ether value\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeStaticCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal view returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := staticcall(\n                _gas, // gas\n                _target, // recipient\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /**\n     * @notice Swaps function selectors in encoded contract calls\n     * @dev Allows reuse of encoded calldata for functions with identical\n     * argument types but different names. It simply swaps out the first 4 bytes\n     * for the new selector. This function modifies memory in place, and should\n     * only be used with caution.\n     * @param _newSelector The new 4-byte selector\n     * @param _buf The encoded contract args\n     */\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\n        require(_buf.length >= 4);\n        uint _mask = LOW_28_MASK;\n        assembly {\n            // load the first word of\n            let _word := mload(add(_buf, 0x20))\n            // mask out the top 4 bytes\n            // /x\n            _word := and(_word, _mask)\n            _word := or(_newSelector, _word)\n            mstore(add(_buf, 0x20), _word)\n        }\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\nimport \"./ILayerZeroUserApplicationConfig.sol\";\n\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\n    // @param _dstChainId - the destination chain identifier\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\n    // @param _payload - a custom bytes payload to send to the destination contract\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\n    function send(\n        uint16 _dstChainId,\n        bytes calldata _destination,\n        bytes calldata _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes calldata _adapterParams\n    ) external payable;\n\n    // @notice used by the messaging library to publish verified payload\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source contract (as bytes) at the source chain\n    // @param _dstAddress - the address on destination chain\n    // @param _nonce - the unbound message ordering nonce\n    // @param _gasLimit - the gas limit for external contract execution\n    // @param _payload - verified payload to send to the destination contract\n    function receivePayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        address _dstAddress,\n        uint64 _nonce,\n        uint _gasLimit,\n        bytes calldata _payload\n    ) external;\n\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\n\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\n    // @param _srcAddress - the source chain contract address\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\n\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\n    // @param _dstChainId - the destination chain identifier\n    // @param _userApplication - the user app address on this EVM chain\n    // @param _payload - the custom message to send over LayerZero\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\n    function estimateFees(\n        uint16 _dstChainId,\n        address _userApplication,\n        bytes calldata _payload,\n        bool _payInZRO,\n        bytes calldata _adapterParam\n    ) external view returns (uint nativeFee, uint zroFee);\n\n    // @notice get this Endpoint's immutable source identifier\n    function getChainId() external view returns (uint16);\n\n    // @notice the interface to retry failed message on this Endpoint destination\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    // @param _payload - the payload to be retried\n    function retryPayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        bytes calldata _payload\n    ) external;\n\n    // @notice query if any STORED payload (message blocking) at the endpoint.\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\n\n    // @notice query if the _libraryAddress is valid for sending msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the _libraryAddress is valid for receiving msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the non-reentrancy guard for send() is on\n    // @return true if the guard is on. false otherwise\n    function isSendingPayload() external view returns (bool);\n\n    // @notice query if the non-reentrancy guard for receive() is on\n    // @return true if the guard is on. false otherwise\n    function isReceivingPayload() external view returns (bool);\n\n    // @notice get the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _userApplication - the contract address of the user application\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address _userApplication,\n        uint _configType\n    ) external view returns (bytes memory);\n\n    // @notice get the send() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getSendVersion(address _userApplication) external view returns (uint16);\n\n    // @notice get the lzReceive() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroReceiver {\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\n    // @param _srcChainId - the source endpoint identifier\n    // @param _srcAddress - the source sending contract address from the source chain\n    // @param _nonce - the ordered message nonce\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) external;\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroUserApplicationConfig {\n    // @notice set the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    // @param _config - configuration in the bytes. can encode arbitrary content.\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external;\n\n    // @notice set the send() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setSendVersion(uint16 _version) external;\n\n    // @notice set the lzReceive() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setReceiveVersion(uint16 _version) external;\n\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\n    // @param _srcChainId - the chainId of the source chain\n    // @param _srcAddress - the contract address of the source contract at the source chain\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.6.0;\npragma experimental ABIEncoderV2;\n\nlibrary LzLib {\n    // LayerZero communication\n    struct CallParams {\n        address payable refundAddress;\n        address zroPaymentAddress;\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n\n    struct AirdropParams {\n        uint airdropAmount;\n        bytes32 airdropAddress;\n    }\n\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\n        } else {\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\n        }\n    }\n\n    // Build Adapter Params\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\n        // txType 1\n        // bytes  [2       32      ]\n        // fields [txType  extraGas]\n        return abi.encodePacked(uint16(1), _uaGas);\n    }\n\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\n        require(_params.airdropAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(_params.airdropAddress != bytes32(0x0), \"Airdrop address must be set\");\n\n        // txType 2\n        // bytes  [2       32        32            bytes[]         ]\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\n    }\n\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    // Decode Adapter Params\n    function decodeAdapterParams(bytes memory _adapterParams)\n        internal\n        pure\n        returns (\n            uint16 txType,\n            uint uaGas,\n            uint airdropAmount,\n            address payable airdropAddress\n        )\n    {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            txType := mload(add(_adapterParams, 2))\n            uaGas := mload(add(_adapterParams, 34))\n        }\n        require(txType == 1 || txType == 2, \"Unsupported txType\");\n        require(uaGas > 0, \"Gas too low\");\n\n        if (txType == 2) {\n            assembly {\n                airdropAmount := mload(add(_adapterParams, 66))\n                airdropAddress := mload(add(_adapterParams, 86))\n            }\n        }\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\n        return address(uint160(uint(_bytes32Address)));\n    }\n\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\n        return bytes32(uint(uint160(_address)));\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/ILayerZeroReceiver.sol\";\nimport \"./interfaces/ILayerZeroUserApplicationConfig.sol\";\nimport \"./interfaces/ILayerZeroEndpoint.sol\";\nimport \"../libraries/BytesLib.sol\";\n\n/*\n * a generic LzReceiver implementation\n */\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\n    using BytesLib for bytes;\n\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\n\n    ILayerZeroEndpoint public immutable lzEndpoint;\n    mapping(uint16 => bytes) public trustedRemoteLookup;\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\n    address public precrime;\n\n    event SetPrecrime(address precrime);\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\n\n    constructor(address _endpoint) {\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\n    }\n\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual override {\n        // lzReceive must be called by the endpoint for security\n        require(_msgSender() == address(lzEndpoint), \"LzApp: invalid endpoint caller\");\n\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\n        require(\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\n            \"LzApp: invalid source sending contract\"\n        );\n\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function _lzSend(\n        uint16 _dstChainId,\n        bytes memory _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes memory _adapterParams,\n        uint _nativeFee\n    ) internal virtual {\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\n        require(trustedRemote.length != 0, \"LzApp: destination chain is not a trusted source\");\n        _checkPayloadSize(_dstChainId, _payload.length);\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\n    }\n\n    function _checkGasLimit(\n        uint16 _dstChainId,\n        uint16 _type,\n        bytes memory _adapterParams,\n        uint _extraGas\n    ) internal view virtual {\n        uint providedGasLimit = _getGasLimit(_adapterParams);\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\n        require(minGasLimit > 0, \"LzApp: minGasLimit not set\");\n        require(providedGasLimit >= minGasLimit + _extraGas, \"LzApp: gas limit is too low\");\n    }\n\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\n        require(_adapterParams.length >= 34, \"LzApp: invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\n        if (payloadSizeLimit == 0) {\n            // use default if not set\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\n        }\n        require(_payloadSize <= payloadSizeLimit, \"LzApp: payload size is too large\");\n    }\n\n    //---------------------------UserApplication config----------------------------------------\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address,\n        uint _configType\n    ) external view returns (bytes memory) {\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\n    }\n\n    // generic config for LayerZero user Application\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external override onlyOwner {\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\n    }\n\n    function setSendVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setSendVersion(_version);\n    }\n\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setReceiveVersion(_version);\n    }\n\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\n    }\n\n    // _path = abi.encodePacked(remoteAddress, localAddress)\n    // this function set the trusted path for the cross-chain communication\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = _path;\n        emit SetTrustedRemote(_remoteChainId, _path);\n    }\n\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\n    }\n\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\n        require(path.length != 0, \"LzApp: no trusted path record\");\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\n    }\n\n    function setPrecrime(address _precrime) external onlyOwner {\n        precrime = _precrime;\n        emit SetPrecrime(_precrime);\n    }\n\n    function setMinDstGas(\n        uint16 _dstChainId,\n        uint16 _packetType,\n        uint _minGas\n    ) external onlyOwner {\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\n    }\n\n    // if the size is 0, it means default size limit\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\n        payloadSizeLimitLookup[_dstChainId] = _size;\n    }\n\n    //--------------------------- VIEW FUNCTION ----------------------------------------\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\n        return keccak256(trustedSource) == keccak256(_srcAddress);\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./LzApp.sol\";\nimport \"../libraries/ExcessivelySafeCall.sol\";\n\n/*\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\n */\nabstract contract NonblockingLzApp is LzApp {\n    using ExcessivelySafeCall for address;\n\n    constructor(address _endpoint) LzApp(_endpoint) {}\n\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\n\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\n\n    // overriding the virtual function in LzReceiver\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual override {\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\n            gasleft(),\n            150,\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\n        );\n        // try-catch all errors/exceptions\n        if (!success) {\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\n        }\n    }\n\n    function _storeFailedMessage(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload,\n        bytes memory _reason\n    ) internal virtual {\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\n    }\n\n    function nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual {\n        // only internal transaction\n        require(_msgSender() == address(this), \"NonblockingLzApp: caller must be LzApp\");\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    //@notice override this function\n    function _nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function retryMessage(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public payable virtual {\n        // assert there is message to retry\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\n        require(payloadHash != bytes32(0), \"NonblockingLzApp: no stored message\");\n        require(keccak256(_payload) == payloadHash, \"NonblockingLzApp: invalid payload\");\n        // clear the stored message\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\n        // execute the message. revert if it fails again\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/interfaces/ITokenBridge.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity >=0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\";\r\n\r\ninterface ITokenBridge {\r\n    enum PacketType {\r\n        SEND_TO_APTOS,\r\n        RECEIVE_FROM_APTOS\r\n    }\r\n\r\n    function sendToAptos(\r\n        address _token,\r\n        bytes32 _toAddress,\r\n        uint _amountLD,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    function sendETHToAptos(\r\n        bytes32 _toAddress,\r\n        uint _amountLD,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    function quoteForSend(LzLib.CallParams calldata _callParams, bytes calldata _adapterParams)\r\n        external\r\n        view\r\n        returns (uint nativeFee, uint zroFee);\r\n\r\n    event Send(address indexed token, address indexed from, bytes32 indexed to, uint amountLD);\r\n    event Receive(address indexed token, address indexed to, uint amountLD);\r\n    event RegisterToken(address token);\r\n    event SetBridgeBP(uint bridgeFeeBP);\r\n    event SetWETH(address weth);\r\n    event SetGlobalPause(bool paused);\r\n    event SetTokenPause(address token, bool paused);\r\n    event SetLocalChainId(uint16 localChainId);\r\n    event SetAptosChainId(uint16 aptosChainId);\r\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\r\n    event WithdrawFee(address indexed token, address to, uint amountLD);\r\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\r\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\r\n}\r\n"},"contracts/interfaces/IWETH.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n\r\n    function transfer(address to, uint value) external returns (bool);\r\n\r\n    function withdraw(uint) external;\r\n\r\n    function approve(address to, uint value) external returns (bool);\r\n}\r\n"},"contracts/TokenBridge.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity 0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\";\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\";\r\n\r\nimport \"./interfaces/IWETH.sol\";\r\nimport \"./interfaces/ITokenBridge.sol\";\r\n\r\ncontract TokenBridge is ITokenBridge, NonblockingLzApp, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    uint public constant BP_DENOMINATOR = 10000;\r\n    uint8 public constant SHARED_DECIMALS = 6;\r\n\r\n    uint16 public aptosChainId;\r\n\r\n    uint public bridgeFeeBP;\r\n\r\n    mapping(address => uint64) public tvlSDs; // token address => tvl\r\n    mapping(address => bool) public supportedTokens;\r\n    mapping(address => bool) public pausedTokens; // token address => paused\r\n    mapping(address => uint) public ld2sdRates; // token address => rate\r\n    address public weth;\r\n\r\n    bool public useCustomAdapterParams;\r\n    bool public globalPaused;\r\n    bool public emergencyWithdrawEnabled;\r\n    uint public emergencyWithdrawTime;\r\n\r\n    modifier whenNotPaused(address _token) {\r\n        require(!globalPaused && !pausedTokens[_token], \"TokenBridge: paused\");\r\n        _;\r\n    }\r\n\r\n    modifier emergencyWithdrawUnlocked() {\r\n        require(emergencyWithdrawEnabled && block.timestamp >= emergencyWithdrawTime, \"TokenBridge: emergency withdraw locked\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _layerZeroEndpoint,\r\n        uint16 _aptosChainId\r\n    ) NonblockingLzApp(_layerZeroEndpoint) {\r\n        aptosChainId = _aptosChainId;\r\n    }\r\n\r\n    function sendToAptos(\r\n        address _token,\r\n        bytes32 _toAddress,\r\n        uint _amountLD,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable override whenNotPaused(_token) nonReentrant {\r\n        require(supportedTokens[_token], \"TokenBridge: token is not supported\");\r\n\r\n        // lock token\r\n        _amountLD = _removeDust(_token, _amountLD);\r\n        _amountLD = _lockTokenFrom(_token, msg.sender, _amountLD);\r\n\r\n        // add tvl\r\n        uint64 amountSD = _LDtoSD(_token, _amountLD);\r\n        require(amountSD > 0, \"TokenBridge: amountSD must be greater than 0\");\r\n        tvlSDs[_token] += amountSD;\r\n\r\n        // send to aptos\r\n        _sendToken(_token, _toAddress, amountSD, _callParams, _adapterParams, msg.value);\r\n        emit Send(_token, msg.sender, _toAddress, _amountLD);\r\n    }\r\n\r\n    function sendETHToAptos(\r\n        bytes32 _toAddress,\r\n        uint _amountLD,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable override whenNotPaused(weth) nonReentrant {\r\n        address _weth = weth; // save gas\r\n        require(_weth != address(0) && supportedTokens[_weth], \"TokenBridge: ETH is not supported\");\r\n        _amountLD = _removeDust(_weth, _amountLD);\r\n        require(_amountLD > 0, \"TokenBridge: amount must be greater than 0\");\r\n        require(msg.value >= _amountLD, \"TokenBridge: fee not enough\");\r\n\r\n        // wrap eth and add tvl\r\n        IWETH(_weth).deposit{value: _amountLD}();\r\n        uint64 amountSD = _LDtoSD(_weth, _amountLD);\r\n        tvlSDs[_weth] += amountSD;\r\n\r\n        // send to aptos\r\n        _sendToken(_weth, _toAddress, amountSD, _callParams, _adapterParams, msg.value - _amountLD);\r\n        emit Send(address(0), msg.sender, _toAddress, _amountLD);\r\n    }\r\n\r\n    function quoteForSend(LzLib.CallParams calldata _callParams, bytes calldata _adapterParams)\r\n        external\r\n        view\r\n        returns (uint nativeFee, uint zroFee)\r\n    {\r\n        _checkAdapterParams(_adapterParams);\r\n        bytes memory payload = _encodeSendPayload(address(0), bytes32(0), 0);\r\n        bool payInZRO = _callParams.zroPaymentAddress != address(0);\r\n        return\r\n            lzEndpoint.estimateFees(aptosChainId, address(this), payload, payInZRO, _adapterParams);\r\n    }\r\n\r\n    // ---------------------- owner functions ----------------------\r\n    function registerToken(address _token) external onlyOwner {\r\n        require(_token != address(0), \"TokenBridge: invalid token address\");\r\n        require(!supportedTokens[_token], \"TokenBridge: token already registered\");\r\n\r\n        uint8 localDecimals = _tokenDecimals(_token);\r\n        require(\r\n            localDecimals >= SHARED_DECIMALS,\r\n            \"TokenBridge: decimals must be >= SHARED_DECIMALS\"\r\n        );\r\n\r\n        supportedTokens[_token] = true;\r\n        ld2sdRates[_token] = 10**(localDecimals - SHARED_DECIMALS);\r\n        emit RegisterToken(_token);\r\n    }\r\n\r\n    function setBridgeFeeBP(uint _bridgeFeeBP) external onlyOwner {\r\n        require(_bridgeFeeBP <= BP_DENOMINATOR, \"TokenBridge: bridge fee > 100%\");\r\n        bridgeFeeBP = _bridgeFeeBP;\r\n        emit SetBridgeBP(_bridgeFeeBP);\r\n    }\r\n\r\n    function setWETH(address _weth) external onlyOwner {\r\n        require(_weth != address(0), \"TokenBridge: invalid token address\");\r\n        weth = _weth;\r\n        emit SetWETH(_weth);\r\n    }\r\n\r\n    function setGlobalPause(bool _paused) external onlyOwner {\r\n        globalPaused = _paused;\r\n        emit SetGlobalPause(_paused);\r\n    }\r\n\r\n    function setTokenPause(address _token, bool _paused) external onlyOwner {\r\n        pausedTokens[_token] = _paused;\r\n        emit SetTokenPause(_token, _paused);\r\n    }\r\n\r\n    function setAptosChainId(uint16 _aptosChainId) external onlyOwner {\r\n        aptosChainId = _aptosChainId;\r\n        emit SetAptosChainId(_aptosChainId);\r\n    }\r\n\r\n    function setUseCustomAdapterParams(bool _useCustomAdapterParams) external onlyOwner {\r\n        useCustomAdapterParams = _useCustomAdapterParams;\r\n        emit SetUseCustomAdapterParams(_useCustomAdapterParams);\r\n    }\r\n\r\n    function withdrawFee(\r\n        address _token,\r\n        address _to,\r\n        uint _amountLD\r\n    ) public onlyOwner {\r\n        uint feeLD = accruedFeeLD(_token);\r\n        require(_amountLD <= feeLD, \"TokenBridge: fee not enough\");\r\n\r\n        IERC20(_token).safeTransfer(_to, _amountLD);\r\n        emit WithdrawFee(_token, _to, _amountLD);\r\n    }\r\n\r\n    function withdrawTVL(\r\n        address _token,\r\n        address _to,\r\n        uint64 _amountSD\r\n    ) public onlyOwner emergencyWithdrawUnlocked {\r\n        tvlSDs[_token] -= _amountSD;\r\n\r\n        uint amountLD = _SDtoLD(_token, _amountSD);\r\n        IERC20(_token).safeTransfer(_to, amountLD);\r\n        emit WithdrawTVL(_token, _to, amountLD);\r\n    }\r\n\r\n    function withdrawEmergency(address _token, address _to) external onlyOwner {\r\n        // modifier redundant for extra safety\r\n        withdrawFee(_token, _to, accruedFeeLD(_token));\r\n        withdrawTVL(_token, _to, tvlSDs[_token]);\r\n    }\r\n\r\n    function enableEmergencyWithdraw(bool enabled) external onlyOwner {\r\n        emergencyWithdrawEnabled = enabled;\r\n        emergencyWithdrawTime = enabled ? block.timestamp + 1 weeks : 0; // overrides existing lock time\r\n        emit EnableEmergencyWithdraw(enabled, emergencyWithdrawTime);\r\n    }\r\n\r\n    // override the renounce ownership inherited by zeppelin ownable\r\n    function renounceOwnership() public override onlyOwner {}\r\n\r\n    // receive ETH from WETH\r\n    receive() external payable {}\r\n\r\n    function accruedFeeLD(address _token) public view returns (uint) {\r\n        uint tvlLD = _SDtoLD(_token, tvlSDs[_token]);\r\n        return IERC20(_token).balanceOf(address(this)) - tvlLD;\r\n    }\r\n\r\n    // ---------------------- internal functions ----------------------\r\n    function _nonblockingLzReceive(\r\n        uint16 _srcChainId,\r\n        bytes memory,\r\n        uint64,\r\n        bytes memory _payload\r\n    ) internal override {\r\n        require(_srcChainId == aptosChainId, \"TokenBridge: invalid source chain id\");\r\n\r\n        (address token, address to, uint64 amountSD, bool unwrap) = _decodeReceivePayload(_payload);\r\n        require(!globalPaused && !pausedTokens[token], \"TokenBridge: paused\");\r\n        require(supportedTokens[token], \"TokenBridge: token is not supported\");\r\n\r\n        // sub tvl\r\n        uint64 tvlSD = tvlSDs[token];\r\n        require(tvlSD >= amountSD, \"TokenBridge: insufficient liquidity\");\r\n        tvlSDs[token] = tvlSD - amountSD;\r\n\r\n        // pay fee\r\n        uint amountLD = _SDtoLD(token, amountSD);\r\n        (amountLD, ) = bridgeFeeBP > 0 ? _payFee(amountLD) : (amountLD, 0);\r\n\r\n        // redeem token to receiver\r\n        if (token == weth && unwrap) {\r\n            _redeemETHTo(weth, payable(to), amountLD);\r\n            emit Receive(address(0), to, amountLD);\r\n        } else {\r\n            to = to == address(0) ? address(0xdEaD) : to; // avoid failure in safeTransfer()\r\n            IERC20(token).safeTransfer(to, amountLD);\r\n            emit Receive(token, to, amountLD);\r\n        }\r\n    }\r\n\r\n    function _redeemETHTo(\r\n        address _weth,\r\n        address payable _to,\r\n        uint _amountLD\r\n    ) internal {\r\n        IWETH(_weth).withdraw(_amountLD);\r\n        _to.transfer(_amountLD);\r\n    }\r\n\r\n    function _lockTokenFrom(\r\n        address _token,\r\n        address _from,\r\n        uint _amountLD\r\n    ) internal returns (uint) {\r\n        // support token with transfer fee\r\n        uint balanceBefore = IERC20(_token).balanceOf(address(this));\r\n        IERC20(_token).safeTransferFrom(_from, address(this), _amountLD);\r\n        uint balanceAfter = IERC20(_token).balanceOf(address(this));\r\n        return balanceAfter - balanceBefore;\r\n    }\r\n\r\n    function _tokenDecimals(address _token) internal view returns (uint8) {\r\n        (bool success, bytes memory data) = _token.staticcall(\r\n            abi.encodeWithSignature(\"decimals()\")\r\n        );\r\n        require(success, \"TokenBridge: failed to get token decimals\");\r\n        return abi.decode(data, (uint8));\r\n    }\r\n\r\n    function _payFee(uint _amountLD) internal view returns (uint amountAfterFee, uint fee) {\r\n        fee = (_amountLD * bridgeFeeBP) / BP_DENOMINATOR;\r\n        amountAfterFee = _amountLD - fee;\r\n    }\r\n\r\n    function _sendToken(\r\n        address _token,\r\n        bytes32 _toAddress,\r\n        uint64 _amountSD,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams,\r\n        uint _fee\r\n    ) internal {\r\n        _checkAdapterParams(_adapterParams);\r\n        bytes memory payload = _encodeSendPayload(_token, _toAddress, _amountSD);\r\n        _lzSend(\r\n            aptosChainId,\r\n            payload,\r\n            _callParams.refundAddress,\r\n            _callParams.zroPaymentAddress,\r\n            _adapterParams,\r\n            _fee\r\n        );\r\n    }\r\n\r\n    // send payload: packet type(1) + remote token(32) + receiver(32) + amount(8)\r\n    function _encodeSendPayload(\r\n        address _token,\r\n        bytes32 _toAddress,\r\n        uint64 _amountSD\r\n    ) internal pure returns (bytes memory) {\r\n        bytes32 tokenBytes32 = LzLib.addressToBytes32(_token);\r\n        return\r\n            abi.encodePacked(uint8(PacketType.SEND_TO_APTOS), tokenBytes32, _toAddress, _amountSD);\r\n    }\r\n\r\n    // receive payload: packet type(1) + remote token(32) + receiver(32) + amount(8) + unwrap flag(1)\r\n    function _decodeReceivePayload(bytes memory _payload)\r\n        internal\r\n        pure\r\n        returns (\r\n            address token,\r\n            address to,\r\n            uint64 amountSD,\r\n            bool unwrap\r\n        )\r\n    {\r\n        require(_payload.length == 74, \"TokenBridge: invalid payload length\");\r\n        PacketType packetType = PacketType(uint8(_payload[0]));\r\n        require(packetType == PacketType.RECEIVE_FROM_APTOS, \"TokenBridge: unknown packet type\");\r\n        assembly {\r\n            token := mload(add(_payload, 33))\r\n            to := mload(add(_payload, 65))\r\n            amountSD := mload(add(_payload, 73))\r\n        }\r\n        unwrap = uint8(_payload[73]) == 1;\r\n    }\r\n\r\n    function _checkAdapterParams(bytes calldata _adapterParams) internal view {\r\n        if (useCustomAdapterParams) {\r\n            _checkGasLimit(aptosChainId, uint16(PacketType.SEND_TO_APTOS), _adapterParams, 0);\r\n        } else {\r\n            require(_adapterParams.length == 0, \"TokenBridge: _adapterParams must be empty.\");\r\n        }\r\n    }\r\n\r\n    function _SDtoLD(address _token, uint64 _amountSD) internal view returns (uint) {\r\n        return _amountSD * ld2sdRates[_token];\r\n    }\r\n\r\n    function _LDtoSD(address _token, uint _amountLD) internal view returns (uint64) {\r\n        uint amountSD = _amountLD / ld2sdRates[_token];\r\n        require(amountSD <= type(uint64).max, \"TokenBridge: amountSD overflow\");\r\n        return uint64(amountSD);\r\n    }\r\n\r\n    function _removeDust(address _token, uint _amountLD) internal view returns (uint) {\r\n        return _SDtoLD(_token, _LDtoSD(_token, _amountLD));\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":1},"evmVersion":"berlin","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol","exportedSymbols":{"BytesLib":[332]},"id":333,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:0"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":332,"linearizedBaseContracts":[332],"name":"BytesLib","nameLocation":"377:8:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":16,"nodeType":"Block","src":"494:2865:0","statements":[{"assignments":[11],"declarations":[{"constant":false,"id":11,"mutability":"mutable","name":"tempBytes","nameLocation":"517:9:0","nodeType":"VariableDeclaration","scope":16,"src":"504:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10,"name":"bytes","nodeType":"ElementaryTypeName","src":"504:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":12,"nodeType":"VariableDeclarationStatement","src":"504:22:0"},{"AST":{"nodeType":"YulBlock","src":"546:2780:0","statements":[{"nodeType":"YulAssignment","src":"690:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"703:5:0"},"nodeType":"YulFunctionCall","src":"703:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"690:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"846:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"866:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"860:5:0"},"nodeType":"YulFunctionCall","src":"860:16:0"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"850:6:0","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"896:9:0"},{"name":"length","nodeType":"YulIdentifier","src":"907:6:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"889:6:0"},"nodeType":"YulFunctionCall","src":"889:25:0"},"nodeType":"YulExpressionStatement","src":"889:25:0"},{"nodeType":"YulVariableDeclaration","src":"1124:30:0","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1138:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"1149:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:0"},"nodeType":"YulFunctionCall","src":"1134:20:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1128:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1279:26:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1294:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"1298:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:0"},"nodeType":"YulFunctionCall","src":"1290:15:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1283:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:162:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1816:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1826:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1820:5:0"},"nodeType":"YulFunctionCall","src":"1820:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1809:6:0"},"nodeType":"YulFunctionCall","src":"1809:21:0"},"nodeType":"YulExpressionStatement","src":"1809:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1515:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"1519:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1512:2:0"},"nodeType":"YulFunctionCall","src":"1512:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1524:157:0","statements":[{"nodeType":"YulAssignment","src":"1612:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1622:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"1626:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:0"},"nodeType":"YulFunctionCall","src":"1618:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1612:2:0"}]},{"nodeType":"YulAssignment","src":"1648:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1658:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:0"},"nodeType":"YulFunctionCall","src":"1654:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1648:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"1323:188:0","statements":[{"nodeType":"YulVariableDeclaration","src":"1467:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1481:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"1492:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:0"},"nodeType":"YulFunctionCall","src":"1477:20:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1471:2:0","type":""}]}]},"src":"1319:525:0"},{"nodeType":"YulAssignment","src":"2045:27:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2061:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2055:5:0"},"nodeType":"YulFunctionCall","src":"2055:17:0"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2045:6:0"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2092:9:0"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2107:6:0"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2121:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2115:5:0"},"nodeType":"YulFunctionCall","src":"2115:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2103:3:0"},"nodeType":"YulFunctionCall","src":"2103:29:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2085:6:0"},"nodeType":"YulFunctionCall","src":"2085:48:0"},"nodeType":"YulExpressionStatement","src":"2085:48:0"},{"nodeType":"YulAssignment","src":"2271:9:0","value":{"name":"end","nodeType":"YulIdentifier","src":"2277:3:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2271:2:0"}]},{"nodeType":"YulAssignment","src":"2407:22:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2418:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"2422:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2414:3:0"},"nodeType":"YulFunctionCall","src":"2414:15:0"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2407:3:0"}]},{"body":{"nodeType":"YulBlock","src":"2611:53:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2636:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2646:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2640:5:0"},"nodeType":"YulFunctionCall","src":"2640:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2629:6:0"},"nodeType":"YulFunctionCall","src":"2629:21:0"},"nodeType":"YulExpressionStatement","src":"2629:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2514:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"2518:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2511:2:0"},"nodeType":"YulFunctionCall","src":"2511:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2523:87:0","statements":[{"nodeType":"YulAssignment","src":"2541:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2551:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"2555:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:0"},"nodeType":"YulFunctionCall","src":"2547:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2541:2:0"}]},{"nodeType":"YulAssignment","src":"2577:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2587:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"2591:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2583:3:0"},"nodeType":"YulFunctionCall","src":"2583:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2577:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"2447:63:0","statements":[{"nodeType":"YulVariableDeclaration","src":"2465:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2479:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"2491:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:0"},"nodeType":"YulFunctionCall","src":"2475:21:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2469:2:0","type":""}]}]},"src":"2443:221:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3113:4:0","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3168:3:0"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3184:6:0"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3198:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3192:5:0"},"nodeType":"YulFunctionCall","src":"3192:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3180:3:0"},"nodeType":"YulFunctionCall","src":"3180:29:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3173:6:0"},"nodeType":"YulFunctionCall","src":"3173:37:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:0"},"nodeType":"YulFunctionCall","src":"3164:47:0"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:0","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:0"},"nodeType":"YulFunctionCall","src":"3160:56:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3242:2:0","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3238:3:0"},"nodeType":"YulFunctionCall","src":"3238:7:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3135:3:0"},"nodeType":"YulFunctionCall","src":"3135:167:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3089:6:0"},"nodeType":"YulFunctionCall","src":"3089:227:0"},"nodeType":"YulExpressionStatement","src":"3089:227:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":5,"isOffset":false,"isSlot":false,"src":"2061:10:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2479:10:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"1481:9:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"3198:9:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"866:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"1138:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"2092:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"2121:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"690:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"896:9:0","valueSize":1}],"id":13,"nodeType":"InlineAssembly","src":"537:2789:0"},{"expression":{"id":14,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3343:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":9,"id":15,"nodeType":"Return","src":"3336:16:0"}]},"id":17,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"401:6:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"mutability":"mutable","name":"_preBytes","nameLocation":"421:9:0","nodeType":"VariableDeclaration","scope":17,"src":"408:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2,"name":"bytes","nodeType":"ElementaryTypeName","src":"408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"_postBytes","nameLocation":"445:10:0","nodeType":"VariableDeclaration","scope":17,"src":"432:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4,"name":"bytes","nodeType":"ElementaryTypeName","src":"432:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"407:49:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17,"src":"480:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7,"name":"bytes","nodeType":"ElementaryTypeName","src":"480:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"479:14:0"},"scope":332,"src":"392:2967:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":25,"nodeType":"Block","src":"3447:5805:0","statements":[{"AST":{"nodeType":"YulBlock","src":"3466:5780:0","statements":[{"nodeType":"YulVariableDeclaration","src":"3689:34:0","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3708:14:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3702:5:0"},"nodeType":"YulFunctionCall","src":"3702:21:0"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3693:5:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4216:76:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4239:5:0"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4254:5:0","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4272:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:0","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4268:3:0"},"nodeType":"YulFunctionCall","src":"4268:13:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4261:6:0"},"nodeType":"YulFunctionCall","src":"4261:21:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4250:3:0"},"nodeType":"YulFunctionCall","src":"4250:33:0"},{"kind":"number","nodeType":"YulLiteral","src":"4285:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4246:3:0"},"nodeType":"YulFunctionCall","src":"4246:41:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4235:3:0"},"nodeType":"YulFunctionCall","src":"4235:53:0"},{"kind":"number","nodeType":"YulLiteral","src":"4290:1:0","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4231:3:0"},"nodeType":"YulFunctionCall","src":"4231:61:0"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4220:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4305:32:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4326:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4320:5:0"},"nodeType":"YulFunctionCall","src":"4320:17:0"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4309:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4350:38:0","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4371:7:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"4380:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4367:3:0"},"nodeType":"YulFunctionCall","src":"4367:21:0"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4354:9:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4721:1485:0","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"5002:14:0"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5314:5:0"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5532:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"5544:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5528:3:0"},"nodeType":"YulFunctionCall","src":"5528:21:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5522:5:0"},"nodeType":"YulFunctionCall","src":"5522:28:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:5:0","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5670:2:0","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5674:7:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5666:3:0"},"nodeType":"YulFunctionCall","src":"5666:16:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5655:3:0"},"nodeType":"YulFunctionCall","src":"5655:28:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5415:3:0"},"nodeType":"YulFunctionCall","src":"5415:302:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:5:0","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5917:2:0","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5921:9:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5913:3:0"},"nodeType":"YulFunctionCall","src":"5913:18:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5902:3:0"},"nodeType":"YulFunctionCall","src":"5902:30:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5378:3:0"},"nodeType":"YulFunctionCall","src":"5378:584:0"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6115:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"6124:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6111:3:0"},"nodeType":"YulFunctionCall","src":"6111:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5345:3:0"},"nodeType":"YulFunctionCall","src":"5345:807:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5145:3:0"},"nodeType":"YulFunctionCall","src":"5145:1029:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4974:6:0"},"nodeType":"YulFunctionCall","src":"4974:1218:0"},"nodeType":"YulExpressionStatement","src":"4974:1218:0"}]},"nodeType":"YulCase","src":"4714:1492:0","value":{"kind":"number","nodeType":"YulLiteral","src":"4719:1:0","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6226:1725:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6435:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6440:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6428:6:0"},"nodeType":"YulFunctionCall","src":"6428:27:0"},"nodeType":"YulExpressionStatement","src":"6428:27:0"},{"nodeType":"YulVariableDeclaration","src":"6472:53:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6496:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6501:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6486:9:0"},"nodeType":"YulFunctionCall","src":"6486:20:0"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6512:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"6521:2:0","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6508:3:0"},"nodeType":"YulFunctionCall","src":"6508:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6482:3:0"},"nodeType":"YulFunctionCall","src":"6482:43:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6476:2:0","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6585:14:0"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6609:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"6620:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6605:3:0"},"nodeType":"YulFunctionCall","src":"6605:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"6624:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6601:3:0"},"nodeType":"YulFunctionCall","src":"6601:25:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6578:6:0"},"nodeType":"YulFunctionCall","src":"6578:49:0"},"nodeType":"YulExpressionStatement","src":"6578:49:0"},{"nodeType":"YulVariableDeclaration","src":"7215:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7233:2:0","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7237:7:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7229:3:0"},"nodeType":"YulFunctionCall","src":"7229:16:0"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7219:6:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7262:33:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7276:10:0"},{"name":"submod","nodeType":"YulIdentifier","src":"7288:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7272:3:0"},"nodeType":"YulFunctionCall","src":"7272:23:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7266:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7312:35:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7327:10:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"7339:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:0"},"nodeType":"YulFunctionCall","src":"7323:24:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7316:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7364:38:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7384:5:0","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7391:6:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7380:3:0"},"nodeType":"YulFunctionCall","src":"7380:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7376:3:0"},"nodeType":"YulFunctionCall","src":"7376:26:0"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7368:4:0","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7427:2:0"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7439:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"7446:66:0","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7435:3:0"},"nodeType":"YulFunctionCall","src":"7435:78:0"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7525:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7519:5:0"},"nodeType":"YulFunctionCall","src":"7519:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7530:4:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7515:3:0"},"nodeType":"YulFunctionCall","src":"7515:20:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7431:3:0"},"nodeType":"YulFunctionCall","src":"7431:105:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7420:6:0"},"nodeType":"YulFunctionCall","src":"7420:117:0"},"nodeType":"YulExpressionStatement","src":"7420:117:0"},{"body":{"nodeType":"YulBlock","src":"7765:61:0","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7794:2:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7804:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7798:5:0"},"nodeType":"YulFunctionCall","src":"7798:9:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7787:6:0"},"nodeType":"YulFunctionCall","src":"7787:21:0"},"nodeType":"YulExpressionStatement","src":"7787:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7659:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"7663:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7656:2:0"},"nodeType":"YulFunctionCall","src":"7656:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7668:96:0","statements":[{"nodeType":"YulAssignment","src":"7690:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7700:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7704:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:0"},"nodeType":"YulFunctionCall","src":"7696:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7690:2:0"}]},{"nodeType":"YulAssignment","src":"7727:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7737:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7741:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7733:3:0"},"nodeType":"YulFunctionCall","src":"7733:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7727:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"7559:96:0","statements":[{"nodeType":"YulAssignment","src":"7581:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7591:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7595:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7587:3:0"},"nodeType":"YulFunctionCall","src":"7587:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7581:2:0"}]},{"nodeType":"YulAssignment","src":"7621:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7631:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7635:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:0"},"nodeType":"YulFunctionCall","src":"7627:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7621:2:0"}]}]},"src":"7555:271:0"},{"nodeType":"YulAssignment","src":"7844:32:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7856:5:0","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7867:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"7871:3:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7863:3:0"},"nodeType":"YulFunctionCall","src":"7863:12:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7852:3:0"},"nodeType":"YulFunctionCall","src":"7852:24:0"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"7844:4:0"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7901:2:0"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7919:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7913:5:0"},"nodeType":"YulFunctionCall","src":"7913:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7924:4:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7909:3:0"},"nodeType":"YulFunctionCall","src":"7909:20:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7931:4:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7905:3:0"},"nodeType":"YulFunctionCall","src":"7905:31:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7894:6:0"},"nodeType":"YulFunctionCall","src":"7894:43:0"},"nodeType":"YulExpressionStatement","src":"7894:43:0"}]},"nodeType":"YulCase","src":"6219:1732:0","value":{"kind":"number","nodeType":"YulLiteral","src":"6224:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7972:1264:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8069:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8074:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8062:6:0"},"nodeType":"YulFunctionCall","src":"8062:27:0"},"nodeType":"YulExpressionStatement","src":"8062:27:0"},{"nodeType":"YulVariableDeclaration","src":"8182:53:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8206:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8211:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8196:9:0"},"nodeType":"YulFunctionCall","src":"8196:20:0"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8222:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:0","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8218:3:0"},"nodeType":"YulFunctionCall","src":"8218:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8192:3:0"},"nodeType":"YulFunctionCall","src":"8192:43:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8186:2:0","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8295:14:0"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8319:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"8330:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8315:3:0"},"nodeType":"YulFunctionCall","src":"8315:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"8334:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8311:3:0"},"nodeType":"YulFunctionCall","src":"8311:25:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8288:6:0"},"nodeType":"YulFunctionCall","src":"8288:49:0"},"nodeType":"YulExpressionStatement","src":"8288:49:0"},{"nodeType":"YulVariableDeclaration","src":"8464:34:0","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8486:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8495:2:0","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8482:3:0"},"nodeType":"YulFunctionCall","src":"8482:16:0"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8468:10:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8515:34:0","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8537:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8546:2:0","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8533:3:0"},"nodeType":"YulFunctionCall","src":"8533:16:0"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8519:10:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8566:33:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8584:2:0","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8588:10:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8580:3:0"},"nodeType":"YulFunctionCall","src":"8580:19:0"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8570:6:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8616:33:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8630:10:0"},{"name":"submod","nodeType":"YulIdentifier","src":"8642:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:0"},"nodeType":"YulFunctionCall","src":"8626:23:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8620:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8666:35:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8681:10:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"8693:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8677:3:0"},"nodeType":"YulFunctionCall","src":"8677:24:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8670:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8718:38:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8738:5:0","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8745:6:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8734:3:0"},"nodeType":"YulFunctionCall","src":"8734:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"8754:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8730:3:0"},"nodeType":"YulFunctionCall","src":"8730:26:0"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8722:4:0","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8781:2:0"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8795:2:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8789:5:0"},"nodeType":"YulFunctionCall","src":"8789:9:0"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8810:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8804:5:0"},"nodeType":"YulFunctionCall","src":"8804:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"8815:4:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8800:3:0"},"nodeType":"YulFunctionCall","src":"8800:20:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8785:3:0"},"nodeType":"YulFunctionCall","src":"8785:36:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8774:6:0"},"nodeType":"YulFunctionCall","src":"8774:48:0"},"nodeType":"YulExpressionStatement","src":"8774:48:0"},{"body":{"nodeType":"YulBlock","src":"9050:61:0","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9079:2:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9089:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9083:5:0"},"nodeType":"YulFunctionCall","src":"9083:9:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9072:6:0"},"nodeType":"YulFunctionCall","src":"9072:21:0"},"nodeType":"YulExpressionStatement","src":"9072:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8944:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"8948:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8941:2:0"},"nodeType":"YulFunctionCall","src":"8941:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8953:96:0","statements":[{"nodeType":"YulAssignment","src":"8975:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8985:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8989:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:0"},"nodeType":"YulFunctionCall","src":"8981:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8975:2:0"}]},{"nodeType":"YulAssignment","src":"9012:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9022:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"9026:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9018:3:0"},"nodeType":"YulFunctionCall","src":"9018:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9012:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"8844:96:0","statements":[{"nodeType":"YulAssignment","src":"8866:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8876:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8872:3:0"},"nodeType":"YulFunctionCall","src":"8872:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8866:2:0"}]},{"nodeType":"YulAssignment","src":"8903:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8913:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8917:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8909:3:0"},"nodeType":"YulFunctionCall","src":"8909:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"8903:2:0"}]}]},"src":"8840:271:0"},{"nodeType":"YulAssignment","src":"9129:32:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9141:5:0","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9152:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"9156:3:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9148:3:0"},"nodeType":"YulFunctionCall","src":"9148:12:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9137:3:0"},"nodeType":"YulFunctionCall","src":"9137:24:0"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9129:4:0"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9186:2:0"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9204:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9198:5:0"},"nodeType":"YulFunctionCall","src":"9198:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"9209:4:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9194:3:0"},"nodeType":"YulFunctionCall","src":"9194:20:0"},{"name":"mask","nodeType":"YulIdentifier","src":"9216:4:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9190:3:0"},"nodeType":"YulFunctionCall","src":"9190:31:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9179:6:0"},"nodeType":"YulFunctionCall","src":"9179:43:0"},"nodeType":"YulExpressionStatement","src":"9179:43:0"}]},"nodeType":"YulCase","src":"7964:1272:0","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4669:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"4678:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4666:2:0"},"nodeType":"YulFunctionCall","src":"4666:15:0"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4686:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4683:2:0"},"nodeType":"YulFunctionCall","src":"4683:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4662:3:0"},"nodeType":"YulFunctionCall","src":"4662:39:0"},"nodeType":"YulSwitch","src":"4655:4581:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":false,"src":"4326:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"5532:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"7276:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"7327:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"8630:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"8681:10:0","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"3708:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"5002:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"6440:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"6585:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"8074:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"8295:14:0","suffix":"slot","valueSize":1}],"id":24,"nodeType":"InlineAssembly","src":"3457:5789:0"}]},"id":26,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3374:13:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"_preBytes","nameLocation":"3402:9:0","nodeType":"VariableDeclaration","scope":26,"src":"3388:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":18,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"_postBytes","nameLocation":"3426:10:0","nodeType":"VariableDeclaration","scope":26,"src":"3413:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":20,"name":"bytes","nodeType":"ElementaryTypeName","src":"3413:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3387:50:0"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"3447:0:0"},"scope":332,"src":"3365:5887:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"9388:2640:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":38,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9416:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9406:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":41,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9406:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9431:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":37,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9398:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9398:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"9398:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":47,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"9466:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9466:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"9483:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":50,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9492:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9483:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9466:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9501:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":46,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9458:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"9458:63:0"},{"assignments":[57],"declarations":[{"constant":false,"id":57,"mutability":"mutable","name":"tempBytes","nameLocation":"9545:9:0","nodeType":"VariableDeclaration","scope":62,"src":"9532:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"9532:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":58,"nodeType":"VariableDeclarationStatement","src":"9532:22:0"},{"AST":{"nodeType":"YulBlock","src":"9574:2421:0","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9630:1960:0","statements":[{"nodeType":"YulAssignment","src":"9786:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9805:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9799:5:0"},"nodeType":"YulFunctionCall","src":"9799:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"9786:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"10434:33:0","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10455:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"10464:2:0","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10451:3:0"},"nodeType":"YulFunctionCall","src":"10451:16:0"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10438:9:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10788:70:0","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10806:9:0"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"10817:9:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10802:3:0"},"nodeType":"YulFunctionCall","src":"10802:25:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10833:4:0","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"10846:9:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10839:6:0"},"nodeType":"YulFunctionCall","src":"10839:17:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10829:3:0"},"nodeType":"YulFunctionCall","src":"10829:28:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10798:3:0"},"nodeType":"YulFunctionCall","src":"10798:60:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"10792:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10875:27:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10890:2:0"},{"name":"_length","nodeType":"YulIdentifier","src":"10894:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10886:3:0"},"nodeType":"YulFunctionCall","src":"10886:16:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"10879:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"11284:61:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11313:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11323:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11317:5:0"},"nodeType":"YulFunctionCall","src":"11317:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11306:6:0"},"nodeType":"YulFunctionCall","src":"11306:21:0"},"nodeType":"YulExpressionStatement","src":"11306:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11175:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"11179:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11172:2:0"},"nodeType":"YulFunctionCall","src":"11172:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11184:99:0","statements":[{"nodeType":"YulAssignment","src":"11206:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11216:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11220:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11212:3:0"},"nodeType":"YulFunctionCall","src":"11212:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11206:2:0"}]},{"nodeType":"YulAssignment","src":"11246:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11256:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11260:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:0"},"nodeType":"YulFunctionCall","src":"11252:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11246:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"10924:247:0","statements":[{"nodeType":"YulVariableDeclaration","src":"11073:80:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11095:6:0"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11103:9:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11091:3:0"},"nodeType":"YulFunctionCall","src":"11091:22:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11119:4:0","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11132:9:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11125:6:0"},"nodeType":"YulFunctionCall","src":"11125:17:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11115:3:0"},"nodeType":"YulFunctionCall","src":"11115:28:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:0"},"nodeType":"YulFunctionCall","src":"11087:57:0"},{"name":"_start","nodeType":"YulIdentifier","src":"11146:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11083:3:0"},"nodeType":"YulFunctionCall","src":"11083:70:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11077:2:0","type":""}]}]},"src":"10920:425:0"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11370:9:0"},{"name":"_length","nodeType":"YulIdentifier","src":"11381:7:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11363:6:0"},"nodeType":"YulFunctionCall","src":"11363:26:0"},"nodeType":"YulExpressionStatement","src":"11363:26:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11544:4:0","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11558:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11562:2:0","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11554:3:0"},"nodeType":"YulFunctionCall","src":"11554:11:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11571:2:0","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11567:3:0"},"nodeType":"YulFunctionCall","src":"11567:7:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11550:3:0"},"nodeType":"YulFunctionCall","src":"11550:25:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11537:6:0"},"nodeType":"YulFunctionCall","src":"11537:39:0"},"nodeType":"YulExpressionStatement","src":"11537:39:0"}]},"nodeType":"YulCase","src":"9623:1967:0","value":{"kind":"number","nodeType":"YulLiteral","src":"9628:1:0","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11694:291:0","statements":[{"nodeType":"YulAssignment","src":"11712:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11731:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11725:5:0"},"nodeType":"YulFunctionCall","src":"11725:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11712:9:0"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11906:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"11917:1:0","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11899:6:0"},"nodeType":"YulFunctionCall","src":"11899:20:0"},"nodeType":"YulExpressionStatement","src":"11899:20:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11944:4:0","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11954:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"11965:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11950:3:0"},"nodeType":"YulFunctionCall","src":"11950:20:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11937:6:0"},"nodeType":"YulFunctionCall","src":"11937:34:0"},"nodeType":"YulExpressionStatement","src":"11937:34:0"}]},"nodeType":"YulCase","src":"11686:299:0","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9602:7:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9595:6:0"},"nodeType":"YulFunctionCall","src":"9595:15:0"},"nodeType":"YulSwitch","src":"9588:2397:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":28,"isOffset":false,"isSlot":false,"src":"11095:6:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"10455:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"10894:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"11381:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"9602:7:0","valueSize":1},{"declaration":30,"isOffset":false,"isSlot":false,"src":"11146:6:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"10806:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11370:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11712:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11906:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11954:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"9786:9:0","valueSize":1}],"id":59,"nodeType":"InlineAssembly","src":"9565:2430:0"},{"expression":{"id":60,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"12012:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":36,"id":61,"nodeType":"Return","src":"12005:16:0"}]},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9267:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"_bytes","nameLocation":"9295:6:0","nodeType":"VariableDeclaration","scope":63,"src":"9282:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"9282:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"_start","nameLocation":"9316:6:0","nodeType":"VariableDeclaration","scope":63,"src":"9311:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint","nodeType":"ElementaryTypeName","src":"9311:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"_length","nameLocation":"9337:7:0","nodeType":"VariableDeclaration","scope":63,"src":"9332:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint","nodeType":"ElementaryTypeName","src":"9332:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9272:78:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"9374:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":34,"name":"bytes","nodeType":"ElementaryTypeName","src":"9374:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9373:14:0"},"scope":332,"src":"9258:2770:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"12119:266:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":73,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"12137:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12137:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":75,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12154:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12163:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12154:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12137:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12167:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":72,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12129:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"12129:62:0"},{"assignments":[83],"declarations":[{"constant":false,"id":83,"mutability":"mutable","name":"tempAddress","nameLocation":"12209:11:0","nodeType":"VariableDeclaration","scope":88,"src":"12201:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"12201:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":84,"nodeType":"VariableDeclarationStatement","src":"12201:19:0"},{"AST":{"nodeType":"YulBlock","src":"12240:110:0","statements":[{"nodeType":"YulAssignment","src":"12254:86:0","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12287:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12295:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12283:3:0"},"nodeType":"YulFunctionCall","src":"12283:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12302:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12279:3:0"},"nodeType":"YulFunctionCall","src":"12279:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12273:5:0"},"nodeType":"YulFunctionCall","src":"12273:37:0"},{"kind":"number","nodeType":"YulLiteral","src":"12312:27:0","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12269:3:0"},"nodeType":"YulFunctionCall","src":"12269:71:0"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12254:11:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":65,"isOffset":false,"isSlot":false,"src":"12287:6:0","valueSize":1},{"declaration":67,"isOffset":false,"isSlot":false,"src":"12302:6:0","valueSize":1},{"declaration":83,"isOffset":false,"isSlot":false,"src":"12254:11:0","valueSize":1}],"id":85,"nodeType":"InlineAssembly","src":"12231:119:0"},{"expression":{"id":86,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"12367:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":71,"id":87,"nodeType":"Return","src":"12360:18:0"}]},"id":89,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"12043:9:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"_bytes","nameLocation":"12066:6:0","nodeType":"VariableDeclaration","scope":89,"src":"12053:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":64,"name":"bytes","nodeType":"ElementaryTypeName","src":"12053:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"_start","nameLocation":"12079:6:0","nodeType":"VariableDeclaration","scope":89,"src":"12074:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint","nodeType":"ElementaryTypeName","src":"12074:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12052:34:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"12110:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"12110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12109:9:0"},"scope":332,"src":"12034:351:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"12472:217:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":99,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"12490:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12490:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":101,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"12507:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12516:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12507:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12490:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12519:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12482:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12482:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"12482:59:0"},{"assignments":[109],"declarations":[{"constant":false,"id":109,"mutability":"mutable","name":"tempUint","nameLocation":"12557:8:0","nodeType":"VariableDeclaration","scope":114,"src":"12551:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":108,"name":"uint8","nodeType":"ElementaryTypeName","src":"12551:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":110,"nodeType":"VariableDeclarationStatement","src":"12551:14:0"},{"AST":{"nodeType":"YulBlock","src":"12585:72:0","statements":[{"nodeType":"YulAssignment","src":"12599:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12625:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12633:3:0","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12621:3:0"},"nodeType":"YulFunctionCall","src":"12621:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12639:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12617:3:0"},"nodeType":"YulFunctionCall","src":"12617:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12611:5:0"},"nodeType":"YulFunctionCall","src":"12611:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12599:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":91,"isOffset":false,"isSlot":false,"src":"12625:6:0","valueSize":1},{"declaration":93,"isOffset":false,"isSlot":false,"src":"12639:6:0","valueSize":1},{"declaration":109,"isOffset":false,"isSlot":false,"src":"12599:8:0","valueSize":1}],"id":111,"nodeType":"InlineAssembly","src":"12576:81:0"},{"expression":{"id":112,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12674:8:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":97,"id":113,"nodeType":"Return","src":"12667:15:0"}]},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"12400:7:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"_bytes","nameLocation":"12421:6:0","nodeType":"VariableDeclaration","scope":115,"src":"12408:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":90,"name":"bytes","nodeType":"ElementaryTypeName","src":"12408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"_start","nameLocation":"12434:6:0","nodeType":"VariableDeclaration","scope":115,"src":"12429:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint","nodeType":"ElementaryTypeName","src":"12429:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12407:34:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"12465:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":95,"name":"uint8","nodeType":"ElementaryTypeName","src":"12465:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12464:7:0"},"scope":332,"src":"12391:298:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"12778:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":125,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"12796:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12796:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":127,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"12813:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12822:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12813:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12796:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12825:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12788:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12788:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"12788:60:0"},{"assignments":[135],"declarations":[{"constant":false,"id":135,"mutability":"mutable","name":"tempUint","nameLocation":"12865:8:0","nodeType":"VariableDeclaration","scope":140,"src":"12858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":134,"name":"uint16","nodeType":"ElementaryTypeName","src":"12858:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":136,"nodeType":"VariableDeclarationStatement","src":"12858:15:0"},{"AST":{"nodeType":"YulBlock","src":"12893:72:0","statements":[{"nodeType":"YulAssignment","src":"12907:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12933:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12941:3:0","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12929:3:0"},"nodeType":"YulFunctionCall","src":"12929:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12947:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:0"},"nodeType":"YulFunctionCall","src":"12925:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12919:5:0"},"nodeType":"YulFunctionCall","src":"12919:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12907:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":117,"isOffset":false,"isSlot":false,"src":"12933:6:0","valueSize":1},{"declaration":119,"isOffset":false,"isSlot":false,"src":"12947:6:0","valueSize":1},{"declaration":135,"isOffset":false,"isSlot":false,"src":"12907:8:0","valueSize":1}],"id":137,"nodeType":"InlineAssembly","src":"12884:81:0"},{"expression":{"id":138,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"12982:8:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":123,"id":139,"nodeType":"Return","src":"12975:15:0"}]},"id":141,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"12704:8:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"_bytes","nameLocation":"12726:6:0","nodeType":"VariableDeclaration","scope":141,"src":"12713:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"12713:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"_start","nameLocation":"12739:6:0","nodeType":"VariableDeclaration","scope":141,"src":"12734:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint","nodeType":"ElementaryTypeName","src":"12734:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12712:34:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"12770:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":121,"name":"uint16","nodeType":"ElementaryTypeName","src":"12770:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12769:8:0"},"scope":332,"src":"12695:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"13086:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":151,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"13104:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13104:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":153,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"13121:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13130:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13121:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13133:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13096:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13096:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":159,"nodeType":"ExpressionStatement","src":"13096:60:0"},{"assignments":[161],"declarations":[{"constant":false,"id":161,"mutability":"mutable","name":"tempUint","nameLocation":"13173:8:0","nodeType":"VariableDeclaration","scope":166,"src":"13166:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":160,"name":"uint32","nodeType":"ElementaryTypeName","src":"13166:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":162,"nodeType":"VariableDeclarationStatement","src":"13166:15:0"},{"AST":{"nodeType":"YulBlock","src":"13201:72:0","statements":[{"nodeType":"YulAssignment","src":"13215:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13241:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13249:3:0","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13237:3:0"},"nodeType":"YulFunctionCall","src":"13237:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13255:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:0"},"nodeType":"YulFunctionCall","src":"13233:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13227:5:0"},"nodeType":"YulFunctionCall","src":"13227:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13215:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":143,"isOffset":false,"isSlot":false,"src":"13241:6:0","valueSize":1},{"declaration":145,"isOffset":false,"isSlot":false,"src":"13255:6:0","valueSize":1},{"declaration":161,"isOffset":false,"isSlot":false,"src":"13215:8:0","valueSize":1}],"id":163,"nodeType":"InlineAssembly","src":"13192:81:0"},{"expression":{"id":164,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"13290:8:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":149,"id":165,"nodeType":"Return","src":"13283:15:0"}]},"id":167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"13012:8:0","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"_bytes","nameLocation":"13034:6:0","nodeType":"VariableDeclaration","scope":167,"src":"13021:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":142,"name":"bytes","nodeType":"ElementaryTypeName","src":"13021:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"_start","nameLocation":"13047:6:0","nodeType":"VariableDeclaration","scope":167,"src":"13042:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint","nodeType":"ElementaryTypeName","src":"13042:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13020:34:0"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"13078:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":147,"name":"uint32","nodeType":"ElementaryTypeName","src":"13078:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13077:8:0"},"scope":332,"src":"13003:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":192,"nodeType":"Block","src":"13394:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":177,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"13412:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13412:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":179,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"13429:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13438:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13429:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13412:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13441:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13404:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"13404:60:0"},{"assignments":[187],"declarations":[{"constant":false,"id":187,"mutability":"mutable","name":"tempUint","nameLocation":"13481:8:0","nodeType":"VariableDeclaration","scope":192,"src":"13474:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":186,"name":"uint64","nodeType":"ElementaryTypeName","src":"13474:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":188,"nodeType":"VariableDeclarationStatement","src":"13474:15:0"},{"AST":{"nodeType":"YulBlock","src":"13509:72:0","statements":[{"nodeType":"YulAssignment","src":"13523:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13549:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13557:3:0","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13545:3:0"},"nodeType":"YulFunctionCall","src":"13545:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13563:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13541:3:0"},"nodeType":"YulFunctionCall","src":"13541:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13535:5:0"},"nodeType":"YulFunctionCall","src":"13535:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13523:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":169,"isOffset":false,"isSlot":false,"src":"13549:6:0","valueSize":1},{"declaration":171,"isOffset":false,"isSlot":false,"src":"13563:6:0","valueSize":1},{"declaration":187,"isOffset":false,"isSlot":false,"src":"13523:8:0","valueSize":1}],"id":189,"nodeType":"InlineAssembly","src":"13500:81:0"},{"expression":{"id":190,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"13598:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":175,"id":191,"nodeType":"Return","src":"13591:15:0"}]},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13320:8:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"_bytes","nameLocation":"13342:6:0","nodeType":"VariableDeclaration","scope":193,"src":"13329:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"13329:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"_start","nameLocation":"13355:6:0","nodeType":"VariableDeclaration","scope":193,"src":"13350:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint","nodeType":"ElementaryTypeName","src":"13350:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13328:34:0"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":193,"src":"13386:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":173,"name":"uint64","nodeType":"ElementaryTypeName","src":"13386:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13385:8:0"},"scope":332,"src":"13311:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"13702:220:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":203,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"13720:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13720:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":205,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"13737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13746:2:0","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13737:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13750:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13712:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13712:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"13712:61:0"},{"assignments":[213],"declarations":[{"constant":false,"id":213,"mutability":"mutable","name":"tempUint","nameLocation":"13790:8:0","nodeType":"VariableDeclaration","scope":218,"src":"13783:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":212,"name":"uint96","nodeType":"ElementaryTypeName","src":"13783:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":214,"nodeType":"VariableDeclarationStatement","src":"13783:15:0"},{"AST":{"nodeType":"YulBlock","src":"13818:72:0","statements":[{"nodeType":"YulAssignment","src":"13832:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13858:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13866:3:0","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:0"},"nodeType":"YulFunctionCall","src":"13854:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13872:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13850:3:0"},"nodeType":"YulFunctionCall","src":"13850:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13844:5:0"},"nodeType":"YulFunctionCall","src":"13844:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13832:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":195,"isOffset":false,"isSlot":false,"src":"13858:6:0","valueSize":1},{"declaration":197,"isOffset":false,"isSlot":false,"src":"13872:6:0","valueSize":1},{"declaration":213,"isOffset":false,"isSlot":false,"src":"13832:8:0","valueSize":1}],"id":215,"nodeType":"InlineAssembly","src":"13809:81:0"},{"expression":{"id":216,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"13907:8:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":201,"id":217,"nodeType":"Return","src":"13900:15:0"}]},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13628:8:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"_bytes","nameLocation":"13650:6:0","nodeType":"VariableDeclaration","scope":219,"src":"13637:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":194,"name":"bytes","nodeType":"ElementaryTypeName","src":"13637:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"_start","nameLocation":"13663:6:0","nodeType":"VariableDeclaration","scope":219,"src":"13658:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint","nodeType":"ElementaryTypeName","src":"13658:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13636:34:0"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"13694:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":199,"name":"uint96","nodeType":"ElementaryTypeName","src":"13694:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13693:8:0"},"scope":332,"src":"13619:303:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"14013:223:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":229,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"14031:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14031:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"14048:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14057:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14048:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14031:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14061:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14023:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14023:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"14023:62:0"},{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"tempUint","nameLocation":"14103:8:0","nodeType":"VariableDeclaration","scope":244,"src":"14095:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":238,"name":"uint128","nodeType":"ElementaryTypeName","src":"14095:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":240,"nodeType":"VariableDeclarationStatement","src":"14095:16:0"},{"AST":{"nodeType":"YulBlock","src":"14131:73:0","statements":[{"nodeType":"YulAssignment","src":"14145:49:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14171:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14179:4:0","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:0"},"nodeType":"YulFunctionCall","src":"14167:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14186:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:0"},"nodeType":"YulFunctionCall","src":"14163:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14157:5:0"},"nodeType":"YulFunctionCall","src":"14157:37:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14145:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":221,"isOffset":false,"isSlot":false,"src":"14171:6:0","valueSize":1},{"declaration":223,"isOffset":false,"isSlot":false,"src":"14186:6:0","valueSize":1},{"declaration":239,"isOffset":false,"isSlot":false,"src":"14145:8:0","valueSize":1}],"id":241,"nodeType":"InlineAssembly","src":"14122:82:0"},{"expression":{"id":242,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"14221:8:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":227,"id":243,"nodeType":"Return","src":"14214:15:0"}]},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"13937:9:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"_bytes","nameLocation":"13960:6:0","nodeType":"VariableDeclaration","scope":245,"src":"13947:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"13947:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"_start","nameLocation":"13973:6:0","nodeType":"VariableDeclaration","scope":245,"src":"13968:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint","nodeType":"ElementaryTypeName","src":"13968:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13946:34:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"14004:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":225,"name":"uint128","nodeType":"ElementaryTypeName","src":"14004:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14003:9:0"},"scope":332,"src":"13928:308:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"14324:220:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":255,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"14342:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14342:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":257,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"14359:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14368:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14359:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14342:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14372:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14334:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14334:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"14334:62:0"},{"assignments":[265],"declarations":[{"constant":false,"id":265,"mutability":"mutable","name":"tempUint","nameLocation":"14411:8:0","nodeType":"VariableDeclaration","scope":270,"src":"14406:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint","nodeType":"ElementaryTypeName","src":"14406:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":266,"nodeType":"VariableDeclarationStatement","src":"14406:13:0"},{"AST":{"nodeType":"YulBlock","src":"14439:73:0","statements":[{"nodeType":"YulAssignment","src":"14453:49:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14479:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14487:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14475:3:0"},"nodeType":"YulFunctionCall","src":"14475:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14494:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14471:3:0"},"nodeType":"YulFunctionCall","src":"14471:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14465:5:0"},"nodeType":"YulFunctionCall","src":"14465:37:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14453:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":247,"isOffset":false,"isSlot":false,"src":"14479:6:0","valueSize":1},{"declaration":249,"isOffset":false,"isSlot":false,"src":"14494:6:0","valueSize":1},{"declaration":265,"isOffset":false,"isSlot":false,"src":"14453:8:0","valueSize":1}],"id":267,"nodeType":"InlineAssembly","src":"14430:82:0"},{"expression":{"id":268,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"14529:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":253,"id":269,"nodeType":"Return","src":"14522:15:0"}]},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"14251:9:0","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"_bytes","nameLocation":"14274:6:0","nodeType":"VariableDeclaration","scope":271,"src":"14261:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":246,"name":"bytes","nodeType":"ElementaryTypeName","src":"14261:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"_start","nameLocation":"14287:6:0","nodeType":"VariableDeclaration","scope":271,"src":"14282:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint","nodeType":"ElementaryTypeName","src":"14282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14260:34:0"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"14318:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint","nodeType":"ElementaryTypeName","src":"14318:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14317:6:0"},"scope":332,"src":"14242:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"14635:232:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":281,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"14653:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14653:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":283,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"14670:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14679:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14670:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14653:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14683:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14645:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14645:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"14645:62:0"},{"assignments":[291],"declarations":[{"constant":false,"id":291,"mutability":"mutable","name":"tempBytes32","nameLocation":"14725:11:0","nodeType":"VariableDeclaration","scope":296,"src":"14717:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14717:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":292,"nodeType":"VariableDeclarationStatement","src":"14717:19:0"},{"AST":{"nodeType":"YulBlock","src":"14756:76:0","statements":[{"nodeType":"YulAssignment","src":"14770:52:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14799:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14807:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:0"},"nodeType":"YulFunctionCall","src":"14795:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14814:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14791:3:0"},"nodeType":"YulFunctionCall","src":"14791:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14785:5:0"},"nodeType":"YulFunctionCall","src":"14785:37:0"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"14770:11:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":273,"isOffset":false,"isSlot":false,"src":"14799:6:0","valueSize":1},{"declaration":275,"isOffset":false,"isSlot":false,"src":"14814:6:0","valueSize":1},{"declaration":291,"isOffset":false,"isSlot":false,"src":"14770:11:0","valueSize":1}],"id":293,"nodeType":"InlineAssembly","src":"14747:85:0"},{"expression":{"id":294,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"14849:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":279,"id":295,"nodeType":"Return","src":"14842:18:0"}]},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14559:9:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"_bytes","nameLocation":"14582:6:0","nodeType":"VariableDeclaration","scope":297,"src":"14569:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"14569:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"_start","nameLocation":"14595:6:0","nodeType":"VariableDeclaration","scope":297,"src":"14590:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint","nodeType":"ElementaryTypeName","src":"14590:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14568:34:0"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"14626:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14626:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14625:9:0"},"scope":332,"src":"14550:317:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"14966:1331:0","statements":[{"assignments":[307],"declarations":[{"constant":false,"id":307,"mutability":"mutable","name":"success","nameLocation":"14981:7:0","nodeType":"VariableDeclaration","scope":313,"src":"14976:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":306,"name":"bool","nodeType":"ElementaryTypeName","src":"14976:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":309,"initialValue":{"hexValue":"74727565","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"14976:19:0"},{"AST":{"nodeType":"YulBlock","src":"15015:1251:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15029:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15049:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15043:5:0"},"nodeType":"YulFunctionCall","src":"15043:16:0"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15033:6:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15192:969:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15421:11:0","value":{"kind":"number","nodeType":"YulLiteral","src":"15431:1:0","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15425:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15450:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15464:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"15475:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15460:3:0"},"nodeType":"YulFunctionCall","src":"15460:20:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15454:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15497:26:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15512:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"15516:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15508:3:0"},"nodeType":"YulFunctionCall","src":"15508:15:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15501:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"15863:284:0","statements":[{"body":{"nodeType":"YulBlock","src":"15999:130:0","statements":[{"nodeType":"YulAssignment","src":"16063:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16074:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16063:7:0"}]},{"nodeType":"YulAssignment","src":"16100:7:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16106:1:0","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16100:2:0"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15982:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15976:5:0"},"nodeType":"YulFunctionCall","src":"15976:9:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15993:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15987:5:0"},"nodeType":"YulFunctionCall","src":"15987:9:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15973:2:0"},"nodeType":"YulFunctionCall","src":"15973:24:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15966:6:0"},"nodeType":"YulFunctionCall","src":"15966:32:0"},"nodeType":"YulIf","src":"15963:166:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15745:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"15749:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15742:2:0"},"nodeType":"YulFunctionCall","src":"15742:11:0"},{"name":"cb","nodeType":"YulIdentifier","src":"15755:2:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15738:3:0"},"nodeType":"YulFunctionCall","src":"15738:20:0"},{"kind":"number","nodeType":"YulLiteral","src":"15760:1:0","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15735:2:0"},"nodeType":"YulFunctionCall","src":"15735:27:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15763:99:0","statements":[{"nodeType":"YulAssignment","src":"15785:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15795:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"15799:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15791:3:0"},"nodeType":"YulFunctionCall","src":"15791:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"15785:2:0"}]},{"nodeType":"YulAssignment","src":"15825:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15835:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"15839:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:0"},"nodeType":"YulFunctionCall","src":"15831:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"15825:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"15545:189:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15567:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15581:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"15593:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15577:3:0"},"nodeType":"YulFunctionCall","src":"15577:21:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15571:2:0","type":""}]}]},"src":"15541:606:0"}]},"nodeType":"YulCase","src":"15185:976:0","value":{"kind":"number","nodeType":"YulLiteral","src":"15190:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16182:74:0","statements":[{"nodeType":"YulAssignment","src":"16230:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16241:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16230:7:0"}]}]},"nodeType":"YulCase","src":"16174:82:0","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15146:6:0"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15160:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15154:5:0"},"nodeType":"YulFunctionCall","src":"15154:17:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15143:2:0"},"nodeType":"YulFunctionCall","src":"15143:29:0"},"nodeType":"YulSwitch","src":"15136:1120:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":301,"isOffset":false,"isSlot":false,"src":"15160:10:0","valueSize":1},{"declaration":301,"isOffset":false,"isSlot":false,"src":"15581:10:0","valueSize":1},{"declaration":299,"isOffset":false,"isSlot":false,"src":"15049:9:0","valueSize":1},{"declaration":299,"isOffset":false,"isSlot":false,"src":"15464:9:0","valueSize":1},{"declaration":307,"isOffset":false,"isSlot":false,"src":"16063:7:0","valueSize":1},{"declaration":307,"isOffset":false,"isSlot":false,"src":"16230:7:0","valueSize":1}],"id":310,"nodeType":"InlineAssembly","src":"15006:1260:0"},{"expression":{"id":311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"16283:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":305,"id":312,"nodeType":"Return","src":"16276:14:0"}]},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"14882:5:0","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"_preBytes","nameLocation":"14901:9:0","nodeType":"VariableDeclaration","scope":314,"src":"14888:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"14888:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"_postBytes","nameLocation":"14925:10:0","nodeType":"VariableDeclaration","scope":314,"src":"14912:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"14912:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14887:49:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"14960:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"14960:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14959:6:0"},"scope":332,"src":"14873:1424:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"16404:2585:0","statements":[{"assignments":[324],"declarations":[{"constant":false,"id":324,"mutability":"mutable","name":"success","nameLocation":"16419:7:0","nodeType":"VariableDeclaration","scope":330,"src":"16414:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":323,"name":"bool","nodeType":"ElementaryTypeName","src":"16414:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":326,"initialValue":{"hexValue":"74727565","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16429:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16414:19:0"},{"AST":{"nodeType":"YulBlock","src":"16453:2505:0","statements":[{"nodeType":"YulVariableDeclaration","src":"16512:34:0","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16531:14:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16525:5:0"},"nodeType":"YulFunctionCall","src":"16525:21:0"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16516:5:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16637:76:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16660:5:0"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16675:5:0","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16693:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"16700:1:0","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16689:3:0"},"nodeType":"YulFunctionCall","src":"16689:13:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16682:6:0"},"nodeType":"YulFunctionCall","src":"16682:21:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16671:3:0"},"nodeType":"YulFunctionCall","src":"16671:33:0"},{"kind":"number","nodeType":"YulLiteral","src":"16706:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16667:3:0"},"nodeType":"YulFunctionCall","src":"16667:41:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16656:3:0"},"nodeType":"YulFunctionCall","src":"16656:53:0"},{"kind":"number","nodeType":"YulLiteral","src":"16711:1:0","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16652:3:0"},"nodeType":"YulFunctionCall","src":"16652:61:0"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16641:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16726:32:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"16747:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16741:5:0"},"nodeType":"YulFunctionCall","src":"16741:17:0"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"16730:7:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16882:1971:0","statements":[{"body":{"nodeType":"YulBlock","src":"17193:1646:0","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17265:340:0","statements":[{"nodeType":"YulAssignment","src":"17358:38:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17375:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"17382:5:0","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17371:3:0"},"nodeType":"YulFunctionCall","src":"17371:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"17390:5:0","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17367:3:0"},"nodeType":"YulFunctionCall","src":"17367:29:0"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17358:5:0"}]},{"body":{"nodeType":"YulBlock","src":"17473:110:0","statements":[{"nodeType":"YulAssignment","src":"17545:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17556:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17545:7:0"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17435:5:0"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17452:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"17464:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17448:3:0"},"nodeType":"YulFunctionCall","src":"17448:21:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17442:5:0"},"nodeType":"YulFunctionCall","src":"17442:28:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17432:2:0"},"nodeType":"YulFunctionCall","src":"17432:39:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17425:6:0"},"nodeType":"YulFunctionCall","src":"17425:47:0"},"nodeType":"YulIf","src":"17422:161:0"}]},"nodeType":"YulCase","src":"17258:347:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17263:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17634:1187:0","statements":[{"nodeType":"YulVariableDeclaration","src":"17903:11:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17913:1:0","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"17907:2:0","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18027:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18032:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18020:6:0"},"nodeType":"YulFunctionCall","src":"18020:27:0"},"nodeType":"YulExpressionStatement","src":"18020:27:0"},{"nodeType":"YulVariableDeclaration","src":"18072:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18092:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18097:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18082:9:0"},"nodeType":"YulFunctionCall","src":"18082:20:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18076:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18128:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18142:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"18154:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18138:3:0"},"nodeType":"YulFunctionCall","src":"18138:21:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18132:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18184:27:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18199:2:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"18203:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18195:3:0"},"nodeType":"YulFunctionCall","src":"18195:16:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18188:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"18545:254:0","statements":[{"body":{"nodeType":"YulBlock","src":"18611:162:0","statements":[{"nodeType":"YulAssignment","src":"18691:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18702:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18691:7:0"}]},{"nodeType":"YulAssignment","src":"18736:7:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18742:1:0","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"18736:2:0"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18594:2:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18588:5:0"},"nodeType":"YulFunctionCall","src":"18588:9:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18605:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18599:5:0"},"nodeType":"YulFunctionCall","src":"18599:9:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18585:2:0"},"nodeType":"YulFunctionCall","src":"18585:24:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18578:6:0"},"nodeType":"YulFunctionCall","src":"18578:32:0"},"nodeType":"YulIf","src":"18575:198:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18406:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"18410:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18403:2:0"},"nodeType":"YulFunctionCall","src":"18403:11:0"},{"name":"cb","nodeType":"YulIdentifier","src":"18416:2:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18399:3:0"},"nodeType":"YulFunctionCall","src":"18399:20:0"},{"kind":"number","nodeType":"YulLiteral","src":"18421:1:0","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18396:2:0"},"nodeType":"YulFunctionCall","src":"18396:27:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18424:120:0","statements":[{"nodeType":"YulAssignment","src":"18454:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18464:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"18468:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18460:3:0"},"nodeType":"YulFunctionCall","src":"18460:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18454:2:0"}]},{"nodeType":"YulAssignment","src":"18499:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18509:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"18513:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18505:3:0"},"nodeType":"YulFunctionCall","src":"18505:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18499:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"18367:28:0","statements":[]},"src":"18363:436:0"}]},"nodeType":"YulCase","src":"17626:1195:0","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17225:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"17234:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17222:2:0"},"nodeType":"YulFunctionCall","src":"17222:15:0"},"nodeType":"YulSwitch","src":"17215:1606:0"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17183:7:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17176:6:0"},"nodeType":"YulFunctionCall","src":"17176:15:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17169:6:0"},"nodeType":"YulFunctionCall","src":"17169:23:0"},"nodeType":"YulIf","src":"17166:1673:0"}]},"nodeType":"YulCase","src":"16875:1978:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16880:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18874:74:0","statements":[{"nodeType":"YulAssignment","src":"18922:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18933:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18922:7:0"}]}]},"nodeType":"YulCase","src":"18866:82:0","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"16845:7:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"16854:7:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16842:2:0"},"nodeType":"YulFunctionCall","src":"16842:20:0"},"nodeType":"YulSwitch","src":"16835:2113:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":318,"isOffset":false,"isSlot":false,"src":"16747:10:0","valueSize":1},{"declaration":318,"isOffset":false,"isSlot":false,"src":"17452:10:0","valueSize":1},{"declaration":318,"isOffset":false,"isSlot":false,"src":"18142:10:0","valueSize":1},{"declaration":316,"isOffset":false,"isSlot":true,"src":"16531:14:0","suffix":"slot","valueSize":1},{"declaration":316,"isOffset":false,"isSlot":true,"src":"18032:14:0","suffix":"slot","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"17545:7:0","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"18691:7:0","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"18922:7:0","valueSize":1}],"id":327,"nodeType":"InlineAssembly","src":"16444:2514:0"},{"expression":{"id":328,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"18975:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":322,"id":329,"nodeType":"Return","src":"18968:14:0"}]},"id":331,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"16312:12:0","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"_preBytes","nameLocation":"16339:9:0","nodeType":"VariableDeclaration","scope":331,"src":"16325:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"16325:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"_postBytes","nameLocation":"16363:10:0","nodeType":"VariableDeclaration","scope":331,"src":"16350:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"16350:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16324:50:0"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":331,"src":"16398:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"16398:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16397:6:0"},"scope":332,"src":"16303:2686:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":333,"src":"369:18622:0","usedErrors":[]}],"src":"336:18656:0"},"id":0},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol","exportedSymbols":{"ExcessivelySafeCall":[429]},"id":430,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":334,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"46:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"ExcessivelySafeCall","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":429,"linearizedBaseContracts":[429],"name":"ExcessivelySafeCall","nameLocation":"80:19:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":337,"mutability":"constant","name":"LOW_28_MASK","nameLocation":"120:11:1","nodeType":"VariableDeclaration","scope":429,"src":"106:94:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"106:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134:66:1","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"1285:1100:1","statements":[{"assignments":[354],"declarations":[{"constant":false,"id":354,"mutability":"mutable","name":"_toCopy","nameLocation":"1336:7:1","nodeType":"VariableDeclaration","scope":371,"src":"1331:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint","nodeType":"ElementaryTypeName","src":"1331:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":355,"nodeType":"VariableDeclarationStatement","src":"1331:12:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"_success","nameLocation":"1358:8:1","nodeType":"VariableDeclaration","scope":371,"src":"1353:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":356,"name":"bool","nodeType":"ElementaryTypeName","src":"1353:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":358,"nodeType":"VariableDeclarationStatement","src":"1353:13:1"},{"assignments":[360],"declarations":[{"constant":false,"id":360,"mutability":"mutable","name":"_returnData","nameLocation":"1389:11:1","nodeType":"VariableDeclaration","scope":371,"src":"1376:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":359,"name":"bytes","nodeType":"ElementaryTypeName","src":"1376:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":365,"initialValue":{"arguments":[{"id":363,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1413:8:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1403:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":361,"name":"bytes","nodeType":"ElementaryTypeName","src":"1407:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1403:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1376:46:1"},{"AST":{"nodeType":"YulBlock","src":"1651:688:1","statements":[{"nodeType":"YulAssignment","src":"1665:279:1","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"1699:4:1"},{"name":"_target","nodeType":"YulIdentifier","src":"1728:7:1"},{"kind":"number","nodeType":"YulLiteral","src":"1766:1:1","type":"","value":"0"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1804:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1815:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:1"},"nodeType":"YulFunctionCall","src":"1800:20:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1853:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1847:5:1"},"nodeType":"YulFunctionCall","src":"1847:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"1890:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1919:1:1","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1677:4:1"},"nodeType":"YulFunctionCall","src":"1677:267:1"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"1665:8:1"}]},{"nodeType":"YulAssignment","src":"2000:27:1","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2011:14:1"},"nodeType":"YulFunctionCall","src":"2011:16:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2000:7:1"}]},{"body":{"nodeType":"YulBlock","src":"2065:51:1","statements":[{"nodeType":"YulAssignment","src":"2083:19:1","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2094:8:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2083:7:1"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2046:7:1"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2055:8:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2043:2:1"},"nodeType":"YulFunctionCall","src":"2043:21:1"},"nodeType":"YulIf","src":"2040:76:1"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2188:11:1"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2201:7:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2181:6:1"},"nodeType":"YulFunctionCall","src":"2181:28:1"},"nodeType":"YulExpressionStatement","src":"2181:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2298:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"2311:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:1"},"nodeType":"YulFunctionCall","src":"2294:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"2318:1:1","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2321:7:1"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2279:14:1"},"nodeType":"YulFunctionCall","src":"2279:50:1"},"nodeType":"YulExpressionStatement","src":"2279:50:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":346,"isOffset":false,"isSlot":false,"src":"1804:9:1","valueSize":1},{"declaration":346,"isOffset":false,"isSlot":false,"src":"1853:9:1","valueSize":1},{"declaration":342,"isOffset":false,"isSlot":false,"src":"1699:4:1","valueSize":1},{"declaration":344,"isOffset":false,"isSlot":false,"src":"2055:8:1","valueSize":1},{"declaration":344,"isOffset":false,"isSlot":false,"src":"2094:8:1","valueSize":1},{"declaration":360,"isOffset":false,"isSlot":false,"src":"2188:11:1","valueSize":1},{"declaration":360,"isOffset":false,"isSlot":false,"src":"2298:11:1","valueSize":1},{"declaration":357,"isOffset":false,"isSlot":false,"src":"1665:8:1","valueSize":1},{"declaration":340,"isOffset":false,"isSlot":false,"src":"1728:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2000:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2046:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2083:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2201:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2321:7:1","valueSize":1}],"id":366,"nodeType":"InlineAssembly","src":"1642:697:1"},{"expression":{"components":[{"id":367,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2356:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":368,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"2366:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2355:23:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":352,"id":370,"nodeType":"Return","src":"2348:30:1"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"207:899:1","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeCall","nameLocation":"1120:19:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"_target","nameLocation":"1157:7:1","nodeType":"VariableDeclaration","scope":372,"src":"1149:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"_gas","nameLocation":"1179:4:1","nodeType":"VariableDeclaration","scope":372,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"_maxCopy","nameLocation":"1200:8:1","nodeType":"VariableDeclaration","scope":372,"src":"1193:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":343,"name":"uint16","nodeType":"ElementaryTypeName","src":"1193:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"_calldata","nameLocation":"1231:9:1","nodeType":"VariableDeclaration","scope":372,"src":"1218:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":345,"name":"bytes","nodeType":"ElementaryTypeName","src":"1218:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1139:107:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"1265:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"1265:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"1271:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":350,"name":"bytes","nodeType":"ElementaryTypeName","src":"1271:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1264:20:1"},"scope":429,"src":"1111:1274:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"3480:1072:1","statements":[{"assignments":[389],"declarations":[{"constant":false,"id":389,"mutability":"mutable","name":"_toCopy","nameLocation":"3531:7:1","nodeType":"VariableDeclaration","scope":406,"src":"3526:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint","nodeType":"ElementaryTypeName","src":"3526:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":390,"nodeType":"VariableDeclarationStatement","src":"3526:12:1"},{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"_success","nameLocation":"3553:8:1","nodeType":"VariableDeclaration","scope":406,"src":"3548:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":391,"name":"bool","nodeType":"ElementaryTypeName","src":"3548:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":393,"nodeType":"VariableDeclarationStatement","src":"3548:13:1"},{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"_returnData","nameLocation":"3584:11:1","nodeType":"VariableDeclaration","scope":406,"src":"3571:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"3571:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":400,"initialValue":{"arguments":[{"id":398,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3608:8:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3598:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":396,"name":"bytes","nodeType":"ElementaryTypeName","src":"3602:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3598:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3571:46:1"},{"AST":{"nodeType":"YulBlock","src":"3846:660:1","statements":[{"nodeType":"YulAssignment","src":"3860:251:1","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"3900:4:1"},{"name":"_target","nodeType":"YulIdentifier","src":"3929:7:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"3971:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3982:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:1"},"nodeType":"YulFunctionCall","src":"3967:20:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4020:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4014:5:1"},"nodeType":"YulFunctionCall","src":"4014:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"4057:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4086:1:1","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"3872:10:1"},"nodeType":"YulFunctionCall","src":"3872:239:1"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"3860:8:1"}]},{"nodeType":"YulAssignment","src":"4167:27:1","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4178:14:1"},"nodeType":"YulFunctionCall","src":"4178:16:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4167:7:1"}]},{"body":{"nodeType":"YulBlock","src":"4232:51:1","statements":[{"nodeType":"YulAssignment","src":"4250:19:1","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4261:8:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4250:7:1"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4213:7:1"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4222:8:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4210:2:1"},"nodeType":"YulFunctionCall","src":"4210:21:1"},"nodeType":"YulIf","src":"4207:76:1"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4355:11:1"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4368:7:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4348:6:1"},"nodeType":"YulFunctionCall","src":"4348:28:1"},"nodeType":"YulExpressionStatement","src":"4348:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4465:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4478:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:1"},"nodeType":"YulFunctionCall","src":"4461:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"4485:1:1","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4488:7:1"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"4446:14:1"},"nodeType":"YulFunctionCall","src":"4446:50:1"},"nodeType":"YulExpressionStatement","src":"4446:50:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":381,"isOffset":false,"isSlot":false,"src":"3971:9:1","valueSize":1},{"declaration":381,"isOffset":false,"isSlot":false,"src":"4020:9:1","valueSize":1},{"declaration":377,"isOffset":false,"isSlot":false,"src":"3900:4:1","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"4222:8:1","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"4261:8:1","valueSize":1},{"declaration":395,"isOffset":false,"isSlot":false,"src":"4355:11:1","valueSize":1},{"declaration":395,"isOffset":false,"isSlot":false,"src":"4465:11:1","valueSize":1},{"declaration":392,"isOffset":false,"isSlot":false,"src":"3860:8:1","valueSize":1},{"declaration":375,"isOffset":false,"isSlot":false,"src":"3929:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4167:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4213:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4250:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4368:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4488:7:1","valueSize":1}],"id":401,"nodeType":"InlineAssembly","src":"3837:669:1"},{"expression":{"components":[{"id":402,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4523:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":403,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4533:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4522:23:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":387,"id":405,"nodeType":"Return","src":"4515:30:1"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2391:899:1","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeStaticCall","nameLocation":"3304:25:1","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"_target","nameLocation":"3347:7:1","nodeType":"VariableDeclaration","scope":407,"src":"3339:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"_gas","nameLocation":"3369:4:1","nodeType":"VariableDeclaration","scope":407,"src":"3364:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint","nodeType":"ElementaryTypeName","src":"3364:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"_maxCopy","nameLocation":"3390:8:1","nodeType":"VariableDeclaration","scope":407,"src":"3383:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":378,"name":"uint16","nodeType":"ElementaryTypeName","src":"3383:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_calldata","nameLocation":"3421:9:1","nodeType":"VariableDeclaration","scope":407,"src":"3408:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":380,"name":"bytes","nodeType":"ElementaryTypeName","src":"3408:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3329:107:1"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3460:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"3460:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3466:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"3466:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:20:1"},"scope":429,"src":"3295:1257:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":427,"nodeType":"Block","src":"5081:376:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":416,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5099:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5099:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5114:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5099:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"5091:25:1"},{"assignments":[423],"declarations":[{"constant":false,"id":423,"mutability":"mutable","name":"_mask","nameLocation":"5131:5:1","nodeType":"VariableDeclaration","scope":427,"src":"5126:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":425,"initialValue":{"id":424,"name":"LOW_28_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5139:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5126:24:1"},{"AST":{"nodeType":"YulBlock","src":"5169:282:1","statements":[{"nodeType":"YulVariableDeclaration","src":"5221:35:1","value":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5244:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"5250:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:1"},"nodeType":"YulFunctionCall","src":"5240:15:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5234:5:1"},"nodeType":"YulFunctionCall","src":"5234:22:1"},"variables":[{"name":"_word","nodeType":"YulTypedName","src":"5225:5:1","type":""}]},{"nodeType":"YulAssignment","src":"5327:26:1","value":{"arguments":[{"name":"_word","nodeType":"YulIdentifier","src":"5340:5:1"},{"name":"_mask","nodeType":"YulIdentifier","src":"5347:5:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5336:3:1"},"nodeType":"YulFunctionCall","src":"5336:17:1"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5327:5:1"}]},{"nodeType":"YulAssignment","src":"5366:32:1","value":{"arguments":[{"name":"_newSelector","nodeType":"YulIdentifier","src":"5378:12:1"},{"name":"_word","nodeType":"YulIdentifier","src":"5392:5:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5375:2:1"},"nodeType":"YulFunctionCall","src":"5375:23:1"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5366:5:1"}]},{"expression":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5422:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"5428:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5418:3:1"},"nodeType":"YulFunctionCall","src":"5418:15:1"},{"name":"_word","nodeType":"YulIdentifier","src":"5435:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5411:6:1"},"nodeType":"YulFunctionCall","src":"5411:30:1"},"nodeType":"YulExpressionStatement","src":"5411:30:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":412,"isOffset":false,"isSlot":false,"src":"5244:4:1","valueSize":1},{"declaration":412,"isOffset":false,"isSlot":false,"src":"5422:4:1","valueSize":1},{"declaration":423,"isOffset":false,"isSlot":false,"src":"5347:5:1","valueSize":1},{"declaration":410,"isOffset":false,"isSlot":false,"src":"5378:12:1","valueSize":1}],"id":426,"nodeType":"InlineAssembly","src":"5160:291:1"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"4558:442:1","text":" @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"},"id":428,"implemented":true,"kind":"function","modifiers":[],"name":"swapSelector","nameLocation":"5014:12:1","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"_newSelector","nameLocation":"5034:12:1","nodeType":"VariableDeclaration","scope":428,"src":"5027:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":409,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5027:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"_buf","nameLocation":"5061:4:1","nodeType":"VariableDeclaration","scope":428,"src":"5048:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":411,"name":"bytes","nodeType":"ElementaryTypeName","src":"5048:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5026:40:1"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"5081:0:1"},"scope":429,"src":"5005:452:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":430,"src":"72:5387:1","usedErrors":[]}],"src":"46:5414:1"},"id":1},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol","exportedSymbols":{"BytesLib":[332],"Context":[2647],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LzApp":[971],"Ownable":[1740]},"id":972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":431,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1741,"src":"58:52:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","file":"./interfaces/ILayerZeroReceiver.sol","id":433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1372,"src":"111:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./interfaces/ILayerZeroUserApplicationConfig.sol","id":434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1403,"src":"157:58:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","file":"./interfaces/ILayerZeroEndpoint.sol","id":435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1358,"src":"216:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol","file":"../libraries/BytesLib.sol","id":436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":333,"src":"262:35:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":437,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":1740,"src":"372:7:2"},"id":438,"nodeType":"InheritanceSpecifier","src":"372:7:2"},{"baseName":{"id":439,"name":"ILayerZeroReceiver","nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"381:18:2"},"id":440,"nodeType":"InheritanceSpecifier","src":"381:18:2"},{"baseName":{"id":441,"name":"ILayerZeroUserApplicationConfig","nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"401:31:2"},"id":442,"nodeType":"InheritanceSpecifier","src":"401:31:2"}],"canonicalName":"LzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":971,"linearizedBaseContracts":[971,1402,1371,1740,2647],"name":"LzApp","nameLocation":"363:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":445,"libraryName":{"id":443,"name":"BytesLib","nodeType":"IdentifierPath","referencedDeclaration":332,"src":"445:8:2"},"nodeType":"UsingForDirective","src":"439:25:2","typeName":{"id":444,"name":"bytes","nodeType":"ElementaryTypeName","src":"458:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":true,"functionSelector":"c4461834","id":448,"mutability":"constant","name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nameLocation":"589:26:2","nodeType":"VariableDeclaration","scope":971,"src":"568:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint","nodeType":"ElementaryTypeName","src":"568:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:5:2","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"b353aaa7","id":451,"mutability":"immutable","name":"lzEndpoint","nameLocation":"666:10:2","nodeType":"VariableDeclaration","scope":971,"src":"630:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"},"typeName":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"ILayerZeroEndpoint","nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"630:18:2"},"referencedDeclaration":1357,"src":"630:18:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"visibility":"public"},{"constant":false,"functionSelector":"7533d788","id":455,"mutability":"mutable","name":"trustedRemoteLookup","nameLocation":"714:19:2","nodeType":"VariableDeclaration","scope":971,"src":"682:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"typeName":{"id":454,"keyType":{"id":452,"name":"uint16","nodeType":"ElementaryTypeName","src":"690:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"682:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueType":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"700:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":false,"functionSelector":"8cfd8f5c","id":461,"mutability":"mutable","name":"minDstGasLookup","nameLocation":"789:15:2","nodeType":"VariableDeclaration","scope":971,"src":"739:65:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"typeName":{"id":460,"keyType":{"id":456,"name":"uint16","nodeType":"ElementaryTypeName","src":"747:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"739:42:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"valueType":{"id":459,"keyType":{"id":457,"name":"uint16","nodeType":"ElementaryTypeName","src":"765:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"757:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueType":{"id":458,"name":"uint","nodeType":"ElementaryTypeName","src":"775:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3f1f4fa4","id":465,"mutability":"mutable","name":"payloadSizeLimitLookup","nameLocation":"841:22:2","nodeType":"VariableDeclaration","scope":971,"src":"810:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"typeName":{"id":464,"keyType":{"id":462,"name":"uint16","nodeType":"ElementaryTypeName","src":"818:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"810:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueType":{"id":463,"name":"uint","nodeType":"ElementaryTypeName","src":"828:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"950c8a74","id":467,"mutability":"mutable","name":"precrime","nameLocation":"884:8:2","nodeType":"VariableDeclaration","scope":971,"src":"869:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b","id":471,"name":"SetPrecrime","nameLocation":"905:11:2","nodeType":"EventDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"indexed":false,"mutability":"mutable","name":"precrime","nameLocation":"925:8:2","nodeType":"VariableDeclaration","scope":471,"src":"917:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:18:2"},"src":"899:36:2"},{"anonymous":false,"eventSelector":"fa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab","id":477,"name":"SetTrustedRemote","nameLocation":"946:16:2","nodeType":"EventDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"970:14:2","nodeType":"VariableDeclaration","scope":477,"src":"963:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":472,"name":"uint16","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":475,"indexed":false,"mutability":"mutable","name":"_path","nameLocation":"992:5:2","nodeType":"VariableDeclaration","scope":477,"src":"986:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"962:36:2"},"src":"940:59:2"},{"anonymous":false,"eventSelector":"8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce","id":483,"name":"SetTrustedRemoteAddress","nameLocation":"1010:23:2","nodeType":"EventDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"1041:14:2","nodeType":"VariableDeclaration","scope":483,"src":"1034:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":478,"name":"uint16","nodeType":"ElementaryTypeName","src":"1034:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":481,"indexed":false,"mutability":"mutable","name":"_remoteAddress","nameLocation":"1063:14:2","nodeType":"VariableDeclaration","scope":483,"src":"1057:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":480,"name":"bytes","nodeType":"ElementaryTypeName","src":"1057:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1033:45:2"},"src":"1004:75:2"},{"anonymous":false,"eventSelector":"9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0","id":491,"name":"SetMinDstGas","nameLocation":"1090:12:2","nodeType":"EventDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"indexed":false,"mutability":"mutable","name":"_dstChainId","nameLocation":"1110:11:2","nodeType":"VariableDeclaration","scope":491,"src":"1103:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":484,"name":"uint16","nodeType":"ElementaryTypeName","src":"1103:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":487,"indexed":false,"mutability":"mutable","name":"_type","nameLocation":"1130:5:2","nodeType":"VariableDeclaration","scope":491,"src":"1123:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":486,"name":"uint16","nodeType":"ElementaryTypeName","src":"1123:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":489,"indexed":false,"mutability":"mutable","name":"_minDstGas","nameLocation":"1142:10:2","nodeType":"VariableDeclaration","scope":491,"src":"1137:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint","nodeType":"ElementaryTypeName","src":"1137:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1102:51:2"},"src":"1084:70:2"},{"body":{"id":502,"nodeType":"Block","src":"1191:59:2","statements":[{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":496,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1201:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":498,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"1233:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"ILayerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1214:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpoint_$1357_$","typeString":"type(contract ILayerZeroEndpoint)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1214:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"src":"1201:42:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":501,"nodeType":"ExpressionStatement","src":"1201:42:2"}]},"id":503,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"_endpoint","nameLocation":"1180:9:2","nodeType":"VariableDeclaration","scope":503,"src":"1172:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"1172:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1171:19:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"1191:0:2"},"scope":971,"src":"1160:90:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1370],"body":{"id":561,"nodeType":"Block","src":"1425:656:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":516,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"1508:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1508:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":520,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1532:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1524:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:2","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1524:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1508:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1545:32:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""},"value":"LzApp: invalid endpoint caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""}],"id":515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1500:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1500:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"1500:78:2"},{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"trustedRemote","nameLocation":"1602:13:2","nodeType":"VariableDeclaration","scope":561,"src":"1589:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"1589:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":531,"initialValue":{"baseExpression":{"id":528,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"1618:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":530,"indexExpression":{"id":529,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1638:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1618:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1589:61:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":533,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1813:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1813:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":535,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1835:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1835:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1813:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":538,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1859:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1859:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1859:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:70:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":544,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1897:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":543,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1887:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":547,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1923:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":546,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1913:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1913:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1887:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:124:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e7472616374","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1951:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""},"value":"LzApp: invalid source sending contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""}],"id":532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1792:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1792:209:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"1792:209:2"},{"expression":{"arguments":[{"id":555,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2031:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":556,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2044:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":557,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2057:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":558,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2065:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":554,"name":"_blockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2012:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2012:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"2012:62:2"}]},"functionSelector":"001d3567","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1265:9:2","nodeType":"FunctionDefinition","overrides":{"id":513,"nodeType":"OverrideSpecifier","overrides":[],"src":"1416:8:2"},"parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"_srcChainId","nameLocation":"1291:11:2","nodeType":"VariableDeclaration","scope":562,"src":"1284:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":504,"name":"uint16","nodeType":"ElementaryTypeName","src":"1284:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"_srcAddress","nameLocation":"1327:11:2","nodeType":"VariableDeclaration","scope":562,"src":"1312:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":506,"name":"bytes","nodeType":"ElementaryTypeName","src":"1312:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"_nonce","nameLocation":"1355:6:2","nodeType":"VariableDeclaration","scope":562,"src":"1348:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":508,"name":"uint64","nodeType":"ElementaryTypeName","src":"1348:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_payload","nameLocation":"1386:8:2","nodeType":"VariableDeclaration","scope":562,"src":"1371:23:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":510,"name":"bytes","nodeType":"ElementaryTypeName","src":"1371:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1274:126:2"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"1425:0:2"},"scope":971,"src":"1256:825:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":573,"implemented":false,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"2239:18:2","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"_srcChainId","nameLocation":"2274:11:2","nodeType":"VariableDeclaration","scope":573,"src":"2267:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":563,"name":"uint16","nodeType":"ElementaryTypeName","src":"2267:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"_srcAddress","nameLocation":"2308:11:2","nodeType":"VariableDeclaration","scope":573,"src":"2295:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"2295:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"_nonce","nameLocation":"2336:6:2","nodeType":"VariableDeclaration","scope":573,"src":"2329:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"2329:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"_payload","nameLocation":"2365:8:2","nodeType":"VariableDeclaration","scope":573,"src":"2352:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":569,"name":"bytes","nodeType":"ElementaryTypeName","src":"2352:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2257:122:2"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"2396:0:2"},"scope":971,"src":"2230:167:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":621,"nodeType":"Block","src":"2640:365:2","statements":[{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"trustedRemote","nameLocation":"2663:13:2","nodeType":"VariableDeclaration","scope":621,"src":"2650:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"2650:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":593,"initialValue":{"baseExpression":{"id":590,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"2679:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":592,"indexExpression":{"id":591,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2699:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2679:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2650:61:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":595,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2729:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2729:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2756:50:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""},"value":"LzApp: destination chain is not a trusted source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2721:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2721:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"2721:86:2"},{"expression":{"arguments":[{"id":603,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2835:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":604,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2848:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2848:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"_checkPayloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"2817:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint256) view"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2817:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"2817:47:2"},{"expression":{"arguments":[{"id":613,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2909:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":614,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2922:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":615,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2937:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":616,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"2947:14:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":617,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"2963:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"2983:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":608,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"2874:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"send","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"2874:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":611,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2897:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2874:34:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:124:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"2874:124:2"}]},"id":622,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"2412:7:2","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"_dstChainId","nameLocation":"2436:11:2","nodeType":"VariableDeclaration","scope":622,"src":"2429:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":574,"name":"uint16","nodeType":"ElementaryTypeName","src":"2429:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"_payload","nameLocation":"2470:8:2","nodeType":"VariableDeclaration","scope":622,"src":"2457:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":576,"name":"bytes","nodeType":"ElementaryTypeName","src":"2457:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"_refundAddress","nameLocation":"2504:14:2","nodeType":"VariableDeclaration","scope":622,"src":"2488:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"2488:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"2536:18:2","nodeType":"VariableDeclaration","scope":622,"src":"2528:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"2528:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"_adapterParams","nameLocation":"2577:14:2","nodeType":"VariableDeclaration","scope":622,"src":"2564:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":582,"name":"bytes","nodeType":"ElementaryTypeName","src":"2564:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"_nativeFee","nameLocation":"2606:10:2","nodeType":"VariableDeclaration","scope":622,"src":"2601:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint","nodeType":"ElementaryTypeName","src":"2601:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2419:203:2"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2640:0:2"},"scope":971,"src":"2403:602:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"3174:290:2","statements":[{"assignments":[634],"declarations":[{"constant":false,"id":634,"mutability":"mutable","name":"providedGasLimit","nameLocation":"3189:16:2","nodeType":"VariableDeclaration","scope":663,"src":"3184:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint","nodeType":"ElementaryTypeName","src":"3184:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":638,"initialValue":{"arguments":[{"id":636,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3221:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":635,"name":"_getGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"3208:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3208:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3184:52:2"},{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"minGasLimit","nameLocation":"3251:11:2","nodeType":"VariableDeclaration","scope":663,"src":"3246:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint","nodeType":"ElementaryTypeName","src":"3246:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":646,"initialValue":{"baseExpression":{"baseExpression":{"id":641,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"3265:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":643,"indexExpression":{"id":642,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3281:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":645,"indexExpression":{"id":644,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"3294:5:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3246:54:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3318:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3332:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3318:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3335:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""},"value":"LzApp: minGasLimit not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""}],"id":647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3310:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3310:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"3310:54:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"providedGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3382:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3402:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":657,"name":"_extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"3416:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3402:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3382:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3427:29:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""},"value":"LzApp: gas limit is too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3374:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3374:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"3374:83:2"}]},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_checkGasLimit","nameLocation":"3020:14:2","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"_dstChainId","nameLocation":"3051:11:2","nodeType":"VariableDeclaration","scope":664,"src":"3044:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":623,"name":"uint16","nodeType":"ElementaryTypeName","src":"3044:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"_type","nameLocation":"3079:5:2","nodeType":"VariableDeclaration","scope":664,"src":"3072:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":625,"name":"uint16","nodeType":"ElementaryTypeName","src":"3072:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"_adapterParams","nameLocation":"3107:14:2","nodeType":"VariableDeclaration","scope":664,"src":"3094:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"3094:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"_extraGas","nameLocation":"3136:9:2","nodeType":"VariableDeclaration","scope":664,"src":"3131:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint","nodeType":"ElementaryTypeName","src":"3131:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3034:117:2"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"3174:0:2"},"scope":971,"src":"3011:453:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":680,"nodeType":"Block","src":"3567:169:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":672,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3585:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3585:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3334","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3610:2:2","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"3585:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3614:30:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""},"value":"LzApp: invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""}],"id":671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3577:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3577:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"3577:68:2"},{"AST":{"nodeType":"YulBlock","src":"3664:66:2","statements":[{"nodeType":"YulAssignment","src":"3678:42:2","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"3700:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3716:2:2","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:2"},"nodeType":"YulFunctionCall","src":"3696:23:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3690:5:2"},"nodeType":"YulFunctionCall","src":"3690:30:2"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"3678:8:2"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":666,"isOffset":false,"isSlot":false,"src":"3700:14:2","valueSize":1},{"declaration":669,"isOffset":false,"isSlot":false,"src":"3678:8:2","valueSize":1}],"id":679,"nodeType":"InlineAssembly","src":"3655:75:2"}]},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasLimit","nameLocation":"3479:12:2","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"_adapterParams","nameLocation":"3505:14:2","nodeType":"VariableDeclaration","scope":681,"src":"3492:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"3492:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3491:29:2"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"gasLimit","nameLocation":"3557:8:2","nodeType":"VariableDeclaration","scope":681,"src":"3552:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint","nodeType":"ElementaryTypeName","src":"3552:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3551:15:2"},"scope":971,"src":"3470:266:2","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"3830:307:2","statements":[{"assignments":[689],"declarations":[{"constant":false,"id":689,"mutability":"mutable","name":"payloadSizeLimit","nameLocation":"3845:16:2","nodeType":"VariableDeclaration","scope":710,"src":"3840:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint","nodeType":"ElementaryTypeName","src":"3840:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":693,"initialValue":{"baseExpression":{"id":690,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3864:22:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":692,"indexExpression":{"id":691,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3887:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3864:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3840:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3913:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3913:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":702,"nodeType":"IfStatement","src":"3909:135:2","trueBody":{"id":701,"nodeType":"Block","src":"3936:108:2","statements":[{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":697,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3988:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":698,"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4007:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3988:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"nodeType":"ExpressionStatement","src":"3988:45:2"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"_payloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4061:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":705,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4061:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4095:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""},"value":"LzApp: payload size is too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""}],"id":703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4053:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4053:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"4053:77:2"}]},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_checkPayloadSize","nameLocation":"3751:17:2","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"_dstChainId","nameLocation":"3776:11:2","nodeType":"VariableDeclaration","scope":711,"src":"3769:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":682,"name":"uint16","nodeType":"ElementaryTypeName","src":"3769:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"_payloadSize","nameLocation":"3794:12:2","nodeType":"VariableDeclaration","scope":711,"src":"3789:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint","nodeType":"ElementaryTypeName","src":"3789:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3768:39:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3830:0:2"},"scope":971,"src":"3742:395:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"4394:92:2","statements":[{"expression":{"arguments":[{"id":726,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4432:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":727,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4442:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4460:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4452:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4467:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":724,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4411:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getConfig","nodeType":"MemberAccess","referencedDeclaration":1342,"src":"4411:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint16,uint16,address,uint256) view external returns (bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4411:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":723,"id":734,"nodeType":"Return","src":"4404:75:2"}]},"functionSelector":"f5ecbdbc","id":736,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"4248:9:2","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"_version","nameLocation":"4274:8:2","nodeType":"VariableDeclaration","scope":736,"src":"4267:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":712,"name":"uint16","nodeType":"ElementaryTypeName","src":"4267:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"_chainId","nameLocation":"4299:8:2","nodeType":"VariableDeclaration","scope":736,"src":"4292:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":714,"name":"uint16","nodeType":"ElementaryTypeName","src":"4292:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"4317:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"4317:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"_configType","nameLocation":"4339:11:2","nodeType":"VariableDeclaration","scope":736,"src":"4334:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint","nodeType":"ElementaryTypeName","src":"4334:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4257:99:2"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"4380:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":721,"name":"bytes","nodeType":"ElementaryTypeName","src":"4380:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4379:14:2"},"scope":971,"src":"4239:247:2","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1384],"body":{"id":759,"nodeType":"Block","src":"4706:79:2","statements":[{"expression":{"arguments":[{"id":753,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4737:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":754,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4747:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":755,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4757:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":756,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4770:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":750,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4716:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"4716:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint16,uint256,bytes memory) external"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4716:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"4716:62:2"}]},"functionSelector":"cbed8b9c","id":760,"implemented":true,"kind":"function","modifiers":[{"id":748,"kind":"modifierInvocation","modifierName":{"id":747,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4696:9:2"},"nodeType":"ModifierInvocation","src":"4696:9:2"}],"name":"setConfig","nameLocation":"4554:9:2","nodeType":"FunctionDefinition","overrides":{"id":746,"nodeType":"OverrideSpecifier","overrides":[],"src":"4687:8:2"},"parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"_version","nameLocation":"4580:8:2","nodeType":"VariableDeclaration","scope":760,"src":"4573:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":737,"name":"uint16","nodeType":"ElementaryTypeName","src":"4573:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"_chainId","nameLocation":"4605:8:2","nodeType":"VariableDeclaration","scope":760,"src":"4598:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":739,"name":"uint16","nodeType":"ElementaryTypeName","src":"4598:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"_configType","nameLocation":"4628:11:2","nodeType":"VariableDeclaration","scope":760,"src":"4623:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint","nodeType":"ElementaryTypeName","src":"4623:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"_config","nameLocation":"4664:7:2","nodeType":"VariableDeclaration","scope":760,"src":"4649:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"4649:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4563:114:2"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"4706:0:2"},"scope":971,"src":"4545:240:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1389],"body":{"id":774,"nodeType":"Block","src":"4860:52:2","statements":[{"expression":{"arguments":[{"id":771,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4896:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":768,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4870:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setSendVersion","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"4870:25:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4870:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"4870:35:2"}]},"functionSelector":"07e0db17","id":775,"implemented":true,"kind":"function","modifiers":[{"id":766,"kind":"modifierInvocation","modifierName":{"id":765,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4850:9:2"},"nodeType":"ModifierInvocation","src":"4850:9:2"}],"name":"setSendVersion","nameLocation":"4800:14:2","nodeType":"FunctionDefinition","overrides":{"id":764,"nodeType":"OverrideSpecifier","overrides":[],"src":"4841:8:2"},"parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"_version","nameLocation":"4822:8:2","nodeType":"VariableDeclaration","scope":775,"src":"4815:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":761,"name":"uint16","nodeType":"ElementaryTypeName","src":"4815:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4814:17:2"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"4860:0:2"},"scope":971,"src":"4791:121:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1394],"body":{"id":789,"nodeType":"Block","src":"4990:55:2","statements":[{"expression":{"arguments":[{"id":786,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5029:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":783,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5000:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setReceiveVersion","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"5000:28:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5000:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"5000:38:2"}]},"functionSelector":"10ddb137","id":790,"implemented":true,"kind":"function","modifiers":[{"id":781,"kind":"modifierInvocation","modifierName":{"id":780,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4980:9:2"},"nodeType":"ModifierInvocation","src":"4980:9:2"}],"name":"setReceiveVersion","nameLocation":"4927:17:2","nodeType":"FunctionDefinition","overrides":{"id":779,"nodeType":"OverrideSpecifier","overrides":[],"src":"4971:8:2"},"parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"_version","nameLocation":"4952:8:2","nodeType":"VariableDeclaration","scope":790,"src":"4945:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":776,"name":"uint16","nodeType":"ElementaryTypeName","src":"4945:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4944:17:2"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"4990:0:2"},"scope":971,"src":"4918:127:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1401],"body":{"id":807,"nodeType":"Block","src":"5155:72:2","statements":[{"expression":{"arguments":[{"id":803,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"5195:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":804,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"5208:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":800,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5165:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forceResumeReceive","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"5165:29:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory) external"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5165:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"5165:55:2"}]},"functionSelector":"42d65a8d","id":808,"implemented":true,"kind":"function","modifiers":[{"id":798,"kind":"modifierInvocation","modifierName":{"id":797,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5145:9:2"},"nodeType":"ModifierInvocation","src":"5145:9:2"}],"name":"forceResumeReceive","nameLocation":"5060:18:2","nodeType":"FunctionDefinition","overrides":{"id":796,"nodeType":"OverrideSpecifier","overrides":[],"src":"5136:8:2"},"parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"_srcChainId","nameLocation":"5086:11:2","nodeType":"VariableDeclaration","scope":808,"src":"5079:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":791,"name":"uint16","nodeType":"ElementaryTypeName","src":"5079:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"_srcAddress","nameLocation":"5114:11:2","nodeType":"VariableDeclaration","scope":808,"src":"5099:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"5099:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5078:48:2"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"5155:0:2"},"scope":971,"src":"5051:176:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":828,"nodeType":"Block","src":"5460:114:2","statements":[{"expression":{"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":817,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5470:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":819,"indexExpression":{"id":818,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5490:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5470:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":820,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5508:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"5470:43:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":822,"nodeType":"ExpressionStatement","src":"5470:43:2"},{"eventCall":{"arguments":[{"id":824,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5545:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":825,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5561:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":823,"name":"SetTrustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"5528:16:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5528:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"EmitStatement","src":"5523:44:2"}]},"functionSelector":"eb8d72b7","id":829,"implemented":true,"kind":"function","modifiers":[{"id":815,"kind":"modifierInvocation","modifierName":{"id":814,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5450:9:2"},"nodeType":"ModifierInvocation","src":"5450:9:2"}],"name":"setTrustedRemote","nameLocation":"5379:16:2","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5403:14:2","nodeType":"VariableDeclaration","scope":829,"src":"5396:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":809,"name":"uint16","nodeType":"ElementaryTypeName","src":"5396:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"_path","nameLocation":"5434:5:2","nodeType":"VariableDeclaration","scope":829,"src":"5419:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":811,"name":"bytes","nodeType":"ElementaryTypeName","src":"5419:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5395:45:2"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"5460:0:2"},"scope":971,"src":"5370:204:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":856,"nodeType":"Block","src":"5686:172:2","statements":[{"expression":{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":838,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5696:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":840,"indexExpression":{"id":839,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5716:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5696:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":843,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5751:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"id":846,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5775:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}],"id":845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5767:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"5767:7:2","typeDescriptions":{}}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5767:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":841,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5734:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"5734:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5734:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5696:85:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":850,"nodeType":"ExpressionStatement","src":"5696:85:2"},{"eventCall":{"arguments":[{"id":852,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5820:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":853,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5836:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":851,"name":"SetTrustedRemoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5796:23:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5796:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"EmitStatement","src":"5791:60:2"}]},"functionSelector":"a6c3d165","id":857,"implemented":true,"kind":"function","modifiers":[{"id":836,"kind":"modifierInvocation","modifierName":{"id":835,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5676:9:2"},"nodeType":"ModifierInvocation","src":"5676:9:2"}],"name":"setTrustedRemoteAddress","nameLocation":"5589:23:2","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5620:14:2","nodeType":"VariableDeclaration","scope":857,"src":"5613:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":830,"name":"uint16","nodeType":"ElementaryTypeName","src":"5613:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"_remoteAddress","nameLocation":"5651:14:2","nodeType":"VariableDeclaration","scope":857,"src":"5636:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":832,"name":"bytes","nodeType":"ElementaryTypeName","src":"5636:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5612:54:2"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"5686:0:2"},"scope":971,"src":"5580:278:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":887,"nodeType":"Block","src":"5957:233:2","statements":[{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"path","nameLocation":"5980:4:2","nodeType":"VariableDeclaration","scope":887,"src":"5967:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"5967:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":869,"initialValue":{"baseExpression":{"id":866,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5987:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":868,"indexExpression":{"id":867,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"6007:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5987:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5967:55:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":871,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6040:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6040:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6055:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6040:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6058:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""},"value":"LzApp: no trusted path record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""}],"id":870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6032:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6032:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"6032:58:2"},{"expression":{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6118:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":881,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6121:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6121:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6135:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6121:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":878,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6107:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":63,"src":"6107:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6107:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":863,"id":886,"nodeType":"Return","src":"6100:38:2"}]},"functionSelector":"9f38369a","id":888,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedRemoteAddress","nameLocation":"5873:23:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5904:14:2","nodeType":"VariableDeclaration","scope":888,"src":"5897:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":858,"name":"uint16","nodeType":"ElementaryTypeName","src":"5897:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5896:23:2"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"5943:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":861,"name":"bytes","nodeType":"ElementaryTypeName","src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5942:14:2"},"scope":971,"src":"5864:326:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":903,"nodeType":"Block","src":"6255:74:2","statements":[{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":895,"name":"precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"6265:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":896,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6276:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6265:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":898,"nodeType":"ExpressionStatement","src":"6265:20:2"},{"eventCall":{"arguments":[{"id":900,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6312:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":899,"name":"SetPrecrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6300:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6300:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"EmitStatement","src":"6295:27:2"}]},"functionSelector":"baf3292d","id":904,"implemented":true,"kind":"function","modifiers":[{"id":893,"kind":"modifierInvocation","modifierName":{"id":892,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6245:9:2"},"nodeType":"ModifierInvocation","src":"6245:9:2"}],"name":"setPrecrime","nameLocation":"6205:11:2","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"_precrime","nameLocation":"6225:9:2","nodeType":"VariableDeclaration","scope":904,"src":"6217:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6216:19:2"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"6255:0:2"},"scope":971,"src":"6196:133:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":929,"nodeType":"Block","src":"6460:130:2","statements":[{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":915,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6470:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":918,"indexExpression":{"id":916,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6486:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6470:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":919,"indexExpression":{"id":917,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6499:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6470:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":920,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6470:51:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":922,"nodeType":"ExpressionStatement","src":"6470:51:2"},{"eventCall":{"arguments":[{"id":924,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6549:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":925,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6562:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":926,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6575:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"SetMinDstGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"6536:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6536:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"EmitStatement","src":"6531:52:2"}]},"functionSelector":"df2a5b3b","id":930,"implemented":true,"kind":"function","modifiers":[{"id":913,"kind":"modifierInvocation","modifierName":{"id":912,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6450:9:2"},"nodeType":"ModifierInvocation","src":"6450:9:2"}],"name":"setMinDstGas","nameLocation":"6344:12:2","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"_dstChainId","nameLocation":"6373:11:2","nodeType":"VariableDeclaration","scope":930,"src":"6366:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":905,"name":"uint16","nodeType":"ElementaryTypeName","src":"6366:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"_packetType","nameLocation":"6401:11:2","nodeType":"VariableDeclaration","scope":930,"src":"6394:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":907,"name":"uint16","nodeType":"ElementaryTypeName","src":"6394:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"_minGas","nameLocation":"6427:7:2","nodeType":"VariableDeclaration","scope":930,"src":"6422:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint","nodeType":"ElementaryTypeName","src":"6422:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6356:84:2"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"6460:0:2"},"scope":971,"src":"6335:255:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":945,"nodeType":"Block","src":"6729:60:2","statements":[{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":939,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6739:22:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":941,"indexExpression":{"id":940,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6762:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6739:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":942,"name":"_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6777:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6739:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":944,"nodeType":"ExpressionStatement","src":"6739:43:2"}]},"functionSelector":"0df37483","id":946,"implemented":true,"kind":"function","modifiers":[{"id":937,"kind":"modifierInvocation","modifierName":{"id":936,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6719:9:2"},"nodeType":"ModifierInvocation","src":"6719:9:2"}],"name":"setPayloadSizeLimit","nameLocation":"6658:19:2","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"_dstChainId","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":946,"src":"6678:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":931,"name":"uint16","nodeType":"ElementaryTypeName","src":"6678:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"_size","nameLocation":"6703:5:2","nodeType":"VariableDeclaration","scope":946,"src":"6698:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint","nodeType":"ElementaryTypeName","src":"6698:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6677:32:2"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"6729:0:2"},"scope":971,"src":"6649:140:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":969,"nodeType":"Block","src":"6986:145:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"trustedSource","nameLocation":"7009:13:2","nodeType":"VariableDeclaration","scope":969,"src":"6996:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":955,"name":"bytes","nodeType":"ElementaryTypeName","src":"6996:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":960,"initialValue":{"baseExpression":{"id":957,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"7025:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":959,"indexExpression":{"id":958,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"7045:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7025:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6996:61:2"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":962,"name":"trustedSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7084:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7074:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7074:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":965,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"7112:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7102:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7074:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":954,"id":968,"nodeType":"Return","src":"7067:57:2"}]},"functionSelector":"3d8b38f6","id":970,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedRemote","nameLocation":"6893:15:2","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"_srcChainId","nameLocation":"6916:11:2","nodeType":"VariableDeclaration","scope":970,"src":"6909:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":947,"name":"uint16","nodeType":"ElementaryTypeName","src":"6909:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"_srcAddress","nameLocation":"6944:11:2","nodeType":"VariableDeclaration","scope":970,"src":"6929:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":949,"name":"bytes","nodeType":"ElementaryTypeName","src":"6929:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6908:48:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":970,"src":"6980:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":952,"name":"bool","nodeType":"ElementaryTypeName","src":"6980:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6979:6:2"},"scope":971,"src":"6884:247:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":972,"src":"345:6788:2","usedErrors":[]}],"src":"33:7101:2"},"id":2},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","exportedSymbols":{"BytesLib":[332],"Context":[2647],"ExcessivelySafeCall":[429],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LzApp":[971],"NonblockingLzApp":[1212],"Ownable":[1740]},"id":1213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":973,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol","file":"./LzApp.sol","id":974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1213,"sourceUnit":972,"src":"58:21:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol","file":"../libraries/ExcessivelySafeCall.sol","id":975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1213,"sourceUnit":430,"src":"80:46:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":976,"name":"LzApp","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"510:5:3"},"id":977,"nodeType":"InheritanceSpecifier","src":"510:5:3"}],"canonicalName":"NonblockingLzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":1212,"linearizedBaseContracts":[1212,971,1402,1371,1740,2647],"name":"NonblockingLzApp","nameLocation":"490:16:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":980,"libraryName":{"id":978,"name":"ExcessivelySafeCall","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"528:19:3"},"nodeType":"UsingForDirective","src":"522:38:3","typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":988,"nodeType":"Block","src":"614:2:3","statements":[]},"id":989,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":985,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"603:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":986,"kind":"baseConstructorSpecifier","modifierName":{"id":984,"name":"LzApp","nodeType":"IdentifierPath","referencedDeclaration":971,"src":"597:5:3"},"nodeType":"ModifierInvocation","src":"597:16:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"_endpoint","nameLocation":"586:9:3","nodeType":"VariableDeclaration","scope":989,"src":"578:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"577:19:3"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[],"src":"614:0:3"},"scope":1212,"src":"566:50:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"5b8c41e6","id":997,"mutability":"mutable","name":"failedMessages","nameLocation":"693:14:3","nodeType":"VariableDeclaration","scope":1212,"src":"622:85:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"typeName":{"id":996,"keyType":{"id":990,"name":"uint16","nodeType":"ElementaryTypeName","src":"630:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"622:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"valueType":{"id":995,"keyType":{"id":991,"name":"bytes","nodeType":"ElementaryTypeName","src":"648:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"640:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes => mapping(uint64 => bytes32))"},"valueType":{"id":994,"keyType":{"id":992,"name":"uint64","nodeType":"ElementaryTypeName","src":"665:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"657:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"},"valueType":{"id":993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"675:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c","id":1009,"name":"MessageFailed","nameLocation":"720:13:3","nodeType":"EventDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"741:11:3","nodeType":"VariableDeclaration","scope":1009,"src":"734:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":998,"name":"uint16","nodeType":"ElementaryTypeName","src":"734:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1001,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"760:11:3","nodeType":"VariableDeclaration","scope":1009,"src":"754:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1000,"name":"bytes","nodeType":"ElementaryTypeName","src":"754:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1003,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"780:6:3","nodeType":"VariableDeclaration","scope":1009,"src":"773:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1002,"name":"uint64","nodeType":"ElementaryTypeName","src":"773:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1005,"indexed":false,"mutability":"mutable","name":"_payload","nameLocation":"794:8:3","nodeType":"VariableDeclaration","scope":1009,"src":"788:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"788:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1007,"indexed":false,"mutability":"mutable","name":"_reason","nameLocation":"810:7:3","nodeType":"VariableDeclaration","scope":1009,"src":"804:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1006,"name":"bytes","nodeType":"ElementaryTypeName","src":"804:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"733:85:3"},"src":"714:105:3"},{"anonymous":false,"eventSelector":"c264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5","id":1019,"name":"RetryMessageSuccess","nameLocation":"830:19:3","nodeType":"EventDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"857:11:3","nodeType":"VariableDeclaration","scope":1019,"src":"850:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1010,"name":"uint16","nodeType":"ElementaryTypeName","src":"850:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"876:11:3","nodeType":"VariableDeclaration","scope":1019,"src":"870:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1012,"name":"bytes","nodeType":"ElementaryTypeName","src":"870:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1015,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"896:6:3","nodeType":"VariableDeclaration","scope":1019,"src":"889:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1014,"name":"uint64","nodeType":"ElementaryTypeName","src":"889:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":false,"mutability":"mutable","name":"_payloadHash","nameLocation":"912:12:3","nodeType":"VariableDeclaration","scope":1019,"src":"904:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"849:76:3"},"src":"824:102:3"},{"baseFunctions":[573],"body":{"id":1067,"nodeType":"Block","src":"1161:416:3","statements":[{"assignments":[1032,1034],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"success","nameLocation":"1177:7:3","nodeType":"VariableDeclaration","scope":1067,"src":"1172:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"1172:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"reason","nameLocation":"1199:6:3","nodeType":"VariableDeclaration","scope":1067,"src":"1186:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"1186:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1054,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1040,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1256:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1256:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313530","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1279:3:3","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},{"arguments":[{"expression":{"expression":{"id":1045,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1319:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonblockingLzReceive","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"1319:25:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1319:34:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1048,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1355:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1049,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1368:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1050,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1381:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1051,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1389:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1043,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1296:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1296:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1296:102:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1037,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1217:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1209:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"1209:7:3","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1209:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"excessivelySafeCall","nodeType":"MemberAccess","referencedDeclaration":372,"src":"1209:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,uint256,uint16,bytes memory) returns (bool,bytes memory)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1209:199:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1171:237:3"},{"condition":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1465:8:3","subExpression":{"id":1055,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1466:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"1461:110:3","trueBody":{"id":1065,"nodeType":"Block","src":"1475:96:3","statements":[{"expression":{"arguments":[{"id":1058,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1509:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1059,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1522:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1060,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1535:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1061,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1543:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1062,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1553:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1057,"name":"_storeFailedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1489:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1489:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"1489:71:3"}]}}]},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"994:18:3","nodeType":"FunctionDefinition","overrides":{"id":1029,"nodeType":"OverrideSpecifier","overrides":[],"src":"1152:8:3"},"parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"_srcChainId","nameLocation":"1029:11:3","nodeType":"VariableDeclaration","scope":1068,"src":"1022:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1020,"name":"uint16","nodeType":"ElementaryTypeName","src":"1022:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"_srcAddress","nameLocation":"1063:11:3","nodeType":"VariableDeclaration","scope":1068,"src":"1050:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"1050:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"_nonce","nameLocation":"1091:6:3","nodeType":"VariableDeclaration","scope":1068,"src":"1084:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1024,"name":"uint64","nodeType":"ElementaryTypeName","src":"1084:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"_payload","nameLocation":"1120:8:3","nodeType":"VariableDeclaration","scope":1068,"src":"1107:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"1107:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1012:122:3"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"1161:0:3"},"scope":1212,"src":"985:592:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"1781:168:3","statements":[{"expression":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1081,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1791:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1085,"indexExpression":{"id":1082,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1806:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1086,"indexExpression":{"id":1083,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1819:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1087,"indexExpression":{"id":1084,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1832:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1791:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1089,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1852:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1088,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1842:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1842:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1791:70:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1092,"nodeType":"ExpressionStatement","src":"1791:70:3"},{"eventCall":{"arguments":[{"id":1094,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1890:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1095,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1903:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1096,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1916:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1097,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1924:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1098,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1934:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1093,"name":"MessageFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1876:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1876:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"EmitStatement","src":"1871:71:3"}]},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_storeFailedMessage","nameLocation":"1592:19:3","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"_srcChainId","nameLocation":"1628:11:3","nodeType":"VariableDeclaration","scope":1102,"src":"1621:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1069,"name":"uint16","nodeType":"ElementaryTypeName","src":"1621:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"_srcAddress","nameLocation":"1662:11:3","nodeType":"VariableDeclaration","scope":1102,"src":"1649:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"1649:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"_nonce","nameLocation":"1690:6:3","nodeType":"VariableDeclaration","scope":1102,"src":"1683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1073,"name":"uint64","nodeType":"ElementaryTypeName","src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"_payload","nameLocation":"1719:8:3","nodeType":"VariableDeclaration","scope":1102,"src":"1706:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1075,"name":"bytes","nodeType":"ElementaryTypeName","src":"1706:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"_reason","nameLocation":"1750:7:3","nodeType":"VariableDeclaration","scope":1102,"src":"1737:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"1737:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1611:152:3"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"1781:0:3"},"scope":1212,"src":"1583:366:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"2126:209:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1114,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2181:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1118,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2205:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"2197:7:3","typeDescriptions":{}}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2197:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2181:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a417070","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2212:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""},"value":"NonblockingLzApp: caller must be LzApp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""}],"id":1113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2173:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:80:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"2173:80:3"},{"expression":{"arguments":[{"id":1125,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2285:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1126,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2298:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1127,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2311:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1128,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2319:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1124,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"2263:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2263:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"2263:65:3"}]},"functionSelector":"66ad5c8a","id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"nonblockingLzReceive","nameLocation":"1964:20:3","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"_srcChainId","nameLocation":"2001:11:3","nodeType":"VariableDeclaration","scope":1132,"src":"1994:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1103,"name":"uint16","nodeType":"ElementaryTypeName","src":"1994:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"_srcAddress","nameLocation":"2037:11:3","nodeType":"VariableDeclaration","scope":1132,"src":"2022:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"2022:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"_nonce","nameLocation":"2065:6:3","nodeType":"VariableDeclaration","scope":1132,"src":"2058:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1107,"name":"uint64","nodeType":"ElementaryTypeName","src":"2058:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"_payload","nameLocation":"2096:8:3","nodeType":"VariableDeclaration","scope":1132,"src":"2081:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"2081:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1984:126:3"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"2126:0:3"},"scope":1212,"src":"1955:380:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"2387:21:3","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"_srcChainId","nameLocation":"2425:11:3","nodeType":"VariableDeclaration","scope":1143,"src":"2418:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1133,"name":"uint16","nodeType":"ElementaryTypeName","src":"2418:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"_srcAddress","nameLocation":"2459:11:3","nodeType":"VariableDeclaration","scope":1143,"src":"2446:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1135,"name":"bytes","nodeType":"ElementaryTypeName","src":"2446:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"_nonce","nameLocation":"2487:6:3","nodeType":"VariableDeclaration","scope":1143,"src":"2480:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1137,"name":"uint64","nodeType":"ElementaryTypeName","src":"2480:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"_payload","nameLocation":"2516:8:3","nodeType":"VariableDeclaration","scope":1143,"src":"2503:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"2503:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2408:122:3"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"2547:0:3"},"scope":1212,"src":"2378:170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"2725:624:3","statements":[{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"payloadHash","nameLocation":"2787:11:3","nodeType":"VariableDeclaration","scope":1210,"src":"2779:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1163,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1156,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2801:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1158,"indexExpression":{"id":1157,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"2816:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1160,"indexExpression":{"id":1159,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2829:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1162,"indexExpression":{"id":1161,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2842:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2779:70:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2867:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2882:7:3","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2882:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2867:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373616765","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2894:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""},"value":"NonblockingLzApp: no stored message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""}],"id":1164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2859:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2859:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1173,"nodeType":"ExpressionStatement","src":"2859:73:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1176,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"2960:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1175,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2950:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1178,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2973:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2950:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6164","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2986:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""},"value":"NonblockingLzApp: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""}],"id":1174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:80:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"2942:80:3"},{"expression":{"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1183,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3068:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1187,"indexExpression":{"id":1184,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3083:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3068:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1188,"indexExpression":{"id":1185,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3096:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3068:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1189,"indexExpression":{"id":1186,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3109:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3068:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3119:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3119:7:3","typeDescriptions":{}}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3119:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3068:61:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1195,"nodeType":"ExpressionStatement","src":"3068:61:3"},{"expression":{"arguments":[{"id":1197,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3218:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1198,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3231:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1199,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3244:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1200,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3252:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1196,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3196:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3196:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"3196:65:3"},{"eventCall":{"arguments":[{"id":1204,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3296:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1205,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3309:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1206,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3322:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1207,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3330:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1203,"name":"RetryMessageSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3276:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes32_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes32)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3276:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"3271:71:3"}]},"functionSelector":"d1deba1f","id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"retryMessage","nameLocation":"2563:12:3","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"_srcChainId","nameLocation":"2592:11:3","nodeType":"VariableDeclaration","scope":1211,"src":"2585:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1144,"name":"uint16","nodeType":"ElementaryTypeName","src":"2585:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"_srcAddress","nameLocation":"2628:11:3","nodeType":"VariableDeclaration","scope":1211,"src":"2613:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2613:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"_nonce","nameLocation":"2656:6:3","nodeType":"VariableDeclaration","scope":1211,"src":"2649:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1148,"name":"uint64","nodeType":"ElementaryTypeName","src":"2649:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"_payload","nameLocation":"2687:8:3","nodeType":"VariableDeclaration","scope":1211,"src":"2672:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1150,"name":"bytes","nodeType":"ElementaryTypeName","src":"2672:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2575:126:3"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"2725:0:3"},"scope":1212,"src":"2554:795:3","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":1213,"src":"472:2879:3","usedErrors":[]}],"src":"33:3319:3"},"id":3},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","exportedSymbols":{"ILayerZeroEndpoint":[1357],"ILayerZeroUserApplicationConfig":[1402]},"id":1358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1214,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:4"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./ILayerZeroUserApplicationConfig.sol","id":1215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1358,"sourceUnit":1403,"src":"59:47:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1216,"name":"ILayerZeroUserApplicationConfig","nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"140:31:4"},"id":1217,"nodeType":"InheritanceSpecifier","src":"140:31:4"}],"canonicalName":"ILayerZeroEndpoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1357,"linearizedBaseContracts":[1357,1402],"name":"ILayerZeroEndpoint","nameLocation":"118:18:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c5803100","id":1232,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"923:4:4","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"_dstChainId","nameLocation":"944:11:4","nodeType":"VariableDeclaration","scope":1232,"src":"937:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1218,"name":"uint16","nodeType":"ElementaryTypeName","src":"937:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"_destination","nameLocation":"980:12:4","nodeType":"VariableDeclaration","scope":1232,"src":"965:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"965:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"_payload","nameLocation":"1017:8:4","nodeType":"VariableDeclaration","scope":1232,"src":"1002:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1222,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"_refundAddress","nameLocation":"1051:14:4","nodeType":"VariableDeclaration","scope":1232,"src":"1035:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1035:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"1083:18:4","nodeType":"VariableDeclaration","scope":1232,"src":"1075:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"_adapterParams","nameLocation":"1126:14:4","nodeType":"VariableDeclaration","scope":1232,"src":"1111:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"1111:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"927:219:4"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"1163:0:4"},"scope":1357,"src":"914:250:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c2fa4813","id":1247,"implemented":false,"kind":"function","modifiers":[],"name":"receivePayload","nameLocation":"1656:14:4","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"_srcChainId","nameLocation":"1687:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1680:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1233,"name":"uint16","nodeType":"ElementaryTypeName","src":"1680:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"_srcAddress","nameLocation":"1723:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1708:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1235,"name":"bytes","nodeType":"ElementaryTypeName","src":"1708:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"_dstAddress","nameLocation":"1752:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1744:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"_nonce","nameLocation":"1780:6:4","nodeType":"VariableDeclaration","scope":1247,"src":"1773:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1239,"name":"uint64","nodeType":"ElementaryTypeName","src":"1773:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"_gasLimit","nameLocation":"1801:9:4","nodeType":"VariableDeclaration","scope":1247,"src":"1796:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint","nodeType":"ElementaryTypeName","src":"1796:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"_payload","nameLocation":"1835:8:4","nodeType":"VariableDeclaration","scope":1247,"src":"1820:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"1820:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1670:179:4"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"1858:0:4"},"scope":1357,"src":"1647:212:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fdc07c70","id":1256,"implemented":false,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"2095:15:4","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"_srcChainId","nameLocation":"2118:11:4","nodeType":"VariableDeclaration","scope":1256,"src":"2111:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1248,"name":"uint16","nodeType":"ElementaryTypeName","src":"2111:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"_srcAddress","nameLocation":"2146:11:4","nodeType":"VariableDeclaration","scope":1256,"src":"2131:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2131:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2110:48:4"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"2182:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1253,"name":"uint64","nodeType":"ElementaryTypeName","src":"2182:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2181:8:4"},"scope":1357,"src":"2086:104:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a145748","id":1265,"implemented":false,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"2365:16:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"_dstChainId","nameLocation":"2389:11:4","nodeType":"VariableDeclaration","scope":1265,"src":"2382:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1257,"name":"uint16","nodeType":"ElementaryTypeName","src":"2382:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"_srcAddress","nameLocation":"2410:11:4","nodeType":"VariableDeclaration","scope":1265,"src":"2402:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2381:41:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"2446:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1262,"name":"uint64","nodeType":"ElementaryTypeName","src":"2446:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2445:8:4"},"scope":1357,"src":"2356:98:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40a7bb10","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"2977:12:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"_dstChainId","nameLocation":"3006:11:4","nodeType":"VariableDeclaration","scope":1282,"src":"2999:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1266,"name":"uint16","nodeType":"ElementaryTypeName","src":"2999:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"_userApplication","nameLocation":"3035:16:4","nodeType":"VariableDeclaration","scope":1282,"src":"3027:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"3027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"_payload","nameLocation":"3076:8:4","nodeType":"VariableDeclaration","scope":1282,"src":"3061:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3061:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"_payInZRO","nameLocation":"3099:9:4","nodeType":"VariableDeclaration","scope":1282,"src":"3094:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"3094:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"_adapterParam","nameLocation":"3133:13:4","nodeType":"VariableDeclaration","scope":1282,"src":"3118:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1274,"name":"bytes","nodeType":"ElementaryTypeName","src":"3118:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2989:163:4"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"nativeFee","nameLocation":"3181:9:4","nodeType":"VariableDeclaration","scope":1282,"src":"3176:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint","nodeType":"ElementaryTypeName","src":"3176:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"zroFee","nameLocation":"3197:6:4","nodeType":"VariableDeclaration","scope":1282,"src":"3192:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint","nodeType":"ElementaryTypeName","src":"3192:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3175:29:4"},"scope":1357,"src":"2968:237:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3408e470","id":1287,"implemented":false,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"3283:10:4","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"3293:2:4"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"3319:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1284,"name":"uint16","nodeType":"ElementaryTypeName","src":"3319:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3318:8:4"},"scope":1357,"src":"3274:53:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaff5f16","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"3593:12:4","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"_srcChainId","nameLocation":"3622:11:4","nodeType":"VariableDeclaration","scope":1296,"src":"3615:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1288,"name":"uint16","nodeType":"ElementaryTypeName","src":"3615:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"_srcAddress","nameLocation":"3658:11:4","nodeType":"VariableDeclaration","scope":1296,"src":"3643:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1290,"name":"bytes","nodeType":"ElementaryTypeName","src":"3643:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"_payload","nameLocation":"3694:8:4","nodeType":"VariableDeclaration","scope":1296,"src":"3679:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1292,"name":"bytes","nodeType":"ElementaryTypeName","src":"3679:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3605:103:4"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[],"src":"3717:0:4"},"scope":1357,"src":"3584:134:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0eaf6ea6","id":1305,"implemented":false,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"3930:16:4","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"_srcChainId","nameLocation":"3954:11:4","nodeType":"VariableDeclaration","scope":1305,"src":"3947:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1297,"name":"uint16","nodeType":"ElementaryTypeName","src":"3947:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"_srcAddress","nameLocation":"3982:11:4","nodeType":"VariableDeclaration","scope":1305,"src":"3967:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"3967:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3946:48:4"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"4018:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1302,"name":"bool","nodeType":"ElementaryTypeName","src":"4018:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4017:6:4"},"scope":1357,"src":"3921:103:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c729da1","id":1312,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"4182:21:4","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"_userApplication","nameLocation":"4212:16:4","nodeType":"VariableDeclaration","scope":1312,"src":"4204:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:26:4"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1312,"src":"4253:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4252:9:4"},"scope":1357,"src":"4173:89:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ba2fd6","id":1319,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"4422:24:4","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"_userApplication","nameLocation":"4455:16:4","nodeType":"VariableDeclaration","scope":1319,"src":"4447:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"4447:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4446:26:4"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1319,"src":"4496:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"4496:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4495:9:4"},"scope":1357,"src":"4413:92:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e97a448a","id":1324,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"4642:16:4","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[],"src":"4658:2:4"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"4684:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1321,"name":"bool","nodeType":"ElementaryTypeName","src":"4684:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4683:6:4"},"scope":1357,"src":"4633:57:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca066b35","id":1329,"implemented":false,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"4830:18:4","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"4848:2:4"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1329,"src":"4874:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1326,"name":"bool","nodeType":"ElementaryTypeName","src":"4874:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4873:6:4"},"scope":1357,"src":"4821:59:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5ecbdbc","id":1342,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"5287:9:4","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"_version","nameLocation":"5313:8:4","nodeType":"VariableDeclaration","scope":1342,"src":"5306:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1330,"name":"uint16","nodeType":"ElementaryTypeName","src":"5306:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"_chainId","nameLocation":"5338:8:4","nodeType":"VariableDeclaration","scope":1342,"src":"5331:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1332,"name":"uint16","nodeType":"ElementaryTypeName","src":"5331:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"_userApplication","nameLocation":"5364:16:4","nodeType":"VariableDeclaration","scope":1342,"src":"5356:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"5356:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"_configType","nameLocation":"5395:11:4","nodeType":"VariableDeclaration","scope":1342,"src":"5390:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint","nodeType":"ElementaryTypeName","src":"5390:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5296:116:4"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"5436:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"5436:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5435:14:4"},"scope":1357,"src":"5278:172:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"096568f6","id":1349,"implemented":false,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"5609:14:4","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"_userApplication","nameLocation":"5632:16:4","nodeType":"VariableDeclaration","scope":1349,"src":"5624:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"5624:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5623:26:4"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1349,"src":"5673:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1346,"name":"uint16","nodeType":"ElementaryTypeName","src":"5673:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5672:8:4"},"scope":1357,"src":"5600:81:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"da1a7c9a","id":1356,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"5845:17:4","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"_userApplication","nameLocation":"5871:16:4","nodeType":"VariableDeclaration","scope":1356,"src":"5863:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"5863:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5862:26:4"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"5912:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1353,"name":"uint16","nodeType":"ElementaryTypeName","src":"5912:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5911:8:4"},"scope":1357,"src":"5836:84:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1358,"src":"108:5814:4","usedErrors":[]}],"src":"33:5890:4"},"id":4},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[1371]},"id":1372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1359,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1371,"linearizedBaseContracts":[1371],"name":"ILayerZeroReceiver","nameLocation":"69:18:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"001d3567","id":1370,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"482:9:5","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"_srcChainId","nameLocation":"508:11:5","nodeType":"VariableDeclaration","scope":1370,"src":"501:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1360,"name":"uint16","nodeType":"ElementaryTypeName","src":"501:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"_srcAddress","nameLocation":"544:11:5","nodeType":"VariableDeclaration","scope":1370,"src":"529:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1362,"name":"bytes","nodeType":"ElementaryTypeName","src":"529:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"_nonce","nameLocation":"572:6:5","nodeType":"VariableDeclaration","scope":1370,"src":"565:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1364,"name":"uint64","nodeType":"ElementaryTypeName","src":"565:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"_payload","nameLocation":"603:8:5","nodeType":"VariableDeclaration","scope":1370,"src":"588:23:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"588:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"491:126:5"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"626:0:5"},"scope":1371,"src":"473:154:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1372,"src":"59:570:5","usedErrors":[]}],"src":"33:597:5"},"id":5},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","exportedSymbols":{"ILayerZeroUserApplicationConfig":[1402]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1373,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroUserApplicationConfig","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1402,"linearizedBaseContracts":[1402],"name":"ILayerZeroUserApplicationConfig","nameLocation":"69:31:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cbed8b9c","id":1384,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"512:9:6","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"_version","nameLocation":"538:8:6","nodeType":"VariableDeclaration","scope":1384,"src":"531:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1374,"name":"uint16","nodeType":"ElementaryTypeName","src":"531:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"_chainId","nameLocation":"563:8:6","nodeType":"VariableDeclaration","scope":1384,"src":"556:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1376,"name":"uint16","nodeType":"ElementaryTypeName","src":"556:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"_configType","nameLocation":"586:11:6","nodeType":"VariableDeclaration","scope":1384,"src":"581:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"_config","nameLocation":"622:7:6","nodeType":"VariableDeclaration","scope":1384,"src":"607:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1380,"name":"bytes","nodeType":"ElementaryTypeName","src":"607:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"521:114:6"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"644:0:6"},"scope":1402,"src":"503:142:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"07e0db17","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"793:14:6","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"_version","nameLocation":"815:8:6","nodeType":"VariableDeclaration","scope":1389,"src":"808:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1385,"name":"uint16","nodeType":"ElementaryTypeName","src":"808:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"807:17:6"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"833:0:6"},"scope":1402,"src":"784:50:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10ddb137","id":1394,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"987:17:6","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"_version","nameLocation":"1012:8:6","nodeType":"VariableDeclaration","scope":1394,"src":"1005:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1390,"name":"uint16","nodeType":"ElementaryTypeName","src":"1005:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1004:17:6"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[],"src":"1030:0:6"},"scope":1402,"src":"978:53:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42d65a8d","id":1401,"implemented":false,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"1309:18:6","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"_srcChainId","nameLocation":"1335:11:6","nodeType":"VariableDeclaration","scope":1401,"src":"1328:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1395,"name":"uint16","nodeType":"ElementaryTypeName","src":"1328:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"_srcAddress","nameLocation":"1363:11:6","nodeType":"VariableDeclaration","scope":1401,"src":"1348:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"1348:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1327:48:6"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"1384:0:6"},"scope":1402,"src":"1300:85:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1403,"src":"59:1328:6","usedErrors":[]}],"src":"33:1355:6"},"id":6},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","exportedSymbols":{"LzLib":[1627]},"id":1628,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"38:24:7"},{"id":1405,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"63:33:7"},{"abstract":false,"baseContracts":[],"canonicalName":"LzLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1627,"linearizedBaseContracts":[1627],"name":"LzLib","nameLocation":"106:5:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LzLib.CallParams","id":1410,"members":[{"constant":false,"id":1407,"mutability":"mutable","name":"refundAddress","nameLocation":"193:13:7","nodeType":"VariableDeclaration","scope":1410,"src":"177:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"177:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"zroPaymentAddress","nameLocation":"224:17:7","nodeType":"VariableDeclaration","scope":1410,"src":"216:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CallParams","nameLocation":"156:10:7","nodeType":"StructDefinition","scope":1627,"src":"149:99:7","visibility":"public"},{"canonicalName":"LzLib.AirdropParams","id":1415,"members":[{"constant":false,"id":1412,"mutability":"mutable","name":"airdropAmount","nameLocation":"402:13:7","nodeType":"VariableDeclaration","scope":1415,"src":"397:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint","nodeType":"ElementaryTypeName","src":"397:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"airdropAddress","nameLocation":"433:14:7","nodeType":"VariableDeclaration","scope":1415,"src":"425:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"425:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"AirdropParams","nameLocation":"373:13:7","nodeType":"StructDefinition","scope":1627,"src":"366:88:7","visibility":"public"},{"body":{"id":1453,"nodeType":"Block","src":"600:284:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1425,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"614:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"614:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"614:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1429,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"651:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"651:29:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"692:3:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"684:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"651:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"614:82:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1451,"nodeType":"Block","src":"783:95:7","statements":[{"expression":{"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1444,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"797:13:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1446,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"839:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1447,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"852:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}],"id":1445,"name":"buildAirdropAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"813:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_AirdropParams_$1415_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,struct LzLib.AirdropParams memory) pure returns (bytes memory)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"813:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"797:70:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1450,"nodeType":"ExpressionStatement","src":"797:70:7"}]},"id":1452,"nodeType":"IfStatement","src":"610:268:7","trueBody":{"id":1443,"nodeType":"Block","src":"698:79:7","statements":[{"expression":{"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1437,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"712:13:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1439,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"754:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1438,"name":"buildDefaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"728:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"728:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"712:54:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"nodeType":"ExpressionStatement","src":"712:54:7"}]}}]},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"buildAdapterParams","nameLocation":"469:18:7","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"_airdropParams","nameLocation":"515:14:7","nodeType":"VariableDeclaration","scope":1454,"src":"488:41:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"LzLib.AirdropParams","nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"488:19:7"},"referencedDeclaration":1415,"src":"488:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"_uaGasLimit","nameLocation":"536:11:7","nodeType":"VariableDeclaration","scope":1454,"src":"531:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint","nodeType":"ElementaryTypeName","src":"531:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:61:7"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"adapterParams","nameLocation":"585:13:7","nodeType":"VariableDeclaration","scope":1454,"src":"572:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1422,"name":"bytes","nodeType":"ElementaryTypeName","src":"572:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"571:28:7"},"scope":1627,"src":"460:424:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1470,"nodeType":"Block","src":"1003:153:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1131:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1463,"name":"uint16","nodeType":"ElementaryTypeName","src":"1131:6:7","typeDescriptions":{}}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1467,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1142:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1114:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1114:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1114:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1460,"id":1469,"nodeType":"Return","src":"1107:42:7"}]},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"buildDefaultAdapterParams","nameLocation":"927:25:7","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"_uaGas","nameLocation":"958:6:7","nodeType":"VariableDeclaration","scope":1471,"src":"953:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint","nodeType":"ElementaryTypeName","src":"953:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:13:7"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1471,"src":"989:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1458,"name":"bytes","nodeType":"ElementaryTypeName","src":"989:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"988:14:7"},"scope":1627,"src":"918:238:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1513,"nodeType":"Block","src":"1277:438:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1482,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1295:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"1295:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1319:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1295:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""},"value":"Airdrop amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""}],"id":1481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1287:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"1287:75:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1490,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1380:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"1380:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1414:3:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1406:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1406:7:7","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1406:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1380:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f702061646472657373206d75737420626520736574","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1420:29:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""},"value":"Airdrop address must be set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""}],"id":1489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1372:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1372:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"1372:78:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"32","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1650:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1643:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1502,"name":"uint16","nodeType":"ElementaryTypeName","src":"1643:6:7","typeDescriptions":{}}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1643:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1506,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1654:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1507,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1662:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"1662:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1509,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1685:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"1685:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1500,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1626:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1626:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1626:82:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1480,"id":1512,"nodeType":"Return","src":"1619:89:7"}]},"id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"buildAirdropAdapterParams","nameLocation":"1171:25:7","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"_uaGas","nameLocation":"1202:6:7","nodeType":"VariableDeclaration","scope":1514,"src":"1197:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint","nodeType":"ElementaryTypeName","src":"1197:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"_params","nameLocation":"1231:7:7","nodeType":"VariableDeclaration","scope":1514,"src":"1210:28:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":1475,"nodeType":"UserDefinedTypeName","pathNode":{"id":1474,"name":"AirdropParams","nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"1210:13:7"},"referencedDeclaration":1415,"src":"1210:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"}],"src":"1196:43:7"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"1263:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1478,"name":"bytes","nodeType":"ElementaryTypeName","src":"1263:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1262:14:7"},"scope":1627,"src":"1162:553:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"1809:192:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1522,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"1827:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1827:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:2:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"1827:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1526,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"1858:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1858:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:2:7","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"1858:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1827:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1886:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":1521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1819:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1819:91:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"1819:91:7"},{"AST":{"nodeType":"YulBlock","src":"1929:66:7","statements":[{"nodeType":"YulAssignment","src":"1943:42:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"1965:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"1981:2:7","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:7"},"nodeType":"YulFunctionCall","src":"1961:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1955:5:7"},"nodeType":"YulFunctionCall","src":"1955:30:7"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"1943:8:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":false,"src":"1965:14:7","valueSize":1},{"declaration":1519,"isOffset":false,"isSlot":false,"src":"1943:8:7","valueSize":1}],"id":1534,"nodeType":"InlineAssembly","src":"1920:75:7"}]},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"getGasLimit","nameLocation":"1730:11:7","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"_adapterParams","nameLocation":"1755:14:7","nodeType":"VariableDeclaration","scope":1536,"src":"1742:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"1742:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1741:29:7"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"gasLimit","nameLocation":"1799:8:7","nodeType":"VariableDeclaration","scope":1536,"src":"1794:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint","nodeType":"ElementaryTypeName","src":"1794:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1793:15:7"},"scope":1627,"src":"1721:280:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"2282:555:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1550,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"2300:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2300:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2325:2:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"2300:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1554,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"2331:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2331:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2355:2:7","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"2331:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2300:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2359:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":1549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2292:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2292:91:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"2292:91:7"},{"AST":{"nodeType":"YulBlock","src":"2402:115:7","statements":[{"nodeType":"YulAssignment","src":"2416:39:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2436:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2452:1:7","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:7"},"nodeType":"YulFunctionCall","src":"2432:22:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2426:5:7"},"nodeType":"YulFunctionCall","src":"2426:29:7"},"variableNames":[{"name":"txType","nodeType":"YulIdentifier","src":"2416:6:7"}]},{"nodeType":"YulAssignment","src":"2468:39:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2487:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2503:2:7","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:7"},"nodeType":"YulFunctionCall","src":"2483:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2477:5:7"},"nodeType":"YulFunctionCall","src":"2477:30:7"},"variableNames":[{"name":"uaGas","nodeType":"YulIdentifier","src":"2468:5:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2436:14:7","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2487:14:7","valueSize":1},{"declaration":1541,"isOffset":false,"isSlot":false,"src":"2416:6:7","valueSize":1},{"declaration":1543,"isOffset":false,"isSlot":false,"src":"2468:5:7","valueSize":1}],"id":1562,"nodeType":"InlineAssembly","src":"2393:124:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2534:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2534:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2549:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2559:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2549:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e737570706f7274656420747854797065","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2562:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""},"value":"Unsupported txType"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""}],"id":1563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2526:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2526:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1573,"nodeType":"ExpressionStatement","src":"2526:57:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2601:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2609:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2601:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47617320746f6f206c6f77","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2612:13:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""},"value":"Gas too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""}],"id":1574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2593:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2593:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"2593:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2641:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2651:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2641:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"IfStatement","src":"2637:194:7","trueBody":{"id":1585,"nodeType":"Block","src":"2654:177:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2677:144:7","statements":[{"nodeType":"YulAssignment","src":"2695:47:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2722:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2738:2:7","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2718:3:7"},"nodeType":"YulFunctionCall","src":"2718:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2712:5:7"},"nodeType":"YulFunctionCall","src":"2712:30:7"},"variableNames":[{"name":"airdropAmount","nodeType":"YulIdentifier","src":"2695:13:7"}]},{"nodeType":"YulAssignment","src":"2759:48:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2787:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2803:2:7","type":"","value":"86"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:7"},"nodeType":"YulFunctionCall","src":"2783:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2777:5:7"},"nodeType":"YulFunctionCall","src":"2777:30:7"},"variableNames":[{"name":"airdropAddress","nodeType":"YulIdentifier","src":"2759:14:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2722:14:7","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2787:14:7","valueSize":1},{"declaration":1547,"isOffset":false,"isSlot":false,"src":"2759:14:7","valueSize":1},{"declaration":1545,"isOffset":false,"isSlot":false,"src":"2695:13:7","valueSize":1}],"id":1584,"nodeType":"InlineAssembly","src":"2668:153:7"}]}}]},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"decodeAdapterParams","nameLocation":"2045:19:7","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"_adapterParams","nameLocation":"2078:14:7","nodeType":"VariableDeclaration","scope":1588,"src":"2065:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1537,"name":"bytes","nodeType":"ElementaryTypeName","src":"2065:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2064:29:7"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"txType","nameLocation":"2161:6:7","nodeType":"VariableDeclaration","scope":1588,"src":"2154:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1540,"name":"uint16","nodeType":"ElementaryTypeName","src":"2154:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"uaGas","nameLocation":"2186:5:7","nodeType":"VariableDeclaration","scope":1588,"src":"2181:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint","nodeType":"ElementaryTypeName","src":"2181:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"airdropAmount","nameLocation":"2210:13:7","nodeType":"VariableDeclaration","scope":1588,"src":"2205:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint","nodeType":"ElementaryTypeName","src":"2205:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"airdropAddress","nameLocation":"2253:14:7","nodeType":"VariableDeclaration","scope":1588,"src":"2237:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"2237:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2140:137:7"},"scope":1627,"src":"2036:801:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1606,"nodeType":"Block","src":"3046:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1601,"name":"_bytes32Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"3084:15:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3079:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1599,"name":"uint","nodeType":"ElementaryTypeName","src":"3079:4:7","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3079:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3071:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1597,"name":"uint160","nodeType":"ElementaryTypeName","src":"3071:7:7","typeDescriptions":{}}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3071:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3063:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:7","typeDescriptions":{}}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3063:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1594,"id":1605,"nodeType":"Return","src":"3056:46:7"}]},"id":1607,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToAddress","nameLocation":"2963:16:7","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"_bytes32Address","nameLocation":"2988:15:7","nodeType":"VariableDeclaration","scope":1607,"src":"2980:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2980:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2979:25:7"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"_address","nameLocation":"3036:8:7","nodeType":"VariableDeclaration","scope":1607,"src":"3028:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"3028:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3027:18:7"},"scope":1627,"src":"2954:155:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"3207:56:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1620,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3245:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3237:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1618,"name":"uint160","nodeType":"ElementaryTypeName","src":"3237:7:7","typeDescriptions":{}}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3237:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3232:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1616,"name":"uint","nodeType":"ElementaryTypeName","src":"3232:4:7","typeDescriptions":{}}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3232:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3224:7:7","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3224:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1613,"id":1624,"nodeType":"Return","src":"3217:39:7"}]},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"addressToBytes32","nameLocation":"3124:16:7","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"_address","nameLocation":"3149:8:7","nodeType":"VariableDeclaration","scope":1626,"src":"3141:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3140:18:7"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"_bytes32Address","nameLocation":"3190:15:7","nodeType":"VariableDeclaration","scope":1626,"src":"3182:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3182:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3181:25:7"},"scope":1627,"src":"3115:148:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1628,"src":"98:3167:7","usedErrors":[]}],"src":"38:3228:7"},"id":7},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2647],"Ownable":[1740]},"id":1741,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1629,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1741,"sourceUnit":2648,"src":"127:30:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1632,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2647,"src":"683:7:8"},"id":1633,"nodeType":"InheritanceSpecifier","src":"683:7:8"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"159:494:8","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1740,"linearizedBaseContracts":[1740,2647],"name":"Ownable","nameLocation":"672:7:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1635,"mutability":"mutable","name":"_owner","nameLocation":"713:6:8","nodeType":"VariableDeclaration","scope":1740,"src":"697:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1641,"name":"OwnershipTransferred","nameLocation":"732:20:8","nodeType":"EventDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:8","nodeType":"VariableDeclaration","scope":1641,"src":"753:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:8","nodeType":"VariableDeclaration","scope":1641,"src":"784:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:8"},"src":"726:84:8"},{"body":{"id":1650,"nodeType":"Block","src":"926:49:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1646,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"955:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1645,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"936:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1649,"nodeType":"ExpressionStatement","src":"936:32:8"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"816:91:8","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1651,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[],"src":"923:2:8"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"926:0:8"},"scope":1740,"src":"912:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1658,"nodeType":"Block","src":"1084:41:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1654,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1094:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1656,"nodeType":"ExpressionStatement","src":"1094:13:8"},{"id":1657,"nodeType":"PlaceholderStatement","src":"1117:1:8"}]},"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"981:77:8","text":" @dev Throws if called by any account other than the owner."},"id":1659,"name":"onlyOwner","nameLocation":"1072:9:8","nodeType":"ModifierDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"1081:2:8"},"src":"1063:62:8","virtual":false,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"1256:30:8","statements":[{"expression":{"id":1665,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1273:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1664,"id":1666,"nodeType":"Return","src":"1266:13:8"}]},"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"1131:65:8","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:8","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"1215:2:8"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"1247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:8"},"scope":1740,"src":"1201:85:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1681,"nodeType":"Block","src":"1404:85:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1422:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1675,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"1433:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"1414:68:8"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"1292:62:8","text":" @dev Throws if the sender is not the owner."},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:8","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"1379:2:8"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"1404:0:8"},"scope":1740,"src":"1359:130:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1695,"nodeType":"Block","src":"1878:47:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:8","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1688,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1888:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"ExpressionStatement","src":"1888:30:8"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"1495:324:8","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1696,"implemented":true,"kind":"function","modifiers":[{"id":1686,"kind":"modifierInvocation","modifierName":{"id":1685,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"1868:9:8"},"nodeType":"ModifierInvocation","src":"1868:9:8"}],"name":"renounceOwnership","nameLocation":"1833:17:8","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[],"src":"1850:2:8"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"1878:0:8"},"scope":1740,"src":"1824:101:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1718,"nodeType":"Block","src":"2144:128:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2162:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:8","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"2154:73:8"},{"expression":{"arguments":[{"id":1715,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2256:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1714,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2237:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"ExpressionStatement","src":"2237:28:8"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1931:138:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1719,"implemented":true,"kind":"function","modifiers":[{"id":1702,"kind":"modifierInvocation","modifierName":{"id":1701,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"2134:9:8"},"nodeType":"ModifierInvocation","src":"2134:9:8"}],"name":"transferOwnership","nameLocation":"2083:17:8","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:8","nodeType":"VariableDeclaration","scope":1719,"src":"2101:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:8"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"2144:0:8"},"scope":1740,"src":"2074:198:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1738,"nodeType":"Block","src":"2489:124:8","statements":[{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:8","nodeType":"VariableDeclaration","scope":1738,"src":"2499:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1728,"initialValue":{"id":1727,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"2518:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:8"},{"expression":{"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1729,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"2534:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1730,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2543:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1732,"nodeType":"ExpressionStatement","src":"2534:17:8"},{"eventCall":{"arguments":[{"id":1734,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2587:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1735,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2597:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1733,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2566:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"EmitStatement","src":"2561:45:8"}]},"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"2278:143:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:8","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:8","nodeType":"VariableDeclaration","scope":1739,"src":"2454:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:8"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"2489:0:8"},"scope":1740,"src":"2426:187:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1741,"src":"654:1961:8","usedErrors":[]}],"src":"102:2514:8"},"id":8},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1805]},"id":1806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1742,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"137:750:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1805,"linearizedBaseContracts":[1805],"name":"ReentrancyGuard","nameLocation":"906:15:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1746,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:9","nodeType":"VariableDeclaration","scope":1805,"src":"1676:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1749,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:9","nodeType":"VariableDeclaration","scope":1805,"src":"1723:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1751,"mutability":"mutable","name":"_status","nameLocation":"1783:7:9","nodeType":"VariableDeclaration","scope":1805,"src":"1767:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1758,"nodeType":"Block","src":"1811:39:9","statements":[{"expression":{"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1754,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"1821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1755,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1831:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1757,"nodeType":"ExpressionStatement","src":"1821:22:9"}]},"id":1759,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[],"src":"1808:2:9"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"1811:0:9"},"scope":1805,"src":"1797:53:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1769,"nodeType":"Block","src":"2251:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1762,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"2261:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"2261:21:9"},{"id":1765,"nodeType":"PlaceholderStatement","src":"2292:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1766,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"2303:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1768,"nodeType":"ExpressionStatement","src":"2303:20:9"}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"1856:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1770,"name":"nonReentrant","nameLocation":"2236:12:9","nodeType":"ModifierDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"2248:2:9"},"src":"2227:103:9","virtual":false,"visibility":"internal"},{"body":{"id":1784,"nodeType":"Block","src":"2375:248:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2468:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1775,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2479:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"2460:63:9"},{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1780,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1781,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2608:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"2598:18:9"}]},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:9","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"2364:2:9"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"2375:0:9"},"scope":1805,"src":"2336:287:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1792,"nodeType":"Block","src":"2667:171:9","statements":[{"expression":{"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1788,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1789,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2819:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1791,"nodeType":"ExpressionStatement","src":"2809:22:9"}]},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:9","nodeType":"FunctionDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"2656:2:9"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[],"src":"2667:0:9"},"scope":1805,"src":"2629:209:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1803,"nodeType":"Block","src":"3081:43:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1799,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"3098:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1800,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"3109:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1798,"id":1802,"nodeType":"Return","src":"3091:26:9"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"2844:168:9","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1804,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:9","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"3049:2:9"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1804,"src":"3075:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1796,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:9"},"scope":1805,"src":"3017:107:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1806,"src":"888:2238:9","usedErrors":[]}],"src":"112:3015:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1883]},"id":1884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1807,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"131:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1883,"linearizedBaseContracts":[1883],"name":"IERC20","nameLocation":"212:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"225:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1817,"name":"Transfer","nameLocation":"394:8:10","nodeType":"EventDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:10","nodeType":"VariableDeclaration","scope":1817,"src":"403:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1813,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:10","nodeType":"VariableDeclaration","scope":1817,"src":"425:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1815,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:10","nodeType":"VariableDeclaration","scope":1817,"src":"445:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:10"},"src":"388:72:10"},{"anonymous":false,"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"466:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1826,"name":"Approval","nameLocation":"625:8:10","nodeType":"EventDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:10","nodeType":"VariableDeclaration","scope":1826,"src":"634:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1822,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:10","nodeType":"VariableDeclaration","scope":1826,"src":"657:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1824,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:10","nodeType":"VariableDeclaration","scope":1826,"src":"682:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:10"},"src":"619:78:10"},{"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"703:66:10","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1832,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:10","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"794:2:10"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1832,"src":"820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:10"},"scope":1883,"src":"774:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"835:72:10","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1840,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:10","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"account","nameLocation":"939:7:10","nodeType":"VariableDeclaration","scope":1840,"src":"931:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:10"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"971:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:10"},"scope":1883,"src":"912:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"986:202:10","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1850,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:10","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"to","nameLocation":"1219:2:10","nodeType":"VariableDeclaration","scope":1850,"src":"1211:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"amount","nameLocation":"1231:6:10","nodeType":"VariableDeclaration","scope":1850,"src":"1223:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:10"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1850,"src":"1257:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1847,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:10"},"scope":1883,"src":"1193:70:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"1269:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1860,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:10","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"owner","nameLocation":"1565:5:10","nodeType":"VariableDeclaration","scope":1860,"src":"1557:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"spender","nameLocation":"1580:7:10","nodeType":"VariableDeclaration","scope":1860,"src":"1572:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:10"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"1612:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:10"},"scope":1883,"src":"1538:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"1627:642:10","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1870,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:10","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"spender","nameLocation":"2299:7:10","nodeType":"VariableDeclaration","scope":1870,"src":"2291:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"amount","nameLocation":"2316:6:10","nodeType":"VariableDeclaration","scope":1870,"src":"2308:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:10"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1870,"src":"2342:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1867,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:10"},"scope":1883,"src":"2274:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"2354:287:10","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1882,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:10","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"from","nameLocation":"2676:4:10","nodeType":"VariableDeclaration","scope":1882,"src":"2668:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"to","nameLocation":"2690:2:10","nodeType":"VariableDeclaration","scope":1882,"src":"2682:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"amount","nameLocation":"2702:6:10","nodeType":"VariableDeclaration","scope":1882,"src":"2694:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:10"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1882,"src":"2728:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1879,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:10"},"scope":1883,"src":"2646:88:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1884,"src":"202:2534:10","usedErrors":[]}],"src":"106:2631:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1919]},"id":1920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1885,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"148:480:11","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1919,"linearizedBaseContracts":[1919],"name":"IERC20Permit","nameLocation":"639:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"658:792:11","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1904,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:11","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"owner","nameLocation":"1488:5:11","nodeType":"VariableDeclaration","scope":1904,"src":"1480:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"spender","nameLocation":"1511:7:11","nodeType":"VariableDeclaration","scope":1904,"src":"1503:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"value","nameLocation":"1536:5:11","nodeType":"VariableDeclaration","scope":1904,"src":"1528:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:11","nodeType":"VariableDeclaration","scope":1904,"src":"1551:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"v","nameLocation":"1583:1:11","nodeType":"VariableDeclaration","scope":1904,"src":"1577:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1896,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"r","nameLocation":"1602:1:11","nodeType":"VariableDeclaration","scope":1904,"src":"1594:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"s","nameLocation":"1621:1:11","nodeType":"VariableDeclaration","scope":1904,"src":"1613:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:11"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"1637:0:11"},"scope":1919,"src":"1455:183:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"1644:294:11","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1912,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:11","nodeType":"FunctionDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"owner","nameLocation":"1967:5:11","nodeType":"VariableDeclaration","scope":1912,"src":"1959:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:11"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"1997:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:11"},"scope":1919,"src":"1943:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"2012:128:11","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1918,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:11","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"2223:2:11"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1918,"src":"2249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:11"},"scope":1919,"src":"2198:60:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1920,"src":"629:1631:11","usedErrors":[]}],"src":"123:2138:11"},"id":11},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2625],"IERC20":[1883],"IERC20Permit":[1919],"SafeERC20":[2295]},"id":2296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1921,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2296,"sourceUnit":1884,"src":"140:23:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2296,"sourceUnit":1920,"src":"164:40:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2296,"sourceUnit":2626,"src":"205:36:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"243:457:12","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2295,"linearizedBaseContracts":[2295],"name":"SafeERC20","nameLocation":"709:9:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1928,"libraryName":{"id":1926,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2625,"src":"731:7:12"},"nodeType":"UsingForDirective","src":"725:26:12","typeName":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1951,"nodeType":"Block","src":"1013:103:12","statements":[{"expression":{"arguments":[{"id":1940,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1043:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1943,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1073:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1850,"src":"1073:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1073:23:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1946,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1098:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1102:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1941,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1050:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1939,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"1023:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1023:86:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1950,"nodeType":"ExpressionStatement","src":"1023:86:12"}]},"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"757:179:12","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:12","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"token","nameLocation":"970:5:12","nodeType":"VariableDeclaration","scope":1952,"src":"963:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":1931,"nodeType":"UserDefinedTypeName","pathNode":{"id":1930,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"963:6:12"},"referencedDeclaration":1883,"src":"963:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"to","nameLocation":"985:2:12","nodeType":"VariableDeclaration","scope":1952,"src":"977:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"value","nameLocation":"997:5:12","nodeType":"VariableDeclaration","scope":1952,"src":"989:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:12"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"1013:0:12"},"scope":2295,"src":"941:175:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1978,"nodeType":"Block","src":"1445:113:12","statements":[{"expression":{"arguments":[{"id":1966,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"1475:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1969,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"1505:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1882,"src":"1505:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1505:27:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1972,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1534:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1973,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1540:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1544:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1967,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1965,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"1455:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1455:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"1455:96:12"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"1122:228:12","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1979,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:12","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"token","nameLocation":"1388:5:12","nodeType":"VariableDeclaration","scope":1979,"src":"1381:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":1955,"nodeType":"UserDefinedTypeName","pathNode":{"id":1954,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"1381:6:12"},"referencedDeclaration":1883,"src":"1381:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"from","nameLocation":"1403:4:12","nodeType":"VariableDeclaration","scope":1979,"src":"1395:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"to","nameLocation":"1417:2:12","nodeType":"VariableDeclaration","scope":1979,"src":"1409:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"value","nameLocation":"1429:5:12","nodeType":"VariableDeclaration","scope":1979,"src":"1421:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:12"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"1445:0:12"},"scope":2295,"src":"1355:203:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2022,"nodeType":"Block","src":"1894:497:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2143:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1999,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2295","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2295","typeString":"library SafeERC20"}],"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:12","typeDescriptions":{}}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2175:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2001,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"2190:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1995,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2159:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"2159:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2159:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2121:163:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"2121:163:12"},{"expression":{"arguments":[{"id":2011,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2314:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2014,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2344:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"2344:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2344:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2017,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"2368:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2377:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2012,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2010,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"2294:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:90:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"ExpressionStatement","src":"2294:90:12"}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"1564:249:12","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":2023,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:12","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"token","nameLocation":"1846:5:12","nodeType":"VariableDeclaration","scope":2023,"src":"1839:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":1982,"nodeType":"UserDefinedTypeName","pathNode":{"id":1981,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"1839:6:12"},"referencedDeclaration":1883,"src":"1839:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"spender","nameLocation":"1861:7:12","nodeType":"VariableDeclaration","scope":2023,"src":"1853:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"value","nameLocation":"1878:5:12","nodeType":"VariableDeclaration","scope":2023,"src":"1870:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:12"},"returnParameters":{"id":1989,"nodeType":"ParameterList","parameters":[],"src":"1894:0:12"},"scope":2295,"src":"1818:573:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"2668:194:12","statements":[{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:12","nodeType":"VariableDeclaration","scope":2059,"src":"2678:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2044,"initialValue":{"arguments":[{"arguments":[{"id":2040,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2295","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2295","typeString":"library SafeERC20"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:12","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2042,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2732:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2036,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2701:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"2701:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:12"},{"expression":{"arguments":[{"id":2046,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2770:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2049,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2800:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"2800:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2800:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2052,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2824:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2833:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"2848:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2047,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2777:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2045,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"2750:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2750:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"ExpressionStatement","src":"2750:105:12"}]},"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"2397:180:12","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:12","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"token","nameLocation":"2620:5:12","nodeType":"VariableDeclaration","scope":2060,"src":"2613:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":2026,"nodeType":"UserDefinedTypeName","pathNode":{"id":2025,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"2613:6:12"},"referencedDeclaration":1883,"src":"2613:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"spender","nameLocation":"2635:7:12","nodeType":"VariableDeclaration","scope":2060,"src":"2627:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"value","nameLocation":"2652:5:12","nodeType":"VariableDeclaration","scope":2060,"src":"2644:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"2668:0:12"},"scope":2295,"src":"2582:280:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2104,"nodeType":"Block","src":"3139:321:12","statements":[{"id":2103,"nodeType":"UncheckedBlock","src":"3149:305:12","statements":[{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:12","nodeType":"VariableDeclaration","scope":2103,"src":"3173:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2081,"initialValue":{"arguments":[{"arguments":[{"id":2077,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2295","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2295","typeString":"library SafeERC20"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:12","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3212:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2079,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3227:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2073,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"3196:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"3196:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3196:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"3257:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3273:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":2082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3249:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"ExpressionStatement","src":"3249:75:12"},{"expression":{"arguments":[{"id":2090,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"3358:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2093,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"3388:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"3388:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3388:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2096,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3412:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"3421:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2091,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2089,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"3338:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2102,"nodeType":"ExpressionStatement","src":"3338:105:12"}]}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"2868:180:12","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:12","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"token","nameLocation":"3091:5:12","nodeType":"VariableDeclaration","scope":2105,"src":"3084:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":2063,"nodeType":"UserDefinedTypeName","pathNode":{"id":2062,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"3084:6:12"},"referencedDeclaration":1883,"src":"3084:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"spender","nameLocation":"3106:7:12","nodeType":"VariableDeclaration","scope":2105,"src":"3098:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"value","nameLocation":"3123:5:12","nodeType":"VariableDeclaration","scope":2105,"src":"3115:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:12"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"3139:0:12"},"scope":2295,"src":"3053:407:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"3856:333:12","statements":[{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:12","nodeType":"VariableDeclaration","scope":2151,"src":"3866:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2116,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2126,"initialValue":{"arguments":[{"expression":{"expression":{"id":2120,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3917:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"3917:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3917:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2123,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"3941:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"3950:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2118,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3894:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:12"},{"condition":{"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:12","subExpression":{"arguments":[{"id":2128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"3996:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"id":2129,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4003:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2127,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"3972:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3972:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2150,"nodeType":"IfStatement","src":"3967:216:12","trueBody":{"id":2149,"nodeType":"Block","src":"4018:165:12","statements":[{"expression":{"arguments":[{"id":2133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"4052:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"4082:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"4082:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4082:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"4106:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":2134,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4059:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2132,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4032:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4032:86:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"ExpressionStatement","src":"4032:86:12"},{"expression":{"arguments":[{"id":2145,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"4152:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},{"id":2146,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4159:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2144,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4132:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4132:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"ExpressionStatement","src":"4132:40:12"}]}}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"3466:308:12","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:12","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"token","nameLocation":"3808:5:12","nodeType":"VariableDeclaration","scope":2152,"src":"3801:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"3801:6:12"},"referencedDeclaration":1883,"src":"3801:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"spender","nameLocation":"3823:7:12","nodeType":"VariableDeclaration","scope":2152,"src":"3815:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"value","nameLocation":"3840:5:12","nodeType":"VariableDeclaration","scope":2152,"src":"3832:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:12"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[],"src":"3856:0:12"},"scope":2295,"src":"3779:410:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2208,"nodeType":"Block","src":"4556:257:12","statements":[{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:12","nodeType":"VariableDeclaration","scope":2208,"src":"4566:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2179,"initialValue":{"arguments":[{"id":2177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4601:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2175,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"4588:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1919","typeString":"contract IERC20Permit"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1912,"src":"4588:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4588:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:12"},{"expression":{"arguments":[{"id":2183,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4630:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2184,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"4637:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4646:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2186,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"4653:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2187,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"4663:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2188,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"4666:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2189,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"4669:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2180,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"4617:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1919","typeString":"contract IERC20Permit"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1904,"src":"4617:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"4617:54:12"},{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:12","nodeType":"VariableDeclaration","scope":2208,"src":"4681:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2198,"initialValue":{"arguments":[{"id":2196,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4715:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2194,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"4702:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1919","typeString":"contract IERC20Permit"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1912,"src":"4702:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4702:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"4739:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"4753:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":2199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4731:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2207,"nodeType":"ExpressionStatement","src":"4731:75:12"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"4195:141:12","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:12","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"token","nameLocation":"4383:5:12","nodeType":"VariableDeclaration","scope":2209,"src":"4370:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1919","typeString":"contract IERC20Permit"},"typeName":{"id":2155,"nodeType":"UserDefinedTypeName","pathNode":{"id":2154,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1919,"src":"4370:12:12"},"referencedDeclaration":1919,"src":"4370:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1919","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"owner","nameLocation":"4406:5:12","nodeType":"VariableDeclaration","scope":2209,"src":"4398:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"spender","nameLocation":"4429:7:12","nodeType":"VariableDeclaration","scope":2209,"src":"4421:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"value","nameLocation":"4454:5:12","nodeType":"VariableDeclaration","scope":2209,"src":"4446:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:12","nodeType":"VariableDeclaration","scope":2209,"src":"4469:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"v","nameLocation":"4501:1:12","nodeType":"VariableDeclaration","scope":2209,"src":"4495:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2165,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"4520:1:12","nodeType":"VariableDeclaration","scope":2209,"src":"4512:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"s","nameLocation":"4539:1:12","nodeType":"VariableDeclaration","scope":2209,"src":"4531:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:12"},"returnParameters":{"id":2172,"nodeType":"ParameterList","parameters":[],"src":"4556:0:12"},"scope":2295,"src":"4341:472:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2245,"nodeType":"Block","src":"5266:572:12","statements":[{"assignments":[2219],"declarations":[{"constant":false,"id":2219,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:12","nodeType":"VariableDeclaration","scope":2245,"src":"5615:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2228,"initialValue":{"arguments":[{"id":2225,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"5669:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":2222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5649:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}],"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:12","typeDescriptions":{}}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5641:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"5641:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5641:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2230,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"5728:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5728:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2236,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"5765:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2237,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:12","typeDescriptions":{}}}],"id":2239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2234,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"5754:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5754:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":2229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5720:111:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2244,"nodeType":"ExpressionStatement","src":"5720:111:12"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"4819:372:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2246,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:12","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"token","nameLocation":"5232:5:12","nodeType":"VariableDeclaration","scope":2246,"src":"5225:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":2212,"nodeType":"UserDefinedTypeName","pathNode":{"id":2211,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"5225:6:12"},"referencedDeclaration":1883,"src":"5225:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"data","nameLocation":"5252:4:12","nodeType":"VariableDeclaration","scope":2246,"src":"5239:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2214,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:12"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[],"src":"5266:0:12"},"scope":2295,"src":"5196:642:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2293,"nodeType":"Block","src":"6428:505:12","statements":[{"assignments":[2258,2260],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"success","nameLocation":"6729:7:12","nodeType":"VariableDeclaration","scope":2293,"src":"6724:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:12","nodeType":"VariableDeclaration","scope":2293,"src":"6738:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2259,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2268,"initialValue":{"arguments":[{"id":2266,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"6785:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2263,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"6773:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2261,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:12","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6765:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"6765:19:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6765:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:12"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"6819:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2270,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"6831:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6831:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2276,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"6868:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:12","typeDescriptions":{}}}],"id":2279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2274,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6857:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6857:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":2288,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"6919:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}],"id":2287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:12","typeDescriptions":{}}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6911:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2284,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6892:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2625_$","typeString":"type(library Address)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2313,"src":"6892:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6892:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2256,"id":2292,"nodeType":"Return","src":"6800:126:12"}]},"documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"5844:490:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2294,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:12","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"token","nameLocation":"6379:5:12","nodeType":"VariableDeclaration","scope":2294,"src":"6372:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"},"typeName":{"id":2249,"nodeType":"UserDefinedTypeName","pathNode":{"id":2248,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"6372:6:12"},"referencedDeclaration":1883,"src":"6372:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"data","nameLocation":"6399:4:12","nodeType":"VariableDeclaration","scope":2294,"src":"6386:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2251,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:12"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2294,"src":"6422:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2254,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:12"},"scope":2295,"src":"6339:594:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2296,"src":"701:6234:12","usedErrors":[]}],"src":"115:6821:12"},"id":12},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2625]},"id":2626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2297,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2625,"linearizedBaseContracts":[2625],"name":"Address","nameLocation":"202:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2312,"nodeType":"Block","src":"1478:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"1702:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2305,"id":2311,"nodeType":"Return","src":"1695:30:13"}]},"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"216:1191:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:13","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"account","nameLocation":"1440:7:13","nodeType":"VariableDeclaration","scope":2313,"src":"1432:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2300,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:13"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"1472:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2303,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:13"},"scope":2625,"src":"1412:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2346,"nodeType":"Block","src":"2718:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2324,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2625","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2625","typeString":"library Address"}],"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:13","typeDescriptions":{}}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2327,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2761:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2331,"nodeType":"ExpressionStatement","src":"2728:73:13"},{"assignments":[2333,null],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"success","nameLocation":"2818:7:13","nodeType":"VariableDeclaration","scope":2346,"src":"2813:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2332,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2340,"initialValue":{"arguments":[{"hexValue":"","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2334,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"2831:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2853:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:13"},{"expression":{"arguments":[{"id":2342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"2882:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"ExpressionStatement","src":"2874:78:13"}]},"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"1738:904:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2347,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:13","nodeType":"VariableDeclaration","scope":2347,"src":"2666:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"amount","nameLocation":"2701:6:13","nodeType":"VariableDeclaration","scope":2347,"src":"2693:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:13"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[],"src":"2718:0:13"},"scope":2625,"src":"2647:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"3790:96:13","statements":[{"expression":{"arguments":[{"id":2358,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3829:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2359,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3837:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2357,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2405,2449],"referencedDeclaration":2449,"src":"3807:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2356,"id":2363,"nodeType":"Return","src":"3800:79:13"}]},"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"2965:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:13","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"target","nameLocation":"3731:6:13","nodeType":"VariableDeclaration","scope":2365,"src":"3723:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"data","nameLocation":"3752:4:13","nodeType":"VariableDeclaration","scope":2365,"src":"3739:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2351,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:13"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"3776:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2354,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:13"},"scope":2625,"src":"3701:185:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"4255:76:13","statements":[{"expression":{"arguments":[{"id":2378,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"4294:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2379,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"4302:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2381,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"4311:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2377,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2405,2449],"referencedDeclaration":2449,"src":"4272:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2376,"id":2383,"nodeType":"Return","src":"4265:59:13"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"3892:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:13","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"target","nameLocation":"4147:6:13","nodeType":"VariableDeclaration","scope":2385,"src":"4139:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"data","nameLocation":"4176:4:13","nodeType":"VariableDeclaration","scope":2385,"src":"4163:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2369,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:13","nodeType":"VariableDeclaration","scope":2385,"src":"4190:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2371,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:13"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"4241:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2374,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:13"},"scope":2625,"src":"4108:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2404,"nodeType":"Block","src":"4806:111:13","statements":[{"expression":{"arguments":[{"id":2398,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"4845:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2399,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"4853:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4859:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2397,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2405,2449],"referencedDeclaration":2449,"src":"4823:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2396,"id":2403,"nodeType":"Return","src":"4816:94:13"}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"4337:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:13","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"target","nameLocation":"4732:6:13","nodeType":"VariableDeclaration","scope":2405,"src":"4724:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"data","nameLocation":"4753:4:13","nodeType":"VariableDeclaration","scope":2405,"src":"4740:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2389,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"value","nameLocation":"4767:5:13","nodeType":"VariableDeclaration","scope":2405,"src":"4759:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:13"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"4792:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2394,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:13"},"scope":2625,"src":"4693:224:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2448,"nodeType":"Block","src":"5344:267:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2625","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2625","typeString":"library Address"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:13","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"5387:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2429,"nodeType":"ExpressionStatement","src":"5354:81:13"},{"assignments":[2431,2433],"declarations":[{"constant":false,"id":2431,"mutability":"mutable","name":"success","nameLocation":"5451:7:13","nodeType":"VariableDeclaration","scope":2448,"src":"5446:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:13","nodeType":"VariableDeclaration","scope":2448,"src":"5460:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2432,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2440,"initialValue":{"arguments":[{"id":2438,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"5513:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2434,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"5487:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"5506:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:13"},{"expression":{"arguments":[{"id":2442,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"5562:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2443,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"5570:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2444,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"5579:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2445,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"5591:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2441,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5535:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2418,"id":2447,"nodeType":"Return","src":"5528:76:13"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"4923:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2449,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:13","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"target","nameLocation":"5213:6:13","nodeType":"VariableDeclaration","scope":2449,"src":"5205:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"data","nameLocation":"5242:4:13","nodeType":"VariableDeclaration","scope":2449,"src":"5229:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2409,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"value","nameLocation":"5264:5:13","nodeType":"VariableDeclaration","scope":2449,"src":"5256:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:13","nodeType":"VariableDeclaration","scope":2449,"src":"5279:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2413,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:13"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2449,"src":"5330:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2416,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:13"},"scope":2625,"src":"5165:446:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2465,"nodeType":"Block","src":"5888:97:13","statements":[{"expression":{"arguments":[{"id":2460,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5924:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2461,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"5932:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2459,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2466,2495],"referencedDeclaration":2495,"src":"5905:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2458,"id":2464,"nodeType":"Return","src":"5898:80:13"}]},"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"5617:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:13","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"target","nameLocation":"5824:6:13","nodeType":"VariableDeclaration","scope":2466,"src":"5816:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"data","nameLocation":"5845:4:13","nodeType":"VariableDeclaration","scope":2466,"src":"5832:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2453,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:13"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"5874:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2456,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:13"},"scope":2625,"src":"5788:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"6327:168:13","statements":[{"assignments":[2479,2481],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"success","nameLocation":"6343:7:13","nodeType":"VariableDeclaration","scope":2494,"src":"6338:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2478,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:13","nodeType":"VariableDeclaration","scope":2494,"src":"6352:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2480,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2486,"initialValue":{"arguments":[{"id":2484,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"6397:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2482,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6379:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:13"},{"expression":{"arguments":[{"id":2488,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6446:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2489,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"6454:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2490,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"6463:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2491,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"6475:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2487,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"6419:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2477,"id":2493,"nodeType":"Return","src":"6412:76:13"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"5991:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:13","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"target","nameLocation":"6214:6:13","nodeType":"VariableDeclaration","scope":2495,"src":"6206:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"data","nameLocation":"6243:4:13","nodeType":"VariableDeclaration","scope":2495,"src":"6230:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2470,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:13","nodeType":"VariableDeclaration","scope":2495,"src":"6257:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2472,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:13"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"6313:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2475,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:13"},"scope":2625,"src":"6169:326:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"6771:101:13","statements":[{"expression":{"arguments":[{"id":2506,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6809:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2507,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6817:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2505,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2512,2541],"referencedDeclaration":2541,"src":"6788:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2504,"id":2510,"nodeType":"Return","src":"6781:84:13"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"6501:168:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:13","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"target","nameLocation":"6712:6:13","nodeType":"VariableDeclaration","scope":2512,"src":"6704:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"data","nameLocation":"6733:4:13","nodeType":"VariableDeclaration","scope":2512,"src":"6720:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2499,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:13"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"6757:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2502,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:13"},"scope":2625,"src":"6674:198:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"7213:170:13","statements":[{"assignments":[2525,2527],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"success","nameLocation":"7229:7:13","nodeType":"VariableDeclaration","scope":2540,"src":"7224:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2524,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:13","nodeType":"VariableDeclaration","scope":2540,"src":"7238:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2526,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2532,"initialValue":{"arguments":[{"id":2530,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"7285:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2528,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"7265:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:13"},{"expression":{"arguments":[{"id":2534,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"7334:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2535,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7342:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2536,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"7351:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2537,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"7363:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2533,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"7307:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2523,"id":2539,"nodeType":"Return","src":"7300:76:13"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"6878:175:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:13","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"target","nameLocation":"7105:6:13","nodeType":"VariableDeclaration","scope":2541,"src":"7097:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"data","nameLocation":"7134:4:13","nodeType":"VariableDeclaration","scope":2541,"src":"7121:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2516,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:13","nodeType":"VariableDeclaration","scope":2541,"src":"7148:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2518,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:13"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"7199:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2521,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:13"},"scope":2625,"src":"7058:325:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"7865:434:13","statements":[{"condition":{"id":2555,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"7879:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2577,"nodeType":"Block","src":"8235:58:13","statements":[{"expression":{"arguments":[{"id":2573,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"8257:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2574,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"8269:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2572,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"8249:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"ExpressionStatement","src":"8249:33:13"}]},"id":2578,"nodeType":"IfStatement","src":"7875:418:13","trueBody":{"id":2571,"nodeType":"Block","src":"7888:341:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2556,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"7906:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2568,"nodeType":"IfStatement","src":"7902:286:13","trueBody":{"id":2567,"nodeType":"Block","src":"7930:258:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2562,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"8132:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2561,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"8121:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"ExpressionStatement","src":"8113:60:13"}]}},{"expression":{"id":2569,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"8208:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2554,"id":2570,"nodeType":"Return","src":"8201:17:13"}]}}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"7389:277:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:13","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"target","nameLocation":"7724:6:13","nodeType":"VariableDeclaration","scope":2580,"src":"7716:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"success","nameLocation":"7745:7:13","nodeType":"VariableDeclaration","scope":2580,"src":"7740:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2545,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:13","nodeType":"VariableDeclaration","scope":2580,"src":"7762:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2547,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:13","nodeType":"VariableDeclaration","scope":2580,"src":"7795:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2549,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:13"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"7851:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2552,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:13"},"scope":2625,"src":"7671:628:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2603,"nodeType":"Block","src":"8680:135:13","statements":[{"condition":{"id":2592,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"8694:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2601,"nodeType":"Block","src":"8751:58:13","statements":[{"expression":{"arguments":[{"id":2597,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"8773:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2598,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"8785:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2596,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"8765:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2600,"nodeType":"ExpressionStatement","src":"8765:33:13"}]},"id":2602,"nodeType":"IfStatement","src":"8690:119:13","trueBody":{"id":2595,"nodeType":"Block","src":"8703:42:13","statements":[{"expression":{"id":2593,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"8724:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2591,"id":2594,"nodeType":"Return","src":"8717:17:13"}]}}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"8305:210:13","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:13","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"success","nameLocation":"8560:7:13","nodeType":"VariableDeclaration","scope":2604,"src":"8555:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2582,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:13","nodeType":"VariableDeclaration","scope":2604,"src":"8577:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2584,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:13","nodeType":"VariableDeclaration","scope":2604,"src":"8610:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2586,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:13"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"8666:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2589,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:13"},"scope":2625,"src":"8520:295:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2623,"nodeType":"Block","src":"8904:457:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2611,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8980:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2621,"nodeType":"Block","src":"9310:45:13","statements":[{"expression":{"arguments":[{"id":2618,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"9331:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2617,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2620,"nodeType":"ExpressionStatement","src":"9324:20:13"}]},"id":2622,"nodeType":"IfStatement","src":"8976:379:13","trueBody":{"id":2616,"nodeType":"Block","src":"9003:301:13","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:13","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:13"},"nodeType":"YulFunctionCall","src":"9202:17:13"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:13","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:13"},"nodeType":"YulFunctionCall","src":"9243:19:13"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:13"},"nodeType":"YulFunctionCall","src":"9236:44:13"},"nodeType":"YulExpressionStatement","src":"9236:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":2606,"isOffset":false,"isSlot":false,"src":"9208:10:13","valueSize":1},{"declaration":2606,"isOffset":false,"isSlot":false,"src":"9251:10:13","valueSize":1}],"id":2615,"nodeType":"InlineAssembly","src":"9152:142:13"}]}}]},"id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:13","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:13","nodeType":"VariableDeclaration","scope":2624,"src":"8838:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2605,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:13","nodeType":"VariableDeclaration","scope":2624,"src":"8863:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2607,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:13"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"8904:0:13"},"scope":2625,"src":"8821:540:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2626,"src":"194:9169:13","usedErrors":[]}],"src":"101:9263:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2647]},"id":2648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2627,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"111:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2647,"linearizedBaseContracts":[2647],"name":"Context","nameLocation":"626:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2636,"nodeType":"Block","src":"702:34:14","statements":[{"expression":{"expression":{"id":2633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2632,"id":2635,"nodeType":"Return","src":"712:17:14"}]},"id":2637,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:14","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"659:2:14"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2637,"src":"693:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:14"},"scope":2647,"src":"640:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2645,"nodeType":"Block","src":"809:32:14","statements":[{"expression":{"expression":{"id":2642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2641,"id":2644,"nodeType":"Return","src":"819:15:14"}]},"id":2646,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:14","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[],"src":"759:2:14"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2646,"src":"793:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2639,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:14"},"scope":2647,"src":"742:99:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2648,"src":"608:235:14","usedErrors":[]}],"src":"86:758:14"},"id":14},"contracts/TokenBridge.sol":{"ast":{"absolutePath":"contracts/TokenBridge.sol","exportedSymbols":{"Address":[2625],"BytesLib":[332],"Context":[2647],"ExcessivelySafeCall":[429],"IERC20":[1883],"IERC20Permit":[1919],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"ITokenBridge":[3959],"IWETH":[3988],"LzApp":[971],"LzLib":[1627],"NonblockingLzApp":[1212],"Ownable":[1740],"ReentrancyGuard":[1805],"SafeERC20":[2295],"TokenBridge":[3839]},"id":3840,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":2649,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":2650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3840,"sourceUnit":1806,"src":"67:62:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3840,"sourceUnit":2296,"src":"131:65:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","id":2652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3840,"sourceUnit":1213,"src":"198:79:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","id":2653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3840,"sourceUnit":1628,"src":"279:73:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWETH.sol","file":"./interfaces/IWETH.sol","id":2654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3840,"sourceUnit":3989,"src":"356:32:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ITokenBridge.sol","file":"./interfaces/ITokenBridge.sol","id":2655,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3840,"sourceUnit":3960,"src":"390:39:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2656,"name":"ITokenBridge","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"457:12:15"},"id":2657,"nodeType":"InheritanceSpecifier","src":"457:12:15"},{"baseName":{"id":2658,"name":"NonblockingLzApp","nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"471:16:15"},"id":2659,"nodeType":"InheritanceSpecifier","src":"471:16:15"},{"baseName":{"id":2660,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":1805,"src":"489:15:15"},"id":2661,"nodeType":"InheritanceSpecifier","src":"489:15:15"}],"canonicalName":"TokenBridge","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3839,"linearizedBaseContracts":[3839,1805,1212,971,1402,1371,1740,2647,3959],"name":"TokenBridge","nameLocation":"442:11:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2665,"libraryName":{"id":2662,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":2295,"src":"518:9:15"},"nodeType":"UsingForDirective","src":"512:27:15","typeName":{"id":2664,"nodeType":"UserDefinedTypeName","pathNode":{"id":2663,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1883,"src":"532:6:15"},"referencedDeclaration":1883,"src":"532:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"abe685cd","id":2668,"mutability":"constant","name":"BP_DENOMINATOR","nameLocation":"568:14:15","nodeType":"VariableDeclaration","scope":3839,"src":"547:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint","nodeType":"ElementaryTypeName","src":"547:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"97167964","id":2671,"mutability":"constant","name":"SHARED_DECIMALS","nameLocation":"619:15:15","nodeType":"VariableDeclaration","scope":3839,"src":"597:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2669,"name":"uint8","nodeType":"ElementaryTypeName","src":"597:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"637:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"public"},{"constant":false,"functionSelector":"2db88ecf","id":2673,"mutability":"mutable","name":"aptosChainId","nameLocation":"661:12:15","nodeType":"VariableDeclaration","scope":3839,"src":"647:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2672,"name":"uint16","nodeType":"ElementaryTypeName","src":"647:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"functionSelector":"25a9f792","id":2675,"mutability":"mutable","name":"bridgeFeeBP","nameLocation":"694:11:15","nodeType":"VariableDeclaration","scope":3839,"src":"682:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint","nodeType":"ElementaryTypeName","src":"682:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e3179c3e","id":2679,"mutability":"mutable","name":"tvlSDs","nameLocation":"748:6:15","nodeType":"VariableDeclaration","scope":3839,"src":"714:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"},"typeName":{"id":2678,"keyType":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"714:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"},"valueType":{"id":2677,"name":"uint64","nodeType":"ElementaryTypeName","src":"733:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},"visibility":"public"},{"constant":false,"functionSelector":"68c4ac26","id":2683,"mutability":"mutable","name":"supportedTokens","nameLocation":"817:15:15","nodeType":"VariableDeclaration","scope":3839,"src":"785:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2682,"keyType":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"785:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2681,"name":"bool","nodeType":"ElementaryTypeName","src":"804:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ee7a4596","id":2687,"mutability":"mutable","name":"pausedTokens","nameLocation":"871:12:15","nodeType":"VariableDeclaration","scope":3839,"src":"839:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2686,"keyType":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"847:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"839:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2685,"name":"bool","nodeType":"ElementaryTypeName","src":"858:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"92cc13c5","id":2691,"mutability":"mutable","name":"ld2sdRates","nameLocation":"949:10:15","nodeType":"VariableDeclaration","scope":3839,"src":"917:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2690,"keyType":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"917:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2689,"name":"uint","nodeType":"ElementaryTypeName","src":"936:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"3fc8cef3","id":2693,"mutability":"mutable","name":"weth","nameLocation":"1006:4:15","nodeType":"VariableDeclaration","scope":3839,"src":"991:19:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ed629c5c","id":2695,"mutability":"mutable","name":"useCustomAdapterParams","nameLocation":"1031:22:15","nodeType":"VariableDeclaration","scope":3839,"src":"1019:34:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2694,"name":"bool","nodeType":"ElementaryTypeName","src":"1019:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"61a552dc","id":2697,"mutability":"mutable","name":"globalPaused","nameLocation":"1072:12:15","nodeType":"VariableDeclaration","scope":3839,"src":"1060:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2696,"name":"bool","nodeType":"ElementaryTypeName","src":"1060:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"5747e69f","id":2699,"mutability":"mutable","name":"emergencyWithdrawEnabled","nameLocation":"1103:24:15","nodeType":"VariableDeclaration","scope":3839,"src":"1091:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2698,"name":"bool","nodeType":"ElementaryTypeName","src":"1091:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"de9b9488","id":2701,"mutability":"mutable","name":"emergencyWithdrawTime","nameLocation":"1146:21:15","nodeType":"VariableDeclaration","scope":3839,"src":"1134:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint","nodeType":"ElementaryTypeName","src":"1134:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":2717,"nodeType":"Block","src":"1215:101:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1234:13:15","subExpression":{"id":2706,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"1235:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1251:21:15","subExpression":{"baseExpression":{"id":2708,"name":"pausedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"1252:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2710,"indexExpression":{"id":2709,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"1265:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1252:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1234:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20706175736564","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1274:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""},"value":"TokenBridge: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""}],"id":2705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1226:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1226:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2715,"nodeType":"ExpressionStatement","src":"1226:70:15"},{"id":2716,"nodeType":"PlaceholderStatement","src":"1307:1:15"}]},"id":2718,"name":"whenNotPaused","nameLocation":"1185:13:15","nodeType":"ModifierDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"_token","nameLocation":"1207:6:15","nodeType":"VariableDeclaration","scope":2718,"src":"1199:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"1199:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1198:16:15"},"src":"1176:140:15","virtual":false,"visibility":"internal"},{"body":{"id":2731,"nodeType":"Block","src":"1361:150:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"emergencyWithdrawEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"1380:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2722,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1408:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1408:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2724,"name":"emergencyWithdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1427:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1408:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1380:68:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20656d657267656e6379207769746864726177206c6f636b6564","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1450:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100","typeString":"literal_string \"TokenBridge: emergency withdraw locked\""},"value":"TokenBridge: emergency withdraw locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100","typeString":"literal_string \"TokenBridge: emergency withdraw locked\""}],"id":2720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1372:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1372:119:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"ExpressionStatement","src":"1372:119:15"},{"id":2730,"nodeType":"PlaceholderStatement","src":"1502:1:15"}]},"id":2732,"name":"emergencyWithdrawUnlocked","nameLocation":"1333:25:15","nodeType":"ModifierDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[],"src":"1358:2:15"},"src":"1324:187:15","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"1643:47:15","statements":[{"expression":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"1654:12:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2743,"name":"_aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"1669:13:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"1654:28:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2745,"nodeType":"ExpressionStatement","src":"1654:28:15"}]},"id":2747,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2739,"name":"_layerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1623:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2740,"kind":"baseConstructorSpecifier","modifierName":{"id":2738,"name":"NonblockingLzApp","nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"1606:16:15"},"nodeType":"ModifierInvocation","src":"1606:36:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"_layerZeroEndpoint","nameLocation":"1549:18:15","nodeType":"VariableDeclaration","scope":2747,"src":"1541:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"1541:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"_aptosChainId","nameLocation":"1585:13:15","nodeType":"VariableDeclaration","scope":2747,"src":"1578:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2735,"name":"uint16","nodeType":"ElementaryTypeName","src":"1578:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1530:75:15"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[],"src":"1643:0:15"},"scope":3839,"src":"1519:171:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3860],"body":{"id":2828,"nodeType":"Block","src":"1954:612:15","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2768,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"1973:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2770,"indexExpression":{"id":2769,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"1989:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1973:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20746f6b656e206973206e6f7420737570706f72746564","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1998:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e","typeString":"literal_string \"TokenBridge: token is not supported\""},"value":"TokenBridge: token is not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e","typeString":"literal_string \"TokenBridge: token is not supported\""}],"id":2767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1965:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2773,"nodeType":"ExpressionStatement","src":"1965:71:15"},{"expression":{"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2774,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2072:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2776,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"2096:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2777,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2104:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2775,"name":"_removeDust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2084:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2084:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2072:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2780,"nodeType":"ExpressionStatement","src":"2072:42:15"},{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2781,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2125:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2783,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"2152:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2784,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2160:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2160:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2786,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2172:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2782,"name":"_lockTokenFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"2137:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) returns (uint256)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2137:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2125:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"2125:57:15"},{"assignments":[2791],"declarations":[{"constant":false,"id":2791,"mutability":"mutable","name":"amountSD","nameLocation":"2222:8:15","nodeType":"VariableDeclaration","scope":2828,"src":"2215:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2790,"name":"uint64","nodeType":"ElementaryTypeName","src":"2215:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2796,"initialValue":{"arguments":[{"id":2793,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"2241:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2794,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2249:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2792,"name":"_LDtoSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"2233:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint64_$","typeString":"function (address,uint256) view returns (uint64)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"2215:44:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"2278:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2289:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2278:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20616d6f756e745344206d7573742062652067726561746572207468616e2030","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2292:46:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_773cc5454c8f282a7d7e9ccda0de0a5a2966ea506b9d9c70b152dcc6cc19a53c","typeString":"literal_string \"TokenBridge: amountSD must be greater than 0\""},"value":"TokenBridge: amountSD must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_773cc5454c8f282a7d7e9ccda0de0a5a2966ea506b9d9c70b152dcc6cc19a53c","typeString":"literal_string \"TokenBridge: amountSD must be greater than 0\""}],"id":2797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2270:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2270:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2803,"nodeType":"ExpressionStatement","src":"2270:69:15"},{"expression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2804,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"2350:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":2806,"indexExpression":{"id":2805,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"2357:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2350:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2807,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"2368:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2350:26:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2809,"nodeType":"ExpressionStatement","src":"2350:26:15"},{"expression":{"arguments":[{"id":2811,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"2426:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2812,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"2434:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2813,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"2446:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2814,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"2456:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},{"id":2815,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"2469:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2485:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2485:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2810,"name":"_sendToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2415:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint64_$_t_struct$_CallParams_$1410_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint64,struct LzLib.CallParams calldata,bytes calldata,uint256)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2415:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2819,"nodeType":"ExpressionStatement","src":"2415:80:15"},{"eventCall":{"arguments":[{"id":2821,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"2516:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2524:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2524:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2824,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"2536:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2825,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"2548:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2820,"name":"Send","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"2511:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,address,bytes32,uint256)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2511:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"EmitStatement","src":"2506:52:15"}]},"functionSelector":"76a9099a","id":2829,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2762,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"1933:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2763,"kind":"modifierInvocation","modifierName":{"id":2761,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":2718,"src":"1919:13:15"},"nodeType":"ModifierInvocation","src":"1919:21:15"},{"id":2765,"kind":"modifierInvocation","modifierName":{"id":2764,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"1941:12:15"},"nodeType":"ModifierInvocation","src":"1941:12:15"}],"name":"sendToAptos","nameLocation":"1707:11:15","nodeType":"FunctionDefinition","overrides":{"id":2760,"nodeType":"OverrideSpecifier","overrides":[],"src":"1910:8:15"},"parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"_token","nameLocation":"1737:6:15","nodeType":"VariableDeclaration","scope":2829,"src":"1729:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"_toAddress","nameLocation":"1762:10:15","nodeType":"VariableDeclaration","scope":2829,"src":"1754:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1754:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"_amountLD","nameLocation":"1788:9:15","nodeType":"VariableDeclaration","scope":2829,"src":"1783:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint","nodeType":"ElementaryTypeName","src":"1783:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2756,"mutability":"mutable","name":"_callParams","nameLocation":"1834:11:15","nodeType":"VariableDeclaration","scope":2829,"src":"1808:37:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":2755,"nodeType":"UserDefinedTypeName","pathNode":{"id":2754,"name":"LzLib.CallParams","nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"1808:16:15"},"referencedDeclaration":1410,"src":"1808:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"_adapterParams","nameLocation":"1871:14:15","nodeType":"VariableDeclaration","scope":2829,"src":"1856:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2757,"name":"bytes","nodeType":"ElementaryTypeName","src":"1856:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1718:174:15"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[],"src":"1954:0:15"},"scope":3839,"src":"1698:868:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3872],"body":{"id":2931,"nodeType":"Block","src":"2806:730:15","statements":[{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"_weth","nameLocation":"2825:5:15","nodeType":"VariableDeclaration","scope":2931,"src":"2817:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"2817:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2850,"initialValue":{"id":2849,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"2833:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2817:20:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"2868:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"2877:7:15","typeDescriptions":{}}},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2877:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2868:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":2858,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"2891:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2860,"indexExpression":{"id":2859,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"2907:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2891:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2868:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20455448206973206e6f7420737570706f72746564","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2915:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e","typeString":"literal_string \"TokenBridge: ETH is not supported\""},"value":"TokenBridge: ETH is not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e","typeString":"literal_string \"TokenBridge: ETH is not supported\""}],"id":2851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2860:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2860:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"ExpressionStatement","src":"2860:91:15"},{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2962:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2867,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"2986:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2868,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2993:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2866,"name":"_removeDust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"2974:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2962:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"2962:41:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2873,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3022:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3034:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3022:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20616d6f756e74206d7573742062652067726561746572207468616e2030","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3037:44:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c","typeString":"literal_string \"TokenBridge: amount must be greater than 0\""},"value":"TokenBridge: amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c","typeString":"literal_string \"TokenBridge: amount must be greater than 0\""}],"id":2872,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3014:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3014:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2878,"nodeType":"ExpressionStatement","src":"3014:68:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3101:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3101:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2882,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3114:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3101:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20666565206e6f7420656e6f756768","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3125:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""},"value":"TokenBridge: fee not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""}],"id":2879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3093:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3093:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2886,"nodeType":"ExpressionStatement","src":"3093:62:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2888,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3207:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2887,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"3201:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$3988_$","typeString":"type(contract IWETH)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3201:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3988","typeString":"contract IWETH"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3964,"src":"3201:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2891,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3229:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3201:38:15","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3201:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2894,"nodeType":"ExpressionStatement","src":"3201:40:15"},{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"amountSD","nameLocation":"3259:8:15","nodeType":"VariableDeclaration","scope":2931,"src":"3252:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2895,"name":"uint64","nodeType":"ElementaryTypeName","src":"3252:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2901,"initialValue":{"arguments":[{"id":2898,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3278:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2899,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3285:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2897,"name":"_LDtoSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"3270:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint64_$","typeString":"function (address,uint256) view returns (uint64)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3270:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"3252:43:15"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2902,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3306:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":2904,"indexExpression":{"id":2903,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3313:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3306:13:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2905,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"3323:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3306:25:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2907,"nodeType":"ExpressionStatement","src":"3306:25:15"},{"expression":{"arguments":[{"id":2909,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3381:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2910,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"3388:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2911,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"3400:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2912,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"3410:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},{"id":2913,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3423:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3439:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3439:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2916,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3451:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3439:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2908,"name":"_sendToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"3370:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint64_$_t_struct$_CallParams_$1410_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint64,struct LzLib.CallParams calldata,bytes calldata,uint256)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3370:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2919,"nodeType":"ExpressionStatement","src":"3370:91:15"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3482:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2921,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:15","typeDescriptions":{}}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3482:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3494:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3494:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2927,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"3506:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2928,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3518:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2920,"name":"Send","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3477:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,address,bytes32,uint256)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3477:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2930,"nodeType":"EmitStatement","src":"3472:56:15"}]},"functionSelector":"ca23bb4c","id":2932,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2842,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"2787:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2843,"kind":"modifierInvocation","modifierName":{"id":2841,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":2718,"src":"2773:13:15"},"nodeType":"ModifierInvocation","src":"2773:19:15"},{"id":2845,"kind":"modifierInvocation","modifierName":{"id":2844,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"2793:12:15"},"nodeType":"ModifierInvocation","src":"2793:12:15"}],"name":"sendETHToAptos","nameLocation":"2583:14:15","nodeType":"FunctionDefinition","overrides":{"id":2840,"nodeType":"OverrideSpecifier","overrides":[],"src":"2764:8:15"},"parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"_toAddress","nameLocation":"2616:10:15","nodeType":"VariableDeclaration","scope":2932,"src":"2608:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2608:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"_amountLD","nameLocation":"2642:9:15","nodeType":"VariableDeclaration","scope":2932,"src":"2637:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint","nodeType":"ElementaryTypeName","src":"2637:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"_callParams","nameLocation":"2688:11:15","nodeType":"VariableDeclaration","scope":2932,"src":"2662:37:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":2835,"nodeType":"UserDefinedTypeName","pathNode":{"id":2834,"name":"LzLib.CallParams","nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"2662:16:15"},"referencedDeclaration":1410,"src":"2662:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"_adapterParams","nameLocation":"2725:14:15","nodeType":"VariableDeclaration","scope":2932,"src":"2710:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2837,"name":"bytes","nodeType":"ElementaryTypeName","src":"2710:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2597:149:15"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[],"src":"2806:0:15"},"scope":3839,"src":"2574:962:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3884],"body":{"id":2984,"nodeType":"Block","src":"3720:321:15","statements":[{"expression":{"arguments":[{"id":2945,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"3751:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2944,"name":"_checkAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"3731:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes calldata) view"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3731:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2947,"nodeType":"ExpressionStatement","src":"3731:35:15"},{"assignments":[2949],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"payload","nameLocation":"3790:7:15","nodeType":"VariableDeclaration","scope":2984,"src":"3777:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2948,"name":"bytes","nodeType":"ElementaryTypeName","src":"3777:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2961,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3827:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3819:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"3819:7:15","typeDescriptions":{}}},"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3819:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3839:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3831:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3831:7:15","typeDescriptions":{}}},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3831:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2950,"name":"_encodeSendPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3800:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint64_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes32,uint64) pure returns (bytes memory)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3777:68:15"},{"assignments":[2963],"declarations":[{"constant":false,"id":2963,"mutability":"mutable","name":"payInZRO","nameLocation":"3861:8:15","nodeType":"VariableDeclaration","scope":2984,"src":"3856:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"3856:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2971,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2964,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"3872:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"zroPaymentAddress","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"3872:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3913:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3905:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"3905:7:15","typeDescriptions":{}}},"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3905:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3872:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3856:59:15"},{"expression":{"arguments":[{"id":2974,"name":"aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3970:12:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":2977,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3992:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3984:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"3984:7:15","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3984:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2979,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"3999:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2980,"name":"payInZRO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"4008:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2981,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"4018:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":2972,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"3946:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"estimateFees","nodeType":"MemberAccess","referencedDeclaration":1282,"src":"3946:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint16,address,bytes memory,bool,bytes memory) view external returns (uint256,uint256)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3946:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2943,"id":2983,"nodeType":"Return","src":"3926:107:15"}]},"functionSelector":"468b9668","id":2985,"implemented":true,"kind":"function","modifiers":[],"name":"quoteForSend","nameLocation":"3553:12:15","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"_callParams","nameLocation":"3592:11:15","nodeType":"VariableDeclaration","scope":2985,"src":"3566:37:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":2934,"nodeType":"UserDefinedTypeName","pathNode":{"id":2933,"name":"LzLib.CallParams","nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"3566:16:15"},"referencedDeclaration":1410,"src":"3566:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"_adapterParams","nameLocation":"3620:14:15","nodeType":"VariableDeclaration","scope":2985,"src":"3605:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2936,"name":"bytes","nodeType":"ElementaryTypeName","src":"3605:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3565:70:15"},"returnParameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"nativeFee","nameLocation":"3691:9:15","nodeType":"VariableDeclaration","scope":2985,"src":"3686:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint","nodeType":"ElementaryTypeName","src":"3686:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"zroFee","nameLocation":"3707:6:15","nodeType":"VariableDeclaration","scope":2985,"src":"3702:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint","nodeType":"ElementaryTypeName","src":"3702:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3685:29:15"},"scope":3839,"src":"3544:497:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3044,"nodeType":"Block","src":"4177:518:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4196:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4214:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4206:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:15","typeDescriptions":{}}},"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4206:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4196:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e76616c696420746f6b656e2061646472657373","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4218:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca","typeString":"literal_string \"TokenBridge: invalid token address\""},"value":"TokenBridge: invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca","typeString":"literal_string \"TokenBridge: invalid token address\""}],"id":2992,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4188:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4188:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"ExpressionStatement","src":"4188:67:15"},{"expression":{"arguments":[{"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4274:24:15","subExpression":{"baseExpression":{"id":3003,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"4275:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3005,"indexExpression":{"id":3004,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4291:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4275:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20746f6b656e20616c72656164792072656769737465726564","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4300:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_51de26679b1ae151f519d14d91d238fe2ca5b6374fe0e7054a2aac9a3771c277","typeString":"literal_string \"TokenBridge: token already registered\""},"value":"TokenBridge: token already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51de26679b1ae151f519d14d91d238fe2ca5b6374fe0e7054a2aac9a3771c277","typeString":"literal_string \"TokenBridge: token already registered\""}],"id":3002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4266:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4266:74:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3009,"nodeType":"ExpressionStatement","src":"4266:74:15"},{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"localDecimals","nameLocation":"4359:13:15","nodeType":"VariableDeclaration","scope":3044,"src":"4353:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3010,"name":"uint8","nodeType":"ElementaryTypeName","src":"4353:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3015,"initialValue":{"arguments":[{"id":3013,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4390:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3012,"name":"_tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"4375:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint8_$","typeString":"function (address) view returns (uint8)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4375:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4353:44:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3017,"name":"localDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"4430:13:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3018,"name":"SHARED_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4447:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4430:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20646563696d616c73206d757374206265203e3d205348415245445f444543494d414c53","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4477:50:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_464ef14f816d65197a5bf9eb8196c8732496061488e59d144c334e1537b250f8","typeString":"literal_string \"TokenBridge: decimals must be >= SHARED_DECIMALS\""},"value":"TokenBridge: decimals must be >= SHARED_DECIMALS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_464ef14f816d65197a5bf9eb8196c8732496061488e59d144c334e1537b250f8","typeString":"literal_string \"TokenBridge: decimals must be >= SHARED_DECIMALS\""}],"id":3016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4408:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4408:130:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3022,"nodeType":"ExpressionStatement","src":"4408:130:15"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3023,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"4551:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3025,"indexExpression":{"id":3024,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4567:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4551:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4577:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4551:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3028,"nodeType":"ExpressionStatement","src":"4551:30:15"},{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3029,"name":"ld2sdRates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"4592:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3031,"indexExpression":{"id":3030,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4603:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4592:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4613:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3033,"name":"localDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"4618:13:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3034,"name":"SHARED_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4634:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4618:31:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4617:33:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4613:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4592:58:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"4592:58:15"},{"eventCall":{"arguments":[{"id":3041,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4680:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3040,"name":"RegisterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"4666:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4666:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3043,"nodeType":"EmitStatement","src":"4661:26:15"}]},"functionSelector":"09824a80","id":3045,"implemented":true,"kind":"function","modifiers":[{"id":2990,"kind":"modifierInvocation","modifierName":{"id":2989,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4167:9:15"},"nodeType":"ModifierInvocation","src":"4167:9:15"}],"name":"registerToken","nameLocation":"4128:13:15","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"_token","nameLocation":"4150:6:15","nodeType":"VariableDeclaration","scope":3045,"src":"4142:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2986,"name":"address","nodeType":"ElementaryTypeName","src":"4142:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4141:16:15"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[],"src":"4177:0:15"},"scope":3839,"src":"4119:576:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3067,"nodeType":"Block","src":"4765:170:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"_bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4784:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3054,"name":"BP_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"4800:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a2062726964676520666565203e2031303025","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4816:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0","typeString":"literal_string \"TokenBridge: bridge fee > 100%\""},"value":"TokenBridge: bridge fee > 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0","typeString":"literal_string \"TokenBridge: bridge fee > 100%\""}],"id":3052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4776:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4776:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3058,"nodeType":"ExpressionStatement","src":"4776:73:15"},{"expression":{"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3059,"name":"bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4860:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3060,"name":"_bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4874:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4860:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3062,"nodeType":"ExpressionStatement","src":"4860:26:15"},{"eventCall":{"arguments":[{"id":3064,"name":"_bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"4914:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3063,"name":"SetBridgeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"4902:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4902:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3066,"nodeType":"EmitStatement","src":"4897:30:15"}]},"functionSelector":"000d5900","id":3068,"implemented":true,"kind":"function","modifiers":[{"id":3050,"kind":"modifierInvocation","modifierName":{"id":3049,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4755:9:15"},"nodeType":"ModifierInvocation","src":"4755:9:15"}],"name":"setBridgeFeeBP","nameLocation":"4712:14:15","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"_bridgeFeeBP","nameLocation":"4732:12:15","nodeType":"VariableDeclaration","scope":3068,"src":"4727:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint","nodeType":"ElementaryTypeName","src":"4727:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4726:19:15"},"returnParameters":{"id":3051,"nodeType":"ParameterList","parameters":[],"src":"4765:0:15"},"scope":3839,"src":"4703:232:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3093,"nodeType":"Block","src":"4994:138:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"5013:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5030:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5022:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:15","typeDescriptions":{}}},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5022:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5013:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e76616c696420746f6b656e2061646472657373","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5034:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca","typeString":"literal_string \"TokenBridge: invalid token address\""},"value":"TokenBridge: invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca","typeString":"literal_string \"TokenBridge: invalid token address\""}],"id":3075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5005:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5005:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3084,"nodeType":"ExpressionStatement","src":"5005:66:15"},{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3085,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5082:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3086,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"5089:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5082:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3088,"nodeType":"ExpressionStatement","src":"5082:12:15"},{"eventCall":{"arguments":[{"id":3090,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"5118:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3089,"name":"SetWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"5110:7:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5110:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3092,"nodeType":"EmitStatement","src":"5105:19:15"}]},"functionSelector":"5b769f3c","id":3094,"implemented":true,"kind":"function","modifiers":[{"id":3073,"kind":"modifierInvocation","modifierName":{"id":3072,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4984:9:15"},"nodeType":"ModifierInvocation","src":"4984:9:15"}],"name":"setWETH","nameLocation":"4952:7:15","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"_weth","nameLocation":"4968:5:15","nodeType":"VariableDeclaration","scope":3094,"src":"4960:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4959:15:15"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[],"src":"4994:0:15"},"scope":3839,"src":"4943:189:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3109,"nodeType":"Block","src":"5197:80:15","statements":[{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3101,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"5208:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3102,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"5223:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5208:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3104,"nodeType":"ExpressionStatement","src":"5208:22:15"},{"eventCall":{"arguments":[{"id":3106,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"5261:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3105,"name":"SetGlobalPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"5246:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5246:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3108,"nodeType":"EmitStatement","src":"5241:28:15"}]},"functionSelector":"69a6b3db","id":3110,"implemented":true,"kind":"function","modifiers":[{"id":3099,"kind":"modifierInvocation","modifierName":{"id":3098,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5187:9:15"},"nodeType":"ModifierInvocation","src":"5187:9:15"}],"name":"setGlobalPause","nameLocation":"5149:14:15","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"_paused","nameLocation":"5169:7:15","nodeType":"VariableDeclaration","scope":3110,"src":"5164:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3095,"name":"bool","nodeType":"ElementaryTypeName","src":"5164:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5163:14:15"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[],"src":"5197:0:15"},"scope":3839,"src":"5140:137:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3130,"nodeType":"Block","src":"5357:95:15","statements":[{"expression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3119,"name":"pausedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5368:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3121,"indexExpression":{"id":3120,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5381:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5368:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3122,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5368:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3124,"nodeType":"ExpressionStatement","src":"5368:30:15"},{"eventCall":{"arguments":[{"id":3126,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5428:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3127,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5436:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3125,"name":"SetTokenPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"5414:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5414:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3129,"nodeType":"EmitStatement","src":"5409:35:15"}]},"functionSelector":"cb8d3b1f","id":3131,"implemented":true,"kind":"function","modifiers":[{"id":3117,"kind":"modifierInvocation","modifierName":{"id":3116,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5347:9:15"},"nodeType":"ModifierInvocation","src":"5347:9:15"}],"name":"setTokenPause","nameLocation":"5294:13:15","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"_token","nameLocation":"5316:6:15","nodeType":"VariableDeclaration","scope":3131,"src":"5308:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"5308:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"_paused","nameLocation":"5329:7:15","nodeType":"VariableDeclaration","scope":3131,"src":"5324:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3113,"name":"bool","nodeType":"ElementaryTypeName","src":"5324:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5307:30:15"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[],"src":"5357:0:15"},"scope":3839,"src":"5285:167:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3146,"nodeType":"Block","src":"5526:93:15","statements":[{"expression":{"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3138,"name":"aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"5537:12:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3139,"name":"_aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"5552:13:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5537:28:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":3141,"nodeType":"ExpressionStatement","src":"5537:28:15"},{"eventCall":{"arguments":[{"id":3143,"name":"_aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"5597:13:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3142,"name":"SetAptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"5581:15:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5581:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"EmitStatement","src":"5576:35:15"}]},"functionSelector":"c21f5114","id":3147,"implemented":true,"kind":"function","modifiers":[{"id":3136,"kind":"modifierInvocation","modifierName":{"id":3135,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5516:9:15"},"nodeType":"ModifierInvocation","src":"5516:9:15"}],"name":"setAptosChainId","nameLocation":"5469:15:15","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"_aptosChainId","nameLocation":"5492:13:15","nodeType":"VariableDeclaration","scope":3147,"src":"5485:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3132,"name":"uint16","nodeType":"ElementaryTypeName","src":"5485:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5484:22:15"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[],"src":"5526:0:15"},"scope":3839,"src":"5460:159:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3162,"nodeType":"Block","src":"5711:133:15","statements":[{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5722:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3155,"name":"_useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"5747:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5722:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3157,"nodeType":"ExpressionStatement","src":"5722:48:15"},{"eventCall":{"arguments":[{"id":3159,"name":"_useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"5812:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3158,"name":"SetUseCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"5786:25:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5786:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3161,"nodeType":"EmitStatement","src":"5781:55:15"}]},"functionSelector":"eab45d9c","id":3163,"implemented":true,"kind":"function","modifiers":[{"id":3152,"kind":"modifierInvocation","modifierName":{"id":3151,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5701:9:15"},"nodeType":"ModifierInvocation","src":"5701:9:15"}],"name":"setUseCustomAdapterParams","nameLocation":"5636:25:15","nodeType":"FunctionDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"_useCustomAdapterParams","nameLocation":"5667:23:15","nodeType":"VariableDeclaration","scope":3163,"src":"5662:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3148,"name":"bool","nodeType":"ElementaryTypeName","src":"5662:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5661:30:15"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[],"src":"5711:0:15"},"scope":3839,"src":"5627:217:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3201,"nodeType":"Block","src":"5969:228:15","statements":[{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"feeLD","nameLocation":"5985:5:15","nodeType":"VariableDeclaration","scope":3201,"src":"5980:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint","nodeType":"ElementaryTypeName","src":"5980:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3179,"initialValue":{"arguments":[{"id":3177,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6006:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3176,"name":"accruedFeeLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"5993:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5993:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5980:33:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6032:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3182,"name":"feeLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"6045:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6032:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20666565206e6f7420656e6f756768","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6052:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""},"value":"TokenBridge: fee not enough"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88","typeString":"literal_string \"TokenBridge: fee not enough\""}],"id":3180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6024:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6024:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3186,"nodeType":"ExpressionStatement","src":"6024:58:15"},{"expression":{"arguments":[{"id":3191,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6123:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3192,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6128:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3188,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6102:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3187,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"6095:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1883_$","typeString":"type(contract IERC20)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6095:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1952,"src":"6095:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1883_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6095:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3194,"nodeType":"ExpressionStatement","src":"6095:43:15"},{"eventCall":{"arguments":[{"id":3196,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6166:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3197,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6174:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3198,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6179:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3195,"name":"WithdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"6154:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6154:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3200,"nodeType":"EmitStatement","src":"6149:40:15"}]},"functionSelector":"1095b6d7","id":3202,"implemented":true,"kind":"function","modifiers":[{"id":3172,"kind":"modifierInvocation","modifierName":{"id":3171,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5959:9:15"},"nodeType":"ModifierInvocation","src":"5959:9:15"}],"name":"withdrawFee","nameLocation":"5861:11:15","nodeType":"FunctionDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"_token","nameLocation":"5891:6:15","nodeType":"VariableDeclaration","scope":3202,"src":"5883:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"5883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"_to","nameLocation":"5916:3:15","nodeType":"VariableDeclaration","scope":3202,"src":"5908:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"5908:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"_amountLD","nameLocation":"5935:9:15","nodeType":"VariableDeclaration","scope":3202,"src":"5930:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint","nodeType":"ElementaryTypeName","src":"5930:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5872:79:15"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[],"src":"5969:0:15"},"scope":3839,"src":"5852:345:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3242,"nodeType":"Block","src":"6350:204:15","statements":[{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3215,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"6361:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":3217,"indexExpression":{"id":3216,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"6368:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6361:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3218,"name":"_amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"6379:9:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6361:27:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3220,"nodeType":"ExpressionStatement","src":"6361:27:15"},{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"amountLD","nameLocation":"6406:8:15","nodeType":"VariableDeclaration","scope":3242,"src":"6401:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint","nodeType":"ElementaryTypeName","src":"6401:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3227,"initialValue":{"arguments":[{"id":3224,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"6425:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3225,"name":"_amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"6433:9:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3223,"name":"_SDtoLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"6417:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$","typeString":"function (address,uint64) view returns (uint256)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6417:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6401:42:15"},{"expression":{"arguments":[{"id":3232,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"6482:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3233,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6487:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3229,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"6461:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3228,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"6454:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1883_$","typeString":"type(contract IERC20)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6454:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1952,"src":"6454:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1883_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6454:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3235,"nodeType":"ExpressionStatement","src":"6454:42:15"},{"eventCall":{"arguments":[{"id":3237,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"6524:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3238,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"6532:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3239,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"6537:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"name":"WithdrawTVL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"6512:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6512:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3241,"nodeType":"EmitStatement","src":"6507:39:15"}]},"functionSelector":"95e2c168","id":3243,"implemented":true,"kind":"function","modifiers":[{"id":3211,"kind":"modifierInvocation","modifierName":{"id":3210,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6314:9:15"},"nodeType":"ModifierInvocation","src":"6314:9:15"},{"id":3213,"kind":"modifierInvocation","modifierName":{"id":3212,"name":"emergencyWithdrawUnlocked","nodeType":"IdentifierPath","referencedDeclaration":2732,"src":"6324:25:15"},"nodeType":"ModifierInvocation","src":"6324:25:15"}],"name":"withdrawTVL","nameLocation":"6214:11:15","nodeType":"FunctionDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"_token","nameLocation":"6244:6:15","nodeType":"VariableDeclaration","scope":3243,"src":"6236:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"6236:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"_to","nameLocation":"6269:3:15","nodeType":"VariableDeclaration","scope":3243,"src":"6261:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"6261:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"_amountSD","nameLocation":"6290:9:15","nodeType":"VariableDeclaration","scope":3243,"src":"6283:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3207,"name":"uint64","nodeType":"ElementaryTypeName","src":"6283:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6225:81:15"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[],"src":"6350:0:15"},"scope":3839,"src":"6205:349:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3268,"nodeType":"Block","src":"6637:164:15","statements":[{"expression":{"arguments":[{"id":3253,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6708:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3254,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"6716:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3256,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6734:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3255,"name":"accruedFeeLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"6721:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6721:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3252,"name":"withdrawFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"6696:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6696:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3259,"nodeType":"ExpressionStatement","src":"6696:46:15"},{"expression":{"arguments":[{"id":3261,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6765:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3262,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"6773:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3263,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"6778:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":3265,"indexExpression":{"id":3264,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"6785:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6778:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3260,"name":"withdrawTVL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"6753:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint64_$returns$__$","typeString":"function (address,address,uint64)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6753:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3267,"nodeType":"ExpressionStatement","src":"6753:40:15"}]},"functionSelector":"93f26a4c","id":3269,"implemented":true,"kind":"function","modifiers":[{"id":3250,"kind":"modifierInvocation","modifierName":{"id":3249,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6627:9:15"},"nodeType":"ModifierInvocation","src":"6627:9:15"}],"name":"withdrawEmergency","nameLocation":"6571:17:15","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"_token","nameLocation":"6597:6:15","nodeType":"VariableDeclaration","scope":3269,"src":"6589:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"_to","nameLocation":"6613:3:15","nodeType":"VariableDeclaration","scope":3269,"src":"6605:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3246,"name":"address","nodeType":"ElementaryTypeName","src":"6605:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6588:29:15"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[],"src":"6637:0:15"},"scope":3839,"src":"6562:239:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3295,"nodeType":"Block","src":"6875:230:15","statements":[{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"emergencyWithdrawEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6886:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3277,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"6913:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6886:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3279,"nodeType":"ExpressionStatement","src":"6886:34:15"},{"expression":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"emergencyWithdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6931:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":3281,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"6955:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6993:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6955:39:15","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3282,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6965:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6965:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6983:7:15","subdenomination":"weeks","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"1"},"src":"6965:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6931:63:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3289,"nodeType":"ExpressionStatement","src":"6931:63:15"},{"eventCall":{"arguments":[{"id":3291,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"7066:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3292,"name":"emergencyWithdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7075:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"name":"EnableEmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"7042:23:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7042:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"EmitStatement","src":"7037:60:15"}]},"functionSelector":"d71e409e","id":3296,"implemented":true,"kind":"function","modifiers":[{"id":3274,"kind":"modifierInvocation","modifierName":{"id":3273,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6865:9:15"},"nodeType":"ModifierInvocation","src":"6865:9:15"}],"name":"enableEmergencyWithdraw","nameLocation":"6818:23:15","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"enabled","nameLocation":"6847:7:15","nodeType":"VariableDeclaration","scope":3296,"src":"6842:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3270,"name":"bool","nodeType":"ElementaryTypeName","src":"6842:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6841:14:15"},"returnParameters":{"id":3275,"nodeType":"ParameterList","parameters":[],"src":"6875:0:15"},"scope":3839,"src":"6809:296:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1696],"body":{"id":3302,"nodeType":"Block","src":"7238:2:15","statements":[]},"functionSelector":"715018a6","id":3303,"implemented":true,"kind":"function","modifiers":[{"id":3300,"kind":"modifierInvocation","modifierName":{"id":3299,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"7228:9:15"},"nodeType":"ModifierInvocation","src":"7228:9:15"}],"name":"renounceOwnership","nameLocation":"7192:17:15","nodeType":"FunctionDefinition","overrides":{"id":3298,"nodeType":"OverrideSpecifier","overrides":[],"src":"7219:8:15"},"parameters":{"id":3297,"nodeType":"ParameterList","parameters":[],"src":"7209:2:15"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[],"src":"7238:0:15"},"scope":3839,"src":"7183:57:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3306,"nodeType":"Block","src":"7305:2:15","statements":[]},"id":3307,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3304,"nodeType":"ParameterList","parameters":[],"src":"7285:2:15"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[],"src":"7305:0:15"},"scope":3839,"src":"7278:29:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3335,"nodeType":"Block","src":"7380:128:15","statements":[{"assignments":[3315],"declarations":[{"constant":false,"id":3315,"mutability":"mutable","name":"tvlLD","nameLocation":"7396:5:15","nodeType":"VariableDeclaration","scope":3335,"src":"7391:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint","nodeType":"ElementaryTypeName","src":"7391:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3322,"initialValue":{"arguments":[{"id":3317,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"7412:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3318,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"7420:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":3320,"indexExpression":{"id":3319,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"7427:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7420:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3316,"name":"_SDtoLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"7404:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$","typeString":"function (address,uint64) view returns (uint256)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7404:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7391:44:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3329,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7486:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7478:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3327,"name":"address","nodeType":"ElementaryTypeName","src":"7478:7:15","typeDescriptions":{}}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7478:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3324,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"7460:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3323,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"7453:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1883_$","typeString":"type(contract IERC20)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7453:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"7453:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7453:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3332,"name":"tvlLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"7495:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7453:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3313,"id":3334,"nodeType":"Return","src":"7446:54:15"}]},"functionSelector":"a2f27ae0","id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"accruedFeeLD","nameLocation":"7324:12:15","nodeType":"FunctionDefinition","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"_token","nameLocation":"7345:6:15","nodeType":"VariableDeclaration","scope":3336,"src":"7337:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"7337:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7336:16:15"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3336,"src":"7374:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint","nodeType":"ElementaryTypeName","src":"7374:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7373:6:15"},"scope":3839,"src":"7315:193:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":3482,"nodeType":"Block","src":"7746:1104:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"7765:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3350,"name":"aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"7780:12:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"7765:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e76616c696420736f7572636520636861696e206964","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7794:38:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1","typeString":"literal_string \"TokenBridge: invalid source chain id\""},"value":"TokenBridge: invalid source chain id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1","typeString":"literal_string \"TokenBridge: invalid source chain id\""}],"id":3348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7757:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7757:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3354,"nodeType":"ExpressionStatement","src":"7757:76:15"},{"assignments":[3356,3358,3360,3362],"declarations":[{"constant":false,"id":3356,"mutability":"mutable","name":"token","nameLocation":"7855:5:15","nodeType":"VariableDeclaration","scope":3482,"src":"7847:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3355,"name":"address","nodeType":"ElementaryTypeName","src":"7847:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"to","nameLocation":"7870:2:15","nodeType":"VariableDeclaration","scope":3482,"src":"7862:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"7862:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"amountSD","nameLocation":"7881:8:15","nodeType":"VariableDeclaration","scope":3482,"src":"7874:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3359,"name":"uint64","nodeType":"ElementaryTypeName","src":"7874:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3362,"mutability":"mutable","name":"unwrap","nameLocation":"7896:6:15","nodeType":"VariableDeclaration","scope":3482,"src":"7891:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3361,"name":"bool","nodeType":"ElementaryTypeName","src":"7891:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3366,"initialValue":{"arguments":[{"id":3364,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7928:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3363,"name":"_decodeReceivePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"7906:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint64_$_t_bool_$","typeString":"function (bytes memory) pure returns (address,address,uint64,bool)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7906:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint64_$_t_bool_$","typeString":"tuple(address,address,uint64,bool)"}},"nodeType":"VariableDeclarationStatement","src":"7846:91:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7956:13:15","subExpression":{"id":3368,"name":"globalPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7957:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7973:20:15","subExpression":{"baseExpression":{"id":3370,"name":"pausedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"7974:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3372,"indexExpression":{"id":3371,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7987:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7974:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7956:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20706175736564","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7995:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""},"value":"TokenBridge: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5","typeString":"literal_string \"TokenBridge: paused\""}],"id":3367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7948:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7948:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3377,"nodeType":"ExpressionStatement","src":"7948:69:15"},{"expression":{"arguments":[{"baseExpression":{"id":3379,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8036:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3381,"indexExpression":{"id":3380,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8052:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8036:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20746f6b656e206973206e6f7420737570706f72746564","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8060:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e","typeString":"literal_string \"TokenBridge: token is not supported\""},"value":"TokenBridge: token is not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e","typeString":"literal_string \"TokenBridge: token is not supported\""}],"id":3378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8028:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8028:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3384,"nodeType":"ExpressionStatement","src":"8028:70:15"},{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"tvlSD","nameLocation":"8138:5:15","nodeType":"VariableDeclaration","scope":3482,"src":"8131:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3385,"name":"uint64","nodeType":"ElementaryTypeName","src":"8131:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3390,"initialValue":{"baseExpression":{"id":3387,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"8146:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":3389,"indexExpression":{"id":3388,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8153:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8146:13:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"8131:28:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"tvlSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"8178:5:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3393,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"8187:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8178:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e73756666696369656e74206c6971756964697479","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8197:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08","typeString":"literal_string \"TokenBridge: insufficient liquidity\""},"value":"TokenBridge: insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08","typeString":"literal_string \"TokenBridge: insufficient liquidity\""}],"id":3391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8170:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8170:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3397,"nodeType":"ExpressionStatement","src":"8170:65:15"},{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3398,"name":"tvlSDs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"8246:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":3400,"indexExpression":{"id":3399,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8253:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8246:13:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"tvlSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"8262:5:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3402,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"8270:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8262:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8246:32:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3405,"nodeType":"ExpressionStatement","src":"8246:32:15"},{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"amountLD","nameLocation":"8316:8:15","nodeType":"VariableDeclaration","scope":3482,"src":"8311:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint","nodeType":"ElementaryTypeName","src":"8311:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3412,"initialValue":{"arguments":[{"id":3409,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8335:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3410,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"8342:8:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3408,"name":"_SDtoLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"8327:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$","typeString":"function (address,uint64) view returns (uint256)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8327:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8311:40:15"},{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3413,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"8363:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":3414,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8362:12:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"8377:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8391:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8377:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":3421,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"8416:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8426:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8415:13:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_rational_0_by_1_$","typeString":"tuple(uint256,int_const 0)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8377:51:15","trueExpression":{"arguments":[{"id":3419,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"8403:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"name":"_payFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"8395:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view returns (uint256,uint256)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8395:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"8362:66:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3426,"nodeType":"ExpressionStatement","src":"8362:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8482:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3428,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"8491:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8482:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3430,"name":"unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"8499:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8482:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3480,"nodeType":"Block","src":"8634:209:15","statements":[{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3451,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8649:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8654:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8668:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8660:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3453,"name":"address","nodeType":"ElementaryTypeName","src":"8660:7:15","typeDescriptions":{}}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8654:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3462,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8691:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8654:39:15","trueExpression":{"arguments":[{"hexValue":"307864456144","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8681:6:15","typeDescriptions":{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"},"value":"0xdEaD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"}],"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8673:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3458,"name":"address","nodeType":"ElementaryTypeName","src":"8673:7:15","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8673:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8649:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3465,"nodeType":"ExpressionStatement","src":"8649:44:15"},{"expression":{"arguments":[{"id":3470,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8770:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3471,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"8774:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3467,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8750:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3466,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"8743:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1883_$","typeString":"type(contract IERC20)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8743:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1952,"src":"8743:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1883_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8743:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3473,"nodeType":"ExpressionStatement","src":"8743:40:15"},{"eventCall":{"arguments":[{"id":3475,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8811:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3476,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8818:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3477,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"8822:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3474,"name":"Receive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"8803:7:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8803:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3479,"nodeType":"EmitStatement","src":"8798:33:15"}]},"id":3481,"nodeType":"IfStatement","src":"8478:365:15","trueBody":{"id":3450,"nodeType":"Block","src":"8507:121:15","statements":[{"expression":{"arguments":[{"id":3433,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"8535:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8549:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8541:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3434,"name":"address","nodeType":"ElementaryTypeName","src":"8541:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8541:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3438,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"8554:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3432,"name":"_redeemETHTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"8522:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address,address payable,uint256)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8522:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"ExpressionStatement","src":"8522:41:15"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8599:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8591:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"8591:7:15","typeDescriptions":{}}},"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8591:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3446,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"8603:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3447,"name":"amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"8607:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3441,"name":"Receive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"8583:7:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8583:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3449,"nodeType":"EmitStatement","src":"8578:38:15"}]}}]},"id":3483,"implemented":true,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"7598:21:15","nodeType":"FunctionDefinition","overrides":{"id":3346,"nodeType":"OverrideSpecifier","overrides":[],"src":"7737:8:15"},"parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"_srcChainId","nameLocation":"7637:11:15","nodeType":"VariableDeclaration","scope":3483,"src":"7630:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3337,"name":"uint16","nodeType":"ElementaryTypeName","src":"7630:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3483,"src":"7659:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3339,"name":"bytes","nodeType":"ElementaryTypeName","src":"7659:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3483,"src":"7682:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3341,"name":"uint64","nodeType":"ElementaryTypeName","src":"7682:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"_payload","nameLocation":"7712:8:15","nodeType":"VariableDeclaration","scope":3483,"src":"7699:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3343,"name":"bytes","nodeType":"ElementaryTypeName","src":"7699:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7619:108:15"},"returnParameters":{"id":3347,"nodeType":"ParameterList","parameters":[],"src":"7746:0:15"},"scope":3839,"src":"7589:1261:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3505,"nodeType":"Block","src":"8975:85:15","statements":[{"expression":{"arguments":[{"id":3496,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"9008:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3493,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"8992:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3492,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"8986:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$3988_$","typeString":"type(contract IWETH)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8986:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$3988","typeString":"contract IWETH"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3978,"src":"8986:21:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8986:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3498,"nodeType":"ExpressionStatement","src":"8986:32:15"},{"expression":{"arguments":[{"id":3502,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"9042:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3499,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"9029:3:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"9029:12:15","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9029:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3504,"nodeType":"ExpressionStatement","src":"9029:23:15"}]},"id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"_redeemETHTo","nameLocation":"8867:12:15","nodeType":"FunctionDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"_weth","nameLocation":"8898:5:15","nodeType":"VariableDeclaration","scope":3506,"src":"8890:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"8890:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"_to","nameLocation":"8930:3:15","nodeType":"VariableDeclaration","scope":3506,"src":"8914:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3486,"name":"address","nodeType":"ElementaryTypeName","src":"8914:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"_amountLD","nameLocation":"8949:9:15","nodeType":"VariableDeclaration","scope":3506,"src":"8944:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint","nodeType":"ElementaryTypeName","src":"8944:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8879:86:15"},"returnParameters":{"id":3491,"nodeType":"ParameterList","parameters":[],"src":"8975:0:15"},"scope":3839,"src":"8858:202:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3557,"nodeType":"Block","src":"9197:314:15","statements":[{"assignments":[3518],"declarations":[{"constant":false,"id":3518,"mutability":"mutable","name":"balanceBefore","nameLocation":"9257:13:15","nodeType":"VariableDeclaration","scope":3557,"src":"9252:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint","nodeType":"ElementaryTypeName","src":"9252:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3528,"initialValue":{"arguments":[{"arguments":[{"id":3525,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9306:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}],"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9298:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"9298:7:15","typeDescriptions":{}}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9298:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3520,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"9280:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3519,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"9273:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1883_$","typeString":"type(contract IERC20)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9273:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"9273:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9273:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9252:60:15"},{"expression":{"arguments":[{"id":3533,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9355:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3536,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9370:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}],"id":3535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9362:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3534,"name":"address","nodeType":"ElementaryTypeName","src":"9362:7:15","typeDescriptions":{}}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9362:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3538,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"9377:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3530,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"9330:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3529,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"9323:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1883_$","typeString":"type(contract IERC20)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1979,"src":"9323:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1883_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1883_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3540,"nodeType":"ExpressionStatement","src":"9323:64:15"},{"assignments":[3542],"declarations":[{"constant":false,"id":3542,"mutability":"mutable","name":"balanceAfter","nameLocation":"9403:12:15","nodeType":"VariableDeclaration","scope":3557,"src":"9398:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint","nodeType":"ElementaryTypeName","src":"9398:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3552,"initialValue":{"arguments":[{"arguments":[{"id":3549,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9451:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBridge_$3839","typeString":"contract TokenBridge"}],"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9443:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"9443:7:15","typeDescriptions":{}}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9443:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3544,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"9425:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3543,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"9418:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1883_$","typeString":"type(contract IERC20)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9418:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1883","typeString":"contract IERC20"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"9418:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9418:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9398:59:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"balanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"9475:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3554,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"9490:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9475:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3516,"id":3556,"nodeType":"Return","src":"9468:35:15"}]},"id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"_lockTokenFrom","nameLocation":"9077:14:15","nodeType":"FunctionDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"_token","nameLocation":"9110:6:15","nodeType":"VariableDeclaration","scope":3558,"src":"9102:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"_from","nameLocation":"9135:5:15","nodeType":"VariableDeclaration","scope":3558,"src":"9127:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"9127:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"_amountLD","nameLocation":"9156:9:15","nodeType":"VariableDeclaration","scope":3558,"src":"9151:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint","nodeType":"ElementaryTypeName","src":"9151:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9091:81:15"},"returnParameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3558,"src":"9191:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint","nodeType":"ElementaryTypeName","src":"9191:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9190:6:15"},"scope":3839,"src":"9068:443:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3590,"nodeType":"Block","src":"9589:250:15","statements":[{"assignments":[3566,3568],"declarations":[{"constant":false,"id":3566,"mutability":"mutable","name":"success","nameLocation":"9606:7:15","nodeType":"VariableDeclaration","scope":3590,"src":"9601:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3565,"name":"bool","nodeType":"ElementaryTypeName","src":"9601:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"data","nameLocation":"9628:4:15","nodeType":"VariableDeclaration","scope":3590,"src":"9615:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3567,"name":"bytes","nodeType":"ElementaryTypeName","src":"9615:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3576,"initialValue":{"arguments":[{"arguments":[{"hexValue":"646563696d616c732829","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9692:12:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9","typeString":"literal_string \"decimals()\""},"value":"decimals()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9","typeString":"literal_string \"decimals()\""}],"expression":{"id":3571,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9668:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"9668:23:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9668:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3569,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"9636:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"9636:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9636:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9600:116:15"},{"expression":{"arguments":[{"id":3578,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"9735:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a206661696c656420746f2067657420746f6b656e20646563696d616c73","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9744:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3","typeString":"literal_string \"TokenBridge: failed to get token decimals\""},"value":"TokenBridge: failed to get token decimals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3","typeString":"literal_string \"TokenBridge: failed to get token decimals\""}],"id":3577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9727:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9727:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3581,"nodeType":"ExpressionStatement","src":"9727:61:15"},{"expression":{"arguments":[{"id":3584,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9817:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9824:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3585,"name":"uint8","nodeType":"ElementaryTypeName","src":"9824:5:15","typeDescriptions":{}}}],"id":3587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9823:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"expression":{"id":3582,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9806:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"9806:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9806:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3564,"id":3589,"nodeType":"Return","src":"9799:32:15"}]},"id":3591,"implemented":true,"kind":"function","modifiers":[],"name":"_tokenDecimals","nameLocation":"9528:14:15","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"_token","nameLocation":"9551:6:15","nodeType":"VariableDeclaration","scope":3591,"src":"9543:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3559,"name":"address","nodeType":"ElementaryTypeName","src":"9543:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9542:16:15"},"returnParameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3591,"src":"9582:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3562,"name":"uint8","nodeType":"ElementaryTypeName","src":"9582:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9581:7:15"},"scope":3839,"src":"9519:320:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3615,"nodeType":"Block","src":"9934:110:15","statements":[{"expression":{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3600,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"9945:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3601,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"9952:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3602,"name":"bridgeFeeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"9964:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9952:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9951:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3605,"name":"BP_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"9979:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9951:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9945:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3608,"nodeType":"ExpressionStatement","src":"9945:48:15"},{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3609,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"10004:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3610,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"10021:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3611,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"10033:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10021:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10004:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ExpressionStatement","src":"10004:32:15"}]},"id":3616,"implemented":true,"kind":"function","modifiers":[],"name":"_payFee","nameLocation":"9856:7:15","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"_amountLD","nameLocation":"9869:9:15","nodeType":"VariableDeclaration","scope":3616,"src":"9864:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint","nodeType":"ElementaryTypeName","src":"9864:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9863:16:15"},"returnParameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"amountAfterFee","nameLocation":"9908:14:15","nodeType":"VariableDeclaration","scope":3616,"src":"9903:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint","nodeType":"ElementaryTypeName","src":"9903:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"fee","nameLocation":"9929:3:15","nodeType":"VariableDeclaration","scope":3616,"src":"9924:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint","nodeType":"ElementaryTypeName","src":"9924:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9902:31:15"},"scope":3839,"src":"9847:197:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3655,"nodeType":"Block","src":"10277:347:15","statements":[{"expression":{"arguments":[{"id":3633,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"10308:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3632,"name":"_checkAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"10288:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes calldata) view"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10288:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3635,"nodeType":"ExpressionStatement","src":"10288:35:15"},{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"payload","nameLocation":"10347:7:15","nodeType":"VariableDeclaration","scope":3655,"src":"10334:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3636,"name":"bytes","nodeType":"ElementaryTypeName","src":"10334:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"id":3639,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"10376:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3640,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"10384:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3641,"name":"_amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"10396:9:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3638,"name":"_encodeSendPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"10357:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint64_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes32,uint64) pure returns (bytes memory)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10357:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10334:72:15"},{"expression":{"arguments":[{"id":3645,"name":"aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"10439:12:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3646,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"10466:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3647,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"10488:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"refundAddress","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"10488:25:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":3649,"name":"_callParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"10528:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams calldata"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"zroPaymentAddress","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"10528:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3651,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"10572:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3652,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"10601:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3644,"name":"_lzSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"10417:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,bytes memory,address payable,address,bytes memory,uint256)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10417:199:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3654,"nodeType":"ExpressionStatement","src":"10417:199:15"}]},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"_sendToken","nameLocation":"10061:10:15","nodeType":"FunctionDefinition","parameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"_token","nameLocation":"10090:6:15","nodeType":"VariableDeclaration","scope":3656,"src":"10082:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3617,"name":"address","nodeType":"ElementaryTypeName","src":"10082:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"_toAddress","nameLocation":"10115:10:15","nodeType":"VariableDeclaration","scope":3656,"src":"10107:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10107:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"_amountSD","nameLocation":"10143:9:15","nodeType":"VariableDeclaration","scope":3656,"src":"10136:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3621,"name":"uint64","nodeType":"ElementaryTypeName","src":"10136:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"_callParams","nameLocation":"10189:11:15","nodeType":"VariableDeclaration","scope":3656,"src":"10163:37:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":3624,"nodeType":"UserDefinedTypeName","pathNode":{"id":3623,"name":"LzLib.CallParams","nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"10163:16:15"},"referencedDeclaration":1410,"src":"10163:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"_adapterParams","nameLocation":"10226:14:15","nodeType":"VariableDeclaration","scope":3656,"src":"10211:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3626,"name":"bytes","nodeType":"ElementaryTypeName","src":"10211:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"_fee","nameLocation":"10256:4:15","nodeType":"VariableDeclaration","scope":3656,"src":"10251:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint","nodeType":"ElementaryTypeName","src":"10251:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10071:196:15"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[],"src":"10277:0:15"},"scope":3839,"src":"10052:572:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3686,"nodeType":"Block","src":"10868:189:15","statements":[{"assignments":[3668],"declarations":[{"constant":false,"id":3668,"mutability":"mutable","name":"tokenBytes32","nameLocation":"10887:12:15","nodeType":"VariableDeclaration","scope":3686,"src":"10879:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10879:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3673,"initialValue":{"arguments":[{"id":3671,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"10925:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3669,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"10902:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$1627_$","typeString":"type(library LzLib)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addressToBytes32","nodeType":"MemberAccess","referencedDeclaration":1626,"src":"10902:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10902:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10879:53:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3678,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"10986:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3846_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SEND_TO_APTOS","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"10986:24:15","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}],"id":3677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10980:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3676,"name":"uint8","nodeType":"ElementaryTypeName","src":"10980:5:15","typeDescriptions":{}}},"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10980:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3681,"name":"tokenBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"11013:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3682,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"11027:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3683,"name":"_amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"11039:9:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3674,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10963:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10963:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10963:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3666,"id":3685,"nodeType":"Return","src":"10943:106:15"}]},"id":3687,"implemented":true,"kind":"function","modifiers":[],"name":"_encodeSendPayload","nameLocation":"10724:18:15","nodeType":"FunctionDefinition","parameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"_token","nameLocation":"10761:6:15","nodeType":"VariableDeclaration","scope":3687,"src":"10753:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3657,"name":"address","nodeType":"ElementaryTypeName","src":"10753:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"_toAddress","nameLocation":"10786:10:15","nodeType":"VariableDeclaration","scope":3687,"src":"10778:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10778:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3662,"mutability":"mutable","name":"_amountSD","nameLocation":"10814:9:15","nodeType":"VariableDeclaration","scope":3687,"src":"10807:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3661,"name":"uint64","nodeType":"ElementaryTypeName","src":"10807:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10742:88:15"},"returnParameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3687,"src":"10854:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3664,"name":"bytes","nodeType":"ElementaryTypeName","src":"10854:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10853:14:15"},"scope":3839,"src":"10715:342:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3740,"nodeType":"Block","src":"11397:468:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3701,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"11416:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11416:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3734","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11435:2:15","typeDescriptions":{"typeIdentifier":"t_rational_74_by_1","typeString":"int_const 74"},"value":"74"},"src":"11416:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20696e76616c6964207061796c6f6164206c656e677468","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11439:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d","typeString":"literal_string \"TokenBridge: invalid payload length\""},"value":"TokenBridge: invalid payload length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d","typeString":"literal_string \"TokenBridge: invalid payload length\""}],"id":3700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11408:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11408:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3707,"nodeType":"ExpressionStatement","src":"11408:69:15"},{"assignments":[3710],"declarations":[{"constant":false,"id":3710,"mutability":"mutable","name":"packetType","nameLocation":"11499:10:15","nodeType":"VariableDeclaration","scope":3740,"src":"11488:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"},"typeName":{"id":3709,"nodeType":"UserDefinedTypeName","pathNode":{"id":3708,"name":"PacketType","nodeType":"IdentifierPath","referencedDeclaration":3846,"src":"11488:10:15"},"referencedDeclaration":3846,"src":"11488:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}},"visibility":"internal"}],"id":3719,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3714,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"11529:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3716,"indexExpression":{"hexValue":"30","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11538:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11529:11:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11523:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3712,"name":"uint8","nodeType":"ElementaryTypeName","src":"11523:5:15","typeDescriptions":{}}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11523:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3711,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"11512:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3846_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11512:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}},"nodeType":"VariableDeclarationStatement","src":"11488:54:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"11561:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3722,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"11575:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3846_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RECEIVE_FROM_APTOS","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"11575:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}},"src":"11561:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20756e6b6e6f776e207061636b65742074797065","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11606:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8","typeString":"literal_string \"TokenBridge: unknown packet type\""},"value":"TokenBridge: unknown packet type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8","typeString":"literal_string \"TokenBridge: unknown packet type\""}],"id":3720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11553:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11553:88:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3727,"nodeType":"ExpressionStatement","src":"11553:88:15"},{"AST":{"nodeType":"YulBlock","src":"11661:153:15","statements":[{"nodeType":"YulAssignment","src":"11676:33:15","value":{"arguments":[{"arguments":[{"name":"_payload","nodeType":"YulIdentifier","src":"11695:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"11705:2:15","type":"","value":"33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11691:3:15"},"nodeType":"YulFunctionCall","src":"11691:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11685:5:15"},"nodeType":"YulFunctionCall","src":"11685:24:15"},"variableNames":[{"name":"token","nodeType":"YulIdentifier","src":"11676:5:15"}]},{"nodeType":"YulAssignment","src":"11723:30:15","value":{"arguments":[{"arguments":[{"name":"_payload","nodeType":"YulIdentifier","src":"11739:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"11749:2:15","type":"","value":"65"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11735:3:15"},"nodeType":"YulFunctionCall","src":"11735:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11729:5:15"},"nodeType":"YulFunctionCall","src":"11729:24:15"},"variableNames":[{"name":"to","nodeType":"YulIdentifier","src":"11723:2:15"}]},{"nodeType":"YulAssignment","src":"11767:36:15","value":{"arguments":[{"arguments":[{"name":"_payload","nodeType":"YulIdentifier","src":"11789:8:15"},{"kind":"number","nodeType":"YulLiteral","src":"11799:2:15","type":"","value":"73"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11785:3:15"},"nodeType":"YulFunctionCall","src":"11785:17:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11779:5:15"},"nodeType":"YulFunctionCall","src":"11779:24:15"},"variableNames":[{"name":"amountSD","nodeType":"YulIdentifier","src":"11767:8:15"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3689,"isOffset":false,"isSlot":false,"src":"11695:8:15","valueSize":1},{"declaration":3689,"isOffset":false,"isSlot":false,"src":"11739:8:15","valueSize":1},{"declaration":3689,"isOffset":false,"isSlot":false,"src":"11789:8:15","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"11767:8:15","valueSize":1},{"declaration":3694,"isOffset":false,"isSlot":false,"src":"11723:2:15","valueSize":1},{"declaration":3692,"isOffset":false,"isSlot":false,"src":"11676:5:15","valueSize":1}],"id":3728,"nodeType":"InlineAssembly","src":"11652:162:15"},{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3729,"name":"unwrap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"11824:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3732,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"11839:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3734,"indexExpression":{"hexValue":"3733","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11848:2:15","typeDescriptions":{"typeIdentifier":"t_rational_73_by_1","typeString":"int_const 73"},"value":"73"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11839:12:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11833:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3730,"name":"uint8","nodeType":"ElementaryTypeName","src":"11833:5:15","typeDescriptions":{}}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11833:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11856:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11833:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11824:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3739,"nodeType":"ExpressionStatement","src":"11824:33:15"}]},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeReceivePayload","nameLocation":"11177:21:15","nodeType":"FunctionDefinition","parameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"_payload","nameLocation":"11212:8:15","nodeType":"VariableDeclaration","scope":3741,"src":"11199:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3688,"name":"bytes","nodeType":"ElementaryTypeName","src":"11199:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11198:23:15"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"token","nameLocation":"11294:5:15","nodeType":"VariableDeclaration","scope":3741,"src":"11286:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3691,"name":"address","nodeType":"ElementaryTypeName","src":"11286:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"to","nameLocation":"11322:2:15","nodeType":"VariableDeclaration","scope":3741,"src":"11314:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3693,"name":"address","nodeType":"ElementaryTypeName","src":"11314:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"amountSD","nameLocation":"11346:8:15","nodeType":"VariableDeclaration","scope":3741,"src":"11339:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3695,"name":"uint64","nodeType":"ElementaryTypeName","src":"11339:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"unwrap","nameLocation":"11374:6:15","nodeType":"VariableDeclaration","scope":3741,"src":"11369:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"11369:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11271:120:15"},"scope":3839,"src":"11168:697:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"11947:268:15","statements":[{"condition":{"id":3746,"name":"useCustomAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"11962:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3767,"nodeType":"Block","src":"12100:108:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3760,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"12123:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12123:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12148:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12123:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a205f61646170746572506172616d73206d75737420626520656d7074792e","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12151:44:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c","typeString":"literal_string \"TokenBridge: _adapterParams must be empty.\""},"value":"TokenBridge: _adapterParams must be empty."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c","typeString":"literal_string \"TokenBridge: _adapterParams must be empty.\""}],"id":3759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12115:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12115:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3766,"nodeType":"ExpressionStatement","src":"12115:81:15"}]},"id":3768,"nodeType":"IfStatement","src":"11958:250:15","trueBody":{"id":3758,"nodeType":"Block","src":"11986:108:15","statements":[{"expression":{"arguments":[{"id":3748,"name":"aptosChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"12016:12:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"expression":{"id":3751,"name":"PacketType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"12037:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PacketType_$3846_$","typeString":"type(enum ITokenBridge.PacketType)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SEND_TO_APTOS","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"12037:24:15","typeDescriptions":{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PacketType_$3846","typeString":"enum ITokenBridge.PacketType"}],"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12030:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3749,"name":"uint16","nodeType":"ElementaryTypeName","src":"12030:6:15","typeDescriptions":{}}},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12030:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3754,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"12064:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12080:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3747,"name":"_checkGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"12001:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint16_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,bytes memory,uint256) view"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12001:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3757,"nodeType":"ExpressionStatement","src":"12001:81:15"}]}}]},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAdapterParams","nameLocation":"11882:19:15","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"_adapterParams","nameLocation":"11917:14:15","nodeType":"VariableDeclaration","scope":3770,"src":"11902:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3742,"name":"bytes","nodeType":"ElementaryTypeName","src":"11902:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11901:31:15"},"returnParameters":{"id":3745,"nodeType":"ParameterList","parameters":[],"src":"11947:0:15"},"scope":3839,"src":"11873:342:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"12303:56:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"_amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"12321:9:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"id":3780,"name":"ld2sdRates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"12333:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3782,"indexExpression":{"id":3781,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"12344:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12333:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12321:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3778,"id":3784,"nodeType":"Return","src":"12314:37:15"}]},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"_SDtoLD","nameLocation":"12232:7:15","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"_token","nameLocation":"12248:6:15","nodeType":"VariableDeclaration","scope":3786,"src":"12240:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"12240:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"_amountSD","nameLocation":"12263:9:15","nodeType":"VariableDeclaration","scope":3786,"src":"12256:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3773,"name":"uint64","nodeType":"ElementaryTypeName","src":"12256:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12239:34:15"},"returnParameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3786,"src":"12297:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint","nodeType":"ElementaryTypeName","src":"12297:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12296:6:15"},"scope":3839,"src":"12223:136:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3819,"nodeType":"Block","src":"12447:181:15","statements":[{"assignments":[3796],"declarations":[{"constant":false,"id":3796,"mutability":"mutable","name":"amountSD","nameLocation":"12463:8:15","nodeType":"VariableDeclaration","scope":3819,"src":"12458:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint","nodeType":"ElementaryTypeName","src":"12458:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3802,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3797,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"12474:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"baseExpression":{"id":3798,"name":"ld2sdRates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"12486:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3800,"indexExpression":{"id":3799,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"12497:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12486:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12474:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12458:46:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"12523:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12540:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3806,"name":"uint64","nodeType":"ElementaryTypeName","src":"12540:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12535:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12535:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12535:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"12523:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4272696467653a20616d6f756e745344206f766572666c6f77","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12553:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f20599b10bbd05585578c7efc5a9b9f3631294abee5bf88053b95f5094f8006c","typeString":"literal_string \"TokenBridge: amountSD overflow\""},"value":"TokenBridge: amountSD overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f20599b10bbd05585578c7efc5a9b9f3631294abee5bf88053b95f5094f8006c","typeString":"literal_string \"TokenBridge: amountSD overflow\""}],"id":3803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12515:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12515:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3813,"nodeType":"ExpressionStatement","src":"12515:71:15"},{"expression":{"arguments":[{"id":3816,"name":"amountSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"12611:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12604:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3814,"name":"uint64","nodeType":"ElementaryTypeName","src":"12604:6:15","typeDescriptions":{}}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12604:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3794,"id":3818,"nodeType":"Return","src":"12597:23:15"}]},"id":3820,"implemented":true,"kind":"function","modifiers":[],"name":"_LDtoSD","nameLocation":"12376:7:15","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"_token","nameLocation":"12392:6:15","nodeType":"VariableDeclaration","scope":3820,"src":"12384:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3787,"name":"address","nodeType":"ElementaryTypeName","src":"12384:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"_amountLD","nameLocation":"12405:9:15","nodeType":"VariableDeclaration","scope":3820,"src":"12400:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint","nodeType":"ElementaryTypeName","src":"12400:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12383:32:15"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3820,"src":"12439:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3792,"name":"uint64","nodeType":"ElementaryTypeName","src":"12439:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12438:8:15"},"scope":3839,"src":"12367:261:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3837,"nodeType":"Block","src":"12718:69:15","statements":[{"expression":{"arguments":[{"id":3830,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"12744:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3832,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"12760:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3833,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"12768:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3831,"name":"_LDtoSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"12752:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint64_$","typeString":"function (address,uint256) view returns (uint64)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12752:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3829,"name":"_SDtoLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"12736:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$","typeString":"function (address,uint64) view returns (uint256)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12736:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3828,"id":3836,"nodeType":"Return","src":"12729:50:15"}]},"id":3838,"implemented":true,"kind":"function","modifiers":[],"name":"_removeDust","nameLocation":"12645:11:15","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"_token","nameLocation":"12665:6:15","nodeType":"VariableDeclaration","scope":3838,"src":"12657:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"12657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"_amountLD","nameLocation":"12678:9:15","nodeType":"VariableDeclaration","scope":3838,"src":"12673:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint","nodeType":"ElementaryTypeName","src":"12673:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12656:32:15"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3838,"src":"12712:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint","nodeType":"ElementaryTypeName","src":"12712:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12711:6:15"},"scope":3839,"src":"12636:151:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3840,"src":"433:12357:15","usedErrors":[]}],"src":"40:12752:15"},"id":15},"contracts/interfaces/ITokenBridge.sol":{"ast":{"absolutePath":"contracts/interfaces/ITokenBridge.sol","exportedSymbols":{"ITokenBridge":[3959],"LzLib":[1627]},"id":3960,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3841,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"40:24:16"},{"id":3842,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"66:33:16"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","id":3843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3960,"sourceUnit":1628,"src":"103:73:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ITokenBridge","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3959,"linearizedBaseContracts":[3959],"name":"ITokenBridge","nameLocation":"190:12:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ITokenBridge.PacketType","id":3846,"members":[{"id":3844,"name":"SEND_TO_APTOS","nameLocation":"237:13:16","nodeType":"EnumValue","src":"237:13:16"},{"id":3845,"name":"RECEIVE_FROM_APTOS","nameLocation":"261:18:16","nodeType":"EnumValue","src":"261:18:16"}],"name":"PacketType","nameLocation":"215:10:16","nodeType":"EnumDefinition","src":"210:76:16"},{"functionSelector":"76a9099a","id":3860,"implemented":false,"kind":"function","modifiers":[],"name":"sendToAptos","nameLocation":"303:11:16","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"_token","nameLocation":"333:6:16","nodeType":"VariableDeclaration","scope":3860,"src":"325:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"_toAddress","nameLocation":"358:10:16","nodeType":"VariableDeclaration","scope":3860,"src":"350:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"350:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"_amountLD","nameLocation":"384:9:16","nodeType":"VariableDeclaration","scope":3860,"src":"379:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint","nodeType":"ElementaryTypeName","src":"379:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"_callParams","nameLocation":"430:11:16","nodeType":"VariableDeclaration","scope":3860,"src":"404:37:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":3854,"nodeType":"UserDefinedTypeName","pathNode":{"id":3853,"name":"LzLib.CallParams","nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"404:16:16"},"referencedDeclaration":1410,"src":"404:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"_adapterParams","nameLocation":"467:14:16","nodeType":"VariableDeclaration","scope":3860,"src":"452:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3856,"name":"bytes","nodeType":"ElementaryTypeName","src":"452:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"314:174:16"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[],"src":"505:0:16"},"scope":3959,"src":"294:212:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ca23bb4c","id":3872,"implemented":false,"kind":"function","modifiers":[],"name":"sendETHToAptos","nameLocation":"523:14:16","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"_toAddress","nameLocation":"556:10:16","nodeType":"VariableDeclaration","scope":3872,"src":"548:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"548:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"_amountLD","nameLocation":"582:9:16","nodeType":"VariableDeclaration","scope":3872,"src":"577:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint","nodeType":"ElementaryTypeName","src":"577:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"_callParams","nameLocation":"628:11:16","nodeType":"VariableDeclaration","scope":3872,"src":"602:37:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":3866,"nodeType":"UserDefinedTypeName","pathNode":{"id":3865,"name":"LzLib.CallParams","nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"602:16:16"},"referencedDeclaration":1410,"src":"602:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"_adapterParams","nameLocation":"665:14:16","nodeType":"VariableDeclaration","scope":3872,"src":"650:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3868,"name":"bytes","nodeType":"ElementaryTypeName","src":"650:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"537:149:16"},"returnParameters":{"id":3871,"nodeType":"ParameterList","parameters":[],"src":"703:0:16"},"scope":3959,"src":"514:190:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"468b9668","id":3884,"implemented":false,"kind":"function","modifiers":[],"name":"quoteForSend","nameLocation":"721:12:16","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"_callParams","nameLocation":"760:11:16","nodeType":"VariableDeclaration","scope":3884,"src":"734:37:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":3874,"nodeType":"UserDefinedTypeName","pathNode":{"id":3873,"name":"LzLib.CallParams","nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"734:16:16"},"referencedDeclaration":1410,"src":"734:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"_adapterParams","nameLocation":"788:14:16","nodeType":"VariableDeclaration","scope":3884,"src":"773:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3876,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"733:70:16"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"nativeFee","nameLocation":"859:9:16","nodeType":"VariableDeclaration","scope":3884,"src":"854:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint","nodeType":"ElementaryTypeName","src":"854:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"zroFee","nameLocation":"875:6:16","nodeType":"VariableDeclaration","scope":3884,"src":"870:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint","nodeType":"ElementaryTypeName","src":"870:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"853:29:16"},"scope":3959,"src":"712:171:16","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"be6ff12fec5087498d44bc85f1a83235a630944a1e2d5a7938afe810370a5867","id":3894,"name":"Send","nameLocation":"897:4:16","nodeType":"EventDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"918:5:16","nodeType":"VariableDeclaration","scope":3894,"src":"902:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3885,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3888,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"941:4:16","nodeType":"VariableDeclaration","scope":3894,"src":"925:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3890,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"963:2:16","nodeType":"VariableDeclaration","scope":3894,"src":"947:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"947:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3892,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"972:8:16","nodeType":"VariableDeclaration","scope":3894,"src":"967:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint","nodeType":"ElementaryTypeName","src":"967:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:80:16"},"src":"891:91:16"},{"anonymous":false,"eventSelector":"fd19781f43410d9594fd4c02dd1d98dbe99099cbd222d5851a6e183c468d33ca","id":3902,"name":"Receive","nameLocation":"994:7:16","nodeType":"EventDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1018:5:16","nodeType":"VariableDeclaration","scope":3902,"src":"1002:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3895,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3898,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1041:2:16","nodeType":"VariableDeclaration","scope":3902,"src":"1025:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3897,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3900,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1050:8:16","nodeType":"VariableDeclaration","scope":3902,"src":"1045:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint","nodeType":"ElementaryTypeName","src":"1045:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:58:16"},"src":"988:72:16"},{"anonymous":false,"eventSelector":"f7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc16","id":3906,"name":"RegisterToken","nameLocation":"1072:13:16","nodeType":"EventDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1094:5:16","nodeType":"VariableDeclaration","scope":3906,"src":"1086:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3903,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1085:15:16"},"src":"1066:35:16"},{"anonymous":false,"eventSelector":"9a749c8193bfd56b2b2a05c0bd18fbb0f69801a3fd6576c40b90537fd0fc3854","id":3910,"name":"SetBridgeBP","nameLocation":"1113:11:16","nodeType":"EventDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"indexed":false,"mutability":"mutable","name":"bridgeFeeBP","nameLocation":"1130:11:16","nodeType":"VariableDeclaration","scope":3910,"src":"1125:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint","nodeType":"ElementaryTypeName","src":"1125:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1124:18:16"},"src":"1107:36:16"},{"anonymous":false,"eventSelector":"e390bcec6614d6b1f8ae47a4d9d46531ce328e3d293ecd6ddd015cb01eff0300","id":3914,"name":"SetWETH","nameLocation":"1155:7:16","nodeType":"EventDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"indexed":false,"mutability":"mutable","name":"weth","nameLocation":"1171:4:16","nodeType":"VariableDeclaration","scope":3914,"src":"1163:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3911,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1162:14:16"},"src":"1149:28:16"},{"anonymous":false,"eventSelector":"5362d4bd13945e8d116b90d83a7050fa61ceb02bb79bfae783377adb46916d94","id":3918,"name":"SetGlobalPause","nameLocation":"1189:14:16","nodeType":"EventDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"1209:6:16","nodeType":"VariableDeclaration","scope":3918,"src":"1204:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3915,"name":"bool","nodeType":"ElementaryTypeName","src":"1204:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1203:13:16"},"src":"1183:34:16"},{"anonymous":false,"eventSelector":"b1656bd3b50ddb6b12ef259c86e9cb359952b53c4403cfb5a83e23c515a35e22","id":3924,"name":"SetTokenPause","nameLocation":"1229:13:16","nodeType":"EventDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1251:5:16","nodeType":"VariableDeclaration","scope":3924,"src":"1243:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3919,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3922,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"1263:6:16","nodeType":"VariableDeclaration","scope":3924,"src":"1258:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3921,"name":"bool","nodeType":"ElementaryTypeName","src":"1258:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1242:28:16"},"src":"1223:48:16"},{"anonymous":false,"eventSelector":"f5d18385702760f931e7395b5deb636c964542a4284bf07dca2adbd0d7e21614","id":3928,"name":"SetLocalChainId","nameLocation":"1283:15:16","nodeType":"EventDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"indexed":false,"mutability":"mutable","name":"localChainId","nameLocation":"1306:12:16","nodeType":"VariableDeclaration","scope":3928,"src":"1299:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3925,"name":"uint16","nodeType":"ElementaryTypeName","src":"1299:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1298:21:16"},"src":"1277:43:16"},{"anonymous":false,"eventSelector":"6a9ea26cc7efedf0df6fd048e06f3de4be1a978bb5d440277147c76e1c0eb75a","id":3932,"name":"SetAptosChainId","nameLocation":"1332:15:16","nodeType":"EventDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"indexed":false,"mutability":"mutable","name":"aptosChainId","nameLocation":"1355:12:16","nodeType":"VariableDeclaration","scope":3932,"src":"1348:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3929,"name":"uint16","nodeType":"ElementaryTypeName","src":"1348:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1347:21:16"},"src":"1326:43:16"},{"anonymous":false,"eventSelector":"1584ad594a70cbe1e6515592e1272a987d922b097ead875069cebe8b40c004a4","id":3936,"name":"SetUseCustomAdapterParams","nameLocation":"1381:25:16","nodeType":"EventDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"indexed":false,"mutability":"mutable","name":"useCustomAdapterParams","nameLocation":"1412:22:16","nodeType":"VariableDeclaration","scope":3936,"src":"1407:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3933,"name":"bool","nodeType":"ElementaryTypeName","src":"1407:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1406:29:16"},"src":"1375:61:16"},{"anonymous":false,"eventSelector":"f15a0a3784dea9b4fe33bc98e2450745e262d310237b2868ea8ef56967ff3ecb","id":3944,"name":"WithdrawFee","nameLocation":"1448:11:16","nodeType":"EventDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1476:5:16","nodeType":"VariableDeclaration","scope":3944,"src":"1460:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3937,"name":"address","nodeType":"ElementaryTypeName","src":"1460:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3940,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1491:2:16","nodeType":"VariableDeclaration","scope":3944,"src":"1483:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3942,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1500:8:16","nodeType":"VariableDeclaration","scope":3944,"src":"1495:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint","nodeType":"ElementaryTypeName","src":"1495:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1459:50:16"},"src":"1442:68:16"},{"anonymous":false,"eventSelector":"49507695f37b729944475cf3388760a14760fef784b7ab5ca8863a5f3f8be6bd","id":3952,"name":"WithdrawTVL","nameLocation":"1522:11:16","nodeType":"EventDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1550:5:16","nodeType":"VariableDeclaration","scope":3952,"src":"1534:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3945,"name":"address","nodeType":"ElementaryTypeName","src":"1534:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3948,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1565:2:16","nodeType":"VariableDeclaration","scope":3952,"src":"1557:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3947,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3950,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1574:8:16","nodeType":"VariableDeclaration","scope":3952,"src":"1569:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint","nodeType":"ElementaryTypeName","src":"1569:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:50:16"},"src":"1516:68:16"},{"anonymous":false,"eventSelector":"27a37fc51e6c5d14309bbed3a54787c8788223b5d9cd5fe10605661665dd8415","id":3958,"name":"EnableEmergencyWithdraw","nameLocation":"1596:23:16","nodeType":"EventDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"1625:7:16","nodeType":"VariableDeclaration","scope":3958,"src":"1620:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3953,"name":"bool","nodeType":"ElementaryTypeName","src":"1620:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3956,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"1639:10:16","nodeType":"VariableDeclaration","scope":3958,"src":"1634:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint","nodeType":"ElementaryTypeName","src":"1634:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1619:31:16"},"src":"1590:61:16"}],"scope":3960,"src":"180:1474:16","usedErrors":[]}],"src":"40:1616:16"},"id":16},"contracts/interfaces/IWETH.sol":{"ast":{"absolutePath":"contracts/interfaces/IWETH.sol","exportedSymbols":{"IWETH":[3988]},"id":3989,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3961,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"40:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3988,"linearizedBaseContracts":[3988],"name":"IWETH","nameLocation":"78:5:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":3964,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"100:7:17","nodeType":"FunctionDefinition","parameters":{"id":3962,"nodeType":"ParameterList","parameters":[],"src":"107:2:17"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[],"src":"126:0:17"},"scope":3988,"src":"91:36:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3973,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"144:8:17","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"to","nameLocation":"161:2:17","nodeType":"VariableDeclaration","scope":3973,"src":"153:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3965,"name":"address","nodeType":"ElementaryTypeName","src":"153:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"value","nameLocation":"170:5:17","nodeType":"VariableDeclaration","scope":3973,"src":"165:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint","nodeType":"ElementaryTypeName","src":"165:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"152:24:17"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"195:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3970,"name":"bool","nodeType":"ElementaryTypeName","src":"195:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"194:6:17"},"scope":3988,"src":"135:66:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":3978,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"218:8:17","nodeType":"FunctionDefinition","parameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"227:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint","nodeType":"ElementaryTypeName","src":"227:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:6:17"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[],"src":"241:0:17"},"scope":3988,"src":"209:33:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":3987,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"259:7:17","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"to","nameLocation":"275:2:17","nodeType":"VariableDeclaration","scope":3987,"src":"267:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3979,"name":"address","nodeType":"ElementaryTypeName","src":"267:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"value","nameLocation":"284:5:17","nodeType":"VariableDeclaration","scope":3987,"src":"279:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint","nodeType":"ElementaryTypeName","src":"279:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"266:24:17"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3987,"src":"309:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3984,"name":"bool","nodeType":"ElementaryTypeName","src":"309:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"308:6:17"},"scope":3988,"src":"250:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3989,"src":"68:250:17","usedErrors":[]}],"src":"40:280:17"},"id":17}},"contracts":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"BytesLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050233675e6945efc97edc39c40d23c565f71a78b1d84f3d730cabc55431f282464736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x23 CALLDATASIZE PUSH22 0xE6945EFC97EDC39C40D23C565F71A78B1D84F3D730CA 0xBC SSTORE NUMBER 0x1F 0x28 0x24 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"369:18622:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:18622:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122050233675e6945efc97edc39c40d23c565f71a78b1d84f3d730cabc55431f282464736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x23 CALLDATASIZE PUSH22 0xE6945EFC97EDC39C40D23C565F71A78B1D84F3D730CA 0xBC SSTORE NUMBER 0x1F 0x28 0x24 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"369:18622:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"concat(bytes memory,bytes memory)":"infinite","concatStorage(bytes storage pointer,bytes memory)":"infinite","equal(bytes memory,bytes memory)":"infinite","equalStorage(bytes storage pointer,bytes memory)":"infinite","slice(bytes memory,uint256,uint256)":"infinite","toAddress(bytes memory,uint256)":"infinite","toBytes32(bytes memory,uint256)":"infinite","toUint128(bytes memory,uint256)":"infinite","toUint16(bytes memory,uint256)":"infinite","toUint256(bytes memory,uint256)":"infinite","toUint32(bytes memory,uint256)":"infinite","toUint64(bytes memory,uint256)":"infinite","toUint8(bytes memory,uint256)":"infinite","toUint96(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"ExcessivelySafeCall":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d34824855ab9d216ee9ddd5bdb39eff4204845619bf770c1edcf67834d9a44a364736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 BASEFEE 0x24 DUP6 GAS 0xB9 0xD2 AND 0xEE SWAP14 0xDD JUMPDEST 0xDB CODECOPY 0xEF DELEGATECALL KECCAK256 BASEFEE GASLIMIT PUSH2 0x9BF7 PUSH17 0xC1EDCF67834D9A44A364736F6C63430008 0xF STOP CALLER ","sourceMap":"72:5387:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:5387:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d34824855ab9d216ee9ddd5bdb39eff4204845619bf770c1edcf67834d9a44a364736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 BASEFEE 0x24 DUP6 GAS 0xB9 0xD2 AND 0xEE SWAP14 0xDD JUMPDEST 0xDB CODECOPY 0xEF DELEGATECALL KECCAK256 BASEFEE GASLIMIT PUSH2 0x9BF7 PUSH17 0xC1EDCF67834D9A44A364736F6C63430008 0xF STOP CALLER ","sourceMap":"72:5387:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"excessivelySafeCall(address,uint256,uint16,bytes memory)":"infinite","excessivelySafeStaticCall(address,uint256,uint16,bytes memory)":"infinite","swapSelector(bytes4,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"LzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":\"LzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"NonblockingLzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":\"NonblockingLzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\n            gasleft(),\\n            150,\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\n        );\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload,\\n        bytes memory _reason\\n    ) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function retryMessage(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x612ff1f2a158b7e64e873885b5ff08afa348998fd9005f384d555d643ba7968d\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":997,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ILayerZeroEndpoint":{"abi":[{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParam","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_destination","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParam\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":\"ILayerZeroEndpoint\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzReceive(uint16,bytes,uint64,bytes)":"001d3567"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ILayerZeroUserApplicationConfig":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"forceResumeReceive(uint16,bytes)":"42d65a8d","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":\"ILayerZeroUserApplicationConfig\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"LzLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203433cc9b0409d91ee903058cd13eef46dba49f1dac5aad6881a3893fd3f21e8864736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE CALLER 0xCC SWAP12 DIV MULMOD 0xD9 0x1E 0xE9 SUB SDIV DUP13 0xD1 RETURNDATACOPY 0xEF CHAINID 0xDB LOG4 SWAP16 SAR 0xAC GAS 0xAD PUSH9 0x81A3893FD3F21E8864 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"98:3167:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;98:3167:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203433cc9b0409d91ee903058cd13eef46dba49f1dac5aad6881a3893fd3f21e8864736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE CALLER 0xCC SWAP12 DIV MULMOD 0xD9 0x1E 0xE9 SUB SDIV DUP13 0xD1 RETURNDATACOPY 0xEF CHAINID 0xDB LOG4 SWAP16 SAR 0xAC GAS 0xAD PUSH9 0x81A3893FD3F21E8864 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"98:3167:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"addressToBytes32(address)":"infinite","buildAdapterParams(struct LzLib.AirdropParams memory,uint256)":"infinite","buildAirdropAdapterParams(uint256,struct LzLib.AirdropParams memory)":"infinite","buildDefaultAdapterParams(uint256)":"infinite","bytes32ToAddress(bytes32)":"infinite","decodeAdapterParams(bytes memory)":"infinite","getGasLimit(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":\"LzLib\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1751,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122003287047ff0f65587f7d55758d151844648fffcef7a18edef59acc645239b53364736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0x28 PUSH17 0x47FF0F65587F7D55758D151844648FFFCE 0xF7 LOG1 DUP15 0xDE CREATE2 SWAP11 0xCC PUSH5 0x5239B53364 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"701:6234:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;701:6234:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122003287047ff0f65587f7d55758d151844648fffcef7a18edef59acc645239b53364736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0x28 PUSH17 0x47FF0F65587F7D55758D151844648FFFCE 0xF7 LOG1 DUP15 0xDE CREATE2 SWAP11 0xCC PUSH5 0x5239B53364 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"701:6234:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220421aa634c2faaeb9844b32a1224b78ef27a88ac033d8514d72d7436f9fde369564736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP BYTE 0xA6 CALLVALUE 0xC2 STATICCALL 0xAE 0xB9 DUP5 0x4B ORIGIN LOG1 0x22 0x4B PUSH25 0xEF27A88AC033D8514D72D7436F9FDE369564736F6C63430008 0xF STOP CALLER ","sourceMap":"194:9169:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220421aa634c2faaeb9844b32a1224b78ef27a88ac033d8514d72d7436f9fde369564736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP BYTE 0xA6 CALLVALUE 0xC2 STATICCALL 0xAE 0xB9 DUP5 0x4B ORIGIN LOG1 0x22 0x4B PUSH25 0xEF27A88AC033D8514D72D7436F9FDE369564736F6C63430008 0xF STOP CALLER ","sourceMap":"194:9169:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TokenBridge.sol":{"TokenBridge":{"abi":[{"inputs":[{"internalType":"address","name":"_layerZeroEndpoint","type":"address"},{"internalType":"uint16","name":"_aptosChainId","type":"uint16"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"EnableEmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Receive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"RegisterToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"bytes32","name":"to","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Send","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"aptosChainId","type":"uint16"}],"name":"SetAptosChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bridgeFeeBP","type":"uint256"}],"name":"SetBridgeBP","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetGlobalPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"localChainId","type":"uint16"}],"name":"SetLocalChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetTokenPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useCustomAdapterParams","type":"bool"}],"name":"SetUseCustomAdapterParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"weth","type":"address"}],"name":"SetWETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawTVL","type":"event"},{"inputs":[],"name":"BP_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SHARED_DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"accruedFeeLD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aptosChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bridgeFeeBP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdrawEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdrawTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"enableEmergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"globalPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ld2sdRates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pausedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"quoteForSend","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"registerToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_toAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendETHToAptos","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"_toAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendToAptos","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_aptosChainId","type":"uint16"}],"name":"setAptosChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bridgeFeeBP","type":"uint256"}],"name":"setBridgeFeeBP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setGlobalPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setTokenPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_useCustomAdapterParams","type":"bool"}],"name":"setUseCustomAdapterParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_weth","type":"address"}],"name":"setWETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supportedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tvlSDs","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"useCustomAdapterParams","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weth","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"withdrawEmergency","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amountLD","type":"uint256"}],"name":"withdrawFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint64","name":"_amountSD","type":"uint64"}],"name":"withdrawTVL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1651":{"entryPoint":null,"id":1651,"parameterSlots":0,"returnSlots":0},"@_1759":{"entryPoint":null,"id":1759,"parameterSlots":0,"returnSlots":0},"@_2747":{"entryPoint":null,"id":2747,"parameterSlots":2,"returnSlots":0},"@_503":{"entryPoint":null,"id":503,"parameterSlots":1,"returnSlots":0},"@_989":{"entryPoint":null,"id":989,"parameterSlots":1,"returnSlots":0},"@_msgSender_2637":{"entryPoint":null,"id":2637,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1739":{"entryPoint":112,"id":1739,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_uint16_fromMemory":{"entryPoint":192,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:467:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"111:354:18","statements":[{"body":{"nodeType":"YulBlock","src":"157:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"166:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"169:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"159:6:18"},"nodeType":"YulFunctionCall","src":"159:12:18"},"nodeType":"YulExpressionStatement","src":"159:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"132:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"141:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"128:3:18"},"nodeType":"YulFunctionCall","src":"128:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"153:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"124:3:18"},"nodeType":"YulFunctionCall","src":"124:32:18"},"nodeType":"YulIf","src":"121:52:18"},{"nodeType":"YulVariableDeclaration","src":"182:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"201:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"195:5:18"},"nodeType":"YulFunctionCall","src":"195:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"186:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"274:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"283:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"286:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"276:6:18"},"nodeType":"YulFunctionCall","src":"276:12:18"},"nodeType":"YulExpressionStatement","src":"276:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"233:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"244:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"259:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"264:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"255:3:18"},"nodeType":"YulFunctionCall","src":"255:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"268:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"251:3:18"},"nodeType":"YulFunctionCall","src":"251:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"240:3:18"},"nodeType":"YulFunctionCall","src":"240:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"230:2:18"},"nodeType":"YulFunctionCall","src":"230:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:18"},"nodeType":"YulFunctionCall","src":"223:50:18"},"nodeType":"YulIf","src":"220:70:18"},{"nodeType":"YulAssignment","src":"299:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"309:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"323:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"348:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"359:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"344:3:18"},"nodeType":"YulFunctionCall","src":"344:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"338:5:18"},"nodeType":"YulFunctionCall","src":"338:25:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"327:7:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"417:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"426:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"429:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"419:6:18"},"nodeType":"YulFunctionCall","src":"419:12:18"},"nodeType":"YulExpressionStatement","src":"419:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"385:7:18"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"398:7:18"},{"kind":"number","nodeType":"YulLiteral","src":"407:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:18"},"nodeType":"YulFunctionCall","src":"394:20:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"382:2:18"},"nodeType":"YulFunctionCall","src":"382:33:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"375:6:18"},"nodeType":"YulFunctionCall","src":"375:41:18"},"nodeType":"YulIf","src":"372:61:18"},{"nodeType":"YulAssignment","src":"442:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"452:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"442:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"69:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"80:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"92:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"100:6:18","type":""}],"src":"14:451:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_uint16_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x46E1 CODESIZE SUB DUP1 PUSH3 0x46E1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xC0 JUMP JUMPDEST DUP2 DUP1 PUSH3 0x41 CALLER PUSH3 0x70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x110 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH3 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x457D PUSH3 0x164 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x779 ADD MSTORE DUP2 DUP2 PUSH2 0xA54 ADD MSTORE DUP2 DUP2 PUSH2 0xC9C ADD MSTORE DUP2 DUP2 PUSH2 0xF86 ADD MSTORE DUP2 DUP2 PUSH2 0x10A6 ADD MSTORE DUP2 DUP2 PUSH2 0x1160 ADD MSTORE DUP2 DUP2 PUSH2 0x1D84 ADD MSTORE DUP2 DUP2 PUSH2 0x2249 ADD MSTORE PUSH2 0x3319 ADD MSTORE PUSH2 0x457D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xD5900 EQ PUSH2 0x268 JUMPI DUP1 PUSH3 0x1D3567 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x9824A80 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x1095B6D7 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x25A9F792 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x2DB88ECF EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x468B9668 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x5B769F3C EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x69A6B3DB EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x76A9099A EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0x92CC13C5 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x93F26A4C EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0x95E2C168 EQ PUSH2 0x6AA JUMPI DUP1 PUSH4 0x97167964 EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xA2F27AE0 EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0xABE685CD EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xC21F5114 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xCA23BB4C EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xCB8D3B1F EQ PUSH2 0x7EE JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xD71E409E EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xDE9B9488 EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x877 JUMPI DUP1 PUSH4 0xE3179C3E EQ PUSH2 0x897 JUMPI DUP1 PUSH4 0xEAB45D9C EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xED629C5C EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xEE7A4596 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x976 JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x263 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x35E9 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3678 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x3758 JUMP JUMPDEST PUSH2 0xEB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x3782 JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0xF67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x38E SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x37C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x418 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x465 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x3850 JUMP JUMPDEST PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x11F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x38F7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x3678 JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x1349 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x139E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x3A1A JUMP JUMPDEST PUSH2 0x288 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2D JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A95 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH2 0x1613 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AC8 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x418 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B01 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DF PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x70C CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x72C CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x18B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x74C CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0x195A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x19E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x7D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0x1A36 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x7E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B3F JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x809 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA7 JUMP JUMPDEST PUSH2 0x1D01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x829 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BD5 JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x3678 JUMP JUMPDEST PUSH2 0x1DFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x85C CALLDATASIZE PUSH1 0x4 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x2010 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x892 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C26 JUMP JUMPDEST PUSH2 0x2086 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8CD PUSH2 0x8B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x900 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x20F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x920 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0x2145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x961 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x991 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x219F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x9B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C62 JUMP JUMPDEST PUSH2 0x2218 JUMP JUMPDEST PUSH2 0x9BE PUSH2 0x22CB JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A2062726964676520666565203E20313030250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x9A749C8193BFD56B2B2A05C0BD18FBB0F69801A3FD6576C40B90537FD0FC3854 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xAE7 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB13 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0xB7B JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xBA3 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xB99 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0xC74 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x232A SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC85 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH2 0xCD1 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD0E PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E20616C7265616479207265676973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D195C9959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP3 PUSH2 0x23A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20646563696D616C73206D757374206265203E3D PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x205348415245445F444543494D414C53 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE53 PUSH1 0x6 DUP3 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0xE5E SWAP1 PUSH1 0xA PUSH2 0x3E52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xF7FE8023CB2E36BDE1D59A88AC5763A8C11BE6D25E6819F71BB7E23E5BF0DC16 SWAP1 PUSH2 0xEAA SWAP1 DUP5 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xEBE PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xEDD PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE8 DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3E61 JUMP JUMPDEST PUSH2 0xF1E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x24A1 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF15A0A3784DEA9B4FE33BC98E2450745E262D310237B2868EA8EF56967FF3ECB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF59 SWAP3 SWAP2 SWAP1 PUSH2 0x3E96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xF6F PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH2 0xCD1 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x37C3 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0xFDC SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1008 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1055 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x102A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1055 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1038 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x106C SWAP3 SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x108F PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x10DF SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111A DUP5 DUP5 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP2 DUP1 DUP1 PUSH2 0x25B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x113C PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x373B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40A7BB1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP4 EQ ISZERO SWAP4 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP2 PUSH4 0x40A7BB10 SWAP2 PUSH2 0x11A6 SWAP2 PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x3F4C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11FC PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE390BCEC6614D6B1F8AE47A4D9D46531CE328E3D293ECD6DDD015CB01EFF0300 SWAP1 PUSH2 0xA46 SWAP1 DUP4 SWAP1 PUSH2 0x3824 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x1341 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2602 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1351 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5362D4BD13945E8D116B90D83A7050FA61CEB02BB79BFAE783377ADB46916D94 SWAP1 PUSH2 0xA46 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x13A6 PUSH2 0x22CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x13C1 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13ED SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x143A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x140F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x143A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x141D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP7 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH2 0x149B PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x14D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F9D JUMP JUMPDEST PUSH2 0x14DD DUP8 DUP7 PUSH2 0x292E JUMP JUMPDEST SWAP5 POP PUSH2 0x14EA DUP8 CALLER DUP8 PUSH2 0x294C JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x14F8 DUP9 DUP8 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x1568 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E745344206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1599 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3FE0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x15CC DUP9 DUP9 DUP4 DUP9 DUP9 DUP9 CALLVALUE PUSH2 0x2AD7 JUMP JUMPDEST DUP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH1 0x40 MLOAD PUSH2 0x1600 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xC74 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x162A PUSH2 0x22CB JUMP JUMPDEST PUSH2 0x1638 DUP3 DUP3 PUSH2 0x325 DUP6 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x166B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1673 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x168E JUMPI POP PUSH1 0xE SLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20656D657267656E637920776974686472617720 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B1BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x171A SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x400B JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x174A DUP5 DUP4 PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP PUSH2 0x1760 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP4 PUSH2 0x24A1 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x49507695F37B729944475CF3388760A14760FEF784B7AB5CA8863A5F3F8BE6BD DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF59 SWAP3 SWAP2 SWAP1 PUSH2 0x3E96 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x17BE SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17EA SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1837 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x180C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1837 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x181A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x18AA PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0x18A2 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x18E0 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x192C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1950 SWAP2 SWAP1 PUSH2 0x404A JUMP JUMPDEST PUSH2 0x18AA SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x1962 PUSH2 0x22CB JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1977 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x19A2 SWAP1 DUP3 PUSH2 0x40DF JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x19EB PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xA46 SWAP1 DUP4 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH2 0x1A3E PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6A9EA26CC7EFEDF0DF6FD048E06F3DE4BE1A978BB5D440277147C76E1C0EB75A SWAP1 PUSH2 0xA46 SWAP1 DUP4 SWAP1 PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1ABD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1AD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH2 0x1AE1 PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B14 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1B6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20455448206973206E6F7420737570706F727465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x1B74 DUP2 DUP8 PUSH2 0x292E JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 GT PUSH2 0x1BD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E74206D7573742062652067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x746572207468616E203 PUSH1 0xB4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST DUP6 CALLVALUE LT ISZERO PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3E61 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0x1C59 DUP3 DUP9 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1C8F SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3FE0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1CCD DUP3 DUP10 DUP4 DUP10 DUP10 DUP10 DUP14 CALLVALUE PUSH2 0x1CC8 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1341 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1D09 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xB1656BD3B50DDB6B12EF259C86E9CB359952B53C4403CFB5A83E23C515A35E22 SWAP2 ADD PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x1D6D PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0x1DC1 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4198 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1E1D SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x1E9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EAE SWAP3 SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0x1F0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1F30 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x1FC8 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2602 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1FFF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2018 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE DUP1 PUSH2 0x203B JUMPI PUSH1 0x0 PUSH2 0x2048 JUMP JUMPDEST PUSH2 0x2048 TIMESTAMP PUSH3 0x93A80 PUSH2 0x4201 JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x27A37FC51E6C5D14309BBED3A54787C8788223B5D9CD5FE10605661665DD8415 SWAP2 ADD PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x208E PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x20F8 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1584AD594A70CBE1E6515592E1272A987D922B097EAD875069CEBE8B40C004A4 SWAP1 PUSH2 0xA46 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x214D PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x216B DUP3 DUP5 DUP4 PUSH2 0x4219 JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x21A7 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x220C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2215 DUP2 PUSH2 0x2C9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2298 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x22C0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x42D2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x22D4 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x238D GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2352 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1341 JUMPI PUSH2 0x1341 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x23E9 SWAP2 SWAP1 PUSH2 0x4386 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2424 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x248D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A206661696C656420746F2067657420746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20646563696D616C73 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x22C3 SWAP2 SWAP1 PUSH2 0x43A2 JUMP JUMPDEST PUSH2 0x24F7 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x24C0 SWAP3 SWAP2 SWAP1 PUSH2 0x3E96 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2E12 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2557 JUMPI PUSH1 0x7 SLOAD PUSH2 0x1667 SWAP1 PUSH2 0xFFFF AND PUSH1 0x0 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x2EE7 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A205F61646170746572506172616D73206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1031329032B6B83A3C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x21 DUP6 ADD MSTORE PUSH1 0x41 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH1 0x61 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x49 ADD DUP2 MSTORE PUSH1 0x69 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xFFFF DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x2666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420736F757263652063686169 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1B881A59 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2675 DUP6 PUSH2 0x2FB7 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x26B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 LT ISZERO PUSH2 0x2788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E73756666696369656E74206C6971756964 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697479 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2792 DUP4 DUP3 PUSH2 0x400B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x27D3 DUP7 DUP6 PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD GT PUSH2 0x27E7 JUMPI DUP1 PUSH1 0x0 PUSH2 0x27F0 JUMP JUMPDEST PUSH2 0x27F0 DUP2 PUSH2 0x30F1 JUMP JUMPDEST POP PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x280E JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x285E JUMPI PUSH1 0xD SLOAD PUSH2 0x282A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP4 PUSH2 0x3122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4528 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x2873 JUMPI DUP5 PUSH2 0x2877 JUMP JUMPDEST PUSH2 0xDEAD JUMPDEST SWAP5 POP PUSH2 0x288D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP7 DUP4 PUSH2 0x24A1 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4528 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0x28C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x2927 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2943 DUP4 PUSH2 0x293E DUP6 DUP6 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297B SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2998 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x404A JUMP JUMPDEST SWAP1 POP PUSH2 0x29D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 ADDRESS DUP7 PUSH2 0x31B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2A02 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A43 SWAP2 SWAP1 PUSH2 0x404A JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4F DUP3 DUP3 PUSH2 0x4033 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x2A7E SWAP1 DUP5 PUSH2 0x43DB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E745344206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2AE1 DUP4 DUP4 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEE DUP9 DUP9 DUP9 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x2B58 SWAP1 PUSH2 0xFFFF AND DUP3 PUSH2 0x2B0A PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2B1A PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x373B JUMP JUMPDEST DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP PUSH2 0x31F0 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2943 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND PUSH2 0x43FD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2B9C DUP2 PUSH1 0x1F PUSH2 0x4201 JUMP JUMPDEST LT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2BE5 DUP3 DUP5 PUSH2 0x4201 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x2C29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x2C48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2C92 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x2C81 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2C69 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D10 JUMPI PUSH2 0x2D10 PUSH2 0x388A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D3A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x2D5C JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DA6 SWAP2 SWAP1 PUSH2 0x4386 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x2E03 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x441C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E67 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3395 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x2E88 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E88 SWAP2 SWAP1 PUSH2 0x447A JUMP JUMPDEST PUSH2 0x24F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF2 DUP4 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x2F60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x131E905C1C0E881B5A5B91D85CD31A5B5A5D081B9BDD081CD95D PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2F6A DUP4 DUP3 PUSH2 0x4201 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4C7A4170703A20676173206C696D697420697320746F6F206C6F77 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x4A EQ PUSH2 0x301A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C6964207061796C6F6164206C656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xCEE8D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x302F JUMPI PUSH2 0x302F PUSH2 0x4497 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3048 JUMPI PUSH2 0x3048 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x305E JUMPI PUSH2 0x305E PUSH2 0x43C5 JUMP JUMPDEST EQ PUSH2 0x30AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20756E6B6E6F776E207061636B65742074797065 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x21 DUP7 ADD MLOAD SWAP5 POP PUSH1 0x41 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x49 DUP7 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x49 DUP2 MLOAD DUP2 LT PUSH2 0x30D3 JUMPI PUSH2 0x30D3 PUSH2 0x4497 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x1 EQ SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x3105 SWAP2 SWAP1 PUSH2 0x43FD JUMP JUMPDEST PUSH2 0x310F SWAP2 SWAP1 PUSH2 0x43DB JUMP JUMPDEST SWAP1 POP PUSH2 0x311B DUP2 DUP5 PUSH2 0x4033 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3178 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x31B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x31B2 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x320E SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x323A SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3287 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x325C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3287 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x326A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x32F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x3303 DUP8 DUP8 MLOAD PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x335A SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x44AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3387 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22C3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3470 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 MLOAD LT ISZERO PUSH2 0x33F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x4C7A4170703A20696E76616C69642061646170746572506172616D73 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST POP PUSH1 0x22 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x3420 JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x34ED SWAP2 SWAP1 PUSH2 0x4386 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x352A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x352F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3540 DUP8 DUP4 DUP4 DUP8 PUSH2 0x354B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x35BA JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x35B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x35B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST POP DUP2 PUSH2 0x22C3 JUMP JUMPDEST PUSH2 0x22C3 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x35CF JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x3A1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x3614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x362B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x365A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x369A DUP8 PUSH2 0x3602 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x36B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36C2 DUP11 DUP4 DUP12 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x36D6 PUSH1 0x40 DUP11 ADD PUSH2 0x3661 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F9 DUP10 DUP3 DUP11 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x371D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2943 DUP3 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2943 DUP2 PUSH2 0x3726 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x376B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3774 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x37A2 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x37B2 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37F0 DUP5 PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x380B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3817 DUP7 DUP3 DUP8 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x384A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x386F DUP6 DUP6 PUSH2 0x3838 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x380B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x38C8 JUMPI PUSH2 0x38C8 PUSH2 0x388A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x38E9 JUMPI PUSH2 0x38E9 PUSH2 0x388A JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x390C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3915 DUP5 PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x3941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3954 PUSH2 0x394F DUP3 PUSH2 0x38D0 JUMP JUMPDEST PUSH2 0x38A0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x3969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH2 0x398E PUSH1 0x40 DUP6 ADD PUSH2 0x3661 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2943 DUP2 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39C5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x31B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3A06 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x39C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2943 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3A46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x3A51 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3A6E DUP9 PUSH1 0x60 DUP10 ADD PUSH2 0x3838 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3A89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36F9 DUP10 DUP3 DUP11 ADD PUSH2 0x3619 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AB1 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ABF PUSH1 0x20 DUP5 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3AE6 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3AF6 DUP2 PUSH2 0x3726 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3B21 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3B31 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP2 POP PUSH2 0x398E PUSH1 0x40 DUP6 ADD PUSH2 0x3661 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3B6F DUP8 PUSH1 0x40 DUP9 ADD PUSH2 0x3838 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B96 DUP9 DUP3 DUP10 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3BC5 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3AF6 DUP2 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3BED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BF6 DUP7 PUSH2 0x3602 JUMP JUMPDEST SWAP5 POP PUSH2 0x3C04 PUSH1 0x20 DUP8 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C44 DUP5 PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH2 0x3C52 PUSH1 0x20 DUP6 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C81 DUP6 PUSH2 0x3602 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C8F PUSH1 0x20 DUP7 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x3C9F DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3CC3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x384A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420746F6B656E206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 DUP3 LT ISZERO PUSH2 0x3D65 JUMPI PUSH2 0x3D65 PUSH2 0x3D35 JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3DA9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3D8F JUMPI PUSH2 0x3D8F PUSH2 0x3D35 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3D9C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x3D73 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3DC0 JUMPI POP PUSH1 0x1 PUSH2 0x2946 JUMP JUMPDEST DUP2 PUSH2 0x3DCD JUMPI POP PUSH1 0x0 PUSH2 0x2946 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3DE3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3DED JUMPI PUSH2 0x3E09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2946 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3DFE JUMPI PUSH2 0x3DFE PUSH2 0x3D35 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2946 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3E2C JUMPI POP DUP2 DUP2 EXP PUSH2 0x2946 JUMP JUMPDEST PUSH2 0x3E36 DUP4 DUP4 PUSH2 0x3D6E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3E4A JUMPI PUSH2 0x3E4A PUSH2 0x3D35 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2943 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0xA8DED6CADC84E4D2C8CECA7440CCCACA40DCDEE840CADCDEEACED PUSH1 0x2B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x22C0 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x3EAF JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3F24 SWAP1 DUP4 ADD DUP8 PUSH2 0x39EE JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3F3F DUP2 DUP6 DUP8 PUSH2 0x3EAF JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x151BDAD95B909C9A5919D94E881C185D5CD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E206973206E6F7420737570706F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4002 JUMPI PUSH2 0x4002 PUSH2 0x3D35 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x402B JUMPI PUSH2 0x402B PUSH2 0x3D35 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4045 JUMPI PUSH2 0x4045 PUSH2 0x3D35 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x405C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x24F7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x40AB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1341 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x40B7 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x40F8 JUMPI PUSH2 0x40F8 PUSH2 0x388A JUMP JUMPDEST PUSH2 0x410C DUP2 PUSH2 0x4106 DUP5 SLOAD PUSH2 0x3CAF JUMP JUMPDEST DUP5 PUSH2 0x4084 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x413B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4129 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x4133 DUP6 DUP3 PUSH2 0x40CA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x416A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x414B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4188 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3540 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x3EAF JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x41E4 PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x3EAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4214 JUMPI PUSH2 0x4214 PUSH2 0x3D35 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x4230 JUMPI PUSH2 0x4230 PUSH2 0x388A JUMP JUMPDEST PUSH2 0x4244 DUP4 PUSH2 0x423E DUP4 SLOAD PUSH2 0x3CAF JUMP JUMPDEST DUP4 PUSH2 0x4084 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4272 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x4260 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x426A DUP7 DUP3 PUSH2 0x40CA JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x42A3 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4283 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x42C0 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x42FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x430B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x4319 PUSH2 0x394F DUP3 PUSH2 0x38D0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x432E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x433F DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x39C2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4365 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x3540 DUP2 DUP6 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4398 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x39C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x43F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4417 JUMPI PUSH2 0x4417 PUSH2 0x3D35 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4439 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x445A DUP2 DUP7 PUSH2 0x39EE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x446E DUP2 DUP6 PUSH2 0x39EE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x448C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2943 DUP2 PUSH2 0x3997 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x44CA PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x39EE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x44DC DUP2 DUP9 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x3F3F DUP2 DUP6 PUSH2 0x39EE JUMP INVALID 0xBE PUSH16 0xF12FEC5087498D44BC85F1A83235A630 SWAP5 0x4A 0x1E 0x2D GAS PUSH26 0x38AFE810370A5867FD19781F43410D9594FD4C02DD1D98DBE990 SWAP10 0xCB 0xD2 0x22 0xD5 DUP6 BYTE PUSH15 0x183C468D33CAA26469706673582212 KECCAK256 MOD ISZERO PUSH32 0xDBA7C438AFB6B392B8C87B00BC1EF9130AAF3306D405C15B805787094864736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"433:12357:15:-:0;;;1519:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1623:18;;936:32:8;719:10:14;936:18:8;:32::i;:::-;-1:-1:-1;;;;;1201:42:2;;;-1:-1:-1;1716:1:9;1821:7;:22;1654:12:15::1;:28:::0;;-1:-1:-1;;1654:28:15::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;433:12357:15;;2426:187:8;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:8;;;-1:-1:-1;;;;;;2534:17:8;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:451:18:-;92:6;100;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:18;;230:42;;220:70;;286:1;283;276:12;220:70;359:2;344:18;;338:25;309:5;;-1:-1:-1;407:6:18;394:20;;382:33;;372:61;;429:1;426;419:12;372:61;452:7;442:17;;;14:451;;;;;:::o;:::-;433:12357:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BP_DENOMINATOR_2668":{"entryPoint":null,"id":2668,"parameterSlots":0,"returnSlots":0},"@DEFAULT_PAYLOAD_SIZE_LIMIT_448":{"entryPoint":null,"id":448,"parameterSlots":0,"returnSlots":0},"@SHARED_DECIMALS_2671":{"entryPoint":null,"id":2671,"parameterSlots":0,"returnSlots":0},"@_3307":{"entryPoint":null,"id":3307,"parameterSlots":0,"returnSlots":0},"@_LDtoSD_3820":{"entryPoint":10841,"id":3820,"parameterSlots":2,"returnSlots":1},"@_SDtoLD_3786":{"entryPoint":11106,"id":3786,"parameterSlots":2,"returnSlots":1},"@_blockingLzReceive_1068":{"entryPoint":9002,"id":1068,"parameterSlots":4,"returnSlots":0},"@_callOptionalReturn_2246":{"entryPoint":11794,"id":2246,"parameterSlots":2,"returnSlots":0},"@_checkAdapterParams_3770":{"entryPoint":9468,"id":3770,"parameterSlots":2,"returnSlots":0},"@_checkGasLimit_664":{"entryPoint":12007,"id":664,"parameterSlots":4,"returnSlots":0},"@_checkOwner_1682":{"entryPoint":8907,"id":1682,"parameterSlots":0,"returnSlots":0},"@_checkPayloadSize_711":{"entryPoint":13311,"id":711,"parameterSlots":2,"returnSlots":0},"@_decodeReceivePayload_3741":{"entryPoint":12215,"id":3741,"parameterSlots":1,"returnSlots":4},"@_encodeSendPayload_3687":{"entryPoint":9656,"id":3687,"parameterSlots":3,"returnSlots":1},"@_getGasLimit_681":{"entryPoint":13220,"id":681,"parameterSlots":1,"returnSlots":1},"@_lockTokenFrom_3558":{"entryPoint":10572,"id":3558,"parameterSlots":3,"returnSlots":1},"@_lzSend_622":{"entryPoint":12784,"id":622,"parameterSlots":6,"returnSlots":0},"@_msgSender_2637":{"entryPoint":null,"id":2637,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1793":{"entryPoint":null,"id":1793,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1785":{"entryPoint":10453,"id":1785,"parameterSlots":0,"returnSlots":0},"@_nonblockingLzReceive_3483":{"entryPoint":9730,"id":3483,"parameterSlots":4,"returnSlots":0},"@_payFee_3616":{"entryPoint":12529,"id":3616,"parameterSlots":1,"returnSlots":2},"@_redeemETHTo_3506":{"entryPoint":12578,"id":3506,"parameterSlots":3,"returnSlots":0},"@_removeDust_3838":{"entryPoint":10542,"id":3838,"parameterSlots":2,"returnSlots":1},"@_revert_2624":{"entryPoint":null,"id":2624,"parameterSlots":2,"returnSlots":0},"@_sendToken_3656":{"entryPoint":10967,"id":3656,"parameterSlots":7,"returnSlots":0},"@_storeFailedMessage_1102":{"entryPoint":11637,"id":1102,"parameterSlots":5,"returnSlots":0},"@_tokenDecimals_3591":{"entryPoint":9123,"id":3591,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_1739":{"entryPoint":11419,"id":1739,"parameterSlots":1,"returnSlots":0},"@accruedFeeLD_3336":{"entryPoint":6321,"id":3336,"parameterSlots":1,"returnSlots":1},"@addressToBytes32_1626":{"entryPoint":null,"id":1626,"parameterSlots":1,"returnSlots":1},"@aptosChainId_2673":{"entryPoint":null,"id":2673,"parameterSlots":0,"returnSlots":0},"@bridgeFeeBP_2675":{"entryPoint":null,"id":2675,"parameterSlots":0,"returnSlots":0},"@emergencyWithdrawEnabled_2699":{"entryPoint":null,"id":2699,"parameterSlots":0,"returnSlots":0},"@emergencyWithdrawTime_2701":{"entryPoint":null,"id":2701,"parameterSlots":0,"returnSlots":0},"@enableEmergencyWithdraw_3296":{"entryPoint":8208,"id":3296,"parameterSlots":1,"returnSlots":0},"@excessivelySafeCall_372":{"entryPoint":11499,"id":372,"parameterSlots":4,"returnSlots":2},"@failedMessages_997":{"entryPoint":null,"id":997,"parameterSlots":0,"returnSlots":0},"@forceResumeReceive_808":{"entryPoint":4231,"id":808,"parameterSlots":3,"returnSlots":0},"@functionCallWithValue_2449":{"entryPoint":13424,"id":2449,"parameterSlots":4,"returnSlots":1},"@functionCall_2385":{"entryPoint":13205,"id":2385,"parameterSlots":3,"returnSlots":1},"@getConfig_736":{"entryPoint":8728,"id":736,"parameterSlots":4,"returnSlots":1},"@getTrustedRemoteAddress_888":{"entryPoint":6043,"id":888,"parameterSlots":1,"returnSlots":1},"@globalPaused_2697":{"entryPoint":null,"id":2697,"parameterSlots":0,"returnSlots":0},"@isContract_2313":{"entryPoint":null,"id":2313,"parameterSlots":1,"returnSlots":1},"@isTrustedRemote_970":{"entryPoint":4027,"id":970,"parameterSlots":3,"returnSlots":1},"@ld2sdRates_2691":{"entryPoint":null,"id":2691,"parameterSlots":0,"returnSlots":0},"@lzEndpoint_451":{"entryPoint":null,"id":451,"parameterSlots":0,"returnSlots":0},"@lzReceive_562":{"entryPoint":2641,"id":562,"parameterSlots":6,"returnSlots":0},"@minDstGasLookup_461":{"entryPoint":null,"id":461,"parameterSlots":0,"returnSlots":0},"@nonblockingLzReceive_1132":{"entryPoint":4717,"id":1132,"parameterSlots":6,"returnSlots":0},"@owner_1668":{"entryPoint":5651,"id":1668,"parameterSlots":0,"returnSlots":1},"@pausedTokens_2687":{"entryPoint":null,"id":2687,"parameterSlots":0,"returnSlots":0},"@payloadSizeLimitLookup_465":{"entryPoint":null,"id":465,"parameterSlots":0,"returnSlots":0},"@precrime_467":{"entryPoint":null,"id":467,"parameterSlots":0,"returnSlots":0},"@quoteForSend_2985":{"entryPoint":4365,"id":2985,"parameterSlots":3,"returnSlots":2},"@registerToken_3045":{"entryPoint":3334,"id":3045,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_3303":{"entryPoint":5022,"id":3303,"parameterSlots":0,"returnSlots":0},"@retryMessage_1211":{"entryPoint":7674,"id":1211,"parameterSlots":6,"returnSlots":0},"@safeTransferFrom_1979":{"entryPoint":12728,"id":1979,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1952":{"entryPoint":9377,"id":1952,"parameterSlots":3,"returnSlots":0},"@sendETHToAptos_2932":{"entryPoint":6783,"id":2932,"parameterSlots":5,"returnSlots":0},"@sendToAptos_2829":{"entryPoint":5186,"id":2829,"parameterSlots":6,"returnSlots":0},"@setAptosChainId_3147":{"entryPoint":6710,"id":3147,"parameterSlots":1,"returnSlots":0},"@setBridgeFeeBP_3068":{"entryPoint":2486,"id":3068,"parameterSlots":1,"returnSlots":0},"@setConfig_760":{"entryPoint":7525,"id":760,"parameterSlots":5,"returnSlots":0},"@setGlobalPause_3110":{"entryPoint":4937,"id":3110,"parameterSlots":1,"returnSlots":0},"@setMinDstGas_930":{"entryPoint":8326,"id":930,"parameterSlots":3,"returnSlots":0},"@setPayloadSizeLimit_946":{"entryPoint":3766,"id":946,"parameterSlots":2,"returnSlots":0},"@setPrecrime_904":{"entryPoint":6627,"id":904,"parameterSlots":1,"returnSlots":0},"@setReceiveVersion_790":{"entryPoint":3943,"id":790,"parameterSlots":1,"returnSlots":0},"@setSendVersion_775":{"entryPoint":3197,"id":775,"parameterSlots":1,"returnSlots":0},"@setTokenPause_3131":{"entryPoint":7425,"id":3131,"parameterSlots":2,"returnSlots":0},"@setTrustedRemoteAddress_857":{"entryPoint":6490,"id":857,"parameterSlots":3,"returnSlots":0},"@setTrustedRemote_829":{"entryPoint":8517,"id":829,"parameterSlots":3,"returnSlots":0},"@setUseCustomAdapterParams_3163":{"entryPoint":8432,"id":3163,"parameterSlots":1,"returnSlots":0},"@setWETH_3094":{"entryPoint":4596,"id":3094,"parameterSlots":1,"returnSlots":0},"@slice_63":{"entryPoint":11150,"id":63,"parameterSlots":3,"returnSlots":1},"@supportedTokens_2683":{"entryPoint":null,"id":2683,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1719":{"entryPoint":8607,"id":1719,"parameterSlots":1,"returnSlots":0},"@trustedRemoteLookup_455":{"entryPoint":5032,"id":455,"parameterSlots":0,"returnSlots":0},"@tvlSDs_2679":{"entryPoint":null,"id":2679,"parameterSlots":0,"returnSlots":0},"@useCustomAdapterParams_2695":{"entryPoint":null,"id":2695,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_2580":{"entryPoint":13643,"id":2580,"parameterSlots":4,"returnSlots":1},"@weth_2693":{"entryPoint":null,"id":2693,"parameterSlots":0,"returnSlots":0},"@withdrawEmergency_3269":{"entryPoint":5666,"id":3269,"parameterSlots":2,"returnSlots":0},"@withdrawFee_3202":{"entryPoint":3797,"id":3202,"parameterSlots":3,"returnSlots":0},"@withdrawTVL_3243":{"entryPoint":5739,"id":3243,"parameterSlots":3,"returnSlots":0},"abi_decode_bytes_calldata":{"entryPoint":13849,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_CallParams_calldata":{"entryPoint":14392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":15048,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":14210,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint64":{"entryPoint":15105,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":15271,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_uint256t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":14893,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool":{"entryPoint":14757,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":17530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":15167,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":17106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":14416,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16":{"entryPoint":14091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_bytes_calldata_ptr":{"entryPoint":14290,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr":{"entryPoint":13944,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64":{"entryPoint":14583,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16":{"entryPoint":14997,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256":{"entryPoint":15458,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16t_uint256":{"entryPoint":15398,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr":{"entryPoint":15317,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_uint256":{"entryPoint":14168,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":13801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":16458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":16204,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":17314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint16":{"entryPoint":13826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":13921,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":14830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":16047,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15587,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":16483,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint8_t_bytes32_t_bytes32_t_uint64__to_t_uint8_t_bytes32_t_bytes32_t_uint64__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":14372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":16022,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15969,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_464ef14f816d65197a5bf9eb8196c8732496061488e59d144c334e1537b250f8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51de26679b1ae151f519d14d91d238fe2ca5b6374fe0e7054a2aac9a3771c277__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_773cc5454c8f282a7d7e9ccda0de0a5a2966ea506b9d9c70b152dcc6cc19a53c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16285,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f20599b10bbd05585578c7efc5a9b9f3631294abee5bf88053b95f5094f8006c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":14275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_calldata_ptr__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":16118,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":16088,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed":{"entryPoint":16838,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17581,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17224,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17436,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":16792,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":14496,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":14544,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16897,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":16352,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":17371,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":15726,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":15954,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":15793,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":17405,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":16435,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint64":{"entryPoint":16395,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":15691,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":16516,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage":{"entryPoint":16921,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":16607,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":14786,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":15535,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16586,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15669,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":17349,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17559,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14474,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":14118,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":14743,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:44092:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:18"},"nodeType":"YulFunctionCall","src":"132:12:18"},"nodeType":"YulExpressionStatement","src":"132:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:18"},"nodeType":"YulFunctionCall","src":"101:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:18"},"nodeType":"YulFunctionCall","src":"97:32:18"},"nodeType":"YulIf","src":"94:52:18"},{"nodeType":"YulAssignment","src":"155:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:18"},"nodeType":"YulFunctionCall","src":"165:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:18","type":""}],"src":"14:180:18"},{"body":{"nodeType":"YulBlock","src":"247:111:18","statements":[{"nodeType":"YulAssignment","src":"257:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"279:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"266:12:18"},"nodeType":"YulFunctionCall","src":"266:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"257:5:18"}]},{"body":{"nodeType":"YulBlock","src":"336:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"345:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"348:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"338:6:18"},"nodeType":"YulFunctionCall","src":"338:12:18"},"nodeType":"YulExpressionStatement","src":"338:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"308:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"319:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"326:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"315:3:18"},"nodeType":"YulFunctionCall","src":"315:18:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"305:2:18"},"nodeType":"YulFunctionCall","src":"305:29:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"298:6:18"},"nodeType":"YulFunctionCall","src":"298:37:18"},"nodeType":"YulIf","src":"295:57:18"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"226:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"237:5:18","type":""}],"src":"199:159:18"},{"body":{"nodeType":"YulBlock","src":"435:275:18","statements":[{"body":{"nodeType":"YulBlock","src":"484:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"496:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"486:6:18"},"nodeType":"YulFunctionCall","src":"486:12:18"},"nodeType":"YulExpressionStatement","src":"486:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"463:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"471:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"459:3:18"},"nodeType":"YulFunctionCall","src":"459:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"478:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"455:3:18"},"nodeType":"YulFunctionCall","src":"455:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"448:6:18"},"nodeType":"YulFunctionCall","src":"448:35:18"},"nodeType":"YulIf","src":"445:55:18"},{"nodeType":"YulAssignment","src":"509:30:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"532:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"519:12:18"},"nodeType":"YulFunctionCall","src":"519:20:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"509:6:18"}]},{"body":{"nodeType":"YulBlock","src":"582:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"591:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"594:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"584:6:18"},"nodeType":"YulFunctionCall","src":"584:12:18"},"nodeType":"YulExpressionStatement","src":"584:12:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"554:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"570:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"574:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"566:3:18"},"nodeType":"YulFunctionCall","src":"566:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"578:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"562:3:18"},"nodeType":"YulFunctionCall","src":"562:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"551:2:18"},"nodeType":"YulFunctionCall","src":"551:30:18"},"nodeType":"YulIf","src":"548:50:18"},{"nodeType":"YulAssignment","src":"607:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"623:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"631:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"619:3:18"},"nodeType":"YulFunctionCall","src":"619:17:18"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"607:8:18"}]},{"body":{"nodeType":"YulBlock","src":"688:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"697:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"700:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"690:6:18"},"nodeType":"YulFunctionCall","src":"690:12:18"},"nodeType":"YulExpressionStatement","src":"690:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"659:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"667:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"655:3:18"},"nodeType":"YulFunctionCall","src":"655:19:18"},{"kind":"number","nodeType":"YulLiteral","src":"676:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"651:3:18"},"nodeType":"YulFunctionCall","src":"651:30:18"},{"name":"end","nodeType":"YulIdentifier","src":"683:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"648:2:18"},"nodeType":"YulFunctionCall","src":"648:39:18"},"nodeType":"YulIf","src":"645:59:18"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"398:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"406:3:18","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"414:8:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"424:6:18","type":""}],"src":"363:347:18"},{"body":{"nodeType":"YulBlock","src":"763:123:18","statements":[{"nodeType":"YulAssignment","src":"773:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"795:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"782:12:18"},"nodeType":"YulFunctionCall","src":"782:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"773:5:18"}]},{"body":{"nodeType":"YulBlock","src":"864:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"873:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"876:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"866:6:18"},"nodeType":"YulFunctionCall","src":"866:12:18"},"nodeType":"YulExpressionStatement","src":"866:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"824:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"850:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"854:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"846:3:18"},"nodeType":"YulFunctionCall","src":"846:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"858:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"842:3:18"},"nodeType":"YulFunctionCall","src":"842:18:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"831:3:18"},"nodeType":"YulFunctionCall","src":"831:30:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"821:2:18"},"nodeType":"YulFunctionCall","src":"821:41:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"814:6:18"},"nodeType":"YulFunctionCall","src":"814:49:18"},"nodeType":"YulIf","src":"811:69:18"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"742:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:18","type":""}],"src":"715:171:18"},{"body":{"nodeType":"YulBlock","src":"1048:705:18","statements":[{"body":{"nodeType":"YulBlock","src":"1095:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1104:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1107:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1097:6:18"},"nodeType":"YulFunctionCall","src":"1097:12:18"},"nodeType":"YulExpressionStatement","src":"1097:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1069:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1065:3:18"},"nodeType":"YulFunctionCall","src":"1065:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1090:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1061:3:18"},"nodeType":"YulFunctionCall","src":"1061:33:18"},"nodeType":"YulIf","src":"1058:53:18"},{"nodeType":"YulAssignment","src":"1120:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1148:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1130:17:18"},"nodeType":"YulFunctionCall","src":"1130:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1120:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1167:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1198:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1209:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1194:3:18"},"nodeType":"YulFunctionCall","src":"1194:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1181:12:18"},"nodeType":"YulFunctionCall","src":"1181:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1171:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1222:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1240:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1244:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1236:3:18"},"nodeType":"YulFunctionCall","src":"1236:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1248:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1232:3:18"},"nodeType":"YulFunctionCall","src":"1232:18:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1226:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1277:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1286:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1289:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1279:6:18"},"nodeType":"YulFunctionCall","src":"1279:12:18"},"nodeType":"YulExpressionStatement","src":"1279:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1265:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1273:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1262:2:18"},"nodeType":"YulFunctionCall","src":"1262:14:18"},"nodeType":"YulIf","src":"1259:34:18"},{"nodeType":"YulVariableDeclaration","src":"1302:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1358:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1369:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:18"},"nodeType":"YulFunctionCall","src":"1354:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1378:7:18"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1328:25:18"},"nodeType":"YulFunctionCall","src":"1328:58:18"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1306:8:18","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1316:8:18","type":""}]},{"nodeType":"YulAssignment","src":"1395:18:18","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1405:8:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1395:6:18"}]},{"nodeType":"YulAssignment","src":"1422:18:18","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1432:8:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1422:6:18"}]},{"nodeType":"YulAssignment","src":"1449:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1481:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1492:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:18"},"nodeType":"YulFunctionCall","src":"1477:18:18"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"1459:17:18"},"nodeType":"YulFunctionCall","src":"1459:37:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1449:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1505:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1549:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1534:3:18"},"nodeType":"YulFunctionCall","src":"1534:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1521:12:18"},"nodeType":"YulFunctionCall","src":"1521:32:18"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1509:8:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1582:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1594:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1584:6:18"},"nodeType":"YulFunctionCall","src":"1584:12:18"},"nodeType":"YulExpressionStatement","src":"1584:12:18"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1568:8:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1578:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1565:2:18"},"nodeType":"YulFunctionCall","src":"1565:16:18"},"nodeType":"YulIf","src":"1562:36:18"},{"nodeType":"YulVariableDeclaration","src":"1607:86:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1663:9:18"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1674:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1659:3:18"},"nodeType":"YulFunctionCall","src":"1659:24:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:18"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1633:25:18"},"nodeType":"YulFunctionCall","src":"1633:60:18"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"1611:8:18","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"1621:8:18","type":""}]},{"nodeType":"YulAssignment","src":"1702:18:18","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1712:8:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1702:6:18"}]},{"nodeType":"YulAssignment","src":"1729:18:18","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"1739:8:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1729:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"974:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"985:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"997:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1005:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1013:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1021:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1029:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1037:6:18","type":""}],"src":"891:862:18"},{"body":{"nodeType":"YulBlock","src":"1827:115:18","statements":[{"body":{"nodeType":"YulBlock","src":"1873:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1882:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1885:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1875:6:18"},"nodeType":"YulFunctionCall","src":"1875:12:18"},"nodeType":"YulExpressionStatement","src":"1875:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1848:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1857:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1844:3:18"},"nodeType":"YulFunctionCall","src":"1844:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1869:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1840:3:18"},"nodeType":"YulFunctionCall","src":"1840:32:18"},"nodeType":"YulIf","src":"1837:52:18"},{"nodeType":"YulAssignment","src":"1898:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1908:17:18"},"nodeType":"YulFunctionCall","src":"1908:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1898:6:18"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1793:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1804:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1816:6:18","type":""}],"src":"1758:184:18"},{"body":{"nodeType":"YulBlock","src":"1992:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"2056:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2065:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2068:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2058:6:18"},"nodeType":"YulFunctionCall","src":"2058:12:18"},"nodeType":"YulExpressionStatement","src":"2058:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2015:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2026:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2041:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2046:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2037:3:18"},"nodeType":"YulFunctionCall","src":"2037:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2050:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2033:3:18"},"nodeType":"YulFunctionCall","src":"2033:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2022:3:18"},"nodeType":"YulFunctionCall","src":"2022:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2012:2:18"},"nodeType":"YulFunctionCall","src":"2012:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2005:6:18"},"nodeType":"YulFunctionCall","src":"2005:50:18"},"nodeType":"YulIf","src":"2002:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1981:5:18","type":""}],"src":"1947:131:18"},{"body":{"nodeType":"YulBlock","src":"2153:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"2199:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2208:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2211:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2201:6:18"},"nodeType":"YulFunctionCall","src":"2201:12:18"},"nodeType":"YulExpressionStatement","src":"2201:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2174:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2183:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2170:3:18"},"nodeType":"YulFunctionCall","src":"2170:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2195:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2166:3:18"},"nodeType":"YulFunctionCall","src":"2166:32:18"},"nodeType":"YulIf","src":"2163:52:18"},{"nodeType":"YulVariableDeclaration","src":"2224:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2250:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2237:12:18"},"nodeType":"YulFunctionCall","src":"2237:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2228:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2294:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2269:24:18"},"nodeType":"YulFunctionCall","src":"2269:31:18"},"nodeType":"YulExpressionStatement","src":"2269:31:18"},{"nodeType":"YulAssignment","src":"2309:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2319:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2309:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2119:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2130:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2142:6:18","type":""}],"src":"2083:247:18"},{"body":{"nodeType":"YulBlock","src":"2421:166:18","statements":[{"body":{"nodeType":"YulBlock","src":"2467:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2476:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2479:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2469:6:18"},"nodeType":"YulFunctionCall","src":"2469:12:18"},"nodeType":"YulExpressionStatement","src":"2469:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2442:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2451:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2438:3:18"},"nodeType":"YulFunctionCall","src":"2438:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2463:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2434:3:18"},"nodeType":"YulFunctionCall","src":"2434:32:18"},"nodeType":"YulIf","src":"2431:52:18"},{"nodeType":"YulAssignment","src":"2492:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2520:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"2502:17:18"},"nodeType":"YulFunctionCall","src":"2502:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2492:6:18"}]},{"nodeType":"YulAssignment","src":"2539:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2566:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2577:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2562:3:18"},"nodeType":"YulFunctionCall","src":"2562:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2549:12:18"},"nodeType":"YulFunctionCall","src":"2549:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2539:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2379:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2390:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2402:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2410:6:18","type":""}],"src":"2335:252:18"},{"body":{"nodeType":"YulBlock","src":"2696:352:18","statements":[{"body":{"nodeType":"YulBlock","src":"2742:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2751:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2754:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2744:6:18"},"nodeType":"YulFunctionCall","src":"2744:12:18"},"nodeType":"YulExpressionStatement","src":"2744:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2717:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2726:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2713:3:18"},"nodeType":"YulFunctionCall","src":"2713:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2738:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2709:3:18"},"nodeType":"YulFunctionCall","src":"2709:32:18"},"nodeType":"YulIf","src":"2706:52:18"},{"nodeType":"YulVariableDeclaration","src":"2767:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2793:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2780:12:18"},"nodeType":"YulFunctionCall","src":"2780:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2771:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2837:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2812:24:18"},"nodeType":"YulFunctionCall","src":"2812:31:18"},"nodeType":"YulExpressionStatement","src":"2812:31:18"},{"nodeType":"YulAssignment","src":"2852:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2862:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2852:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"2876:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2908:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2919:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2904:3:18"},"nodeType":"YulFunctionCall","src":"2904:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2891:12:18"},"nodeType":"YulFunctionCall","src":"2891:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2880:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2957:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2932:24:18"},"nodeType":"YulFunctionCall","src":"2932:33:18"},"nodeType":"YulExpressionStatement","src":"2932:33:18"},{"nodeType":"YulAssignment","src":"2974:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2984:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2974:6:18"}]},{"nodeType":"YulAssignment","src":"3000:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3027:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3038:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3023:3:18"},"nodeType":"YulFunctionCall","src":"3023:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3010:12:18"},"nodeType":"YulFunctionCall","src":"3010:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3000:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2646:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2657:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2669:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2677:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2685:6:18","type":""}],"src":"2592:456:18"},{"body":{"nodeType":"YulBlock","src":"3154:76:18","statements":[{"nodeType":"YulAssignment","src":"3164:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3176:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3187:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:18"},"nodeType":"YulFunctionCall","src":"3172:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3164:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3206:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"3217:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3199:6:18"},"nodeType":"YulFunctionCall","src":"3199:25:18"},"nodeType":"YulExpressionStatement","src":"3199:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3123:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3134:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3145:4:18","type":""}],"src":"3053:177:18"},{"body":{"nodeType":"YulBlock","src":"3334:89:18","statements":[{"nodeType":"YulAssignment","src":"3344:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3356:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3367:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3352:3:18"},"nodeType":"YulFunctionCall","src":"3352:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3344:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3386:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3401:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3409:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3397:3:18"},"nodeType":"YulFunctionCall","src":"3397:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3379:6:18"},"nodeType":"YulFunctionCall","src":"3379:38:18"},"nodeType":"YulExpressionStatement","src":"3379:38:18"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3303:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3314:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3325:4:18","type":""}],"src":"3235:188:18"},{"body":{"nodeType":"YulBlock","src":"3533:376:18","statements":[{"body":{"nodeType":"YulBlock","src":"3579:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3588:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3591:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3581:6:18"},"nodeType":"YulFunctionCall","src":"3581:12:18"},"nodeType":"YulExpressionStatement","src":"3581:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3554:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3563:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3550:3:18"},"nodeType":"YulFunctionCall","src":"3550:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3575:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3546:3:18"},"nodeType":"YulFunctionCall","src":"3546:32:18"},"nodeType":"YulIf","src":"3543:52:18"},{"nodeType":"YulAssignment","src":"3604:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3632:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"3614:17:18"},"nodeType":"YulFunctionCall","src":"3614:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3604:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3651:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3682:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3693:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3678:3:18"},"nodeType":"YulFunctionCall","src":"3678:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3665:12:18"},"nodeType":"YulFunctionCall","src":"3665:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3655:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3740:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3749:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3752:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3742:6:18"},"nodeType":"YulFunctionCall","src":"3742:12:18"},"nodeType":"YulExpressionStatement","src":"3742:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3712:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3728:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3732:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3724:3:18"},"nodeType":"YulFunctionCall","src":"3724:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"3736:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3720:3:18"},"nodeType":"YulFunctionCall","src":"3720:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3709:2:18"},"nodeType":"YulFunctionCall","src":"3709:30:18"},"nodeType":"YulIf","src":"3706:50:18"},{"nodeType":"YulVariableDeclaration","src":"3765:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3821:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3832:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3817:3:18"},"nodeType":"YulFunctionCall","src":"3817:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3841:7:18"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"3791:25:18"},"nodeType":"YulFunctionCall","src":"3791:58:18"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"3769:8:18","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"3779:8:18","type":""}]},{"nodeType":"YulAssignment","src":"3858:18:18","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"3868:8:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3858:6:18"}]},{"nodeType":"YulAssignment","src":"3885:18:18","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"3895:8:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3885:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3483:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3494:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3506:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3514:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3522:6:18","type":""}],"src":"3428:481:18"},{"body":{"nodeType":"YulBlock","src":"4009:92:18","statements":[{"nodeType":"YulAssignment","src":"4019:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4042:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:18"},"nodeType":"YulFunctionCall","src":"4027:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4019:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4061:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4086:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4079:6:18"},"nodeType":"YulFunctionCall","src":"4079:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4072:6:18"},"nodeType":"YulFunctionCall","src":"4072:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4054:6:18"},"nodeType":"YulFunctionCall","src":"4054:41:18"},"nodeType":"YulExpressionStatement","src":"4054:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3978:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3989:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4000:4:18","type":""}],"src":"3914:187:18"},{"body":{"nodeType":"YulBlock","src":"4207:102:18","statements":[{"nodeType":"YulAssignment","src":"4217:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4229:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4240:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4225:3:18"},"nodeType":"YulFunctionCall","src":"4225:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4217:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4259:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4274:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4290:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4295:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4286:3:18"},"nodeType":"YulFunctionCall","src":"4286:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4299:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4282:3:18"},"nodeType":"YulFunctionCall","src":"4282:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4270:3:18"},"nodeType":"YulFunctionCall","src":"4270:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4252:6:18"},"nodeType":"YulFunctionCall","src":"4252:51:18"},"nodeType":"YulExpressionStatement","src":"4252:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4176:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4187:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4198:4:18","type":""}],"src":"4106:203:18"},{"body":{"nodeType":"YulBlock","src":"4387:85:18","statements":[{"body":{"nodeType":"YulBlock","src":"4426:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4435:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4438:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4428:6:18"},"nodeType":"YulFunctionCall","src":"4428:12:18"},"nodeType":"YulExpressionStatement","src":"4428:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4408:3:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4413:6:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4404:3:18"},"nodeType":"YulFunctionCall","src":"4404:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"4422:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4400:3:18"},"nodeType":"YulFunctionCall","src":"4400:25:18"},"nodeType":"YulIf","src":"4397:45:18"},{"nodeType":"YulAssignment","src":"4451:15:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"4460:6:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4451:5:18"}]}]},"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4361:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4369:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4377:5:18","type":""}],"src":"4314:158:18"},{"body":{"nodeType":"YulBlock","src":"4613:405:18","statements":[{"body":{"nodeType":"YulBlock","src":"4659:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4668:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4671:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4661:6:18"},"nodeType":"YulFunctionCall","src":"4661:12:18"},"nodeType":"YulExpressionStatement","src":"4661:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4634:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4643:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4630:3:18"},"nodeType":"YulFunctionCall","src":"4630:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4655:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4626:3:18"},"nodeType":"YulFunctionCall","src":"4626:32:18"},"nodeType":"YulIf","src":"4623:52:18"},{"nodeType":"YulAssignment","src":"4684:67:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4732:9:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4743:7:18"}],"functionName":{"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulIdentifier","src":"4694:37:18"},"nodeType":"YulFunctionCall","src":"4694:57:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4684:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"4760:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4802:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:18"},"nodeType":"YulFunctionCall","src":"4787:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4774:12:18"},"nodeType":"YulFunctionCall","src":"4774:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4764:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4849:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4858:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4861:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4851:6:18"},"nodeType":"YulFunctionCall","src":"4851:12:18"},"nodeType":"YulExpressionStatement","src":"4851:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4821:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4837:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4841:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4833:3:18"},"nodeType":"YulFunctionCall","src":"4833:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"4845:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4829:3:18"},"nodeType":"YulFunctionCall","src":"4829:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4818:2:18"},"nodeType":"YulFunctionCall","src":"4818:30:18"},"nodeType":"YulIf","src":"4815:50:18"},{"nodeType":"YulVariableDeclaration","src":"4874:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4941:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:18"},"nodeType":"YulFunctionCall","src":"4926:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4950:7:18"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4900:25:18"},"nodeType":"YulFunctionCall","src":"4900:58:18"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"4878:8:18","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"4888:8:18","type":""}]},{"nodeType":"YulAssignment","src":"4967:18:18","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4977:8:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4967:6:18"}]},{"nodeType":"YulAssignment","src":"4994:18:18","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"5004:8:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4994:6:18"}]}]},"name":"abi_decode_tuple_t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4563:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4574:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4586:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4594:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4602:6:18","type":""}],"src":"4477:541:18"},{"body":{"nodeType":"YulBlock","src":"5152:119:18","statements":[{"nodeType":"YulAssignment","src":"5162:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5174:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5185:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5170:3:18"},"nodeType":"YulFunctionCall","src":"5170:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5162:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5204:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"5215:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:18"},"nodeType":"YulFunctionCall","src":"5197:25:18"},"nodeType":"YulExpressionStatement","src":"5197:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5242:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5253:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5238:3:18"},"nodeType":"YulFunctionCall","src":"5238:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"5258:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5231:6:18"},"nodeType":"YulFunctionCall","src":"5231:34:18"},"nodeType":"YulExpressionStatement","src":"5231:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5113:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5124:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5132:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5143:4:18","type":""}],"src":"5023:248:18"},{"body":{"nodeType":"YulBlock","src":"5308:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5325:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5332:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5337:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5328:3:18"},"nodeType":"YulFunctionCall","src":"5328:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5318:6:18"},"nodeType":"YulFunctionCall","src":"5318:31:18"},"nodeType":"YulExpressionStatement","src":"5318:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5365:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5368:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5358:6:18"},"nodeType":"YulFunctionCall","src":"5358:15:18"},"nodeType":"YulExpressionStatement","src":"5358:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5389:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5392:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5382:6:18"},"nodeType":"YulFunctionCall","src":"5382:15:18"},"nodeType":"YulExpressionStatement","src":"5382:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5276:127:18"},{"body":{"nodeType":"YulBlock","src":"5453:230:18","statements":[{"nodeType":"YulAssignment","src":"5463:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5479:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5473:5:18"},"nodeType":"YulFunctionCall","src":"5473:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5463:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5491:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5513:6:18"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5529:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"5535:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5525:3:18"},"nodeType":"YulFunctionCall","src":"5525:13:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5544:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5540:3:18"},"nodeType":"YulFunctionCall","src":"5540:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5521:3:18"},"nodeType":"YulFunctionCall","src":"5521:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:18"},"nodeType":"YulFunctionCall","src":"5509:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5495:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5624:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5626:16:18"},"nodeType":"YulFunctionCall","src":"5626:18:18"},"nodeType":"YulExpressionStatement","src":"5626:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5567:10:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5587:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5591:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5583:3:18"},"nodeType":"YulFunctionCall","src":"5583:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"5595:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5579:3:18"},"nodeType":"YulFunctionCall","src":"5579:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5564:2:18"},"nodeType":"YulFunctionCall","src":"5564:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5603:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5615:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5600:2:18"},"nodeType":"YulFunctionCall","src":"5600:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5561:2:18"},"nodeType":"YulFunctionCall","src":"5561:62:18"},"nodeType":"YulIf","src":"5558:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5662:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5666:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5655:6:18"},"nodeType":"YulFunctionCall","src":"5655:22:18"},"nodeType":"YulExpressionStatement","src":"5655:22:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5433:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5442:6:18","type":""}],"src":"5408:275:18"},{"body":{"nodeType":"YulBlock","src":"5745:129:18","statements":[{"body":{"nodeType":"YulBlock","src":"5789:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5791:16:18"},"nodeType":"YulFunctionCall","src":"5791:18:18"},"nodeType":"YulExpressionStatement","src":"5791:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5761:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5777:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5781:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5773:3:18"},"nodeType":"YulFunctionCall","src":"5773:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"5785:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5769:3:18"},"nodeType":"YulFunctionCall","src":"5769:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5758:2:18"},"nodeType":"YulFunctionCall","src":"5758:30:18"},"nodeType":"YulIf","src":"5755:56:18"},{"nodeType":"YulAssignment","src":"5820:48:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5840:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5848:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5836:3:18"},"nodeType":"YulFunctionCall","src":"5836:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5857:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5853:3:18"},"nodeType":"YulFunctionCall","src":"5853:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5832:3:18"},"nodeType":"YulFunctionCall","src":"5832:29:18"},{"kind":"number","nodeType":"YulLiteral","src":"5863:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5828:3:18"},"nodeType":"YulFunctionCall","src":"5828:40:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5820:4:18"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5725:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5736:4:18","type":""}],"src":"5688:186:18"},{"body":{"nodeType":"YulBlock","src":"5990:704:18","statements":[{"body":{"nodeType":"YulBlock","src":"6036:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6045:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6048:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6038:6:18"},"nodeType":"YulFunctionCall","src":"6038:12:18"},"nodeType":"YulExpressionStatement","src":"6038:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6011:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6020:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6007:3:18"},"nodeType":"YulFunctionCall","src":"6007:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6032:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6003:3:18"},"nodeType":"YulFunctionCall","src":"6003:32:18"},"nodeType":"YulIf","src":"6000:52:18"},{"nodeType":"YulAssignment","src":"6061:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6089:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"6071:17:18"},"nodeType":"YulFunctionCall","src":"6071:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6061:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"6108:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6139:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6150:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6135:3:18"},"nodeType":"YulFunctionCall","src":"6135:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6122:12:18"},"nodeType":"YulFunctionCall","src":"6122:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6112:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6197:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6206:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6209:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6199:6:18"},"nodeType":"YulFunctionCall","src":"6199:12:18"},"nodeType":"YulExpressionStatement","src":"6199:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6169:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6185:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"6189:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6181:3:18"},"nodeType":"YulFunctionCall","src":"6181:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"6193:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6177:3:18"},"nodeType":"YulFunctionCall","src":"6177:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6166:2:18"},"nodeType":"YulFunctionCall","src":"6166:30:18"},"nodeType":"YulIf","src":"6163:50:18"},{"nodeType":"YulVariableDeclaration","src":"6222:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6236:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6247:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6232:3:18"},"nodeType":"YulFunctionCall","src":"6232:22:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6226:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6302:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6311:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6314:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6304:6:18"},"nodeType":"YulFunctionCall","src":"6304:12:18"},"nodeType":"YulExpressionStatement","src":"6304:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6281:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"6285:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6277:3:18"},"nodeType":"YulFunctionCall","src":"6277:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6292:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6273:3:18"},"nodeType":"YulFunctionCall","src":"6273:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6266:6:18"},"nodeType":"YulFunctionCall","src":"6266:35:18"},"nodeType":"YulIf","src":"6263:55:18"},{"nodeType":"YulVariableDeclaration","src":"6327:26:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6350:2:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6337:12:18"},"nodeType":"YulFunctionCall","src":"6337:16:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6331:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6362:61:18","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6419:2:18"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"6391:27:18"},"nodeType":"YulFunctionCall","src":"6391:31:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6375:15:18"},"nodeType":"YulFunctionCall","src":"6375:48:18"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"6366:5:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6439:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"6446:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6432:6:18"},"nodeType":"YulFunctionCall","src":"6432:17:18"},"nodeType":"YulExpressionStatement","src":"6432:17:18"},{"body":{"nodeType":"YulBlock","src":"6495:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6504:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6507:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6497:6:18"},"nodeType":"YulFunctionCall","src":"6497:12:18"},"nodeType":"YulExpressionStatement","src":"6497:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6472:2:18"},{"name":"_2","nodeType":"YulIdentifier","src":"6476:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6468:3:18"},"nodeType":"YulFunctionCall","src":"6468:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"6481:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6464:3:18"},"nodeType":"YulFunctionCall","src":"6464:20:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6486:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6461:2:18"},"nodeType":"YulFunctionCall","src":"6461:33:18"},"nodeType":"YulIf","src":"6458:53:18"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6537:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"6544:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6533:3:18"},"nodeType":"YulFunctionCall","src":"6533:14:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6553:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"6557:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6549:3:18"},"nodeType":"YulFunctionCall","src":"6549:11:18"},{"name":"_2","nodeType":"YulIdentifier","src":"6562:2:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6520:12:18"},"nodeType":"YulFunctionCall","src":"6520:45:18"},"nodeType":"YulExpressionStatement","src":"6520:45:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6589:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"6596:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6585:3:18"},"nodeType":"YulFunctionCall","src":"6585:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"6601:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6581:3:18"},"nodeType":"YulFunctionCall","src":"6581:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6606:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6574:6:18"},"nodeType":"YulFunctionCall","src":"6574:34:18"},"nodeType":"YulExpressionStatement","src":"6574:34:18"},{"nodeType":"YulAssignment","src":"6617:15:18","value":{"name":"array","nodeType":"YulIdentifier","src":"6627:5:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6617:6:18"}]},{"nodeType":"YulAssignment","src":"6641:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:18"},"nodeType":"YulFunctionCall","src":"6669:18:18"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"6651:17:18"},"nodeType":"YulFunctionCall","src":"6651:37:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6641:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5940:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5951:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5963:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5971:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5979:6:18","type":""}],"src":"5879:815:18"},{"body":{"nodeType":"YulBlock","src":"6800:76:18","statements":[{"nodeType":"YulAssignment","src":"6810:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6822:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6833:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6818:3:18"},"nodeType":"YulFunctionCall","src":"6818:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6810:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6852:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"6863:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6845:6:18"},"nodeType":"YulFunctionCall","src":"6845:25:18"},"nodeType":"YulExpressionStatement","src":"6845:25:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6769:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6780:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6791:4:18","type":""}],"src":"6699:177:18"},{"body":{"nodeType":"YulBlock","src":"6923:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"6977:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6986:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6989:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6979:6:18"},"nodeType":"YulFunctionCall","src":"6979:12:18"},"nodeType":"YulExpressionStatement","src":"6979:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6946:5:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6967:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6960:6:18"},"nodeType":"YulFunctionCall","src":"6960:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6953:6:18"},"nodeType":"YulFunctionCall","src":"6953:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6943:2:18"},"nodeType":"YulFunctionCall","src":"6943:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6936:6:18"},"nodeType":"YulFunctionCall","src":"6936:40:18"},"nodeType":"YulIf","src":"6933:60:18"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6912:5:18","type":""}],"src":"6881:118:18"},{"body":{"nodeType":"YulBlock","src":"7071:174:18","statements":[{"body":{"nodeType":"YulBlock","src":"7117:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7126:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7129:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7119:6:18"},"nodeType":"YulFunctionCall","src":"7119:12:18"},"nodeType":"YulExpressionStatement","src":"7119:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7092:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7101:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7088:3:18"},"nodeType":"YulFunctionCall","src":"7088:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"7113:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7084:3:18"},"nodeType":"YulFunctionCall","src":"7084:32:18"},"nodeType":"YulIf","src":"7081:52:18"},{"nodeType":"YulVariableDeclaration","src":"7142:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7168:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7155:12:18"},"nodeType":"YulFunctionCall","src":"7155:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7146:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7209:5:18"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"7187:21:18"},"nodeType":"YulFunctionCall","src":"7187:28:18"},"nodeType":"YulExpressionStatement","src":"7187:28:18"},{"nodeType":"YulAssignment","src":"7224:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"7234:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7224:6:18"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7037:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7048:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7060:6:18","type":""}],"src":"7004:241:18"},{"body":{"nodeType":"YulBlock","src":"7303:205:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7313:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7322:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7317:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7382:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7407:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"7412:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7403:3:18"},"nodeType":"YulFunctionCall","src":"7403:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7426:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"7431:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7422:3:18"},"nodeType":"YulFunctionCall","src":"7422:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7416:5:18"},"nodeType":"YulFunctionCall","src":"7416:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7396:6:18"},"nodeType":"YulFunctionCall","src":"7396:39:18"},"nodeType":"YulExpressionStatement","src":"7396:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7343:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"7346:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7340:2:18"},"nodeType":"YulFunctionCall","src":"7340:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7354:19:18","statements":[{"nodeType":"YulAssignment","src":"7356:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7365:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"7368:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7361:3:18"},"nodeType":"YulFunctionCall","src":"7361:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7356:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7336:3:18","statements":[]},"src":"7332:113:18"},{"body":{"nodeType":"YulBlock","src":"7471:31:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7484:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7489:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7480:3:18"},"nodeType":"YulFunctionCall","src":"7480:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"7498:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7473:6:18"},"nodeType":"YulFunctionCall","src":"7473:27:18"},"nodeType":"YulExpressionStatement","src":"7473:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7460:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"7463:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7457:2:18"},"nodeType":"YulFunctionCall","src":"7457:13:18"},"nodeType":"YulIf","src":"7454:48:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7281:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7286:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"7291:6:18","type":""}],"src":"7250:258:18"},{"body":{"nodeType":"YulBlock","src":"7562:208:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7572:26:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7592:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7586:5:18"},"nodeType":"YulFunctionCall","src":"7586:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7576:6:18","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7614:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7619:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7607:6:18"},"nodeType":"YulFunctionCall","src":"7607:19:18"},"nodeType":"YulExpressionStatement","src":"7607:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7661:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7668:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7657:3:18"},"nodeType":"YulFunctionCall","src":"7657:16:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7679:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7684:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7675:3:18"},"nodeType":"YulFunctionCall","src":"7675:14:18"},{"name":"length","nodeType":"YulIdentifier","src":"7691:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7635:21:18"},"nodeType":"YulFunctionCall","src":"7635:63:18"},"nodeType":"YulExpressionStatement","src":"7635:63:18"},{"nodeType":"YulAssignment","src":"7707:57:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7722:3:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7735:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7743:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7731:3:18"},"nodeType":"YulFunctionCall","src":"7731:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7752:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7748:3:18"},"nodeType":"YulFunctionCall","src":"7748:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7727:3:18"},"nodeType":"YulFunctionCall","src":"7727:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7718:3:18"},"nodeType":"YulFunctionCall","src":"7718:39:18"},{"kind":"number","nodeType":"YulLiteral","src":"7759:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:18"},"nodeType":"YulFunctionCall","src":"7714:50:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7707:3:18"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7539:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7546:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7554:3:18","type":""}],"src":"7513:257:18"},{"body":{"nodeType":"YulBlock","src":"7894:98:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7911:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7922:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7904:6:18"},"nodeType":"YulFunctionCall","src":"7904:21:18"},"nodeType":"YulExpressionStatement","src":"7904:21:18"},{"nodeType":"YulAssignment","src":"7934:52:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7959:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7971:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7982:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7967:3:18"},"nodeType":"YulFunctionCall","src":"7967:18:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"7942:16:18"},"nodeType":"YulFunctionCall","src":"7942:44:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7934:4:18"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7863:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7874:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7885:4:18","type":""}],"src":"7775:217:18"},{"body":{"nodeType":"YulBlock","src":"8184:627:18","statements":[{"body":{"nodeType":"YulBlock","src":"8231:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8240:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8243:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8233:6:18"},"nodeType":"YulFunctionCall","src":"8233:12:18"},"nodeType":"YulExpressionStatement","src":"8233:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8205:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8214:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8201:3:18"},"nodeType":"YulFunctionCall","src":"8201:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"8226:3:18","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8197:3:18"},"nodeType":"YulFunctionCall","src":"8197:33:18"},"nodeType":"YulIf","src":"8194:53:18"},{"nodeType":"YulVariableDeclaration","src":"8256:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8282:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8269:12:18"},"nodeType":"YulFunctionCall","src":"8269:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8260:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8326:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8301:24:18"},"nodeType":"YulFunctionCall","src":"8301:31:18"},"nodeType":"YulExpressionStatement","src":"8301:31:18"},{"nodeType":"YulAssignment","src":"8341:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"8351:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8341:6:18"}]},{"nodeType":"YulAssignment","src":"8365:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8392:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8403:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8388:3:18"},"nodeType":"YulFunctionCall","src":"8388:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8375:12:18"},"nodeType":"YulFunctionCall","src":"8375:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8365:6:18"}]},{"nodeType":"YulAssignment","src":"8416:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8443:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8454:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8439:3:18"},"nodeType":"YulFunctionCall","src":"8439:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8426:12:18"},"nodeType":"YulFunctionCall","src":"8426:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8416:6:18"}]},{"nodeType":"YulAssignment","src":"8467:76:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8519:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8530:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8515:3:18"},"nodeType":"YulFunctionCall","src":"8515:18:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8535:7:18"}],"functionName":{"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulIdentifier","src":"8477:37:18"},"nodeType":"YulFunctionCall","src":"8477:66:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8467:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"8552:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8583:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8594:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8579:3:18"},"nodeType":"YulFunctionCall","src":"8579:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8566:12:18"},"nodeType":"YulFunctionCall","src":"8566:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8556:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8642:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8651:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8654:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8644:6:18"},"nodeType":"YulFunctionCall","src":"8644:12:18"},"nodeType":"YulExpressionStatement","src":"8644:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8614:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8630:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"8634:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8626:3:18"},"nodeType":"YulFunctionCall","src":"8626:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"8638:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8622:3:18"},"nodeType":"YulFunctionCall","src":"8622:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8611:2:18"},"nodeType":"YulFunctionCall","src":"8611:30:18"},"nodeType":"YulIf","src":"8608:50:18"},{"nodeType":"YulVariableDeclaration","src":"8667:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8723:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8734:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8719:3:18"},"nodeType":"YulFunctionCall","src":"8719:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8743:7:18"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"8693:25:18"},"nodeType":"YulFunctionCall","src":"8693:58:18"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"8671:8:18","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"8681:8:18","type":""}]},{"nodeType":"YulAssignment","src":"8760:18:18","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"8770:8:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8760:6:18"}]},{"nodeType":"YulAssignment","src":"8787:18:18","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"8797:8:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8787:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_uint256t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8110:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8121:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8133:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8141:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8149:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8157:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8165:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8173:6:18","type":""}],"src":"7997:814:18"},{"body":{"nodeType":"YulBlock","src":"8901:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"8947:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8956:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8959:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8949:6:18"},"nodeType":"YulFunctionCall","src":"8949:12:18"},"nodeType":"YulExpressionStatement","src":"8949:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8922:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8931:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8918:3:18"},"nodeType":"YulFunctionCall","src":"8918:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"8943:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8914:3:18"},"nodeType":"YulFunctionCall","src":"8914:32:18"},"nodeType":"YulIf","src":"8911:52:18"},{"nodeType":"YulAssignment","src":"8972:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9000:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"8982:17:18"},"nodeType":"YulFunctionCall","src":"8982:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8972:6:18"}]},{"nodeType":"YulAssignment","src":"9019:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9051:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9062:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9047:3:18"},"nodeType":"YulFunctionCall","src":"9047:18:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"9029:17:18"},"nodeType":"YulFunctionCall","src":"9029:37:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9019:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8859:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8870:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8882:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8890:6:18","type":""}],"src":"8816:256:18"},{"body":{"nodeType":"YulBlock","src":"9164:301:18","statements":[{"body":{"nodeType":"YulBlock","src":"9210:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9219:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9222:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9212:6:18"},"nodeType":"YulFunctionCall","src":"9212:12:18"},"nodeType":"YulExpressionStatement","src":"9212:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9185:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9194:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9181:3:18"},"nodeType":"YulFunctionCall","src":"9181:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9206:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9177:3:18"},"nodeType":"YulFunctionCall","src":"9177:32:18"},"nodeType":"YulIf","src":"9174:52:18"},{"nodeType":"YulVariableDeclaration","src":"9235:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9261:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9248:12:18"},"nodeType":"YulFunctionCall","src":"9248:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9239:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9305:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9280:24:18"},"nodeType":"YulFunctionCall","src":"9280:31:18"},"nodeType":"YulExpressionStatement","src":"9280:31:18"},{"nodeType":"YulAssignment","src":"9320:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"9330:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9320:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"9344:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9376:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9387:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9372:3:18"},"nodeType":"YulFunctionCall","src":"9372:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9359:12:18"},"nodeType":"YulFunctionCall","src":"9359:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9348:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9425:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9400:24:18"},"nodeType":"YulFunctionCall","src":"9400:33:18"},"nodeType":"YulExpressionStatement","src":"9400:33:18"},{"nodeType":"YulAssignment","src":"9442:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9452:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9442:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9122:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9133:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9145:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9153:6:18","type":""}],"src":"9077:388:18"},{"body":{"nodeType":"YulBlock","src":"9573:357:18","statements":[{"body":{"nodeType":"YulBlock","src":"9619:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9628:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9631:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9621:6:18"},"nodeType":"YulFunctionCall","src":"9621:12:18"},"nodeType":"YulExpressionStatement","src":"9621:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9594:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9603:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9590:3:18"},"nodeType":"YulFunctionCall","src":"9590:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9615:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9586:3:18"},"nodeType":"YulFunctionCall","src":"9586:32:18"},"nodeType":"YulIf","src":"9583:52:18"},{"nodeType":"YulVariableDeclaration","src":"9644:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9670:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9657:12:18"},"nodeType":"YulFunctionCall","src":"9657:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9648:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9714:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9689:24:18"},"nodeType":"YulFunctionCall","src":"9689:31:18"},"nodeType":"YulExpressionStatement","src":"9689:31:18"},{"nodeType":"YulAssignment","src":"9729:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"9739:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9729:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"9753:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9785:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9796:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9781:3:18"},"nodeType":"YulFunctionCall","src":"9781:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9768:12:18"},"nodeType":"YulFunctionCall","src":"9768:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9757:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9834:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9809:24:18"},"nodeType":"YulFunctionCall","src":"9809:33:18"},"nodeType":"YulExpressionStatement","src":"9809:33:18"},{"nodeType":"YulAssignment","src":"9851:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9861:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9851:6:18"}]},{"nodeType":"YulAssignment","src":"9877:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9909:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9920:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9905:3:18"},"nodeType":"YulFunctionCall","src":"9905:18:18"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"9887:17:18"},"nodeType":"YulFunctionCall","src":"9887:37:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9877:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9523:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9534:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9546:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9554:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9562:6:18","type":""}],"src":"9470:460:18"},{"body":{"nodeType":"YulBlock","src":"10032:87:18","statements":[{"nodeType":"YulAssignment","src":"10042:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10054:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10065:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10050:3:18"},"nodeType":"YulFunctionCall","src":"10050:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10042:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10084:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10099:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10107:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10095:3:18"},"nodeType":"YulFunctionCall","src":"10095:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10077:6:18"},"nodeType":"YulFunctionCall","src":"10077:36:18"},"nodeType":"YulExpressionStatement","src":"10077:36:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10001:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10012:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10023:4:18","type":""}],"src":"9935:184:18"},{"body":{"nodeType":"YulBlock","src":"10252:102:18","statements":[{"nodeType":"YulAssignment","src":"10262:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10274:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10285:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10270:3:18"},"nodeType":"YulFunctionCall","src":"10270:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10262:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10304:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10319:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10335:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10340:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10331:3:18"},"nodeType":"YulFunctionCall","src":"10331:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"10344:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10327:3:18"},"nodeType":"YulFunctionCall","src":"10327:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10315:3:18"},"nodeType":"YulFunctionCall","src":"10315:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10297:6:18"},"nodeType":"YulFunctionCall","src":"10297:51:18"},"nodeType":"YulExpressionStatement","src":"10297:51:18"}]},"name":"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10221:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10232:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10243:4:18","type":""}],"src":"10124:230:18"},{"body":{"nodeType":"YulBlock","src":"10529:509:18","statements":[{"body":{"nodeType":"YulBlock","src":"10576:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10585:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10588:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10578:6:18"},"nodeType":"YulFunctionCall","src":"10578:12:18"},"nodeType":"YulExpressionStatement","src":"10578:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10550:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10559:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10546:3:18"},"nodeType":"YulFunctionCall","src":"10546:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"10571:3:18","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10542:3:18"},"nodeType":"YulFunctionCall","src":"10542:33:18"},"nodeType":"YulIf","src":"10539:53:18"},{"nodeType":"YulAssignment","src":"10601:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10624:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10611:12:18"},"nodeType":"YulFunctionCall","src":"10611:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10601:6:18"}]},{"nodeType":"YulAssignment","src":"10643:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10670:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10681:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10666:3:18"},"nodeType":"YulFunctionCall","src":"10666:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10653:12:18"},"nodeType":"YulFunctionCall","src":"10653:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10643:6:18"}]},{"nodeType":"YulAssignment","src":"10694:76:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10746:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10757:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10742:3:18"},"nodeType":"YulFunctionCall","src":"10742:18:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10762:7:18"}],"functionName":{"name":"abi_decode_struct_CallParams_calldata","nodeType":"YulIdentifier","src":"10704:37:18"},"nodeType":"YulFunctionCall","src":"10704:66:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10694:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"10779:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10810:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10821:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10806:3:18"},"nodeType":"YulFunctionCall","src":"10806:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10793:12:18"},"nodeType":"YulFunctionCall","src":"10793:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10783:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10878:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10881:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10871:6:18"},"nodeType":"YulFunctionCall","src":"10871:12:18"},"nodeType":"YulExpressionStatement","src":"10871:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10841:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10857:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"10861:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10853:3:18"},"nodeType":"YulFunctionCall","src":"10853:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"10865:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10849:3:18"},"nodeType":"YulFunctionCall","src":"10849:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10838:2:18"},"nodeType":"YulFunctionCall","src":"10838:30:18"},"nodeType":"YulIf","src":"10835:50:18"},{"nodeType":"YulVariableDeclaration","src":"10894:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10950:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10961:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10946:3:18"},"nodeType":"YulFunctionCall","src":"10946:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10970:7:18"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"10920:25:18"},"nodeType":"YulFunctionCall","src":"10920:58:18"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"10898:8:18","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"10908:8:18","type":""}]},{"nodeType":"YulAssignment","src":"10987:18:18","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"10997:8:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10987:6:18"}]},{"nodeType":"YulAssignment","src":"11014:18:18","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"11024:8:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11014:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10463:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10474:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10486:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10494:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10502:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10510:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10518:6:18","type":""}],"src":"10359:679:18"},{"body":{"nodeType":"YulBlock","src":"11127:298:18","statements":[{"body":{"nodeType":"YulBlock","src":"11173:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11182:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11185:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11175:6:18"},"nodeType":"YulFunctionCall","src":"11175:12:18"},"nodeType":"YulExpressionStatement","src":"11175:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11148:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11157:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11144:3:18"},"nodeType":"YulFunctionCall","src":"11144:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"11169:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11140:3:18"},"nodeType":"YulFunctionCall","src":"11140:32:18"},"nodeType":"YulIf","src":"11137:52:18"},{"nodeType":"YulVariableDeclaration","src":"11198:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11224:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11211:12:18"},"nodeType":"YulFunctionCall","src":"11211:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11202:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11268:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11243:24:18"},"nodeType":"YulFunctionCall","src":"11243:31:18"},"nodeType":"YulExpressionStatement","src":"11243:31:18"},{"nodeType":"YulAssignment","src":"11283:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"11293:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11283:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"11307:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11339:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11350:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11335:3:18"},"nodeType":"YulFunctionCall","src":"11335:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11322:12:18"},"nodeType":"YulFunctionCall","src":"11322:32:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"11311:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11385:7:18"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"11363:21:18"},"nodeType":"YulFunctionCall","src":"11363:30:18"},"nodeType":"YulExpressionStatement","src":"11363:30:18"},{"nodeType":"YulAssignment","src":"11402:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"11412:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11402:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11085:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11096:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11108:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11116:6:18","type":""}],"src":"11043:382:18"},{"body":{"nodeType":"YulBlock","src":"11568:484:18","statements":[{"body":{"nodeType":"YulBlock","src":"11615:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11624:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11627:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11617:6:18"},"nodeType":"YulFunctionCall","src":"11617:12:18"},"nodeType":"YulExpressionStatement","src":"11617:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11589:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11598:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11585:3:18"},"nodeType":"YulFunctionCall","src":"11585:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"11610:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11581:3:18"},"nodeType":"YulFunctionCall","src":"11581:33:18"},"nodeType":"YulIf","src":"11578:53:18"},{"nodeType":"YulAssignment","src":"11640:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11668:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"11650:17:18"},"nodeType":"YulFunctionCall","src":"11650:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11640:6:18"}]},{"nodeType":"YulAssignment","src":"11687:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11719:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11730:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11715:3:18"},"nodeType":"YulFunctionCall","src":"11715:18:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"11697:17:18"},"nodeType":"YulFunctionCall","src":"11697:37:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11687:6:18"}]},{"nodeType":"YulAssignment","src":"11743:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11770:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11766:3:18"},"nodeType":"YulFunctionCall","src":"11766:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11753:12:18"},"nodeType":"YulFunctionCall","src":"11753:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11743:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"11794:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11825:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11836:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11821:3:18"},"nodeType":"YulFunctionCall","src":"11821:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11808:12:18"},"nodeType":"YulFunctionCall","src":"11808:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11798:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"11883:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11892:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11895:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11885:6:18"},"nodeType":"YulFunctionCall","src":"11885:12:18"},"nodeType":"YulExpressionStatement","src":"11885:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11855:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11871:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"11875:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11867:3:18"},"nodeType":"YulFunctionCall","src":"11867:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"11879:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11863:3:18"},"nodeType":"YulFunctionCall","src":"11863:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11852:2:18"},"nodeType":"YulFunctionCall","src":"11852:30:18"},"nodeType":"YulIf","src":"11849:50:18"},{"nodeType":"YulVariableDeclaration","src":"11908:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11964:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11975:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11960:3:18"},"nodeType":"YulFunctionCall","src":"11960:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11984:7:18"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"11934:25:18"},"nodeType":"YulFunctionCall","src":"11934:58:18"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"11912:8:18","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"11922:8:18","type":""}]},{"nodeType":"YulAssignment","src":"12001:18:18","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"12011:8:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12001:6:18"}]},{"nodeType":"YulAssignment","src":"12028:18:18","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"12038:8:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12028:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11502:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11513:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11525:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11533:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11541:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11549:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11557:6:18","type":""}],"src":"11430:622:18"},{"body":{"nodeType":"YulBlock","src":"12159:222:18","statements":[{"body":{"nodeType":"YulBlock","src":"12205:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12214:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12217:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12207:6:18"},"nodeType":"YulFunctionCall","src":"12207:12:18"},"nodeType":"YulExpressionStatement","src":"12207:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12180:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12189:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12176:3:18"},"nodeType":"YulFunctionCall","src":"12176:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"12201:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12172:3:18"},"nodeType":"YulFunctionCall","src":"12172:32:18"},"nodeType":"YulIf","src":"12169:52:18"},{"nodeType":"YulAssignment","src":"12230:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12258:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12240:17:18"},"nodeType":"YulFunctionCall","src":"12240:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12230:6:18"}]},{"nodeType":"YulAssignment","src":"12277:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12309:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12320:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12305:3:18"},"nodeType":"YulFunctionCall","src":"12305:18:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12287:17:18"},"nodeType":"YulFunctionCall","src":"12287:37:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12277:6:18"}]},{"nodeType":"YulAssignment","src":"12333:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12360:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12371:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12356:3:18"},"nodeType":"YulFunctionCall","src":"12356:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12343:12:18"},"nodeType":"YulFunctionCall","src":"12343:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12333:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12109:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12120:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12132:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12140:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12148:6:18","type":""}],"src":"12057:324:18"},{"body":{"nodeType":"YulBlock","src":"12485:101:18","statements":[{"nodeType":"YulAssignment","src":"12495:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12507:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12518:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12503:3:18"},"nodeType":"YulFunctionCall","src":"12503:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12495:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12537:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12552:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12568:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"12572:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12564:3:18"},"nodeType":"YulFunctionCall","src":"12564:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"12576:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12560:3:18"},"nodeType":"YulFunctionCall","src":"12560:18:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12548:3:18"},"nodeType":"YulFunctionCall","src":"12548:31:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12530:6:18"},"nodeType":"YulFunctionCall","src":"12530:50:18"},"nodeType":"YulExpressionStatement","src":"12530:50:18"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12454:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12465:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12476:4:18","type":""}],"src":"12386:200:18"},{"body":{"nodeType":"YulBlock","src":"12710:341:18","statements":[{"body":{"nodeType":"YulBlock","src":"12757:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12766:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12769:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12759:6:18"},"nodeType":"YulFunctionCall","src":"12759:12:18"},"nodeType":"YulExpressionStatement","src":"12759:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12731:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12740:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12727:3:18"},"nodeType":"YulFunctionCall","src":"12727:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"12752:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12723:3:18"},"nodeType":"YulFunctionCall","src":"12723:33:18"},"nodeType":"YulIf","src":"12720:53:18"},{"nodeType":"YulAssignment","src":"12782:38:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12810:9:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12792:17:18"},"nodeType":"YulFunctionCall","src":"12792:28:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12782:6:18"}]},{"nodeType":"YulAssignment","src":"12829:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12861:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12872:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12857:3:18"},"nodeType":"YulFunctionCall","src":"12857:18:18"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12839:17:18"},"nodeType":"YulFunctionCall","src":"12839:37:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12829:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"12885:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12915:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12926:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12911:3:18"},"nodeType":"YulFunctionCall","src":"12911:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12898:12:18"},"nodeType":"YulFunctionCall","src":"12898:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12889:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12964:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12939:24:18"},"nodeType":"YulFunctionCall","src":"12939:31:18"},"nodeType":"YulExpressionStatement","src":"12939:31:18"},{"nodeType":"YulAssignment","src":"12979:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"12989:5:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12979:6:18"}]},{"nodeType":"YulAssignment","src":"13003:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13030:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13041:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13026:3:18"},"nodeType":"YulFunctionCall","src":"13026:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13013:12:18"},"nodeType":"YulFunctionCall","src":"13013:32:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13003:6:18"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12652:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12663:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12675:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12683:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12691:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12699:6:18","type":""}],"src":"12591:460:18"},{"body":{"nodeType":"YulBlock","src":"13230:180:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13247:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13258:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13240:6:18"},"nodeType":"YulFunctionCall","src":"13240:21:18"},"nodeType":"YulExpressionStatement","src":"13240:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13281:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13292:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13277:3:18"},"nodeType":"YulFunctionCall","src":"13277:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13297:2:18","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13270:6:18"},"nodeType":"YulFunctionCall","src":"13270:30:18"},"nodeType":"YulExpressionStatement","src":"13270:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13320:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13331:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13316:3:18"},"nodeType":"YulFunctionCall","src":"13316:18:18"},{"hexValue":"546f6b656e4272696467653a2062726964676520666565203e2031303025","kind":"string","nodeType":"YulLiteral","src":"13336:32:18","type":"","value":"TokenBridge: bridge fee > 100%"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13309:6:18"},"nodeType":"YulFunctionCall","src":"13309:60:18"},"nodeType":"YulExpressionStatement","src":"13309:60:18"},{"nodeType":"YulAssignment","src":"13378:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13390:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13401:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13386:3:18"},"nodeType":"YulFunctionCall","src":"13386:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13378:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13207:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13221:4:18","type":""}],"src":"13056:354:18"},{"body":{"nodeType":"YulBlock","src":"13589:180:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13606:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13617:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13599:6:18"},"nodeType":"YulFunctionCall","src":"13599:21:18"},"nodeType":"YulExpressionStatement","src":"13599:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13640:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13651:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13636:3:18"},"nodeType":"YulFunctionCall","src":"13636:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13656:2:18","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13629:6:18"},"nodeType":"YulFunctionCall","src":"13629:30:18"},"nodeType":"YulExpressionStatement","src":"13629:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13679:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13690:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13675:3:18"},"nodeType":"YulFunctionCall","src":"13675:18:18"},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"13695:32:18","type":"","value":"LzApp: invalid endpoint caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13668:6:18"},"nodeType":"YulFunctionCall","src":"13668:60:18"},"nodeType":"YulExpressionStatement","src":"13668:60:18"},{"nodeType":"YulAssignment","src":"13737:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13749:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13760:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13745:3:18"},"nodeType":"YulFunctionCall","src":"13745:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13737:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13566:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13580:4:18","type":""}],"src":"13415:354:18"},{"body":{"nodeType":"YulBlock","src":"13829:325:18","statements":[{"nodeType":"YulAssignment","src":"13839:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13853:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"13856:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13849:3:18"},"nodeType":"YulFunctionCall","src":"13849:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13839:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"13870:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13900:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"13906:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13896:3:18"},"nodeType":"YulFunctionCall","src":"13896:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13874:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"13947:31:18","statements":[{"nodeType":"YulAssignment","src":"13949:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13963:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13971:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13959:3:18"},"nodeType":"YulFunctionCall","src":"13959:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13949:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13927:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13920:6:18"},"nodeType":"YulFunctionCall","src":"13920:26:18"},"nodeType":"YulIf","src":"13917:61:18"},{"body":{"nodeType":"YulBlock","src":"14037:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14058:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14065:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14070:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14061:3:18"},"nodeType":"YulFunctionCall","src":"14061:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14051:6:18"},"nodeType":"YulFunctionCall","src":"14051:31:18"},"nodeType":"YulExpressionStatement","src":"14051:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14102:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14105:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14095:6:18"},"nodeType":"YulFunctionCall","src":"14095:15:18"},"nodeType":"YulExpressionStatement","src":"14095:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14130:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14133:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14123:6:18"},"nodeType":"YulFunctionCall","src":"14123:15:18"},"nodeType":"YulExpressionStatement","src":"14123:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13993:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14016:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14024:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14013:2:18"},"nodeType":"YulFunctionCall","src":"14013:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13990:2:18"},"nodeType":"YulFunctionCall","src":"13990:38:18"},"nodeType":"YulIf","src":"13987:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13809:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13818:6:18","type":""}],"src":"13774:380:18"},{"body":{"nodeType":"YulBlock","src":"14306:124:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14329:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"14334:6:18"},{"name":"value1","nodeType":"YulIdentifier","src":"14342:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14316:12:18"},"nodeType":"YulFunctionCall","src":"14316:33:18"},"nodeType":"YulExpressionStatement","src":"14316:33:18"},{"nodeType":"YulVariableDeclaration","src":"14358:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14372:3:18"},{"name":"value1","nodeType":"YulIdentifier","src":"14377:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14368:3:18"},"nodeType":"YulFunctionCall","src":"14368:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14362:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14400:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"14404:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14393:6:18"},"nodeType":"YulFunctionCall","src":"14393:13:18"},"nodeType":"YulExpressionStatement","src":"14393:13:18"},{"nodeType":"YulAssignment","src":"14415:9:18","value":{"name":"_1","nodeType":"YulIdentifier","src":"14422:2:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14415:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14274:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14279:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14287:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14298:3:18","type":""}],"src":"14159:271:18"},{"body":{"nodeType":"YulBlock","src":"14609:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14626:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14637:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14619:6:18"},"nodeType":"YulFunctionCall","src":"14619:21:18"},"nodeType":"YulExpressionStatement","src":"14619:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14660:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14671:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14656:3:18"},"nodeType":"YulFunctionCall","src":"14656:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14676:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14649:6:18"},"nodeType":"YulFunctionCall","src":"14649:30:18"},"nodeType":"YulExpressionStatement","src":"14649:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14699:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14710:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14695:3:18"},"nodeType":"YulFunctionCall","src":"14695:18:18"},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f","kind":"string","nodeType":"YulLiteral","src":"14715:34:18","type":"","value":"LzApp: invalid source sending co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14688:6:18"},"nodeType":"YulFunctionCall","src":"14688:62:18"},"nodeType":"YulExpressionStatement","src":"14688:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14770:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14781:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14766:3:18"},"nodeType":"YulFunctionCall","src":"14766:18:18"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"14786:8:18","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14759:6:18"},"nodeType":"YulFunctionCall","src":"14759:36:18"},"nodeType":"YulExpressionStatement","src":"14759:36:18"},{"nodeType":"YulAssignment","src":"14804:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14816:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14827:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14812:3:18"},"nodeType":"YulFunctionCall","src":"14812:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14804:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14586:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14600:4:18","type":""}],"src":"14435:402:18"},{"body":{"nodeType":"YulBlock","src":"15016:224:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15033:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15044:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15026:6:18"},"nodeType":"YulFunctionCall","src":"15026:21:18"},"nodeType":"YulExpressionStatement","src":"15026:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15067:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15078:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15063:3:18"},"nodeType":"YulFunctionCall","src":"15063:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15083:2:18","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15056:6:18"},"nodeType":"YulFunctionCall","src":"15056:30:18"},"nodeType":"YulExpressionStatement","src":"15056:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15106:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15117:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15102:3:18"},"nodeType":"YulFunctionCall","src":"15102:18:18"},{"hexValue":"546f6b656e4272696467653a20696e76616c696420746f6b656e206164647265","kind":"string","nodeType":"YulLiteral","src":"15122:34:18","type":"","value":"TokenBridge: invalid token addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15095:6:18"},"nodeType":"YulFunctionCall","src":"15095:62:18"},"nodeType":"YulExpressionStatement","src":"15095:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15177:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15188:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15173:3:18"},"nodeType":"YulFunctionCall","src":"15173:18:18"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"15193:4:18","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15166:6:18"},"nodeType":"YulFunctionCall","src":"15166:32:18"},"nodeType":"YulExpressionStatement","src":"15166:32:18"},{"nodeType":"YulAssignment","src":"15207:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15219:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15230:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15215:3:18"},"nodeType":"YulFunctionCall","src":"15215:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15207:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14993:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15007:4:18","type":""}],"src":"14842:398:18"},{"body":{"nodeType":"YulBlock","src":"15419:227:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15436:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15447:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15429:6:18"},"nodeType":"YulFunctionCall","src":"15429:21:18"},"nodeType":"YulExpressionStatement","src":"15429:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15470:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15481:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15466:3:18"},"nodeType":"YulFunctionCall","src":"15466:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15486:2:18","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15459:6:18"},"nodeType":"YulFunctionCall","src":"15459:30:18"},"nodeType":"YulExpressionStatement","src":"15459:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15509:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15520:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15505:3:18"},"nodeType":"YulFunctionCall","src":"15505:18:18"},{"hexValue":"546f6b656e4272696467653a20746f6b656e20616c7265616479207265676973","kind":"string","nodeType":"YulLiteral","src":"15525:34:18","type":"","value":"TokenBridge: token already regis"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15498:6:18"},"nodeType":"YulFunctionCall","src":"15498:62:18"},"nodeType":"YulExpressionStatement","src":"15498:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15580:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15591:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15576:3:18"},"nodeType":"YulFunctionCall","src":"15576:18:18"},{"hexValue":"7465726564","kind":"string","nodeType":"YulLiteral","src":"15596:7:18","type":"","value":"tered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15569:6:18"},"nodeType":"YulFunctionCall","src":"15569:35:18"},"nodeType":"YulExpressionStatement","src":"15569:35:18"},{"nodeType":"YulAssignment","src":"15613:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15625:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15636:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15621:3:18"},"nodeType":"YulFunctionCall","src":"15621:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15613:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_51de26679b1ae151f519d14d91d238fe2ca5b6374fe0e7054a2aac9a3771c277__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15396:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15410:4:18","type":""}],"src":"15245:401:18"},{"body":{"nodeType":"YulBlock","src":"15825:238:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15842:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15853:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15835:6:18"},"nodeType":"YulFunctionCall","src":"15835:21:18"},"nodeType":"YulExpressionStatement","src":"15835:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15876:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15887:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15872:3:18"},"nodeType":"YulFunctionCall","src":"15872:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15892:2:18","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15865:6:18"},"nodeType":"YulFunctionCall","src":"15865:30:18"},"nodeType":"YulExpressionStatement","src":"15865:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15915:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15926:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15911:3:18"},"nodeType":"YulFunctionCall","src":"15911:18:18"},{"hexValue":"546f6b656e4272696467653a20646563696d616c73206d757374206265203e3d","kind":"string","nodeType":"YulLiteral","src":"15931:34:18","type":"","value":"TokenBridge: decimals must be >="}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15904:6:18"},"nodeType":"YulFunctionCall","src":"15904:62:18"},"nodeType":"YulExpressionStatement","src":"15904:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15986:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15997:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15982:3:18"},"nodeType":"YulFunctionCall","src":"15982:18:18"},{"hexValue":"205348415245445f444543494d414c53","kind":"string","nodeType":"YulLiteral","src":"16002:18:18","type":"","value":" SHARED_DECIMALS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15975:6:18"},"nodeType":"YulFunctionCall","src":"15975:46:18"},"nodeType":"YulExpressionStatement","src":"15975:46:18"},{"nodeType":"YulAssignment","src":"16030:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16042:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16053:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16038:3:18"},"nodeType":"YulFunctionCall","src":"16038:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16030:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_464ef14f816d65197a5bf9eb8196c8732496061488e59d144c334e1537b250f8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15802:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15816:4:18","type":""}],"src":"15651:412:18"},{"body":{"nodeType":"YulBlock","src":"16100:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16117:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16124:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"16129:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16120:3:18"},"nodeType":"YulFunctionCall","src":"16120:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16110:6:18"},"nodeType":"YulFunctionCall","src":"16110:31:18"},"nodeType":"YulExpressionStatement","src":"16110:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16157:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16160:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16150:6:18"},"nodeType":"YulFunctionCall","src":"16150:15:18"},"nodeType":"YulExpressionStatement","src":"16150:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16181:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16184:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16174:6:18"},"nodeType":"YulFunctionCall","src":"16174:15:18"},"nodeType":"YulExpressionStatement","src":"16174:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16068:127:18"},{"body":{"nodeType":"YulBlock","src":"16247:148:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16257:23:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16272:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"16275:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16268:3:18"},"nodeType":"YulFunctionCall","src":"16268:12:18"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"16261:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16289:23:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16304:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"16307:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16300:3:18"},"nodeType":"YulFunctionCall","src":"16300:12:18"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"16293:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"16337:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16339:16:18"},"nodeType":"YulFunctionCall","src":"16339:18:18"},"nodeType":"YulExpressionStatement","src":"16339:18:18"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"16327:3:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"16332:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16324:2:18"},"nodeType":"YulFunctionCall","src":"16324:12:18"},"nodeType":"YulIf","src":"16321:38:18"},{"nodeType":"YulAssignment","src":"16368:21:18","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"16380:3:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"16385:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16376:3:18"},"nodeType":"YulFunctionCall","src":"16376:13:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16368:4:18"}]}]},"name":"checked_sub_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16229:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"16232:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16238:4:18","type":""}],"src":"16200:195:18"},{"body":{"nodeType":"YulBlock","src":"16464:358:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16474:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16489:1:18","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"16478:7:18","type":""}]},{"nodeType":"YulAssignment","src":"16499:16:18","value":{"name":"power_1","nodeType":"YulIdentifier","src":"16508:7:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16499:5:18"}]},{"nodeType":"YulAssignment","src":"16524:13:18","value":{"name":"_base","nodeType":"YulIdentifier","src":"16532:5:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"16524:4:18"}]},{"body":{"nodeType":"YulBlock","src":"16588:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"16633:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16635:16:18"},"nodeType":"YulFunctionCall","src":"16635:18:18"},"nodeType":"YulExpressionStatement","src":"16635:18:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16608:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16622:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16618:3:18"},"nodeType":"YulFunctionCall","src":"16618:6:18"},{"name":"base","nodeType":"YulIdentifier","src":"16626:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16614:3:18"},"nodeType":"YulFunctionCall","src":"16614:17:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16605:2:18"},"nodeType":"YulFunctionCall","src":"16605:27:18"},"nodeType":"YulIf","src":"16602:53:18"},{"body":{"nodeType":"YulBlock","src":"16694:29:18","statements":[{"nodeType":"YulAssignment","src":"16696:25:18","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16709:5:18"},{"name":"base","nodeType":"YulIdentifier","src":"16716:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16705:3:18"},"nodeType":"YulFunctionCall","src":"16705:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16696:5:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16675:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"16685:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16671:3:18"},"nodeType":"YulFunctionCall","src":"16671:22:18"},"nodeType":"YulIf","src":"16668:55:18"},{"nodeType":"YulAssignment","src":"16736:23:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16748:4:18"},{"name":"base","nodeType":"YulIdentifier","src":"16754:4:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16744:3:18"},"nodeType":"YulFunctionCall","src":"16744:15:18"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"16736:4:18"}]},{"nodeType":"YulAssignment","src":"16772:34:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"16788:7:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"16797:8:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16784:3:18"},"nodeType":"YulFunctionCall","src":"16784:22:18"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"16772:8:18"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16557:8:18"},{"name":"power_1","nodeType":"YulIdentifier","src":"16567:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16554:2:18"},"nodeType":"YulFunctionCall","src":"16554:21:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16576:3:18","statements":[]},"pre":{"nodeType":"YulBlock","src":"16550:3:18","statements":[]},"src":"16546:270:18"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"16428:5:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"16435:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"16448:5:18","type":""},{"name":"base","nodeType":"YulTypedName","src":"16455:4:18","type":""}],"src":"16400:422:18"},{"body":{"nodeType":"YulBlock","src":"16886:747:18","statements":[{"body":{"nodeType":"YulBlock","src":"16924:52:18","statements":[{"nodeType":"YulAssignment","src":"16938:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16947:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16938:5:18"}]},{"nodeType":"YulLeave","src":"16961:5:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16906:8:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16899:6:18"},"nodeType":"YulFunctionCall","src":"16899:16:18"},"nodeType":"YulIf","src":"16896:80:18"},{"body":{"nodeType":"YulBlock","src":"17009:52:18","statements":[{"nodeType":"YulAssignment","src":"17023:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17032:1:18","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17023:5:18"}]},{"nodeType":"YulLeave","src":"17046:5:18"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16995:4:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16988:6:18"},"nodeType":"YulFunctionCall","src":"16988:12:18"},"nodeType":"YulIf","src":"16985:76:18"},{"cases":[{"body":{"nodeType":"YulBlock","src":"17097:52:18","statements":[{"nodeType":"YulAssignment","src":"17111:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17120:1:18","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17111:5:18"}]},{"nodeType":"YulLeave","src":"17134:5:18"}]},"nodeType":"YulCase","src":"17090:59:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17095:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17165:123:18","statements":[{"body":{"nodeType":"YulBlock","src":"17200:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17202:16:18"},"nodeType":"YulFunctionCall","src":"17202:18:18"},"nodeType":"YulExpressionStatement","src":"17202:18:18"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17185:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"17195:3:18","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17182:2:18"},"nodeType":"YulFunctionCall","src":"17182:17:18"},"nodeType":"YulIf","src":"17179:43:18"},{"nodeType":"YulAssignment","src":"17235:25:18","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17248:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"17258:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17244:3:18"},"nodeType":"YulFunctionCall","src":"17244:16:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17235:5:18"}]},{"nodeType":"YulLeave","src":"17273:5:18"}]},"nodeType":"YulCase","src":"17158:130:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17163:1:18","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"17077:4:18"},"nodeType":"YulSwitch","src":"17070:218:18"},{"body":{"nodeType":"YulBlock","src":"17386:70:18","statements":[{"nodeType":"YulAssignment","src":"17400:28:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17413:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"17419:8:18"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"17409:3:18"},"nodeType":"YulFunctionCall","src":"17409:19:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17400:5:18"}]},{"nodeType":"YulLeave","src":"17441:5:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17310:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"17316:2:18","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17307:2:18"},"nodeType":"YulFunctionCall","src":"17307:12:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17324:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"17334:2:18","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17321:2:18"},"nodeType":"YulFunctionCall","src":"17321:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17303:3:18"},"nodeType":"YulFunctionCall","src":"17303:35:18"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17347:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"17353:3:18","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17344:2:18"},"nodeType":"YulFunctionCall","src":"17344:13:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17362:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"17372:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17359:2:18"},"nodeType":"YulFunctionCall","src":"17359:16:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17340:3:18"},"nodeType":"YulFunctionCall","src":"17340:36:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17300:2:18"},"nodeType":"YulFunctionCall","src":"17300:77:18"},"nodeType":"YulIf","src":"17297:159:18"},{"nodeType":"YulVariableDeclaration","src":"17465:57:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17507:4:18"},{"name":"exponent","nodeType":"YulIdentifier","src":"17513:8:18"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"17488:18:18"},"nodeType":"YulFunctionCall","src":"17488:34:18"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"17469:7:18","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"17478:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"17567:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17569:16:18"},"nodeType":"YulFunctionCall","src":"17569:18:18"},"nodeType":"YulExpressionStatement","src":"17569:18:18"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"17537:7:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17554:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17550:3:18"},"nodeType":"YulFunctionCall","src":"17550:6:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"17558:6:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17546:3:18"},"nodeType":"YulFunctionCall","src":"17546:19:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17534:2:18"},"nodeType":"YulFunctionCall","src":"17534:32:18"},"nodeType":"YulIf","src":"17531:58:18"},{"nodeType":"YulAssignment","src":"17598:29:18","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"17611:7:18"},{"name":"base_1","nodeType":"YulIdentifier","src":"17620:6:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17607:3:18"},"nodeType":"YulFunctionCall","src":"17607:20:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17598:5:18"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"16857:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"16863:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"16876:5:18","type":""}],"src":"16827:806:18"},{"body":{"nodeType":"YulBlock","src":"17706:72:18","statements":[{"nodeType":"YulAssignment","src":"17716:56:18","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17746:4:18"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17756:8:18"},{"kind":"number","nodeType":"YulLiteral","src":"17766:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17752:3:18"},"nodeType":"YulFunctionCall","src":"17752:19:18"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"17725:20:18"},"nodeType":"YulFunctionCall","src":"17725:47:18"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17716:5:18"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17677:4:18","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17683:8:18","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17696:5:18","type":""}],"src":"17638:140:18"},{"body":{"nodeType":"YulBlock","src":"17957:177:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17974:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17985:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17967:6:18"},"nodeType":"YulFunctionCall","src":"17967:21:18"},"nodeType":"YulExpressionStatement","src":"17967:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18008:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18019:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18004:3:18"},"nodeType":"YulFunctionCall","src":"18004:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18024:2:18","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17997:6:18"},"nodeType":"YulFunctionCall","src":"17997:30:18"},"nodeType":"YulExpressionStatement","src":"17997:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18047:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18058:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18043:3:18"},"nodeType":"YulFunctionCall","src":"18043:18:18"},{"hexValue":"546f6b656e4272696467653a20666565206e6f7420656e6f756768","kind":"string","nodeType":"YulLiteral","src":"18063:29:18","type":"","value":"TokenBridge: fee not enough"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18036:6:18"},"nodeType":"YulFunctionCall","src":"18036:57:18"},"nodeType":"YulExpressionStatement","src":"18036:57:18"},{"nodeType":"YulAssignment","src":"18102:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18114:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18125:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18110:3:18"},"nodeType":"YulFunctionCall","src":"18110:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18102:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17934:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17948:4:18","type":""}],"src":"17783:351:18"},{"body":{"nodeType":"YulBlock","src":"18268:145:18","statements":[{"nodeType":"YulAssignment","src":"18278:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18290:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18301:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18286:3:18"},"nodeType":"YulFunctionCall","src":"18286:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18278:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18320:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18335:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18351:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18356:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18347:3:18"},"nodeType":"YulFunctionCall","src":"18347:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"18360:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18343:3:18"},"nodeType":"YulFunctionCall","src":"18343:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18331:3:18"},"nodeType":"YulFunctionCall","src":"18331:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18313:6:18"},"nodeType":"YulFunctionCall","src":"18313:51:18"},"nodeType":"YulExpressionStatement","src":"18313:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18384:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18395:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18380:3:18"},"nodeType":"YulFunctionCall","src":"18380:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"18400:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18373:6:18"},"nodeType":"YulFunctionCall","src":"18373:34:18"},"nodeType":"YulExpressionStatement","src":"18373:34:18"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18229:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18240:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18248:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18259:4:18","type":""}],"src":"18139:274:18"},{"body":{"nodeType":"YulBlock","src":"18484:200:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18501:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"18506:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18494:6:18"},"nodeType":"YulFunctionCall","src":"18494:19:18"},"nodeType":"YulExpressionStatement","src":"18494:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18539:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18544:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18535:3:18"},"nodeType":"YulFunctionCall","src":"18535:14:18"},{"name":"start","nodeType":"YulIdentifier","src":"18551:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"18558:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18522:12:18"},"nodeType":"YulFunctionCall","src":"18522:43:18"},"nodeType":"YulExpressionStatement","src":"18522:43:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18589:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"18594:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18585:3:18"},"nodeType":"YulFunctionCall","src":"18585:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"18603:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18581:3:18"},"nodeType":"YulFunctionCall","src":"18581:27:18"},{"kind":"number","nodeType":"YulLiteral","src":"18610:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18574:6:18"},"nodeType":"YulFunctionCall","src":"18574:38:18"},"nodeType":"YulExpressionStatement","src":"18574:38:18"},{"nodeType":"YulAssignment","src":"18621:57:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18636:3:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18649:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18657:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18645:3:18"},"nodeType":"YulFunctionCall","src":"18645:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18666:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18662:3:18"},"nodeType":"YulFunctionCall","src":"18662:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18641:3:18"},"nodeType":"YulFunctionCall","src":"18641:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18632:3:18"},"nodeType":"YulFunctionCall","src":"18632:39:18"},{"kind":"number","nodeType":"YulLiteral","src":"18673:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18628:3:18"},"nodeType":"YulFunctionCall","src":"18628:50:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18621:3:18"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"18453:5:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"18460:6:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18468:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18476:3:18","type":""}],"src":"18418:266:18"},{"body":{"nodeType":"YulBlock","src":"18844:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18861:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18876:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18884:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18872:3:18"},"nodeType":"YulFunctionCall","src":"18872:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18854:6:18"},"nodeType":"YulFunctionCall","src":"18854:38:18"},"nodeType":"YulExpressionStatement","src":"18854:38:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18912:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18923:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18908:3:18"},"nodeType":"YulFunctionCall","src":"18908:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18928:2:18","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18901:6:18"},"nodeType":"YulFunctionCall","src":"18901:30:18"},"nodeType":"YulExpressionStatement","src":"18901:30:18"},{"nodeType":"YulAssignment","src":"18940:69:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18974:6:18"},{"name":"value2","nodeType":"YulIdentifier","src":"18982:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18994:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19005:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18990:3:18"},"nodeType":"YulFunctionCall","src":"18990:18:18"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"18948:25:18"},"nodeType":"YulFunctionCall","src":"18948:61:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18940:4:18"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18797:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18808:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18816:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18824:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18835:4:18","type":""}],"src":"18689:326:18"},{"body":{"nodeType":"YulBlock","src":"19271:416:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19288:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19303:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19311:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19299:3:18"},"nodeType":"YulFunctionCall","src":"19299:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19281:6:18"},"nodeType":"YulFunctionCall","src":"19281:38:18"},"nodeType":"YulExpressionStatement","src":"19281:38:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19339:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19350:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19335:3:18"},"nodeType":"YulFunctionCall","src":"19335:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19359:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19375:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19380:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19371:3:18"},"nodeType":"YulFunctionCall","src":"19371:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"19384:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19367:3:18"},"nodeType":"YulFunctionCall","src":"19367:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19355:3:18"},"nodeType":"YulFunctionCall","src":"19355:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19328:6:18"},"nodeType":"YulFunctionCall","src":"19328:60:18"},"nodeType":"YulExpressionStatement","src":"19328:60:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19408:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19419:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19404:3:18"},"nodeType":"YulFunctionCall","src":"19404:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"19424:3:18","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19397:6:18"},"nodeType":"YulFunctionCall","src":"19397:31:18"},"nodeType":"YulExpressionStatement","src":"19397:31:18"},{"nodeType":"YulVariableDeclaration","src":"19437:59:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19468:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19480:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19491:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19476:3:18"},"nodeType":"YulFunctionCall","src":"19476:19:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"19451:16:18"},"nodeType":"YulFunctionCall","src":"19451:45:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"19441:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19516:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19527:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19512:3:18"},"nodeType":"YulFunctionCall","src":"19512:18:18"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19546:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19539:6:18"},"nodeType":"YulFunctionCall","src":"19539:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19532:6:18"},"nodeType":"YulFunctionCall","src":"19532:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19505:6:18"},"nodeType":"YulFunctionCall","src":"19505:50:18"},"nodeType":"YulExpressionStatement","src":"19505:50:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19575:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19586:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19571:3:18"},"nodeType":"YulFunctionCall","src":"19571:19:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"19596:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"19604:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19592:3:18"},"nodeType":"YulFunctionCall","src":"19592:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19564:6:18"},"nodeType":"YulFunctionCall","src":"19564:51:18"},"nodeType":"YulExpressionStatement","src":"19564:51:18"},{"nodeType":"YulAssignment","src":"19624:57:18","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19658:6:18"},{"name":"value5","nodeType":"YulIdentifier","src":"19666:6:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"19674:6:18"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"19632:25:18"},"nodeType":"YulFunctionCall","src":"19632:49:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19624:4:18"}]}]},"name":"abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_calldata_ptr__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19200:9:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19211:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19219:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19227:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19235:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19243:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19251:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19262:4:18","type":""}],"src":"19020:667:18"},{"body":{"nodeType":"YulBlock","src":"19790:147:18","statements":[{"body":{"nodeType":"YulBlock","src":"19836:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19845:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19848:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19838:6:18"},"nodeType":"YulFunctionCall","src":"19838:12:18"},"nodeType":"YulExpressionStatement","src":"19838:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19811:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"19820:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19807:3:18"},"nodeType":"YulFunctionCall","src":"19807:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"19832:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19803:3:18"},"nodeType":"YulFunctionCall","src":"19803:32:18"},"nodeType":"YulIf","src":"19800:52:18"},{"nodeType":"YulAssignment","src":"19861:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19877:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19871:5:18"},"nodeType":"YulFunctionCall","src":"19871:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19861:6:18"}]},{"nodeType":"YulAssignment","src":"19896:35:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19916:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19927:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19912:3:18"},"nodeType":"YulFunctionCall","src":"19912:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19906:5:18"},"nodeType":"YulFunctionCall","src":"19906:25:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19896:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19748:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19759:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19771:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19779:6:18","type":""}],"src":"19692:245:18"},{"body":{"nodeType":"YulBlock","src":"20116:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20133:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20144:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20126:6:18"},"nodeType":"YulFunctionCall","src":"20126:21:18"},"nodeType":"YulExpressionStatement","src":"20126:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20167:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20178:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20163:3:18"},"nodeType":"YulFunctionCall","src":"20163:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20183:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20156:6:18"},"nodeType":"YulFunctionCall","src":"20156:30:18"},"nodeType":"YulExpressionStatement","src":"20156:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20206:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20217:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20202:3:18"},"nodeType":"YulFunctionCall","src":"20202:18:18"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265","kind":"string","nodeType":"YulLiteral","src":"20222:34:18","type":"","value":"NonblockingLzApp: caller must be"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20195:6:18"},"nodeType":"YulFunctionCall","src":"20195:62:18"},"nodeType":"YulExpressionStatement","src":"20195:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20277:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20288:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20273:3:18"},"nodeType":"YulFunctionCall","src":"20273:18:18"},{"hexValue":"204c7a417070","kind":"string","nodeType":"YulLiteral","src":"20293:8:18","type":"","value":" LzApp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20266:6:18"},"nodeType":"YulFunctionCall","src":"20266:36:18"},"nodeType":"YulExpressionStatement","src":"20266:36:18"},{"nodeType":"YulAssignment","src":"20311:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20323:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20334:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20319:3:18"},"nodeType":"YulFunctionCall","src":"20319:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20311:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20093:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20107:4:18","type":""}],"src":"19942:402:18"},{"body":{"nodeType":"YulBlock","src":"20523:169:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20540:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20551:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20533:6:18"},"nodeType":"YulFunctionCall","src":"20533:21:18"},"nodeType":"YulExpressionStatement","src":"20533:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20574:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20585:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20570:3:18"},"nodeType":"YulFunctionCall","src":"20570:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20590:2:18","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20563:6:18"},"nodeType":"YulFunctionCall","src":"20563:30:18"},"nodeType":"YulExpressionStatement","src":"20563:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20613:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20624:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20609:3:18"},"nodeType":"YulFunctionCall","src":"20609:18:18"},{"hexValue":"546f6b656e4272696467653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"20629:21:18","type":"","value":"TokenBridge: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20602:6:18"},"nodeType":"YulFunctionCall","src":"20602:49:18"},"nodeType":"YulExpressionStatement","src":"20602:49:18"},{"nodeType":"YulAssignment","src":"20660:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20672:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20683:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20668:3:18"},"nodeType":"YulFunctionCall","src":"20668:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20660:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20500:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20514:4:18","type":""}],"src":"20349:343:18"},{"body":{"nodeType":"YulBlock","src":"20871:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20888:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20899:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20881:6:18"},"nodeType":"YulFunctionCall","src":"20881:21:18"},"nodeType":"YulExpressionStatement","src":"20881:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20922:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20933:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20918:3:18"},"nodeType":"YulFunctionCall","src":"20918:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20938:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20911:6:18"},"nodeType":"YulFunctionCall","src":"20911:30:18"},"nodeType":"YulExpressionStatement","src":"20911:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20961:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20972:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20957:3:18"},"nodeType":"YulFunctionCall","src":"20957:18:18"},{"hexValue":"546f6b656e4272696467653a20746f6b656e206973206e6f7420737570706f72","kind":"string","nodeType":"YulLiteral","src":"20977:34:18","type":"","value":"TokenBridge: token is not suppor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20950:6:18"},"nodeType":"YulFunctionCall","src":"20950:62:18"},"nodeType":"YulExpressionStatement","src":"20950:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21032:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21043:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21028:3:18"},"nodeType":"YulFunctionCall","src":"21028:18:18"},{"hexValue":"746564","kind":"string","nodeType":"YulLiteral","src":"21048:5:18","type":"","value":"ted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21021:6:18"},"nodeType":"YulFunctionCall","src":"21021:33:18"},"nodeType":"YulExpressionStatement","src":"21021:33:18"},{"nodeType":"YulAssignment","src":"21063:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21075:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21086:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21071:3:18"},"nodeType":"YulFunctionCall","src":"21071:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21063:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20848:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20862:4:18","type":""}],"src":"20697:399:18"},{"body":{"nodeType":"YulBlock","src":"21275:234:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21292:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21303:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21285:6:18"},"nodeType":"YulFunctionCall","src":"21285:21:18"},"nodeType":"YulExpressionStatement","src":"21285:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21326:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21337:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21322:3:18"},"nodeType":"YulFunctionCall","src":"21322:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"21342:2:18","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21315:6:18"},"nodeType":"YulFunctionCall","src":"21315:30:18"},"nodeType":"YulExpressionStatement","src":"21315:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21365:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21376:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21361:3:18"},"nodeType":"YulFunctionCall","src":"21361:18:18"},{"hexValue":"546f6b656e4272696467653a20616d6f756e745344206d757374206265206772","kind":"string","nodeType":"YulLiteral","src":"21381:34:18","type":"","value":"TokenBridge: amountSD must be gr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21354:6:18"},"nodeType":"YulFunctionCall","src":"21354:62:18"},"nodeType":"YulExpressionStatement","src":"21354:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21436:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21447:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21432:3:18"},"nodeType":"YulFunctionCall","src":"21432:18:18"},{"hexValue":"6561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"21452:14:18","type":"","value":"eater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21425:6:18"},"nodeType":"YulFunctionCall","src":"21425:42:18"},"nodeType":"YulExpressionStatement","src":"21425:42:18"},{"nodeType":"YulAssignment","src":"21476:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21488:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21499:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21484:3:18"},"nodeType":"YulFunctionCall","src":"21484:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21476:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_773cc5454c8f282a7d7e9ccda0de0a5a2966ea506b9d9c70b152dcc6cc19a53c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21252:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21266:4:18","type":""}],"src":"21101:408:18"},{"body":{"nodeType":"YulBlock","src":"21561:189:18","statements":[{"nodeType":"YulVariableDeclaration","src":"21571:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21589:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"21593:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21585:3:18"},"nodeType":"YulFunctionCall","src":"21585:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"21597:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21581:3:18"},"nodeType":"YulFunctionCall","src":"21581:18:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21575:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21608:21:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21623:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"21626:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21619:3:18"},"nodeType":"YulFunctionCall","src":"21619:10:18"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"21612:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21638:21:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21653:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"21656:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21649:3:18"},"nodeType":"YulFunctionCall","src":"21649:10:18"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"21642:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"21693:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21695:16:18"},"nodeType":"YulFunctionCall","src":"21695:18:18"},"nodeType":"YulExpressionStatement","src":"21695:18:18"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"21674:3:18"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21683:2:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"21687:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21679:3:18"},"nodeType":"YulFunctionCall","src":"21679:12:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21671:2:18"},"nodeType":"YulFunctionCall","src":"21671:21:18"},"nodeType":"YulIf","src":"21668:47:18"},{"nodeType":"YulAssignment","src":"21724:20:18","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"21735:3:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"21740:3:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21731:3:18"},"nodeType":"YulFunctionCall","src":"21731:13:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21724:3:18"}]}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21544:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"21547:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21553:3:18","type":""}],"src":"21514:236:18"},{"body":{"nodeType":"YulBlock","src":"21929:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21946:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21957:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21939:6:18"},"nodeType":"YulFunctionCall","src":"21939:21:18"},"nodeType":"YulExpressionStatement","src":"21939:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21980:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21991:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21976:3:18"},"nodeType":"YulFunctionCall","src":"21976:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"21996:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21969:6:18"},"nodeType":"YulFunctionCall","src":"21969:30:18"},"nodeType":"YulExpressionStatement","src":"21969:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22019:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22030:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22015:3:18"},"nodeType":"YulFunctionCall","src":"22015:18:18"},{"hexValue":"546f6b656e4272696467653a20656d657267656e637920776974686472617720","kind":"string","nodeType":"YulLiteral","src":"22035:34:18","type":"","value":"TokenBridge: emergency withdraw "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22008:6:18"},"nodeType":"YulFunctionCall","src":"22008:62:18"},"nodeType":"YulExpressionStatement","src":"22008:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22090:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22101:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22086:3:18"},"nodeType":"YulFunctionCall","src":"22086:18:18"},{"hexValue":"6c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"22106:8:18","type":"","value":"locked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22079:6:18"},"nodeType":"YulFunctionCall","src":"22079:36:18"},"nodeType":"YulExpressionStatement","src":"22079:36:18"},{"nodeType":"YulAssignment","src":"22124:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22136:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22147:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22132:3:18"},"nodeType":"YulFunctionCall","src":"22132:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22124:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21906:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21920:4:18","type":""}],"src":"21755:402:18"},{"body":{"nodeType":"YulBlock","src":"22210:181:18","statements":[{"nodeType":"YulVariableDeclaration","src":"22220:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22238:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"22242:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22234:3:18"},"nodeType":"YulFunctionCall","src":"22234:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"22246:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22230:3:18"},"nodeType":"YulFunctionCall","src":"22230:18:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22224:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22257:21:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22272:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"22275:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22268:3:18"},"nodeType":"YulFunctionCall","src":"22268:10:18"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"22261:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22287:21:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22302:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"22305:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22298:3:18"},"nodeType":"YulFunctionCall","src":"22298:10:18"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"22291:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"22333:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22335:16:18"},"nodeType":"YulFunctionCall","src":"22335:18:18"},"nodeType":"YulExpressionStatement","src":"22335:18:18"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"22323:3:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"22328:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22320:2:18"},"nodeType":"YulFunctionCall","src":"22320:12:18"},"nodeType":"YulIf","src":"22317:38:18"},{"nodeType":"YulAssignment","src":"22364:21:18","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"22376:3:18"},{"name":"y_1","nodeType":"YulIdentifier","src":"22381:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22372:3:18"},"nodeType":"YulFunctionCall","src":"22372:13:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22364:4:18"}]}]},"name":"checked_sub_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22192:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"22195:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22201:4:18","type":""}],"src":"22162:229:18"},{"body":{"nodeType":"YulBlock","src":"22570:179:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22587:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22598:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22580:6:18"},"nodeType":"YulFunctionCall","src":"22580:21:18"},"nodeType":"YulExpressionStatement","src":"22580:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22621:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22632:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22617:3:18"},"nodeType":"YulFunctionCall","src":"22617:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"22637:2:18","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22610:6:18"},"nodeType":"YulFunctionCall","src":"22610:30:18"},"nodeType":"YulExpressionStatement","src":"22610:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22660:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22671:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22656:3:18"},"nodeType":"YulFunctionCall","src":"22656:18:18"},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","kind":"string","nodeType":"YulLiteral","src":"22676:31:18","type":"","value":"LzApp: no trusted path record"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22649:6:18"},"nodeType":"YulFunctionCall","src":"22649:59:18"},"nodeType":"YulExpressionStatement","src":"22649:59:18"},{"nodeType":"YulAssignment","src":"22717:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22729:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22740:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22725:3:18"},"nodeType":"YulFunctionCall","src":"22725:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22717:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22547:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22561:4:18","type":""}],"src":"22396:353:18"},{"body":{"nodeType":"YulBlock","src":"22803:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"22825:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22827:16:18"},"nodeType":"YulFunctionCall","src":"22827:18:18"},"nodeType":"YulExpressionStatement","src":"22827:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22819:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"22822:1:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22816:2:18"},"nodeType":"YulFunctionCall","src":"22816:8:18"},"nodeType":"YulIf","src":"22813:34:18"},{"nodeType":"YulAssignment","src":"22856:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22868:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"22871:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22864:3:18"},"nodeType":"YulFunctionCall","src":"22864:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22856:4:18"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22785:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"22788:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22794:4:18","type":""}],"src":"22754:125:18"},{"body":{"nodeType":"YulBlock","src":"22965:103:18","statements":[{"body":{"nodeType":"YulBlock","src":"23011:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23020:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23023:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23013:6:18"},"nodeType":"YulFunctionCall","src":"23013:12:18"},"nodeType":"YulExpressionStatement","src":"23013:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22986:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"22995:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22982:3:18"},"nodeType":"YulFunctionCall","src":"22982:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"23007:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22978:3:18"},"nodeType":"YulFunctionCall","src":"22978:32:18"},"nodeType":"YulIf","src":"22975:52:18"},{"nodeType":"YulAssignment","src":"23036:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23052:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23046:5:18"},"nodeType":"YulFunctionCall","src":"23046:16:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23036:6:18"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22931:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22942:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22954:6:18","type":""}],"src":"22884:184:18"},{"body":{"nodeType":"YulBlock","src":"23248:177:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23271:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"23276:6:18"},{"name":"value1","nodeType":"YulIdentifier","src":"23284:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"23258:12:18"},"nodeType":"YulFunctionCall","src":"23258:33:18"},"nodeType":"YulExpressionStatement","src":"23258:33:18"},{"nodeType":"YulVariableDeclaration","src":"23300:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23314:3:18"},{"name":"value1","nodeType":"YulIdentifier","src":"23319:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23310:3:18"},"nodeType":"YulFunctionCall","src":"23310:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"23304:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"23342:2:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23354:2:18","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"23358:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23350:3:18"},"nodeType":"YulFunctionCall","src":"23350:15:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23379:2:18","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"23383:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23375:3:18"},"nodeType":"YulFunctionCall","src":"23375:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"23387:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23371:3:18"},"nodeType":"YulFunctionCall","src":"23371:18:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23367:3:18"},"nodeType":"YulFunctionCall","src":"23367:23:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23346:3:18"},"nodeType":"YulFunctionCall","src":"23346:45:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23335:6:18"},"nodeType":"YulFunctionCall","src":"23335:57:18"},"nodeType":"YulExpressionStatement","src":"23335:57:18"},{"nodeType":"YulAssignment","src":"23401:18:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"23412:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"23416:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23408:3:18"},"nodeType":"YulFunctionCall","src":"23408:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23401:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23208:3:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23213:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23221:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23229:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23240:3:18","type":""}],"src":"23073:352:18"},{"body":{"nodeType":"YulBlock","src":"23485:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23502:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"23505:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23495:6:18"},"nodeType":"YulFunctionCall","src":"23495:14:18"},"nodeType":"YulExpressionStatement","src":"23495:14:18"},{"nodeType":"YulAssignment","src":"23518:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23536:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23539:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"23526:9:18"},"nodeType":"YulFunctionCall","src":"23526:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23518:4:18"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23468:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23476:4:18","type":""}],"src":"23430:120:18"},{"body":{"nodeType":"YulBlock","src":"23635:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"23668:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"23682:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"23692:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"23686:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"23713:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"23717:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23706:6:18"},"nodeType":"YulFunctionCall","src":"23706:17:18"},"nodeType":"YulExpressionStatement","src":"23706:17:18"},{"nodeType":"YulVariableDeclaration","src":"23736:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"23758:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"23762:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"23748:9:18"},"nodeType":"YulFunctionCall","src":"23748:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"23740:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23780:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23803:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23813:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23820:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"23832:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23816:3:18"},"nodeType":"YulFunctionCall","src":"23816:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23809:3:18"},"nodeType":"YulFunctionCall","src":"23809:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23799:3:18"},"nodeType":"YulFunctionCall","src":"23799:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"23784:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"23874:23:18","statements":[{"nodeType":"YulAssignment","src":"23876:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"23891:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"23876:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23856:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"23868:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23853:2:18"},"nodeType":"YulFunctionCall","src":"23853:20:18"},"nodeType":"YulIf","src":"23850:47:18"},{"nodeType":"YulVariableDeclaration","src":"23910:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23924:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23934:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23941:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23946:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23937:3:18"},"nodeType":"YulFunctionCall","src":"23937:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23930:3:18"},"nodeType":"YulFunctionCall","src":"23930:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23920:3:18"},"nodeType":"YulFunctionCall","src":"23920:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"23914:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23964:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"23977:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"23968:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"24062:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"24071:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"24078:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"24064:6:18"},"nodeType":"YulFunctionCall","src":"24064:17:18"},"nodeType":"YulExpressionStatement","src":"24064:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"24012:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"24019:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24009:2:18"},"nodeType":"YulFunctionCall","src":"24009:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"24023:26:18","statements":[{"nodeType":"YulAssignment","src":"24025:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"24038:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"24045:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24034:3:18"},"nodeType":"YulFunctionCall","src":"24034:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"24025:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"24005:3:18","statements":[]},"src":"24001:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23651:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23656:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23648:2:18"},"nodeType":"YulFunctionCall","src":"23648:11:18"},"nodeType":"YulIf","src":"23645:448:18"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"23607:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"23614:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"23619:10:18","type":""}],"src":"23555:544:18"},{"body":{"nodeType":"YulBlock","src":"24189:81:18","statements":[{"nodeType":"YulAssignment","src":"24199:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24214:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24232:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"24235:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24228:3:18"},"nodeType":"YulFunctionCall","src":"24228:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24245:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24241:3:18"},"nodeType":"YulFunctionCall","src":"24241:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"24224:3:18"},"nodeType":"YulFunctionCall","src":"24224:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24220:3:18"},"nodeType":"YulFunctionCall","src":"24220:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24210:3:18"},"nodeType":"YulFunctionCall","src":"24210:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24256:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"24259:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24252:3:18"},"nodeType":"YulFunctionCall","src":"24252:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24207:2:18"},"nodeType":"YulFunctionCall","src":"24207:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"24199:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24166:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"24172:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"24180:4:18","type":""}],"src":"24104:166:18"},{"body":{"nodeType":"YulBlock","src":"24369:1254:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24379:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"24399:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24393:5:18"},"nodeType":"YulFunctionCall","src":"24393:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"24383:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"24446:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24448:16:18"},"nodeType":"YulFunctionCall","src":"24448:18:18"},"nodeType":"YulExpressionStatement","src":"24448:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24418:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24434:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"24438:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24430:3:18"},"nodeType":"YulFunctionCall","src":"24430:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"24442:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24426:3:18"},"nodeType":"YulFunctionCall","src":"24426:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24415:2:18"},"nodeType":"YulFunctionCall","src":"24415:30:18"},"nodeType":"YulIf","src":"24412:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24520:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24558:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24552:5:18"},"nodeType":"YulFunctionCall","src":"24552:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"24526:25:18"},"nodeType":"YulFunctionCall","src":"24526:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"24566:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"24477:42:18"},"nodeType":"YulFunctionCall","src":"24477:96:18"},"nodeType":"YulExpressionStatement","src":"24477:96:18"},{"nodeType":"YulVariableDeclaration","src":"24582:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24599:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"24586:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24609:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24628:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"24613:11:18","type":""}]},{"nodeType":"YulAssignment","src":"24641:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"24654:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"24641:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"24711:655:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24725:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24744:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24756:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24752:3:18"},"nodeType":"YulFunctionCall","src":"24752:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24740:3:18"},"nodeType":"YulFunctionCall","src":"24740:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"24729:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24773:48:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24816:4:18"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"24787:28:18"},"nodeType":"YulFunctionCall","src":"24787:34:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"24777:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24834:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24843:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"24838:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"24921:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"24946:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"24964:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"24969:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24960:3:18"},"nodeType":"YulFunctionCall","src":"24960:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24954:5:18"},"nodeType":"YulFunctionCall","src":"24954:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"24939:6:18"},"nodeType":"YulFunctionCall","src":"24939:42:18"},"nodeType":"YulExpressionStatement","src":"24939:42:18"},{"nodeType":"YulAssignment","src":"24998:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25012:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25020:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25008:3:18"},"nodeType":"YulFunctionCall","src":"25008:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"24998:6:18"}]},{"nodeType":"YulAssignment","src":"25039:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25056:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"25067:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25052:3:18"},"nodeType":"YulFunctionCall","src":"25052:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25039:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24868:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"24871:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24865:2:18"},"nodeType":"YulFunctionCall","src":"24865:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"24880:28:18","statements":[{"nodeType":"YulAssignment","src":"24882:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24891:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"24894:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24887:3:18"},"nodeType":"YulFunctionCall","src":"24887:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"24882:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"24861:3:18","statements":[]},"src":"24857:236:18"},{"body":{"nodeType":"YulBlock","src":"25141:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"25159:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25186:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25191:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25182:3:18"},"nodeType":"YulFunctionCall","src":"25182:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25176:5:18"},"nodeType":"YulFunctionCall","src":"25176:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"25163:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25226:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"25238:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25265:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"25268:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25261:3:18"},"nodeType":"YulFunctionCall","src":"25261:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"25277:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25257:3:18"},"nodeType":"YulFunctionCall","src":"25257:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25287:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25283:3:18"},"nodeType":"YulFunctionCall","src":"25283:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"25253:3:18"},"nodeType":"YulFunctionCall","src":"25253:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25249:3:18"},"nodeType":"YulFunctionCall","src":"25249:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25234:3:18"},"nodeType":"YulFunctionCall","src":"25234:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25219:6:18"},"nodeType":"YulFunctionCall","src":"25219:74:18"},"nodeType":"YulExpressionStatement","src":"25219:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"25112:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"25121:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25109:2:18"},"nodeType":"YulFunctionCall","src":"25109:19:18"},"nodeType":"YulIf","src":"25106:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25327:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25341:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"25344:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25337:3:18"},"nodeType":"YulFunctionCall","src":"25337:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"25353:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25333:3:18"},"nodeType":"YulFunctionCall","src":"25333:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25320:6:18"},"nodeType":"YulFunctionCall","src":"25320:36:18"},"nodeType":"YulExpressionStatement","src":"25320:36:18"}]},"nodeType":"YulCase","src":"24704:662:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24709:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"25383:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"25397:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"25410:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"25401:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"25446:67:18","statements":[{"nodeType":"YulAssignment","src":"25464:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25483:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25488:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25479:3:18"},"nodeType":"YulFunctionCall","src":"25479:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25473:5:18"},"nodeType":"YulFunctionCall","src":"25473:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25464:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"25427:6:18"},"nodeType":"YulIf","src":"25424:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25533:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25592:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"25599:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"25539:52:18"},"nodeType":"YulFunctionCall","src":"25539:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25526:6:18"},"nodeType":"YulFunctionCall","src":"25526:81:18"},"nodeType":"YulExpressionStatement","src":"25526:81:18"}]},"nodeType":"YulCase","src":"25375:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24684:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"24692:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24681:2:18"},"nodeType":"YulFunctionCall","src":"24681:14:18"},"nodeType":"YulSwitch","src":"24674:943:18"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"24354:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"24360:3:18","type":""}],"src":"24275:1348:18"},{"body":{"nodeType":"YulBlock","src":"25802:223:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25819:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25830:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25812:6:18"},"nodeType":"YulFunctionCall","src":"25812:21:18"},"nodeType":"YulExpressionStatement","src":"25812:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25853:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25864:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25849:3:18"},"nodeType":"YulFunctionCall","src":"25849:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"25869:2:18","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25842:6:18"},"nodeType":"YulFunctionCall","src":"25842:30:18"},"nodeType":"YulExpressionStatement","src":"25842:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25892:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25903:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25888:3:18"},"nodeType":"YulFunctionCall","src":"25888:18:18"},{"hexValue":"546f6b656e4272696467653a20455448206973206e6f7420737570706f727465","kind":"string","nodeType":"YulLiteral","src":"25908:34:18","type":"","value":"TokenBridge: ETH is not supporte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25881:6:18"},"nodeType":"YulFunctionCall","src":"25881:62:18"},"nodeType":"YulExpressionStatement","src":"25881:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25963:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25974:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25959:3:18"},"nodeType":"YulFunctionCall","src":"25959:18:18"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"25979:3:18","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25952:6:18"},"nodeType":"YulFunctionCall","src":"25952:31:18"},"nodeType":"YulExpressionStatement","src":"25952:31:18"},{"nodeType":"YulAssignment","src":"25992:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26004:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26015:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26000:3:18"},"nodeType":"YulFunctionCall","src":"26000:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25992:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25779:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25793:4:18","type":""}],"src":"25628:397:18"},{"body":{"nodeType":"YulBlock","src":"26204:232:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26221:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26232:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26214:6:18"},"nodeType":"YulFunctionCall","src":"26214:21:18"},"nodeType":"YulExpressionStatement","src":"26214:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26255:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26266:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26251:3:18"},"nodeType":"YulFunctionCall","src":"26251:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"26271:2:18","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26244:6:18"},"nodeType":"YulFunctionCall","src":"26244:30:18"},"nodeType":"YulExpressionStatement","src":"26244:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26294:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26305:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26290:3:18"},"nodeType":"YulFunctionCall","src":"26290:18:18"},{"hexValue":"546f6b656e4272696467653a20616d6f756e74206d7573742062652067726561","kind":"string","nodeType":"YulLiteral","src":"26310:34:18","type":"","value":"TokenBridge: amount must be grea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26283:6:18"},"nodeType":"YulFunctionCall","src":"26283:62:18"},"nodeType":"YulExpressionStatement","src":"26283:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26365:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26376:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26361:3:18"},"nodeType":"YulFunctionCall","src":"26361:18:18"},{"hexValue":"746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"26381:12:18","type":"","value":"ter than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26354:6:18"},"nodeType":"YulFunctionCall","src":"26354:40:18"},"nodeType":"YulExpressionStatement","src":"26354:40:18"},{"nodeType":"YulAssignment","src":"26403:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26415:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26426:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26411:3:18"},"nodeType":"YulFunctionCall","src":"26411:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26403:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26181:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26195:4:18","type":""}],"src":"26030:406:18"},{"body":{"nodeType":"YulBlock","src":"26564:161:18","statements":[{"nodeType":"YulAssignment","src":"26574:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26586:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26597:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26582:3:18"},"nodeType":"YulFunctionCall","src":"26582:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26574:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26616:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26631:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26647:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"26652:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26643:3:18"},"nodeType":"YulFunctionCall","src":"26643:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"26656:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26639:3:18"},"nodeType":"YulFunctionCall","src":"26639:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26627:3:18"},"nodeType":"YulFunctionCall","src":"26627:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26609:6:18"},"nodeType":"YulFunctionCall","src":"26609:51:18"},"nodeType":"YulExpressionStatement","src":"26609:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26680:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26691:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26676:3:18"},"nodeType":"YulFunctionCall","src":"26676:18:18"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26710:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26703:6:18"},"nodeType":"YulFunctionCall","src":"26703:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26696:6:18"},"nodeType":"YulFunctionCall","src":"26696:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26669:6:18"},"nodeType":"YulFunctionCall","src":"26669:50:18"},"nodeType":"YulExpressionStatement","src":"26669:50:18"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26525:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26536:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26544:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26555:4:18","type":""}],"src":"26441:284:18"},{"body":{"nodeType":"YulBlock","src":"26939:289:18","statements":[{"nodeType":"YulVariableDeclaration","src":"26949:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"26959:6:18","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"26953:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26981:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26996:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"27004:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26992:3:18"},"nodeType":"YulFunctionCall","src":"26992:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26974:6:18"},"nodeType":"YulFunctionCall","src":"26974:34:18"},"nodeType":"YulExpressionStatement","src":"26974:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27028:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27039:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27024:3:18"},"nodeType":"YulFunctionCall","src":"27024:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27048:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"27056:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27044:3:18"},"nodeType":"YulFunctionCall","src":"27044:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27017:6:18"},"nodeType":"YulFunctionCall","src":"27017:43:18"},"nodeType":"YulExpressionStatement","src":"27017:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27080:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27091:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27076:3:18"},"nodeType":"YulFunctionCall","src":"27076:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"27096:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27069:6:18"},"nodeType":"YulFunctionCall","src":"27069:34:18"},"nodeType":"YulExpressionStatement","src":"27069:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27123:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27134:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27119:3:18"},"nodeType":"YulFunctionCall","src":"27119:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"27139:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27112:6:18"},"nodeType":"YulFunctionCall","src":"27112:31:18"},"nodeType":"YulExpressionStatement","src":"27112:31:18"},{"nodeType":"YulAssignment","src":"27152:70:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27186:6:18"},{"name":"value4","nodeType":"YulIdentifier","src":"27194:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27206:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27217:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27202:3:18"},"nodeType":"YulFunctionCall","src":"27202:19:18"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"27160:25:18"},"nodeType":"YulFunctionCall","src":"27160:62:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27152:4:18"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26876:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26887:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26895:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26903:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26911:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26919:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26930:4:18","type":""}],"src":"26730:498:18"},{"body":{"nodeType":"YulBlock","src":"27407:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27424:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27435:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27417:6:18"},"nodeType":"YulFunctionCall","src":"27417:21:18"},"nodeType":"YulExpressionStatement","src":"27417:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27458:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27469:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27454:3:18"},"nodeType":"YulFunctionCall","src":"27454:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"27474:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27447:6:18"},"nodeType":"YulFunctionCall","src":"27447:30:18"},"nodeType":"YulExpressionStatement","src":"27447:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27497:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27508:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27493:3:18"},"nodeType":"YulFunctionCall","src":"27493:18:18"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373","kind":"string","nodeType":"YulLiteral","src":"27513:34:18","type":"","value":"NonblockingLzApp: no stored mess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27486:6:18"},"nodeType":"YulFunctionCall","src":"27486:62:18"},"nodeType":"YulExpressionStatement","src":"27486:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27568:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27579:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27564:3:18"},"nodeType":"YulFunctionCall","src":"27564:18:18"},{"hexValue":"616765","kind":"string","nodeType":"YulLiteral","src":"27584:5:18","type":"","value":"age"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27557:6:18"},"nodeType":"YulFunctionCall","src":"27557:33:18"},"nodeType":"YulExpressionStatement","src":"27557:33:18"},{"nodeType":"YulAssignment","src":"27599:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27611:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27622:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27607:3:18"},"nodeType":"YulFunctionCall","src":"27607:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27599:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27384:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27398:4:18","type":""}],"src":"27233:399:18"},{"body":{"nodeType":"YulBlock","src":"27811:223:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27828:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27839:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27821:6:18"},"nodeType":"YulFunctionCall","src":"27821:21:18"},"nodeType":"YulExpressionStatement","src":"27821:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27862:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27873:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27858:3:18"},"nodeType":"YulFunctionCall","src":"27858:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"27878:2:18","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27851:6:18"},"nodeType":"YulFunctionCall","src":"27851:30:18"},"nodeType":"YulExpressionStatement","src":"27851:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27901:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27912:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27897:3:18"},"nodeType":"YulFunctionCall","src":"27897:18:18"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f61","kind":"string","nodeType":"YulLiteral","src":"27917:34:18","type":"","value":"NonblockingLzApp: invalid payloa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27890:6:18"},"nodeType":"YulFunctionCall","src":"27890:62:18"},"nodeType":"YulExpressionStatement","src":"27890:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27972:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27983:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27968:3:18"},"nodeType":"YulFunctionCall","src":"27968:18:18"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"27988:3:18","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27961:6:18"},"nodeType":"YulFunctionCall","src":"27961:31:18"},"nodeType":"YulExpressionStatement","src":"27961:31:18"},{"nodeType":"YulAssignment","src":"28001:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28013:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28024:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28009:3:18"},"nodeType":"YulFunctionCall","src":"28009:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28001:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27788:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27802:4:18","type":""}],"src":"27637:397:18"},{"body":{"nodeType":"YulBlock","src":"28248:284:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28265:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28280:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"28288:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28276:3:18"},"nodeType":"YulFunctionCall","src":"28276:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28258:6:18"},"nodeType":"YulFunctionCall","src":"28258:38:18"},"nodeType":"YulExpressionStatement","src":"28258:38:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28316:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28327:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28312:3:18"},"nodeType":"YulFunctionCall","src":"28312:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"28332:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28305:6:18"},"nodeType":"YulFunctionCall","src":"28305:31:18"},"nodeType":"YulExpressionStatement","src":"28305:31:18"},{"nodeType":"YulAssignment","src":"28345:70:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28379:6:18"},{"name":"value2","nodeType":"YulIdentifier","src":"28387:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28399:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28410:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28395:3:18"},"nodeType":"YulFunctionCall","src":"28395:19:18"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"28353:25:18"},"nodeType":"YulFunctionCall","src":"28353:62:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28345:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28435:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28446:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28431:3:18"},"nodeType":"YulFunctionCall","src":"28431:18:18"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28455:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28471:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"28475:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28467:3:18"},"nodeType":"YulFunctionCall","src":"28467:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"28479:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28463:3:18"},"nodeType":"YulFunctionCall","src":"28463:18:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28451:3:18"},"nodeType":"YulFunctionCall","src":"28451:31:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28424:6:18"},"nodeType":"YulFunctionCall","src":"28424:59:18"},"nodeType":"YulExpressionStatement","src":"28424:59:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28503:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28514:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28499:3:18"},"nodeType":"YulFunctionCall","src":"28499:18:18"},{"name":"value4","nodeType":"YulIdentifier","src":"28519:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28492:6:18"},"nodeType":"YulFunctionCall","src":"28492:34:18"},"nodeType":"YulExpressionStatement","src":"28492:34:18"}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28185:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28196:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28204:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28212:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28220:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28228:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28239:4:18","type":""}],"src":"28039:493:18"},{"body":{"nodeType":"YulBlock","src":"28585:80:18","statements":[{"body":{"nodeType":"YulBlock","src":"28612:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28614:16:18"},"nodeType":"YulFunctionCall","src":"28614:18:18"},"nodeType":"YulExpressionStatement","src":"28614:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28601:1:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28608:1:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28604:3:18"},"nodeType":"YulFunctionCall","src":"28604:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28598:2:18"},"nodeType":"YulFunctionCall","src":"28598:13:18"},"nodeType":"YulIf","src":"28595:39:18"},{"nodeType":"YulAssignment","src":"28643:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28654:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"28657:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28650:3:18"},"nodeType":"YulFunctionCall","src":"28650:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28643:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28568:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"28571:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28577:3:18","type":""}],"src":"28537:128:18"},{"body":{"nodeType":"YulBlock","src":"28793:135:18","statements":[{"nodeType":"YulAssignment","src":"28803:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28815:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28826:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28811:3:18"},"nodeType":"YulFunctionCall","src":"28811:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28803:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28845:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28870:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28863:6:18"},"nodeType":"YulFunctionCall","src":"28863:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28856:6:18"},"nodeType":"YulFunctionCall","src":"28856:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28838:6:18"},"nodeType":"YulFunctionCall","src":"28838:41:18"},"nodeType":"YulExpressionStatement","src":"28838:41:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28899:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28910:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28895:3:18"},"nodeType":"YulFunctionCall","src":"28895:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"28915:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28888:6:18"},"nodeType":"YulFunctionCall","src":"28888:34:18"},"nodeType":"YulExpressionStatement","src":"28888:34:18"}]},"name":"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28754:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28765:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28773:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28784:4:18","type":""}],"src":"28670:258:18"},{"body":{"nodeType":"YulBlock","src":"29086:205:18","statements":[{"nodeType":"YulAssignment","src":"29096:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29108:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29119:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29104:3:18"},"nodeType":"YulFunctionCall","src":"29104:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29096:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"29131:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"29141:6:18","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29135:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29163:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29178:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"29186:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29174:3:18"},"nodeType":"YulFunctionCall","src":"29174:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29156:6:18"},"nodeType":"YulFunctionCall","src":"29156:34:18"},"nodeType":"YulExpressionStatement","src":"29156:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29210:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29221:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29206:3:18"},"nodeType":"YulFunctionCall","src":"29206:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29230:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"29238:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29226:3:18"},"nodeType":"YulFunctionCall","src":"29226:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29199:6:18"},"nodeType":"YulFunctionCall","src":"29199:43:18"},"nodeType":"YulExpressionStatement","src":"29199:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29262:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29273:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29258:3:18"},"nodeType":"YulFunctionCall","src":"29258:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"29278:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29251:6:18"},"nodeType":"YulFunctionCall","src":"29251:34:18"},"nodeType":"YulExpressionStatement","src":"29251:34:18"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29039:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29050:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29058:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29066:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29077:4:18","type":""}],"src":"28933:358:18"},{"body":{"nodeType":"YulBlock","src":"29397:1101:18","statements":[{"body":{"nodeType":"YulBlock","src":"29438:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"29440:16:18"},"nodeType":"YulFunctionCall","src":"29440:18:18"},"nodeType":"YulExpressionStatement","src":"29440:18:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29413:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29426:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"29430:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29422:3:18"},"nodeType":"YulFunctionCall","src":"29422:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"29434:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29418:3:18"},"nodeType":"YulFunctionCall","src":"29418:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29410:2:18"},"nodeType":"YulFunctionCall","src":"29410:27:18"},"nodeType":"YulIf","src":"29407:53:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29512:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29550:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29544:5:18"},"nodeType":"YulFunctionCall","src":"29544:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"29518:25:18"},"nodeType":"YulFunctionCall","src":"29518:38:18"},{"name":"len","nodeType":"YulIdentifier","src":"29558:3:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"29469:42:18"},"nodeType":"YulFunctionCall","src":"29469:93:18"},"nodeType":"YulExpressionStatement","src":"29469:93:18"},{"nodeType":"YulVariableDeclaration","src":"29571:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"29588:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"29575:9:18","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"29632:608:18","statements":[{"nodeType":"YulVariableDeclaration","src":"29646:32:18","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29665:3:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29674:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29670:3:18"},"nodeType":"YulFunctionCall","src":"29670:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29661:3:18"},"nodeType":"YulFunctionCall","src":"29661:17:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"29650:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29691:48:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29734:4:18"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"29705:28:18"},"nodeType":"YulFunctionCall","src":"29705:34:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"29695:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29752:18:18","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"29761:9:18"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"29756:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"29840:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29865:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29890:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29895:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29886:3:18"},"nodeType":"YulFunctionCall","src":"29886:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29873:12:18"},"nodeType":"YulFunctionCall","src":"29873:33:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29858:6:18"},"nodeType":"YulFunctionCall","src":"29858:49:18"},"nodeType":"YulExpressionStatement","src":"29858:49:18"},{"nodeType":"YulAssignment","src":"29924:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29938:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"29946:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29934:3:18"},"nodeType":"YulFunctionCall","src":"29934:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29924:6:18"}]},{"nodeType":"YulAssignment","src":"29965:33:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"29982:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29993:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29978:3:18"},"nodeType":"YulFunctionCall","src":"29978:20:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"29965:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29794:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"29797:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29791:2:18"},"nodeType":"YulFunctionCall","src":"29791:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29806:21:18","statements":[{"nodeType":"YulAssignment","src":"29808:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29817:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"29820:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29813:3:18"},"nodeType":"YulFunctionCall","src":"29813:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"29808:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"29787:3:18","statements":[]},"src":"29783:229:18"},{"body":{"nodeType":"YulBlock","src":"30057:127:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30082:6:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30111:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30116:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30107:3:18"},"nodeType":"YulFunctionCall","src":"30107:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30094:12:18"},"nodeType":"YulFunctionCall","src":"30094:33:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30145:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"30148:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30141:3:18"},"nodeType":"YulFunctionCall","src":"30141:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"30154:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30137:3:18"},"nodeType":"YulFunctionCall","src":"30137:21:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30164:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30160:3:18"},"nodeType":"YulFunctionCall","src":"30160:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"30133:3:18"},"nodeType":"YulFunctionCall","src":"30133:34:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30129:3:18"},"nodeType":"YulFunctionCall","src":"30129:39:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30090:3:18"},"nodeType":"YulFunctionCall","src":"30090:79:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30075:6:18"},"nodeType":"YulFunctionCall","src":"30075:95:18"},"nodeType":"YulExpressionStatement","src":"30075:95:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"30031:7:18"},{"name":"len","nodeType":"YulIdentifier","src":"30040:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30028:2:18"},"nodeType":"YulFunctionCall","src":"30028:16:18"},"nodeType":"YulIf","src":"30025:159:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30204:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30218:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"30221:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30214:3:18"},"nodeType":"YulFunctionCall","src":"30214:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"30227:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30210:3:18"},"nodeType":"YulFunctionCall","src":"30210:19:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30197:6:18"},"nodeType":"YulFunctionCall","src":"30197:33:18"},"nodeType":"YulExpressionStatement","src":"30197:33:18"}]},"nodeType":"YulCase","src":"29625:615:18","value":{"kind":"number","nodeType":"YulLiteral","src":"29630:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"30257:235:18","statements":[{"nodeType":"YulVariableDeclaration","src":"30271:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"30284:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30275:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"30317:74:18","statements":[{"nodeType":"YulAssignment","src":"30335:42:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30361:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30366:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30357:3:18"},"nodeType":"YulFunctionCall","src":"30357:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30344:12:18"},"nodeType":"YulFunctionCall","src":"30344:33:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30335:5:18"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"30301:3:18"},"nodeType":"YulIf","src":"30298:93:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30411:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30470:5:18"},{"name":"len","nodeType":"YulIdentifier","src":"30477:3:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"30417:52:18"},"nodeType":"YulFunctionCall","src":"30417:64:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30404:6:18"},"nodeType":"YulFunctionCall","src":"30404:78:18"},"nodeType":"YulExpressionStatement","src":"30404:78:18"}]},"nodeType":"YulCase","src":"30249:243:18","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29608:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29613:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29605:2:18"},"nodeType":"YulFunctionCall","src":"29605:11:18"},"nodeType":"YulSwitch","src":"29598:894:18"}]},"name":"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29377:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"29383:3:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"29388:3:18","type":""}],"src":"29296:1202:18"},{"body":{"nodeType":"YulBlock","src":"30677:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30694:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30705:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30687:6:18"},"nodeType":"YulFunctionCall","src":"30687:21:18"},"nodeType":"YulExpressionStatement","src":"30687:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30728:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30739:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30724:3:18"},"nodeType":"YulFunctionCall","src":"30724:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"30744:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30717:6:18"},"nodeType":"YulFunctionCall","src":"30717:30:18"},"nodeType":"YulExpressionStatement","src":"30717:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30767:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30778:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30763:3:18"},"nodeType":"YulFunctionCall","src":"30763:18:18"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"30783:34:18","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30756:6:18"},"nodeType":"YulFunctionCall","src":"30756:62:18"},"nodeType":"YulExpressionStatement","src":"30756:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30838:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30849:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30834:3:18"},"nodeType":"YulFunctionCall","src":"30834:18:18"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"30854:8:18","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30827:6:18"},"nodeType":"YulFunctionCall","src":"30827:36:18"},"nodeType":"YulExpressionStatement","src":"30827:36:18"},{"nodeType":"YulAssignment","src":"30872:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30884:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30895:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30880:3:18"},"nodeType":"YulFunctionCall","src":"30880:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30872:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30654:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30668:4:18","type":""}],"src":"30503:402:18"},{"body":{"nodeType":"YulBlock","src":"31091:275:18","statements":[{"nodeType":"YulAssignment","src":"31101:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31113:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31124:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31109:3:18"},"nodeType":"YulFunctionCall","src":"31109:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31101:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"31137:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"31147:6:18","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"31141:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31169:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31184:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"31192:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31180:3:18"},"nodeType":"YulFunctionCall","src":"31180:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31162:6:18"},"nodeType":"YulFunctionCall","src":"31162:34:18"},"nodeType":"YulExpressionStatement","src":"31162:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31216:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31227:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31212:3:18"},"nodeType":"YulFunctionCall","src":"31212:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31236:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"31244:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31232:3:18"},"nodeType":"YulFunctionCall","src":"31232:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31205:6:18"},"nodeType":"YulFunctionCall","src":"31205:43:18"},"nodeType":"YulExpressionStatement","src":"31205:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31268:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31279:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31264:3:18"},"nodeType":"YulFunctionCall","src":"31264:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31288:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31304:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"31309:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31300:3:18"},"nodeType":"YulFunctionCall","src":"31300:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"31313:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31296:3:18"},"nodeType":"YulFunctionCall","src":"31296:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31284:3:18"},"nodeType":"YulFunctionCall","src":"31284:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31257:6:18"},"nodeType":"YulFunctionCall","src":"31257:60:18"},"nodeType":"YulExpressionStatement","src":"31257:60:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31337:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31348:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31333:3:18"},"nodeType":"YulFunctionCall","src":"31333:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"31353:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31326:6:18"},"nodeType":"YulFunctionCall","src":"31326:34:18"},"nodeType":"YulExpressionStatement","src":"31326:34:18"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31036:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31047:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31055:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31063:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31071:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31082:4:18","type":""}],"src":"30910:456:18"},{"body":{"nodeType":"YulBlock","src":"31461:544:18","statements":[{"body":{"nodeType":"YulBlock","src":"31507:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31516:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31519:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31509:6:18"},"nodeType":"YulFunctionCall","src":"31509:12:18"},"nodeType":"YulExpressionStatement","src":"31509:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31482:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"31491:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31478:3:18"},"nodeType":"YulFunctionCall","src":"31478:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"31503:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31474:3:18"},"nodeType":"YulFunctionCall","src":"31474:32:18"},"nodeType":"YulIf","src":"31471:52:18"},{"nodeType":"YulVariableDeclaration","src":"31532:30:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31552:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31546:5:18"},"nodeType":"YulFunctionCall","src":"31546:16:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31536:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"31605:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31614:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31617:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31607:6:18"},"nodeType":"YulFunctionCall","src":"31607:12:18"},"nodeType":"YulExpressionStatement","src":"31607:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31577:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31593:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"31597:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31589:3:18"},"nodeType":"YulFunctionCall","src":"31589:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"31601:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31585:3:18"},"nodeType":"YulFunctionCall","src":"31585:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31574:2:18"},"nodeType":"YulFunctionCall","src":"31574:30:18"},"nodeType":"YulIf","src":"31571:50:18"},{"nodeType":"YulVariableDeclaration","src":"31630:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31644:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"31655:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31640:3:18"},"nodeType":"YulFunctionCall","src":"31640:22:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"31634:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"31710:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31719:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31722:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31712:6:18"},"nodeType":"YulFunctionCall","src":"31712:12:18"},"nodeType":"YulExpressionStatement","src":"31712:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"31689:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"31693:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31685:3:18"},"nodeType":"YulFunctionCall","src":"31685:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31700:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31681:3:18"},"nodeType":"YulFunctionCall","src":"31681:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31674:6:18"},"nodeType":"YulFunctionCall","src":"31674:35:18"},"nodeType":"YulIf","src":"31671:55:18"},{"nodeType":"YulVariableDeclaration","src":"31735:19:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"31751:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31745:5:18"},"nodeType":"YulFunctionCall","src":"31745:9:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"31739:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31763:61:18","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"31820:2:18"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"31792:27:18"},"nodeType":"YulFunctionCall","src":"31792:31:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"31776:15:18"},"nodeType":"YulFunctionCall","src":"31776:48:18"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"31767:5:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"31840:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"31847:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31833:6:18"},"nodeType":"YulFunctionCall","src":"31833:17:18"},"nodeType":"YulExpressionStatement","src":"31833:17:18"},{"body":{"nodeType":"YulBlock","src":"31896:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31905:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31908:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31898:6:18"},"nodeType":"YulFunctionCall","src":"31898:12:18"},"nodeType":"YulExpressionStatement","src":"31898:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"31873:2:18"},{"name":"_2","nodeType":"YulIdentifier","src":"31877:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31869:3:18"},"nodeType":"YulFunctionCall","src":"31869:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"31882:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31865:3:18"},"nodeType":"YulFunctionCall","src":"31865:20:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31887:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31862:2:18"},"nodeType":"YulFunctionCall","src":"31862:33:18"},"nodeType":"YulIf","src":"31859:53:18"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"31947:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"31951:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31943:3:18"},"nodeType":"YulFunctionCall","src":"31943:11:18"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"31960:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"31967:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31956:3:18"},"nodeType":"YulFunctionCall","src":"31956:14:18"},{"name":"_2","nodeType":"YulIdentifier","src":"31972:2:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"31921:21:18"},"nodeType":"YulFunctionCall","src":"31921:54:18"},"nodeType":"YulExpressionStatement","src":"31921:54:18"},{"nodeType":"YulAssignment","src":"31984:15:18","value":{"name":"array","nodeType":"YulIdentifier","src":"31994:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31984:6:18"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31427:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31438:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31450:6:18","type":""}],"src":"31371:634:18"},{"body":{"nodeType":"YulBlock","src":"32184:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32201:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32212:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32194:6:18"},"nodeType":"YulFunctionCall","src":"32194:21:18"},"nodeType":"YulExpressionStatement","src":"32194:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32235:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32246:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32231:3:18"},"nodeType":"YulFunctionCall","src":"32231:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"32251:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32224:6:18"},"nodeType":"YulFunctionCall","src":"32224:30:18"},"nodeType":"YulExpressionStatement","src":"32224:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32274:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32285:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32270:3:18"},"nodeType":"YulFunctionCall","src":"32270:18:18"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"32290:34:18","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32263:6:18"},"nodeType":"YulFunctionCall","src":"32263:62:18"},"nodeType":"YulExpressionStatement","src":"32263:62:18"},{"nodeType":"YulAssignment","src":"32334:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32346:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32357:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32342:3:18"},"nodeType":"YulFunctionCall","src":"32342:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32334:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32161:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32175:4:18","type":""}],"src":"32010:356:18"},{"body":{"nodeType":"YulBlock","src":"32588:338:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32605:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32620:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"32628:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32616:3:18"},"nodeType":"YulFunctionCall","src":"32616:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32598:6:18"},"nodeType":"YulFunctionCall","src":"32598:38:18"},"nodeType":"YulExpressionStatement","src":"32598:38:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32656:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32667:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32652:3:18"},"nodeType":"YulFunctionCall","src":"32652:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"32672:3:18","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32645:6:18"},"nodeType":"YulFunctionCall","src":"32645:31:18"},"nodeType":"YulExpressionStatement","src":"32645:31:18"},{"nodeType":"YulVariableDeclaration","src":"32685:59:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32716:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32728:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32739:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32724:3:18"},"nodeType":"YulFunctionCall","src":"32724:19:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"32699:16:18"},"nodeType":"YulFunctionCall","src":"32699:45:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"32689:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32764:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32775:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32760:3:18"},"nodeType":"YulFunctionCall","src":"32760:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32784:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32800:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"32804:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32796:3:18"},"nodeType":"YulFunctionCall","src":"32796:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"32808:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32792:3:18"},"nodeType":"YulFunctionCall","src":"32792:18:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32780:3:18"},"nodeType":"YulFunctionCall","src":"32780:31:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32753:6:18"},"nodeType":"YulFunctionCall","src":"32753:59:18"},"nodeType":"YulExpressionStatement","src":"32753:59:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32832:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32843:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32828:3:18"},"nodeType":"YulFunctionCall","src":"32828:18:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"32852:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"32860:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32848:3:18"},"nodeType":"YulFunctionCall","src":"32848:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32821:6:18"},"nodeType":"YulFunctionCall","src":"32821:50:18"},"nodeType":"YulExpressionStatement","src":"32821:50:18"},{"nodeType":"YulAssignment","src":"32880:40:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32905:6:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"32913:6:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"32888:16:18"},"nodeType":"YulFunctionCall","src":"32888:32:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32880:4:18"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32533:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32544:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32552:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32560:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32568:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32579:4:18","type":""}],"src":"32371:555:18"},{"body":{"nodeType":"YulBlock","src":"33068:137:18","statements":[{"nodeType":"YulVariableDeclaration","src":"33078:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33098:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33092:5:18"},"nodeType":"YulFunctionCall","src":"33092:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33082:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33140:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"33148:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33136:3:18"},"nodeType":"YulFunctionCall","src":"33136:17:18"},{"name":"pos","nodeType":"YulIdentifier","src":"33155:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"33160:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"33114:21:18"},"nodeType":"YulFunctionCall","src":"33114:53:18"},"nodeType":"YulExpressionStatement","src":"33114:53:18"},{"nodeType":"YulAssignment","src":"33176:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33187:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"33192:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33183:3:18"},"nodeType":"YulFunctionCall","src":"33183:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33176:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33044:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33049:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33060:3:18","type":""}],"src":"32931:274:18"},{"body":{"nodeType":"YulBlock","src":"33384:231:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33401:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33412:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33394:6:18"},"nodeType":"YulFunctionCall","src":"33394:21:18"},"nodeType":"YulExpressionStatement","src":"33394:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33435:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33446:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33431:3:18"},"nodeType":"YulFunctionCall","src":"33431:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"33451:2:18","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33424:6:18"},"nodeType":"YulFunctionCall","src":"33424:30:18"},"nodeType":"YulExpressionStatement","src":"33424:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33474:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33485:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33470:3:18"},"nodeType":"YulFunctionCall","src":"33470:18:18"},{"hexValue":"546f6b656e4272696467653a206661696c656420746f2067657420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"33490:34:18","type":"","value":"TokenBridge: failed to get token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33463:6:18"},"nodeType":"YulFunctionCall","src":"33463:62:18"},"nodeType":"YulExpressionStatement","src":"33463:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33545:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33556:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33541:3:18"},"nodeType":"YulFunctionCall","src":"33541:18:18"},{"hexValue":"20646563696d616c73","kind":"string","nodeType":"YulLiteral","src":"33561:11:18","type":"","value":" decimals"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33534:6:18"},"nodeType":"YulFunctionCall","src":"33534:39:18"},"nodeType":"YulExpressionStatement","src":"33534:39:18"},{"nodeType":"YulAssignment","src":"33582:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33594:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33605:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33590:3:18"},"nodeType":"YulFunctionCall","src":"33590:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33582:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33361:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33375:4:18","type":""}],"src":"33210:405:18"},{"body":{"nodeType":"YulBlock","src":"33699:194:18","statements":[{"body":{"nodeType":"YulBlock","src":"33745:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33754:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33757:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33747:6:18"},"nodeType":"YulFunctionCall","src":"33747:12:18"},"nodeType":"YulExpressionStatement","src":"33747:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33720:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"33729:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33716:3:18"},"nodeType":"YulFunctionCall","src":"33716:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"33741:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33712:3:18"},"nodeType":"YulFunctionCall","src":"33712:32:18"},"nodeType":"YulIf","src":"33709:52:18"},{"nodeType":"YulVariableDeclaration","src":"33770:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33789:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33783:5:18"},"nodeType":"YulFunctionCall","src":"33783:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"33774:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"33847:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33856:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33859:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33849:6:18"},"nodeType":"YulFunctionCall","src":"33849:12:18"},"nodeType":"YulExpressionStatement","src":"33849:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33821:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33832:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"33839:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33828:3:18"},"nodeType":"YulFunctionCall","src":"33828:16:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33818:2:18"},"nodeType":"YulFunctionCall","src":"33818:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33811:6:18"},"nodeType":"YulFunctionCall","src":"33811:35:18"},"nodeType":"YulIf","src":"33808:55:18"},{"nodeType":"YulAssignment","src":"33872:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"33882:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33872:6:18"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33665:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33676:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33688:6:18","type":""}],"src":"33620:273:18"},{"body":{"nodeType":"YulBlock","src":"33930:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33947:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33954:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"33959:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33950:3:18"},"nodeType":"YulFunctionCall","src":"33950:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33940:6:18"},"nodeType":"YulFunctionCall","src":"33940:31:18"},"nodeType":"YulExpressionStatement","src":"33940:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33987:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33990:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33980:6:18"},"nodeType":"YulFunctionCall","src":"33980:15:18"},"nodeType":"YulExpressionStatement","src":"33980:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34011:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34014:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34004:6:18"},"nodeType":"YulFunctionCall","src":"34004:15:18"},"nodeType":"YulExpressionStatement","src":"34004:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"33898:127:18"},{"body":{"nodeType":"YulBlock","src":"34204:232:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34221:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34232:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34214:6:18"},"nodeType":"YulFunctionCall","src":"34214:21:18"},"nodeType":"YulExpressionStatement","src":"34214:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34255:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34266:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34251:3:18"},"nodeType":"YulFunctionCall","src":"34251:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"34271:2:18","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34244:6:18"},"nodeType":"YulFunctionCall","src":"34244:30:18"},"nodeType":"YulExpressionStatement","src":"34244:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34294:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34305:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34290:3:18"},"nodeType":"YulFunctionCall","src":"34290:18:18"},{"hexValue":"546f6b656e4272696467653a205f61646170746572506172616d73206d757374","kind":"string","nodeType":"YulLiteral","src":"34310:34:18","type":"","value":"TokenBridge: _adapterParams must"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34283:6:18"},"nodeType":"YulFunctionCall","src":"34283:62:18"},"nodeType":"YulExpressionStatement","src":"34283:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34365:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34376:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34361:3:18"},"nodeType":"YulFunctionCall","src":"34361:18:18"},{"hexValue":"20626520656d7074792e","kind":"string","nodeType":"YulLiteral","src":"34381:12:18","type":"","value":" be empty."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34354:6:18"},"nodeType":"YulFunctionCall","src":"34354:40:18"},"nodeType":"YulExpressionStatement","src":"34354:40:18"},{"nodeType":"YulAssignment","src":"34403:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34415:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34426:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34411:3:18"},"nodeType":"YulFunctionCall","src":"34411:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34403:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34181:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34195:4:18","type":""}],"src":"34030:406:18"},{"body":{"nodeType":"YulBlock","src":"34638:244:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34655:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34668:3:18","type":"","value":"248"},{"name":"value0","nodeType":"YulIdentifier","src":"34673:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34664:3:18"},"nodeType":"YulFunctionCall","src":"34664:16:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34686:3:18","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"34691:3:18","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34682:3:18"},"nodeType":"YulFunctionCall","src":"34682:13:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34660:3:18"},"nodeType":"YulFunctionCall","src":"34660:36:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34648:6:18"},"nodeType":"YulFunctionCall","src":"34648:49:18"},"nodeType":"YulExpressionStatement","src":"34648:49:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34717:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34722:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34713:3:18"},"nodeType":"YulFunctionCall","src":"34713:11:18"},{"name":"value1","nodeType":"YulIdentifier","src":"34726:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34706:6:18"},"nodeType":"YulFunctionCall","src":"34706:27:18"},"nodeType":"YulExpressionStatement","src":"34706:27:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34753:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34758:2:18","type":"","value":"33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34749:3:18"},"nodeType":"YulFunctionCall","src":"34749:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"34763:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34742:6:18"},"nodeType":"YulFunctionCall","src":"34742:28:18"},"nodeType":"YulExpressionStatement","src":"34742:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34790:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34795:2:18","type":"","value":"65"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34786:3:18"},"nodeType":"YulFunctionCall","src":"34786:12:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34808:3:18","type":"","value":"192"},{"name":"value3","nodeType":"YulIdentifier","src":"34813:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34804:3:18"},"nodeType":"YulFunctionCall","src":"34804:16:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34834:3:18","type":"","value":"192"},{"kind":"number","nodeType":"YulLiteral","src":"34839:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34830:3:18"},"nodeType":"YulFunctionCall","src":"34830:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"34843:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34826:3:18"},"nodeType":"YulFunctionCall","src":"34826:19:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34822:3:18"},"nodeType":"YulFunctionCall","src":"34822:24:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34800:3:18"},"nodeType":"YulFunctionCall","src":"34800:47:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34779:6:18"},"nodeType":"YulFunctionCall","src":"34779:69:18"},"nodeType":"YulExpressionStatement","src":"34779:69:18"},{"nodeType":"YulAssignment","src":"34857:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34868:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34873:2:18","type":"","value":"73"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34864:3:18"},"nodeType":"YulFunctionCall","src":"34864:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34857:3:18"}]}]},"name":"abi_encode_tuple_packed_t_uint8_t_bytes32_t_bytes32_t_uint64__to_t_uint8_t_bytes32_t_bytes32_t_uint64__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34590:3:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34595:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34603:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34611:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34619:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34630:3:18","type":""}],"src":"34441:441:18"},{"body":{"nodeType":"YulBlock","src":"35061:226:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35078:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35089:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35071:6:18"},"nodeType":"YulFunctionCall","src":"35071:21:18"},"nodeType":"YulExpressionStatement","src":"35071:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35112:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35123:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35108:3:18"},"nodeType":"YulFunctionCall","src":"35108:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"35128:2:18","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35101:6:18"},"nodeType":"YulFunctionCall","src":"35101:30:18"},"nodeType":"YulExpressionStatement","src":"35101:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35151:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35162:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35147:3:18"},"nodeType":"YulFunctionCall","src":"35147:18:18"},{"hexValue":"546f6b656e4272696467653a20696e76616c696420736f757263652063686169","kind":"string","nodeType":"YulLiteral","src":"35167:34:18","type":"","value":"TokenBridge: invalid source chai"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35140:6:18"},"nodeType":"YulFunctionCall","src":"35140:62:18"},"nodeType":"YulExpressionStatement","src":"35140:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35222:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35233:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35218:3:18"},"nodeType":"YulFunctionCall","src":"35218:18:18"},{"hexValue":"6e206964","kind":"string","nodeType":"YulLiteral","src":"35238:6:18","type":"","value":"n id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35211:6:18"},"nodeType":"YulFunctionCall","src":"35211:34:18"},"nodeType":"YulExpressionStatement","src":"35211:34:18"},{"nodeType":"YulAssignment","src":"35254:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35266:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35277:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35262:3:18"},"nodeType":"YulFunctionCall","src":"35262:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35254:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35038:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35052:4:18","type":""}],"src":"34887:400:18"},{"body":{"nodeType":"YulBlock","src":"35466:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35483:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35494:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35476:6:18"},"nodeType":"YulFunctionCall","src":"35476:21:18"},"nodeType":"YulExpressionStatement","src":"35476:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35517:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35528:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35513:3:18"},"nodeType":"YulFunctionCall","src":"35513:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"35533:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35506:6:18"},"nodeType":"YulFunctionCall","src":"35506:30:18"},"nodeType":"YulExpressionStatement","src":"35506:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35556:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35567:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35552:3:18"},"nodeType":"YulFunctionCall","src":"35552:18:18"},{"hexValue":"546f6b656e4272696467653a20696e73756666696369656e74206c6971756964","kind":"string","nodeType":"YulLiteral","src":"35572:34:18","type":"","value":"TokenBridge: insufficient liquid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35545:6:18"},"nodeType":"YulFunctionCall","src":"35545:62:18"},"nodeType":"YulExpressionStatement","src":"35545:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35627:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35638:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35623:3:18"},"nodeType":"YulFunctionCall","src":"35623:18:18"},{"hexValue":"697479","kind":"string","nodeType":"YulLiteral","src":"35643:5:18","type":"","value":"ity"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35616:6:18"},"nodeType":"YulFunctionCall","src":"35616:33:18"},"nodeType":"YulExpressionStatement","src":"35616:33:18"},{"nodeType":"YulAssignment","src":"35658:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35670:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35681:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35666:3:18"},"nodeType":"YulFunctionCall","src":"35666:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35658:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35443:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35457:4:18","type":""}],"src":"35292:399:18"},{"body":{"nodeType":"YulBlock","src":"35870:181:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35887:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35898:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35880:6:18"},"nodeType":"YulFunctionCall","src":"35880:21:18"},"nodeType":"YulExpressionStatement","src":"35880:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35921:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35932:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35917:3:18"},"nodeType":"YulFunctionCall","src":"35917:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"35937:2:18","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35910:6:18"},"nodeType":"YulFunctionCall","src":"35910:30:18"},"nodeType":"YulExpressionStatement","src":"35910:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35960:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35971:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35956:3:18"},"nodeType":"YulFunctionCall","src":"35956:18:18"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"35976:33:18","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35949:6:18"},"nodeType":"YulFunctionCall","src":"35949:61:18"},"nodeType":"YulExpressionStatement","src":"35949:61:18"},{"nodeType":"YulAssignment","src":"36019:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36031:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36042:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36027:3:18"},"nodeType":"YulFunctionCall","src":"36027:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36019:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35847:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35861:4:18","type":""}],"src":"35696:355:18"},{"body":{"nodeType":"YulBlock","src":"36102:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"36133:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36154:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36161:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"36166:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36157:3:18"},"nodeType":"YulFunctionCall","src":"36157:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36147:6:18"},"nodeType":"YulFunctionCall","src":"36147:31:18"},"nodeType":"YulExpressionStatement","src":"36147:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36198:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"36201:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36191:6:18"},"nodeType":"YulFunctionCall","src":"36191:15:18"},"nodeType":"YulExpressionStatement","src":"36191:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36226:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36229:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36219:6:18"},"nodeType":"YulFunctionCall","src":"36219:15:18"},"nodeType":"YulExpressionStatement","src":"36219:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36122:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36115:6:18"},"nodeType":"YulFunctionCall","src":"36115:9:18"},"nodeType":"YulIf","src":"36112:132:18"},{"nodeType":"YulAssignment","src":"36253:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36262:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"36265:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36258:3:18"},"nodeType":"YulFunctionCall","src":"36258:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"36253:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36087:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"36090:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"36096:1:18","type":""}],"src":"36056:217:18"},{"body":{"nodeType":"YulBlock","src":"36452:180:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36469:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36480:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36462:6:18"},"nodeType":"YulFunctionCall","src":"36462:21:18"},"nodeType":"YulExpressionStatement","src":"36462:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36503:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36514:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36499:3:18"},"nodeType":"YulFunctionCall","src":"36499:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"36519:2:18","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36492:6:18"},"nodeType":"YulFunctionCall","src":"36492:30:18"},"nodeType":"YulExpressionStatement","src":"36492:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36542:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36553:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36538:3:18"},"nodeType":"YulFunctionCall","src":"36538:18:18"},{"hexValue":"546f6b656e4272696467653a20616d6f756e745344206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"36558:32:18","type":"","value":"TokenBridge: amountSD overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36531:6:18"},"nodeType":"YulFunctionCall","src":"36531:60:18"},"nodeType":"YulExpressionStatement","src":"36531:60:18"},{"nodeType":"YulAssignment","src":"36600:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36612:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36623:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36608:3:18"},"nodeType":"YulFunctionCall","src":"36608:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36600:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f20599b10bbd05585578c7efc5a9b9f3631294abee5bf88053b95f5094f8006c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36429:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36443:4:18","type":""}],"src":"36278:354:18"},{"body":{"nodeType":"YulBlock","src":"36715:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"36761:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36770:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36773:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36763:6:18"},"nodeType":"YulFunctionCall","src":"36763:12:18"},"nodeType":"YulExpressionStatement","src":"36763:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36736:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"36745:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36732:3:18"},"nodeType":"YulFunctionCall","src":"36732:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"36757:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36728:3:18"},"nodeType":"YulFunctionCall","src":"36728:32:18"},"nodeType":"YulIf","src":"36725:52:18"},{"nodeType":"YulVariableDeclaration","src":"36786:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36812:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"36799:12:18"},"nodeType":"YulFunctionCall","src":"36799:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"36790:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36856:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"36831:24:18"},"nodeType":"YulFunctionCall","src":"36831:31:18"},"nodeType":"YulExpressionStatement","src":"36831:31:18"},{"nodeType":"YulAssignment","src":"36871:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"36881:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36871:6:18"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36681:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36692:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36704:6:18","type":""}],"src":"36637:255:18"},{"body":{"nodeType":"YulBlock","src":"36949:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"37008:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37010:16:18"},"nodeType":"YulFunctionCall","src":"37010:18:18"},"nodeType":"YulExpressionStatement","src":"37010:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36980:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36973:6:18"},"nodeType":"YulFunctionCall","src":"36973:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36966:6:18"},"nodeType":"YulFunctionCall","src":"36966:17:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36988:1:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36999:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36995:3:18"},"nodeType":"YulFunctionCall","src":"36995:6:18"},{"name":"x","nodeType":"YulIdentifier","src":"37003:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36991:3:18"},"nodeType":"YulFunctionCall","src":"36991:14:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36985:2:18"},"nodeType":"YulFunctionCall","src":"36985:21:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36962:3:18"},"nodeType":"YulFunctionCall","src":"36962:45:18"},"nodeType":"YulIf","src":"36959:71:18"},{"nodeType":"YulAssignment","src":"37039:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37054:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"37057:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37050:3:18"},"nodeType":"YulFunctionCall","src":"37050:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"37039:7:18"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36928:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"36931:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"36937:7:18","type":""}],"src":"36897:168:18"},{"body":{"nodeType":"YulBlock","src":"37244:164:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37261:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37272:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37254:6:18"},"nodeType":"YulFunctionCall","src":"37254:21:18"},"nodeType":"YulExpressionStatement","src":"37254:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37295:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37306:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37291:3:18"},"nodeType":"YulFunctionCall","src":"37291:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"37311:2:18","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37284:6:18"},"nodeType":"YulFunctionCall","src":"37284:30:18"},"nodeType":"YulExpressionStatement","src":"37284:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37334:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37345:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37330:3:18"},"nodeType":"YulFunctionCall","src":"37330:18:18"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"37350:16:18","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37323:6:18"},"nodeType":"YulFunctionCall","src":"37323:44:18"},"nodeType":"YulExpressionStatement","src":"37323:44:18"},{"nodeType":"YulAssignment","src":"37376:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37388:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37399:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37384:3:18"},"nodeType":"YulFunctionCall","src":"37384:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37376:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37221:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37235:4:18","type":""}],"src":"37070:338:18"},{"body":{"nodeType":"YulBlock","src":"37587:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37604:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37615:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37597:6:18"},"nodeType":"YulFunctionCall","src":"37597:21:18"},"nodeType":"YulExpressionStatement","src":"37597:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37638:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37649:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37634:3:18"},"nodeType":"YulFunctionCall","src":"37634:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"37654:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37627:6:18"},"nodeType":"YulFunctionCall","src":"37627:30:18"},"nodeType":"YulExpressionStatement","src":"37627:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37677:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37688:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37673:3:18"},"nodeType":"YulFunctionCall","src":"37673:18:18"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"37693:19:18","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37666:6:18"},"nodeType":"YulFunctionCall","src":"37666:47:18"},"nodeType":"YulExpressionStatement","src":"37666:47:18"},{"nodeType":"YulAssignment","src":"37722:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37734:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37745:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37730:3:18"},"nodeType":"YulFunctionCall","src":"37730:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37722:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37564:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37578:4:18","type":""}],"src":"37413:341:18"},{"body":{"nodeType":"YulBlock","src":"38022:453:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38039:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38054:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"38062:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38050:3:18"},"nodeType":"YulFunctionCall","src":"38050:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38032:6:18"},"nodeType":"YulFunctionCall","src":"38032:38:18"},"nodeType":"YulExpressionStatement","src":"38032:38:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38090:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38101:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38086:3:18"},"nodeType":"YulFunctionCall","src":"38086:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"38106:3:18","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38079:6:18"},"nodeType":"YulFunctionCall","src":"38079:31:18"},"nodeType":"YulExpressionStatement","src":"38079:31:18"},{"nodeType":"YulVariableDeclaration","src":"38119:59:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38150:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38162:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38173:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38158:3:18"},"nodeType":"YulFunctionCall","src":"38158:19:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"38133:16:18"},"nodeType":"YulFunctionCall","src":"38133:45:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"38123:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38198:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38209:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38194:3:18"},"nodeType":"YulFunctionCall","src":"38194:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38218:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38234:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"38238:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"38230:3:18"},"nodeType":"YulFunctionCall","src":"38230:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"38242:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38226:3:18"},"nodeType":"YulFunctionCall","src":"38226:18:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38214:3:18"},"nodeType":"YulFunctionCall","src":"38214:31:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38187:6:18"},"nodeType":"YulFunctionCall","src":"38187:59:18"},"nodeType":"YulExpressionStatement","src":"38187:59:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38266:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38277:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38262:3:18"},"nodeType":"YulFunctionCall","src":"38262:18:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"38286:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"38294:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38282:3:18"},"nodeType":"YulFunctionCall","src":"38282:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38255:6:18"},"nodeType":"YulFunctionCall","src":"38255:50:18"},"nodeType":"YulExpressionStatement","src":"38255:50:18"},{"nodeType":"YulVariableDeclaration","src":"38314:46:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38345:6:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"38353:6:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"38328:16:18"},"nodeType":"YulFunctionCall","src":"38328:32:18"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"38318:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38380:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38391:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38376:3:18"},"nodeType":"YulFunctionCall","src":"38376:19:18"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"38401:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"38409:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38397:3:18"},"nodeType":"YulFunctionCall","src":"38397:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38369:6:18"},"nodeType":"YulFunctionCall","src":"38369:51:18"},"nodeType":"YulExpressionStatement","src":"38369:51:18"},{"nodeType":"YulAssignment","src":"38429:40:18","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38454:6:18"},{"name":"tail_2","nodeType":"YulIdentifier","src":"38462:6:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"38437:16:18"},"nodeType":"YulFunctionCall","src":"38437:32:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38429:4:18"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37959:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37970:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37978:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37986:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37994:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38002:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38013:4:18","type":""}],"src":"37759:716:18"},{"body":{"nodeType":"YulBlock","src":"38558:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"38604:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38613:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38616:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38606:6:18"},"nodeType":"YulFunctionCall","src":"38606:12:18"},"nodeType":"YulExpressionStatement","src":"38606:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"38579:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"38588:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38575:3:18"},"nodeType":"YulFunctionCall","src":"38575:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"38600:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38571:3:18"},"nodeType":"YulFunctionCall","src":"38571:32:18"},"nodeType":"YulIf","src":"38568:52:18"},{"nodeType":"YulVariableDeclaration","src":"38629:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38648:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38642:5:18"},"nodeType":"YulFunctionCall","src":"38642:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"38633:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38689:5:18"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"38667:21:18"},"nodeType":"YulFunctionCall","src":"38667:28:18"},"nodeType":"YulExpressionStatement","src":"38667:28:18"},{"nodeType":"YulAssignment","src":"38704:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"38714:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"38704:6:18"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38524:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"38535:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"38547:6:18","type":""}],"src":"38480:245:18"},{"body":{"nodeType":"YulBlock","src":"38904:232:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38921:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38932:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38914:6:18"},"nodeType":"YulFunctionCall","src":"38914:21:18"},"nodeType":"YulExpressionStatement","src":"38914:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38955:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38966:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38951:3:18"},"nodeType":"YulFunctionCall","src":"38951:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"38971:2:18","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38944:6:18"},"nodeType":"YulFunctionCall","src":"38944:30:18"},"nodeType":"YulExpressionStatement","src":"38944:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38994:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39005:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38990:3:18"},"nodeType":"YulFunctionCall","src":"38990:18:18"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"39010:34:18","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38983:6:18"},"nodeType":"YulFunctionCall","src":"38983:62:18"},"nodeType":"YulExpressionStatement","src":"38983:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39065:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39076:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39061:3:18"},"nodeType":"YulFunctionCall","src":"39061:18:18"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"39081:12:18","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39054:6:18"},"nodeType":"YulFunctionCall","src":"39054:40:18"},"nodeType":"YulExpressionStatement","src":"39054:40:18"},{"nodeType":"YulAssignment","src":"39103:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39115:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39126:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39111:3:18"},"nodeType":"YulFunctionCall","src":"39111:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39103:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38881:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38895:4:18","type":""}],"src":"38730:406:18"},{"body":{"nodeType":"YulBlock","src":"39315:176:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39332:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39343:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39325:6:18"},"nodeType":"YulFunctionCall","src":"39325:21:18"},"nodeType":"YulExpressionStatement","src":"39325:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39366:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39377:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39362:3:18"},"nodeType":"YulFunctionCall","src":"39362:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"39382:2:18","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39355:6:18"},"nodeType":"YulFunctionCall","src":"39355:30:18"},"nodeType":"YulExpressionStatement","src":"39355:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39405:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39416:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39401:3:18"},"nodeType":"YulFunctionCall","src":"39401:18:18"},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","kind":"string","nodeType":"YulLiteral","src":"39421:28:18","type":"","value":"LzApp: minGasLimit not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39394:6:18"},"nodeType":"YulFunctionCall","src":"39394:56:18"},"nodeType":"YulExpressionStatement","src":"39394:56:18"},{"nodeType":"YulAssignment","src":"39459:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39471:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39482:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39467:3:18"},"nodeType":"YulFunctionCall","src":"39467:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39459:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39292:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39306:4:18","type":""}],"src":"39141:350:18"},{"body":{"nodeType":"YulBlock","src":"39670:177:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39687:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39698:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39680:6:18"},"nodeType":"YulFunctionCall","src":"39680:21:18"},"nodeType":"YulExpressionStatement","src":"39680:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39721:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39732:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39717:3:18"},"nodeType":"YulFunctionCall","src":"39717:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"39737:2:18","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39710:6:18"},"nodeType":"YulFunctionCall","src":"39710:30:18"},"nodeType":"YulExpressionStatement","src":"39710:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39760:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39771:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39756:3:18"},"nodeType":"YulFunctionCall","src":"39756:18:18"},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"39776:29:18","type":"","value":"LzApp: gas limit is too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39749:6:18"},"nodeType":"YulFunctionCall","src":"39749:57:18"},"nodeType":"YulExpressionStatement","src":"39749:57:18"},{"nodeType":"YulAssignment","src":"39815:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39827:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39838:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39823:3:18"},"nodeType":"YulFunctionCall","src":"39823:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39815:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39647:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39661:4:18","type":""}],"src":"39496:351:18"},{"body":{"nodeType":"YulBlock","src":"40026:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40043:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40054:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40036:6:18"},"nodeType":"YulFunctionCall","src":"40036:21:18"},"nodeType":"YulExpressionStatement","src":"40036:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40077:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40088:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40073:3:18"},"nodeType":"YulFunctionCall","src":"40073:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"40093:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40066:6:18"},"nodeType":"YulFunctionCall","src":"40066:30:18"},"nodeType":"YulExpressionStatement","src":"40066:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40116:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40127:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40112:3:18"},"nodeType":"YulFunctionCall","src":"40112:18:18"},{"hexValue":"546f6b656e4272696467653a20696e76616c6964207061796c6f6164206c656e","kind":"string","nodeType":"YulLiteral","src":"40132:34:18","type":"","value":"TokenBridge: invalid payload len"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40105:6:18"},"nodeType":"YulFunctionCall","src":"40105:62:18"},"nodeType":"YulExpressionStatement","src":"40105:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40187:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40198:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40183:3:18"},"nodeType":"YulFunctionCall","src":"40183:18:18"},{"hexValue":"677468","kind":"string","nodeType":"YulLiteral","src":"40203:5:18","type":"","value":"gth"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40176:6:18"},"nodeType":"YulFunctionCall","src":"40176:33:18"},"nodeType":"YulExpressionStatement","src":"40176:33:18"},{"nodeType":"YulAssignment","src":"40218:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40230:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40241:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40226:3:18"},"nodeType":"YulFunctionCall","src":"40226:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40218:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40003:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40017:4:18","type":""}],"src":"39852:399:18"},{"body":{"nodeType":"YulBlock","src":"40288:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40305:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40312:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"40317:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"40308:3:18"},"nodeType":"YulFunctionCall","src":"40308:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40298:6:18"},"nodeType":"YulFunctionCall","src":"40298:31:18"},"nodeType":"YulExpressionStatement","src":"40298:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40345:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40348:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40338:6:18"},"nodeType":"YulFunctionCall","src":"40338:15:18"},"nodeType":"YulExpressionStatement","src":"40338:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40369:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40372:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40362:6:18"},"nodeType":"YulFunctionCall","src":"40362:15:18"},"nodeType":"YulExpressionStatement","src":"40362:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"40256:127:18"},{"body":{"nodeType":"YulBlock","src":"40562:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40579:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40590:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40572:6:18"},"nodeType":"YulFunctionCall","src":"40572:21:18"},"nodeType":"YulExpressionStatement","src":"40572:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40613:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40624:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40609:3:18"},"nodeType":"YulFunctionCall","src":"40609:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"40629:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40602:6:18"},"nodeType":"YulFunctionCall","src":"40602:30:18"},"nodeType":"YulExpressionStatement","src":"40602:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40652:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40663:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40648:3:18"},"nodeType":"YulFunctionCall","src":"40648:18:18"},{"hexValue":"546f6b656e4272696467653a20756e6b6e6f776e207061636b65742074797065","kind":"string","nodeType":"YulLiteral","src":"40668:34:18","type":"","value":"TokenBridge: unknown packet type"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40641:6:18"},"nodeType":"YulFunctionCall","src":"40641:62:18"},"nodeType":"YulExpressionStatement","src":"40641:62:18"},{"nodeType":"YulAssignment","src":"40712:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40724:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40735:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40720:3:18"},"nodeType":"YulFunctionCall","src":"40720:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40712:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40539:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40553:4:18","type":""}],"src":"40388:356:18"},{"body":{"nodeType":"YulBlock","src":"40906:218:18","statements":[{"nodeType":"YulAssignment","src":"40916:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40928:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40939:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40924:3:18"},"nodeType":"YulFunctionCall","src":"40924:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40916:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"40951:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40969:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"40974:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"40965:3:18"},"nodeType":"YulFunctionCall","src":"40965:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"40978:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40961:3:18"},"nodeType":"YulFunctionCall","src":"40961:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"40955:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40996:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41011:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"41019:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41007:3:18"},"nodeType":"YulFunctionCall","src":"41007:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40989:6:18"},"nodeType":"YulFunctionCall","src":"40989:34:18"},"nodeType":"YulExpressionStatement","src":"40989:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41043:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41054:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41039:3:18"},"nodeType":"YulFunctionCall","src":"41039:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41063:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"41071:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41059:3:18"},"nodeType":"YulFunctionCall","src":"41059:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41032:6:18"},"nodeType":"YulFunctionCall","src":"41032:43:18"},"nodeType":"YulExpressionStatement","src":"41032:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41095:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41106:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41091:3:18"},"nodeType":"YulFunctionCall","src":"41091:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"41111:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41084:6:18"},"nodeType":"YulFunctionCall","src":"41084:34:18"},"nodeType":"YulExpressionStatement","src":"41084:34:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40859:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40870:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40878:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40886:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40897:4:18","type":""}],"src":"40749:375:18"},{"body":{"nodeType":"YulBlock","src":"41303:238:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41320:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41331:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41313:6:18"},"nodeType":"YulFunctionCall","src":"41313:21:18"},"nodeType":"YulExpressionStatement","src":"41313:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41354:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41365:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41350:3:18"},"nodeType":"YulFunctionCall","src":"41350:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"41370:2:18","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41343:6:18"},"nodeType":"YulFunctionCall","src":"41343:30:18"},"nodeType":"YulExpressionStatement","src":"41343:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41393:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41404:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41389:3:18"},"nodeType":"YulFunctionCall","src":"41389:18:18"},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"41409:34:18","type":"","value":"LzApp: destination chain is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41382:6:18"},"nodeType":"YulFunctionCall","src":"41382:62:18"},"nodeType":"YulExpressionStatement","src":"41382:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41464:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41475:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41460:3:18"},"nodeType":"YulFunctionCall","src":"41460:18:18"},{"hexValue":"61207472757374656420736f75726365","kind":"string","nodeType":"YulLiteral","src":"41480:18:18","type":"","value":"a trusted source"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41453:6:18"},"nodeType":"YulFunctionCall","src":"41453:46:18"},"nodeType":"YulExpressionStatement","src":"41453:46:18"},{"nodeType":"YulAssignment","src":"41508:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41520:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41531:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41516:3:18"},"nodeType":"YulFunctionCall","src":"41516:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41508:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41280:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41294:4:18","type":""}],"src":"41129:412:18"},{"body":{"nodeType":"YulBlock","src":"41855:528:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41872:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41887:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"41895:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41883:3:18"},"nodeType":"YulFunctionCall","src":"41883:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41865:6:18"},"nodeType":"YulFunctionCall","src":"41865:38:18"},"nodeType":"YulExpressionStatement","src":"41865:38:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41923:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41934:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41919:3:18"},"nodeType":"YulFunctionCall","src":"41919:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"41939:3:18","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41912:6:18"},"nodeType":"YulFunctionCall","src":"41912:31:18"},"nodeType":"YulExpressionStatement","src":"41912:31:18"},{"nodeType":"YulVariableDeclaration","src":"41952:59:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41983:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41995:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42006:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41991:3:18"},"nodeType":"YulFunctionCall","src":"41991:19:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"41966:16:18"},"nodeType":"YulFunctionCall","src":"41966:45:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"41956:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42031:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42042:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42027:3:18"},"nodeType":"YulFunctionCall","src":"42027:18:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"42051:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"42059:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42047:3:18"},"nodeType":"YulFunctionCall","src":"42047:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42020:6:18"},"nodeType":"YulFunctionCall","src":"42020:50:18"},"nodeType":"YulExpressionStatement","src":"42020:50:18"},{"nodeType":"YulVariableDeclaration","src":"42079:46:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"42110:6:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"42118:6:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"42093:16:18"},"nodeType":"YulFunctionCall","src":"42093:32:18"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"42083:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"42134:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42152:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"42157:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"42148:3:18"},"nodeType":"YulFunctionCall","src":"42148:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"42161:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42144:3:18"},"nodeType":"YulFunctionCall","src":"42144:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"42138:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42183:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42194:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42179:3:18"},"nodeType":"YulFunctionCall","src":"42179:18:18"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"42203:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"42211:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42199:3:18"},"nodeType":"YulFunctionCall","src":"42199:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42172:6:18"},"nodeType":"YulFunctionCall","src":"42172:43:18"},"nodeType":"YulExpressionStatement","src":"42172:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42235:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42246:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42231:3:18"},"nodeType":"YulFunctionCall","src":"42231:19:18"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"42256:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"42264:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42252:3:18"},"nodeType":"YulFunctionCall","src":"42252:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42224:6:18"},"nodeType":"YulFunctionCall","src":"42224:44:18"},"nodeType":"YulExpressionStatement","src":"42224:44:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42288:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42299:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42284:3:18"},"nodeType":"YulFunctionCall","src":"42284:19:18"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"42309:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"42317:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42305:3:18"},"nodeType":"YulFunctionCall","src":"42305:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42277:6:18"},"nodeType":"YulFunctionCall","src":"42277:51:18"},"nodeType":"YulExpressionStatement","src":"42277:51:18"},{"nodeType":"YulAssignment","src":"42337:40:18","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"42362:6:18"},{"name":"tail_2","nodeType":"YulIdentifier","src":"42370:6:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"42345:16:18"},"nodeType":"YulFunctionCall","src":"42345:32:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42337:4:18"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41784:9:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"41795:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"41803:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41811:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"41819:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41827:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41835:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41846:4:18","type":""}],"src":"41546:837:18"},{"body":{"nodeType":"YulBlock","src":"42562:178:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42579:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42590:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42572:6:18"},"nodeType":"YulFunctionCall","src":"42572:21:18"},"nodeType":"YulExpressionStatement","src":"42572:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42613:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42624:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42609:3:18"},"nodeType":"YulFunctionCall","src":"42609:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"42629:2:18","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42602:6:18"},"nodeType":"YulFunctionCall","src":"42602:30:18"},"nodeType":"YulExpressionStatement","src":"42602:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42652:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42663:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42648:3:18"},"nodeType":"YulFunctionCall","src":"42648:18:18"},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","kind":"string","nodeType":"YulLiteral","src":"42668:30:18","type":"","value":"LzApp: invalid adapterParams"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42641:6:18"},"nodeType":"YulFunctionCall","src":"42641:58:18"},"nodeType":"YulExpressionStatement","src":"42641:58:18"},{"nodeType":"YulAssignment","src":"42708:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42720:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42731:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42716:3:18"},"nodeType":"YulFunctionCall","src":"42716:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42708:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42539:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42553:4:18","type":""}],"src":"42388:352:18"},{"body":{"nodeType":"YulBlock","src":"42919:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42936:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42947:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42929:6:18"},"nodeType":"YulFunctionCall","src":"42929:21:18"},"nodeType":"YulExpressionStatement","src":"42929:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42970:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42981:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42966:3:18"},"nodeType":"YulFunctionCall","src":"42966:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"42986:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42959:6:18"},"nodeType":"YulFunctionCall","src":"42959:30:18"},"nodeType":"YulExpressionStatement","src":"42959:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43009:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43020:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43005:3:18"},"nodeType":"YulFunctionCall","src":"43005:18:18"},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","kind":"string","nodeType":"YulLiteral","src":"43025:34:18","type":"","value":"LzApp: payload size is too large"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42998:6:18"},"nodeType":"YulFunctionCall","src":"42998:62:18"},"nodeType":"YulExpressionStatement","src":"42998:62:18"},{"nodeType":"YulAssignment","src":"43069:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43081:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43092:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43077:3:18"},"nodeType":"YulFunctionCall","src":"43077:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43069:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42896:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42910:4:18","type":""}],"src":"42745:356:18"},{"body":{"nodeType":"YulBlock","src":"43280:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43297:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43308:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43290:6:18"},"nodeType":"YulFunctionCall","src":"43290:21:18"},"nodeType":"YulExpressionStatement","src":"43290:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43331:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43342:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43327:3:18"},"nodeType":"YulFunctionCall","src":"43327:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"43347:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43320:6:18"},"nodeType":"YulFunctionCall","src":"43320:30:18"},"nodeType":"YulExpressionStatement","src":"43320:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43370:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43381:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43366:3:18"},"nodeType":"YulFunctionCall","src":"43366:18:18"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"43386:34:18","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43359:6:18"},"nodeType":"YulFunctionCall","src":"43359:62:18"},"nodeType":"YulExpressionStatement","src":"43359:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43441:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43452:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43437:3:18"},"nodeType":"YulFunctionCall","src":"43437:18:18"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"43457:8:18","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43430:6:18"},"nodeType":"YulFunctionCall","src":"43430:36:18"},"nodeType":"YulExpressionStatement","src":"43430:36:18"},{"nodeType":"YulAssignment","src":"43475:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43487:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43498:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43483:3:18"},"nodeType":"YulFunctionCall","src":"43483:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43475:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43257:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43271:4:18","type":""}],"src":"43106:402:18"},{"body":{"nodeType":"YulBlock","src":"43687:179:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43704:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43715:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43697:6:18"},"nodeType":"YulFunctionCall","src":"43697:21:18"},"nodeType":"YulExpressionStatement","src":"43697:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43738:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43749:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43734:3:18"},"nodeType":"YulFunctionCall","src":"43734:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"43754:2:18","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43727:6:18"},"nodeType":"YulFunctionCall","src":"43727:30:18"},"nodeType":"YulExpressionStatement","src":"43727:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43777:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43788:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43773:3:18"},"nodeType":"YulFunctionCall","src":"43773:18:18"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"43793:31:18","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43766:6:18"},"nodeType":"YulFunctionCall","src":"43766:59:18"},"nodeType":"YulExpressionStatement","src":"43766:59:18"},{"nodeType":"YulAssignment","src":"43834:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43846:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43857:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43842:3:18"},"nodeType":"YulFunctionCall","src":"43842:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43834:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43664:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43678:4:18","type":""}],"src":"43513:353:18"},{"body":{"nodeType":"YulBlock","src":"43992:98:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44009:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"44020:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44002:6:18"},"nodeType":"YulFunctionCall","src":"44002:21:18"},"nodeType":"YulExpressionStatement","src":"44002:21:18"},{"nodeType":"YulAssignment","src":"44032:52:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44057:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44069:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"44080:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44065:3:18"},"nodeType":"YulFunctionCall","src":"44065:18:18"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"44040:16:18"},"nodeType":"YulFunctionCall","src":"44040:44:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44032:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43961:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43972:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43983:4:18","type":""}],"src":"43871:219:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_uint64(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint16t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_struct_CallParams_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 64) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_struct_CallParams_calldata(headStart, dataEnd)\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := calldataload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), _2)\n        mstore(add(add(array, _2), 32), 0)\n        value1 := array\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_uint256t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_struct_CallParams_calldata(add(headStart, 96), dataEnd)\n        let offset := calldataload(add(headStart, 160))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_struct$_CallParams_$1410_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_struct_CallParams_calldata(add(headStart, 64), dataEnd)\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_a3f656e3d6523da229fb60bed5efc7d984c25d656eafb061afd4411e65ef5eb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"TokenBridge: bridge fee > 100%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LzApp: invalid endpoint caller\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LzApp: invalid source sending co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_69925dcc82503fae3f61cb0b56ea7ba544b9083edd82baa04532d922e45be1ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"TokenBridge: invalid token addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_51de26679b1ae151f519d14d91d238fe2ca5b6374fe0e7054a2aac9a3771c277__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"TokenBridge: token already regis\")\n        mstore(add(headStart, 96), \"tered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_464ef14f816d65197a5bf9eb8196c8732496061488e59d144c334e1537b250f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"TokenBridge: decimals must be >=\")\n        mstore(add(headStart, 96), \" SHARED_DECIMALS\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_2c3ff8540c07981a036668303639adbe4799b350233a0ac5f010b31371f6bf88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"TokenBridge: fee not enough\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_calldata_ptr__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_bytes(value2, add(headStart, 160))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        tail := abi_encode_bytes_calldata(value4, value5, tail_1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"NonblockingLzApp: caller must be\")\n        mstore(add(headStart, 96), \" LzApp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4d35e3ec0c1d3b67c2e343567e17948449f6542356d6824e45579ad634c06bc5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"TokenBridge: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb4a823ef2988c7f0f323bdf7e2a4dcbb31b0e80b5b423d5400fa0079010153e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TokenBridge: token is not suppor\")\n        mstore(add(headStart, 96), \"ted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_773cc5454c8f282a7d7e9ccda0de0a5a2966ea506b9d9c70b152dcc6cc19a53c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"TokenBridge: amountSD must be gr\")\n        mstore(add(headStart, 96), \"eater than 0\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := sub(shl(64, 1), 1)\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_c6f3df88fe5cc15a248eaa2deab76be5240e0819d0b33fcc85490b0743a44100__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"TokenBridge: emergency withdraw \")\n        mstore(add(headStart, 96), \"locked\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint64(x, y) -> diff\n    {\n        let _1 := sub(shl(64, 1), 1)\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LzApp: no trusted path record\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(sub(shl(96, 1), 1))))\n        end := add(_1, 20)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_69f0c6696cdce4e33d0fe5e906c7f9d2fe1d15c857f43b76ee902d41cb15772e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"TokenBridge: ETH is not supporte\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_09bd6fe13b7a2e61421c04b462f38b63a3c8eaee5d95d8f0abc29e9905b9a57c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TokenBridge: amount must be grea\")\n        mstore(add(headStart, 96), \"ter than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"NonblockingLzApp: no stored mess\")\n        mstore(add(headStart, 96), \"age\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"NonblockingLzApp: invalid payloa\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), value4)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage(slot, src, len)\n    {\n        if gt(len, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value3, tail_1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_a4679f1eb433d290c611e513bcc1547660e909a04d30b9d58b7dff10df0f93a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"TokenBridge: failed to get token\")\n        mstore(add(headStart, 96), \" decimals\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_c27b3a521a81ad4f5b19f69c50ebe435a9994587364a440c25a743e5a087d55c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TokenBridge: _adapterParams must\")\n        mstore(add(headStart, 96), \" be empty.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint8_t_bytes32_t_bytes32_t_uint64__to_t_uint8_t_bytes32_t_bytes32_t_uint64__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(248, value0), shl(248, 255)))\n        mstore(add(pos, 1), value1)\n        mstore(add(pos, 33), value2)\n        mstore(add(pos, 65), and(shl(192, value3), not(sub(shl(192, 1), 1))))\n        end := add(pos, 73)\n    }\n    function abi_encode_tuple_t_stringliteral_3a9301c09d021187ee3d5f3640e11b7916261e44d25a2d388d52358102de55c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TokenBridge: invalid source chai\")\n        mstore(add(headStart, 96), \"n id\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f581fe4c91ec65a6c6739b60dd91a443632832dbaa7b07aace4b96788b896e08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TokenBridge: insufficient liquid\")\n        mstore(add(headStart, 96), \"ity\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f20599b10bbd05585578c7efc5a9b9f3631294abee5bf88053b95f5094f8006c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"TokenBridge: amountSD overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 160)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 160))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"LzApp: minGasLimit not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"LzApp: gas limit is too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cda311a631ddc17c9e1e8486e7556127686d5b7dec4096e2b355cdb57bff118d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TokenBridge: invalid payload len\")\n        mstore(add(headStart, 96), \"gth\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_710d87404dc3936f522a0208269ca4b76eb0b6e5539bb036affa32842eb3e5e8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"TokenBridge: unknown packet type\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"LzApp: destination chain is not \")\n        mstore(add(headStart, 96), \"a trusted source\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value2, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value5, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"LzApp: invalid adapterParams\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LzApp: payload size is too large\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"451":[{"length":32,"start":1913},{"length":32,"start":2644},{"length":32,"start":3228},{"length":32,"start":3974},{"length":32,"start":4262},{"length":32,"start":4448},{"length":32,"start":7556},{"length":32,"start":8777},{"length":32,"start":13081}]},"linkReferences":{},"object":"60806040526004361061025c5760003560e01c80620d5900146102685780621d35671461028a57806307e0db17146102aa57806309824a80146102ca5780630df37483146102ea5780631095b6d71461030a57806310ddb1371461032a57806325a9f7921461034a5780632db88ecf146103735780633d8b38f61461039b5780633f1f4fa4146103cb5780633fc8cef3146103f857806342d65a8d14610425578063468b9668146104455780635747e69f1461047a5780635b769f3c1461049b5780635b8c41e6146104bb57806361a552dc1461050a57806366ad5c8a1461052b57806368c4ac261461054b57806369a6b3db1461057b578063715018a61461059b5780637533d788146105b057806376a9099a146105dd5780638cfd8f5c146105f05780638da5cb5b1461062857806392cc13c51461063d57806393f26a4c1461066a578063950c8a741461068a57806395e2c168146106aa57806397167964146106ca5780639f38369a146106f1578063a2f27ae014610711578063a6c3d16514610731578063abe685cd14610751578063b353aaa714610767578063baf3292d1461079b578063c21f5114146107bb578063c446183414610751578063ca23bb4c146107db578063cb8d3b1f146107ee578063cbed8b9c1461080e578063d1deba1f1461082e578063d71e409e14610841578063de9b948814610861578063df2a5b3b14610877578063e3179c3e14610897578063eab45d9c146108e5578063eb8d72b714610905578063ed629c5c14610925578063ee7a459614610946578063f2fde38b14610976578063f5ecbdbc1461099657600080fd5b3661026357005b600080fd5b34801561027457600080fd5b506102886102833660046135e9565b6109b6565b005b34801561029657600080fd5b506102886102a5366004613678565b610a51565b3480156102b657600080fd5b506102886102c536600461370b565b610c7d565b3480156102d657600080fd5b506102886102e536600461373b565b610d06565b3480156102f657600080fd5b50610288610305366004613758565b610eb6565b34801561031657600080fd5b50610288610325366004613782565b610ed5565b34801561033657600080fd5b5061028861034536600461370b565b610f67565b34801561035657600080fd5b5061036060085481565b6040519081526020015b60405180910390f35b34801561037f57600080fd5b5060075461038e9061ffff1681565b60405161036a91906137c3565b3480156103a757600080fd5b506103bb6103b63660046137d2565b610fbb565b604051901515815260200161036a565b3480156103d757600080fd5b506103606103e636600461370b565b60036020526000908152604090205481565b34801561040457600080fd5b50600d54610418906001600160a01b031681565b60405161036a9190613824565b34801561043157600080fd5b506102886104403660046137d2565b611087565b34801561045157600080fd5b50610465610460366004613850565b61110d565b6040805192835260208301919091520161036a565b34801561048657600080fd5b50600d546103bb90600160b01b900460ff1681565b3480156104a757600080fd5b506102886104b636600461373b565b6111f4565b3480156104c757600080fd5b506103606104d63660046138f7565b6005602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b34801561051657600080fd5b50600d546103bb90600160a81b900460ff1681565b34801561053757600080fd5b50610288610546366004613678565b61126d565b34801561055757600080fd5b506103bb61056636600461373b565b600a6020526000908152604090205460ff1681565b34801561058757600080fd5b506102886105963660046139a5565b611349565b3480156105a757600080fd5b5061028861139e565b3480156105bc57600080fd5b506105d06105cb36600461370b565b6113a8565b60405161036a9190613a1a565b6102886105eb366004613a2d565b611442565b3480156105fc57600080fd5b5061036061060b366004613a95565b600260209081526000928352604080842090915290825290205481565b34801561063457600080fd5b50610418611613565b34801561064957600080fd5b5061036061065836600461373b565b600c6020526000908152604090205481565b34801561067657600080fd5b50610288610685366004613ac8565b611622565b34801561069657600080fd5b50600454610418906001600160a01b031681565b3480156106b657600080fd5b506102886106c5366004613b01565b61166b565b3480156106d657600080fd5b506106df600681565b60405160ff909116815260200161036a565b3480156106fd57600080fd5b506105d061070c36600461370b565b61179b565b34801561071d57600080fd5b5061036061072c36600461373b565b6118b1565b34801561073d57600080fd5b5061028861074c3660046137d2565b61195a565b34801561075d57600080fd5b5061036061271081565b34801561077357600080fd5b506104187f000000000000000000000000000000000000000000000000000000000000000081565b3480156107a757600080fd5b506102886107b636600461373b565b6119e3565b3480156107c757600080fd5b506102886107d636600461370b565b611a36565b6102886107e9366004613b3f565b611a7f565b3480156107fa57600080fd5b50610288610809366004613ba7565b611d01565b34801561081a57600080fd5b50610288610829366004613bd5565b611d65565b61028861083c366004613678565b611dfa565b34801561084d57600080fd5b5061028861085c3660046139a5565b612010565b34801561086d57600080fd5b50610360600e5481565b34801561088357600080fd5b50610288610892366004613c26565b612086565b3480156108a357600080fd5b506108cd6108b236600461373b565b6009602052600090815260409020546001600160401b031681565b6040516001600160401b03909116815260200161036a565b3480156108f157600080fd5b506102886109003660046139a5565b6120f0565b34801561091157600080fd5b506102886109203660046137d2565b612145565b34801561093157600080fd5b50600d546103bb90600160a01b900460ff1681565b34801561095257600080fd5b506103bb61096136600461373b565b600b6020526000908152604090205460ff1681565b34801561098257600080fd5b5061028861099136600461373b565b61219f565b3480156109a257600080fd5b506105d06109b1366004613c62565b612218565b6109be6122cb565b612710811115610a155760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e4272696467653a2062726964676520666565203e2031303025000060448201526064015b60405180910390fd5b60088190556040518181527f9a749c8193bfd56b2b2a05c0bd18fbb0f69801a3fd6576c40b90537fd0fc3854906020015b60405180910390a150565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610ac95760405162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c657200006044820152606401610a0c565b61ffff861660009081526001602052604081208054610ae790613caf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1390613caf565b8015610b605780601f10610b3557610100808354040283529160200191610b60565b820191906000526020600020905b815481529060010190602001808311610b4357829003601f168201915b50505050509050805186869050148015610b7b575060008151115b8015610ba3575080516020820120604051610b999088908890613ce3565b6040518091039020145b610bfe5760405162461bcd60e51b815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6044820152651b9d1c9858dd60d21b6064820152608401610a0c565b610c748787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061232a92505050565b50505050505050565b610c856122cb565b6040516307e0db1760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906307e0db1790610cd19084906004016137c3565b600060405180830381600087803b158015610ceb57600080fd5b505af1158015610cff573d6000803e3d6000fd5b5050505050565b610d0e6122cb565b6001600160a01b038116610d345760405162461bcd60e51b8152600401610a0c90613cf3565b6001600160a01b0381166000908152600a602052604090205460ff1615610dab5760405162461bcd60e51b815260206004820152602560248201527f546f6b656e4272696467653a20746f6b656e20616c72656164792072656769736044820152641d195c995960da1b6064820152608401610a0c565b6000610db6826123a3565b9050600660ff82161015610e255760405162461bcd60e51b815260206004820152603060248201527f546f6b656e4272696467653a20646563696d616c73206d757374206265203e3d60448201526f205348415245445f444543494d414c5360801b6064820152608401610a0c565b6001600160a01b0382166000908152600a60205260409020805460ff19166001179055610e53600682613d4b565b610e5e90600a613e52565b6001600160a01b0383166000908152600c60205260409081902091909155517ff7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc1690610eaa908490613824565b60405180910390a15050565b610ebe6122cb565b61ffff909116600090815260036020526040902055565b610edd6122cb565b6000610ee8846118b1565b905080821115610f0a5760405162461bcd60e51b8152600401610a0c90613e61565b610f1e6001600160a01b03851684846124a1565b836001600160a01b03167ff15a0a3784dea9b4fe33bc98e2450745e262d310237b2868ea8ef56967ff3ecb8484604051610f59929190613e96565b60405180910390a250505050565b610f6f6122cb565b6040516310ddb13760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906310ddb13790610cd19084906004016137c3565b61ffff831660009081526001602052604081208054829190610fdc90613caf565b80601f016020809104026020016040519081016040528092919081815260200182805461100890613caf565b80156110555780601f1061102a57610100808354040283529160200191611055565b820191906000526020600020905b81548152906001019060200180831161103857829003601f168201915b50505050509050838360405161106c929190613ce3565b60405180910390208180519060200120149150509392505050565b61108f6122cb565b6040516342d65a8d60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d906110df90869086908690600401613ed8565b600060405180830381600087803b1580156110f957600080fd5b505af1158015610c74573d6000803e3d6000fd5b60008061111a84846124fc565b60006111278180806125b8565b905060008061113c6040890160208a0161373b565b60075460405163040a7bb160e41b81526001600160a01b03928316939093141593507f0000000000000000000000000000000000000000000000000000000000000000909116916340a7bb10916111a69161ffff909116903090879087908d908d90600401613ef6565b6040805180830381865afa1580156111c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e69190613f4c565b935093505050935093915050565b6111fc6122cb565b6001600160a01b0381166112225760405162461bcd60e51b8152600401610a0c90613cf3565b600d80546001600160a01b0319166001600160a01b0383161790556040517fe390bcec6614d6b1f8ae47a4d9d46531ce328e3d293ecd6ddd015cb01eff030090610a46908390613824565b3330146112cb5760405162461bcd60e51b815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d7573742062656044820152650204c7a4170760d41b6064820152608401610a0c565b6113418686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061260292505050565b505050505050565b6113516122cb565b600d8054821515600160a81b0260ff60a81b199091161790556040517f5362d4bd13945e8d116b90d83a7050fa61ceb02bb79bfae783377adb46916d9490610a4690831515815260200190565b6113a66122cb565b565b600160205260009081526040902080546113c190613caf565b80601f01602080910402602001604051908101604052809291908181526020018280546113ed90613caf565b801561143a5780601f1061140f5761010080835404028352916020019161143a565b820191906000526020600020905b81548152906001019060200180831161141d57829003601f168201915b505050505081565b600d548690600160a81b900460ff1615801561147757506001600160a01b0381166000908152600b602052604090205460ff16155b6114935760405162461bcd60e51b8152600401610a0c90613f70565b61149b6128d5565b6001600160a01b0387166000908152600a602052604090205460ff166114d35760405162461bcd60e51b8152600401610a0c90613f9d565b6114dd878661292e565b94506114ea87338761294c565b945060006114f88887612a59565b90506000816001600160401b0316116115685760405162461bcd60e51b815260206004820152602c60248201527f546f6b656e4272696467653a20616d6f756e745344206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608401610a0c565b6001600160a01b038816600090815260096020526040812080548392906115999084906001600160401b0316613fe0565b92506101000a8154816001600160401b0302191690836001600160401b031602179055506115cc88888388888834612ad7565b86336001600160a01b0316896001600160a01b03166000805160206145088339815191528960405161160091815260200190565b60405180910390a450610c746001600655565b6000546001600160a01b031690565b61162a6122cb565b6116388282610325856118b1565b6001600160a01b03821660009081526009602052604090205461166790839083906001600160401b031661166b565b5050565b6116736122cb565b600d54600160b01b900460ff16801561168e5750600e544210155b6116e95760405162461bcd60e51b815260206004820152602660248201527f546f6b656e4272696467653a20656d657267656e6379207769746864726177206044820152651b1bd8dad95960d21b6064820152608401610a0c565b6001600160a01b0383166000908152600960205260408120805483929061171a9084906001600160401b031661400b565b92506101000a8154816001600160401b0302191690836001600160401b03160217905550600061174a8483612b62565b90506117606001600160a01b03851684836124a1565b836001600160a01b03167f49507695f37b729944475cf3388760a14760fef784b7ab5ca8863a5f3f8be6bd8483604051610f59929190613e96565b61ffff81166000908152600160205260408120805460609291906117be90613caf565b80601f01602080910402602001604051908101604052809291908181526020018280546117ea90613caf565b80156118375780601f1061180c57610100808354040283529160200191611837565b820191906000526020600020905b81548152906001019060200180831161181a57829003601f168201915b50505050509050805160000361188f5760405162461bcd60e51b815260206004820152601d60248201527f4c7a4170703a206e6f20747275737465642070617468207265636f72640000006044820152606401610a0c565b6118aa6000601483516118a29190614033565b839190612b8e565b9392505050565b6001600160a01b03811660009081526009602052604081205481906118e09084906001600160401b0316612b62565b905080836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161190f9190613824565b602060405180830381865afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611950919061404a565b6118aa9190614033565b6119626122cb565b81813060405160200161197793929190614063565b60408051601f1981840301815291815261ffff85166000908152600160205220906119a290826140df565b507f8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce8383836040516119d693929190613ed8565b60405180910390a1505050565b6119eb6122cb565b600480546001600160a01b0319166001600160a01b0383161790556040517f5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b90610a46908390613824565b611a3e6122cb565b6007805461ffff191661ffff83161790556040517f6a9ea26cc7efedf0df6fd048e06f3de4be1a978bb5d440277147c76e1c0eb75a90610a469083906137c3565b600d546001600160a01b03811690600160a81b900460ff16158015611abd57506001600160a01b0381166000908152600b602052604090205460ff16155b611ad95760405162461bcd60e51b8152600401610a0c90613f70565b611ae16128d5565b600d546001600160a01b03168015801590611b1457506001600160a01b0381166000908152600a602052604090205460ff165b611b6a5760405162461bcd60e51b815260206004820152602160248201527f546f6b656e4272696467653a20455448206973206e6f7420737570706f7274656044820152601960fa1b6064820152608401610a0c565b611b74818761292e565b955060008611611bd95760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e4272696467653a20616d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b6064820152608401610a0c565b85341015611bf95760405162461bcd60e51b8152600401610a0c90613e61565b806001600160a01b031663d0e30db0876040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c3457600080fd5b505af1158015611c48573d6000803e3d6000fd5b50505050506000611c598288612a59565b6001600160a01b038316600090815260096020526040812080549293508392909190611c8f9084906001600160401b0316613fe0565b92506101000a8154816001600160401b0302191690836001600160401b03160217905550611ccd8289838989898d34611cc89190614033565b612ad7565b604051878152889033906000906000805160206145088339815191529060200160405180910390a450506113416001600655565b611d096122cb565b6001600160a01b0382166000818152600b6020908152604091829020805460ff19168515159081179091558251938452908301527fb1656bd3b50ddb6b12ef259c86e9cb359952b53c4403cfb5a83e23c515a35e229101610eaa565b611d6d6122cb565b6040516332fb62e760e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c90611dc19088908890889088908890600401614198565b600060405180830381600087803b158015611ddb57600080fd5b505af1158015611def573d6000803e3d6000fd5b505050505050505050565b61ffff86166000908152600560205260408082209051611e1d9088908890613ce3565b90815260408051602092819003830190206001600160401b03871660009081529252902054905080611e9d5760405162461bcd60e51b815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201526261676560e81b6064820152608401610a0c565b808383604051611eae929190613ce3565b604051809103902014611f0d5760405162461bcd60e51b815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f616044820152601960fa1b6064820152608401610a0c565b61ffff87166000908152600560205260408082209051611f309089908990613ce3565b90815260408051602092819003830181206001600160401b038916600090815290845282902093909355601f88018290048202830182019052868252611fc8918991899089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061260292505050565b7fc264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e58787878785604051611fff9594939291906141c6565b60405180910390a150505050505050565b6120186122cb565b600d805460ff60b01b1916600160b01b831515021790558061203b576000612048565b6120484262093a80614201565b600e81905560408051831515815260208101929092527f27a37fc51e6c5d14309bbed3a54787c8788223b5d9cd5fe10605661665dd84159101610a46565b61208e6122cb565b61ffff83811660008181526002602090815260408083209487168084529482529182902085905581519283528201929092529081018290527f9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0906060016119d6565b6120f86122cb565b600d8054821515600160a01b0260ff60a01b199091161790556040517f1584ad594a70cbe1e6515592e1272a987d922b097ead875069cebe8b40c004a490610a4690831515815260200190565b61214d6122cb565b61ffff8316600090815260016020526040902061216b828483614219565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab8383836040516119d693929190613ed8565b6121a76122cb565b6001600160a01b03811661220c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a0c565b61221581612c9b565b50565b604051633d7b2f6f60e21b815261ffff808616600483015284166024820152306044820152606481018290526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f5ecbdbc90608401600060405180830381865afa158015612298573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122c091908101906142d2565b90505b949350505050565b336122d4611613565b6001600160a01b0316146113a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b60008061238d5a60966366ad5c8a60e01b898989896040516024016123529493929190614348565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915230929190612ceb565b9150915081611341576113418686868685612d75565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b038616916123e99190614386565b600060405180830381855afa9150503d8060008114612424576040519150601f19603f3d011682016040523d82523d6000602084013e612429565b606091505b50915091508161248d5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e4272696467653a206661696c656420746f2067657420746f6b656e60448201526820646563696d616c7360b81b6064820152608401610a0c565b808060200190518101906122c391906143a2565b6124f78363a9059cbb60e01b84846040516024016124c0929190613e96565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612e12565b505050565b600d54600160a01b900460ff1615612557576007546116679061ffff16600084848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250612ee7915050565b80156116675760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e4272696467653a205f61646170746572506172616d73206d7573746044820152691031329032b6b83a3c9760b11b6064820152608401610a0c565b60408051600060208201526001600160a01b03949094166021850152604184019290925260c01b6001600160c01b0319166061830152805180830360490181526069909201905290565b60075461ffff8581169116146126665760405162461bcd60e51b8152602060048201526024808201527f546f6b656e4272696467653a20696e76616c696420736f7572636520636861696044820152631b881a5960e21b6064820152608401610a0c565b60008060008061267585612fb7565b600d5493975091955093509150600160a81b900460ff161580156126b257506001600160a01b0384166000908152600b602052604090205460ff16155b6126ce5760405162461bcd60e51b8152600401610a0c90613f70565b6001600160a01b0384166000908152600a602052604090205460ff166127065760405162461bcd60e51b8152600401610a0c90613f9d565b6001600160a01b0384166000908152600960205260409020546001600160401b039081169083168110156127885760405162461bcd60e51b815260206004820152602360248201527f546f6b656e4272696467653a20696e73756666696369656e74206c697175696460448201526269747960e81b6064820152608401610a0c565b612792838261400b565b6001600160a01b038616600090815260096020526040812080546001600160401b0319166001600160401b0393909316929092179091556127d38685612b62565b90506000600854116127e7578060006127f0565b6127f0816130f1565b50600d549091506001600160a01b03878116911614801561280e5750825b1561285e57600d5461282a906001600160a01b03168683613122565b6040518181526001600160a01b038616906000906000805160206145288339815191529060200160405180910390a36128c9565b6001600160a01b038516156128735784612877565b61dead5b945061288d6001600160a01b03871686836124a1565b846001600160a01b0316866001600160a01b0316600080516020614528833981519152836040516128c091815260200190565b60405180910390a35b50505050505050505050565b6002600654036129275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a0c565b6002600655565b60006129438361293e8585612a59565b612b62565b90505b92915050565b600080846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161297b9190613824565b602060405180830381865afa158015612998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129bc919061404a565b90506129d36001600160a01b0386168530866131b8565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190612a02903090600401613824565b602060405180830381865afa158015612a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a43919061404a565b9050612a4f8282614033565b9695505050505050565b6001600160a01b0382166000908152600c60205260408120548190612a7e90846143db565b90506001600160401b038111156129435760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e4272696467653a20616d6f756e745344206f766572666c6f7700006044820152606401610a0c565b612ae183836124fc565b6000612aee8888886125b8565b600754909150612b589061ffff1682612b0a602089018961373b565b612b1a60408a0160208b0161373b565b88888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92506131f0915050565b5050505050505050565b6001600160a01b0382166000908152600c6020526040812054612943906001600160401b0384166143fd565b606081612b9c81601f614201565b1015612bdb5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610a0c565b612be58284614201565b84511015612c295760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610a0c565b606082158015612c485760405191506000825260208201604052612c92565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612c81578051835260209283019201612c69565b5050858452601f01601f1916604052505b50949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000606060008060008661ffff166001600160401b03811115612d1057612d1061388a565b6040519080825280601f01601f191660200182016040528015612d3a576020820181803683370190505b50905060008087516020890160008d8df191503d925086831115612d5c578692505b828152826000602083013e909890975095505050505050565b8180519060200120600560008761ffff1661ffff16815260200190815260200160002085604051612da69190614386565b9081526040805191829003602090810183206001600160401b0388166000908152915220919091557fe183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c90612e03908790879087908790879061441c565b60405180910390a15050505050565b6000612e67826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166133959092919063ffffffff16565b9050805160001480612e88575080806020019051810190612e88919061447a565b6124f75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a0c565b6000612ef2836133a4565b61ffff80871660009081526002602090815260408083209389168352929052205490915080612f605760405162461bcd60e51b815260206004820152601a602482015279131e905c1c0e881b5a5b91d85cd31a5b5a5d081b9bdd081cd95d60321b6044820152606401610a0c565b612f6a8382614201565b8210156113415760405162461bcd60e51b815260206004820152601b60248201527a4c7a4170703a20676173206c696d697420697320746f6f206c6f7760281b6044820152606401610a0c565b6000806000808451604a1461301a5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e4272696467653a20696e76616c6964207061796c6f6164206c656e6044820152620cee8d60eb1b6064820152608401610a0c565b60008560008151811061302f5761302f614497565b016020015160f81c6001811115613048576130486143c5565b9050600181600181111561305e5761305e6143c5565b146130ab5760405162461bcd60e51b815260206004820181905260248201527f546f6b656e4272696467653a20756e6b6e6f776e207061636b657420747970656044820152606401610a0c565b602186015194506041860151935060498601519250856049815181106130d3576130d3614497565b602001015160f81c60f81b60f81c60ff166001149150509193509193565b6000806127106008548461310591906143fd565b61310f91906143db565b905061311b8184614033565b9150915091565b604051632e1a7d4d60e01b8152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b15801561316457600080fd5b505af1158015613178573d6000803e3d6000fd5b50506040516001600160a01b038516925083156108fc02915083906000818181858888f193505050501580156131b2573d6000803e3d6000fd5b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526131b29085906323b872dd60e01b906084016124c0565b61ffff86166000908152600160205260408120805461320e90613caf565b80601f016020809104026020016040519081016040528092919081815260200182805461323a90613caf565b80156132875780601f1061325c57610100808354040283529160200191613287565b820191906000526020600020905b81548152906001019060200180831161326a57829003601f168201915b5050505050905080516000036132f85760405162461bcd60e51b815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201526f61207472757374656420736f7572636560801b6064820152608401610a0c565b6133038787516133ff565b60405162c5803160e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c580310090849061335a908b9086908c908c908c908c906004016144ad565b6000604051808303818588803b15801561337357600080fd5b505af1158015613387573d6000803e3d6000fd5b505050505050505050505050565b60606122c38484600085613470565b60006022825110156133f75760405162461bcd60e51b815260206004820152601c60248201527b4c7a4170703a20696e76616c69642061646170746572506172616d7360201b6044820152606401610a0c565b506022015190565b61ffff82166000908152600360205260408120549081900361342057506127105b808211156124f75760405162461bcd60e51b815260206004820181905260248201527f4c7a4170703a207061796c6f61642073697a6520697320746f6f206c617267656044820152606401610a0c565b6060824710156134d15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a0c565b600080866001600160a01b031685876040516134ed9190614386565b60006040518083038185875af1925050503d806000811461352a576040519150601f19603f3d011682016040523d82523d6000602084013e61352f565b606091505b50915091506135408783838761354b565b979650505050505050565b606083156135ba5782516000036135b3576001600160a01b0385163b6135b35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a0c565b50816122c3565b6122c383838151156135cf5781518083602001fd5b8060405162461bcd60e51b8152600401610a0c9190613a1a565b6000602082840312156135fb57600080fd5b5035919050565b803561ffff8116811461361457600080fd5b919050565b60008083601f84011261362b57600080fd5b5081356001600160401b0381111561364257600080fd5b60208301915083602082850101111561365a57600080fd5b9250929050565b80356001600160401b038116811461361457600080fd5b6000806000806000806080878903121561369157600080fd5b61369a87613602565b955060208701356001600160401b03808211156136b657600080fd5b6136c28a838b01613619565b90975095508591506136d660408a01613661565b945060608901359150808211156136ec57600080fd5b506136f989828a01613619565b979a9699509497509295939492505050565b60006020828403121561371d57600080fd5b61294382613602565b6001600160a01b038116811461221557600080fd5b60006020828403121561374d57600080fd5b813561294381613726565b6000806040838503121561376b57600080fd5b61377483613602565b946020939093013593505050565b60008060006060848603121561379757600080fd5b83356137a281613726565b925060208401356137b281613726565b929592945050506040919091013590565b61ffff91909116815260200190565b6000806000604084860312156137e757600080fd5b6137f084613602565b925060208401356001600160401b0381111561380b57600080fd5b61381786828701613619565b9497909650939450505050565b6001600160a01b0391909116815260200190565b60006040828403121561384a57600080fd5b50919050565b60008060006060848603121561386557600080fd5b61386f8585613838565b925060408401356001600160401b0381111561380b57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156138c8576138c861388a565b604052919050565b60006001600160401b038211156138e9576138e961388a565b50601f01601f191660200190565b60008060006060848603121561390c57600080fd5b61391584613602565b925060208401356001600160401b0381111561393057600080fd5b8401601f8101861361394157600080fd5b803561395461394f826138d0565b6138a0565b81815287602083850101111561396957600080fd5b8160208401602083013760006020838301015280945050505061398e60408501613661565b90509250925092565b801515811461221557600080fd5b6000602082840312156139b757600080fd5b813561294381613997565b60005b838110156139dd5781810151838201526020016139c5565b838111156131b25750506000910152565b60008151808452613a068160208601602086016139c2565b601f01601f19169290920160200192915050565b60208152600061294360208301846139ee565b60008060008060008060c08789031215613a4657600080fd5b8635613a5181613726565b95506020870135945060408701359350613a6e8860608901613838565b925060a08701356001600160401b03811115613a8957600080fd5b6136f989828a01613619565b60008060408385031215613aa857600080fd5b613ab183613602565b9150613abf60208401613602565b90509250929050565b60008060408385031215613adb57600080fd5b8235613ae681613726565b91506020830135613af681613726565b809150509250929050565b600080600060608486031215613b1657600080fd5b8335613b2181613726565b92506020840135613b3181613726565b915061398e60408501613661565b600080600080600060a08688031215613b5757600080fd5b8535945060208601359350613b6f8760408801613838565b925060808601356001600160401b03811115613b8a57600080fd5b613b9688828901613619565b969995985093965092949392505050565b60008060408385031215613bba57600080fd5b8235613bc581613726565b91506020830135613af681613997565b600080600080600060808688031215613bed57600080fd5b613bf686613602565b9450613c0460208701613602565b93506040860135925060608601356001600160401b03811115613b8a57600080fd5b600080600060608486031215613c3b57600080fd5b613c4484613602565b9250613c5260208501613602565b9150604084013590509250925092565b60008060008060808587031215613c7857600080fd5b613c8185613602565b9350613c8f60208601613602565b92506040850135613c9f81613726565b9396929550929360600135925050565b600181811c90821680613cc357607f821691505b60208210810361384a57634e487b7160e01b600052602260045260246000fd5b8183823760009101908152919050565b60208082526022908201527f546f6b656e4272696467653a20696e76616c696420746f6b656e206164647265604082015261737360f01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff841680821015613d6557613d65613d35565b90039392505050565b600181815b80851115613da9578160001904821115613d8f57613d8f613d35565b80851615613d9c57918102915b93841c9390800290613d73565b509250929050565b600082613dc057506001612946565b81613dcd57506000612946565b8160018114613de35760028114613ded57613e09565b6001915050612946565b60ff841115613dfe57613dfe613d35565b50506001821b612946565b5060208310610133831016604e8410600b8410161715613e2c575081810a612946565b613e368383613d6e565b8060001904821115613e4a57613e4a613d35565b029392505050565b600061294360ff841683613db1565b6020808252601b908201527a0a8ded6cadc84e4d2c8ceca7440cccaca40dcdee840cadcdeeaced602b1b604082015260600190565b6001600160a01b03929092168252602082015260400190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61ffff841681526040602082015260006122c0604083018486613eaf565b61ffff871681526001600160a01b038616602082015260a060408201819052600090613f24908301876139ee565b85151560608401528281036080840152613f3f818587613eaf565b9998505050505050505050565b60008060408385031215613f5f57600080fd5b505080516020909101519092909150565b602080825260139082015272151bdad95b909c9a5919d94e881c185d5cd959606a1b604082015260600190565b60208082526023908201527f546f6b656e4272696467653a20746f6b656e206973206e6f7420737570706f726040820152621d195960ea1b606082015260800190565b60006001600160401b0382811684821680830382111561400257614002613d35565b01949350505050565b60006001600160401b038381169083168181101561402b5761402b613d35565b039392505050565b60008282101561404557614045613d35565b500390565b60006020828403121561405c57600080fd5b5051919050565b8284823760609190911b6001600160601b0319169101908152601401919050565b601f8211156124f757600081815260208120601f850160051c810160208610156140ab5750805b601f850160051c820191505b81811015611341578281556001016140b7565b600019600383901b1c191660019190911b1790565b81516001600160401b038111156140f8576140f861388a565b61410c816141068454613caf565b84614084565b602080601f83116001811461413b57600084156141295750858301515b61413385826140ca565b865550611341565b600085815260208120601f198616915b8281101561416a5788860151825594840194600190910190840161414b565b50858210156141885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600061ffff808816835280871660208401525084604083015260806060830152613540608083018486613eaf565b61ffff861681526080602082015260006141e4608083018688613eaf565b6001600160401b0394909416604083015250606001529392505050565b6000821982111561421457614214613d35565b500190565b6001600160401b038311156142305761423061388a565b6142448361423e8354613caf565b83614084565b6000601f84116001811461427257600085156142605750838201355b61426a86826140ca565b845550610cff565b600083815260209020601f19861690835b828110156142a35786850135825560209485019460019092019101614283565b50868210156142c05760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000602082840312156142e457600080fd5b81516001600160401b038111156142fa57600080fd5b8201601f8101841361430b57600080fd5b805161431961394f826138d0565b81815285602083850101111561432e57600080fd5b61433f8260208301602086016139c2565b95945050505050565b61ffff8516815260806020820152600061436560808301866139ee565b6001600160401b0385166040840152828103606084015261354081856139ee565b600082516143988184602087016139c2565b9190910192915050565b6000602082840312156143b457600080fd5b815160ff8116811461294357600080fd5b634e487b7160e01b600052602160045260246000fd5b6000826143f857634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561441757614417613d35565b500290565b61ffff8616815260a06020820152600061443960a08301876139ee565b6001600160401b0386166040840152828103606084015261445a81866139ee565b9050828103608084015261446e81856139ee565b98975050505050505050565b60006020828403121561448c57600080fd5b815161294381613997565b634e487b7160e01b600052603260045260246000fd5b61ffff8716815260c0602082015260006144ca60c08301886139ee565b82810360408401526144dc81886139ee565b6001600160a01b0387811660608601528616608085015283810360a08501529050613f3f81856139ee56febe6ff12fec5087498d44bc85f1a83235a630944a1e2d5a7938afe810370a5867fd19781f43410d9594fd4c02dd1d98dbe99099cbd222d5851a6e183c468d33caa264697066735822122006157fdba7c438afb6b392b8c87b00bc1ef9130aaf3306d405c15b805787094864736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xD5900 EQ PUSH2 0x268 JUMPI DUP1 PUSH3 0x1D3567 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x9824A80 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x1095B6D7 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x25A9F792 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x2DB88ECF EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x468B9668 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x5B769F3C EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x61A552DC EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x69A6B3DB EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x76A9099A EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0x92CC13C5 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x93F26A4C EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0x95E2C168 EQ PUSH2 0x6AA JUMPI DUP1 PUSH4 0x97167964 EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xA2F27AE0 EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0xABE685CD EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xC21F5114 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xCA23BB4C EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xCB8D3B1F EQ PUSH2 0x7EE JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xD71E409E EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xDE9B9488 EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x877 JUMPI DUP1 PUSH4 0xE3179C3E EQ PUSH2 0x897 JUMPI DUP1 PUSH4 0xEAB45D9C EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xED629C5C EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xEE7A4596 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x976 JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x263 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x35E9 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3678 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x3758 JUMP JUMPDEST PUSH2 0xEB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x3782 JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0xF67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x38E SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x37C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x418 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x465 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x3850 JUMP JUMPDEST PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x11F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x38F7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x3678 JUMP JUMPDEST PUSH2 0x126D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x1349 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x139E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x3A1A JUMP JUMPDEST PUSH2 0x288 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2D JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x3A95 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH2 0x1613 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x658 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AC8 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x418 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B01 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DF PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x70C CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x72C CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x18B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x74C CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0x195A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x19E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x7D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x370B JUMP JUMPDEST PUSH2 0x1A36 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x7E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B3F JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x809 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA7 JUMP JUMPDEST PUSH2 0x1D01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x829 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BD5 JUMP JUMPDEST PUSH2 0x1D65 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x3678 JUMP JUMPDEST PUSH2 0x1DFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x85C CALLDATASIZE PUSH1 0x4 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x2010 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x892 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C26 JUMP JUMPDEST PUSH2 0x2086 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8CD PUSH2 0x8B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x900 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x20F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x920 CALLDATASIZE PUSH1 0x4 PUSH2 0x37D2 JUMP JUMPDEST PUSH2 0x2145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH2 0x961 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH2 0x991 CALLDATASIZE PUSH1 0x4 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x219F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x9B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C62 JUMP JUMPDEST PUSH2 0x2218 JUMP JUMPDEST PUSH2 0x9BE PUSH2 0x22CB JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A2062726964676520666565203E20313030250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x9A749C8193BFD56B2B2A05C0BD18FBB0F69801A3FD6576C40B90537FD0FC3854 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xAE7 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB13 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0xB7B JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xBA3 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xB99 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0xC74 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x232A SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC85 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH2 0xCD1 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD0E PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E20616C7265616479207265676973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D195C9959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB6 DUP3 PUSH2 0x23A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20646563696D616C73206D757374206265203E3D PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x205348415245445F444543494D414C53 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE53 PUSH1 0x6 DUP3 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0xE5E SWAP1 PUSH1 0xA PUSH2 0x3E52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xF7FE8023CB2E36BDE1D59A88AC5763A8C11BE6D25E6819F71BB7E23E5BF0DC16 SWAP1 PUSH2 0xEAA SWAP1 DUP5 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xEBE PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0xEDD PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE8 DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3E61 JUMP JUMPDEST PUSH2 0xF1E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x24A1 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF15A0A3784DEA9B4FE33BC98E2450745E262D310237B2868EA8EF56967FF3ECB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF59 SWAP3 SWAP2 SWAP1 PUSH2 0x3E96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xF6F PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH2 0xCD1 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x37C3 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0xFDC SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1008 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1055 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x102A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1055 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1038 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x106C SWAP3 SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x108F PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x10DF SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111A DUP5 DUP5 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP2 DUP1 DUP1 PUSH2 0x25B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x113C PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x373B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40A7BB1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP1 SWAP4 EQ ISZERO SWAP4 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP2 PUSH4 0x40A7BB10 SWAP2 PUSH2 0x11A6 SWAP2 PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x3EF6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x3F4C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11FC PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE390BCEC6614D6B1F8AE47A4D9D46531CE328E3D293ECD6DDD015CB01EFF0300 SWAP1 PUSH2 0xA46 SWAP1 DUP4 SWAP1 PUSH2 0x3824 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x1341 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2602 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1351 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5362D4BD13945E8D116B90D83A7050FA61CEB02BB79BFAE783377ADB46916D94 SWAP1 PUSH2 0xA46 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x13A6 PUSH2 0x22CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x13C1 SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13ED SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x143A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x140F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x143A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x141D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP7 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH2 0x149B PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x14D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F9D JUMP JUMPDEST PUSH2 0x14DD DUP8 DUP7 PUSH2 0x292E JUMP JUMPDEST SWAP5 POP PUSH2 0x14EA DUP8 CALLER DUP8 PUSH2 0x294C JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x14F8 DUP9 DUP8 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x1568 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E745344206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6561746572207468616E203 PUSH1 0xA4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1599 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3FE0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x15CC DUP9 DUP9 DUP4 DUP9 DUP9 DUP9 CALLVALUE PUSH2 0x2AD7 JUMP JUMPDEST DUP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH1 0x40 MLOAD PUSH2 0x1600 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xC74 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x162A PUSH2 0x22CB JUMP JUMPDEST PUSH2 0x1638 DUP3 DUP3 PUSH2 0x325 DUP6 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x166B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1673 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x168E JUMPI POP PUSH1 0xE SLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20656D657267656E637920776974686472617720 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B1BD8DAD959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x171A SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x400B JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x174A DUP5 DUP4 PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP PUSH2 0x1760 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP4 PUSH2 0x24A1 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x49507695F37B729944475CF3388760A14760FEF784B7AB5CA8863A5F3F8BE6BD DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF59 SWAP3 SWAP2 SWAP1 PUSH2 0x3E96 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x17BE SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17EA SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1837 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x180C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1837 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x181A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x18AA PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0x18A2 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x18E0 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x192C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1950 SWAP2 SWAP1 PUSH2 0x404A JUMP JUMPDEST PUSH2 0x18AA SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x1962 PUSH2 0x22CB JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1977 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4063 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x19A2 SWAP1 DUP3 PUSH2 0x40DF JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x19EB PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xA46 SWAP1 DUP4 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH2 0x1A3E PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6A9EA26CC7EFEDF0DF6FD048E06F3DE4BE1A978BB5D440277147C76E1C0EB75A SWAP1 PUSH2 0xA46 SWAP1 DUP4 SWAP1 PUSH2 0x37C3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1ABD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1AD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH2 0x1AE1 PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B14 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1B6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20455448206973206E6F7420737570706F727465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x1B74 DUP2 DUP8 PUSH2 0x292E JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 GT PUSH2 0x1BD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E74206D7573742062652067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x746572207468616E203 PUSH1 0xB4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST DUP6 CALLVALUE LT ISZERO PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3E61 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0x1C59 DUP3 DUP9 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1C8F SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x3FE0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1CCD DUP3 DUP10 DUP4 DUP10 DUP10 DUP10 DUP14 CALLVALUE PUSH2 0x1CC8 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x2AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE DUP9 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1341 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1D09 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xB1656BD3B50DDB6B12EF259C86E9CB359952B53C4403CFB5A83E23C515A35E22 SWAP2 ADD PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x1D6D PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0x1DC1 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4198 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1E1D SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x1E9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EAE SWAP3 SWAP2 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0x1F0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1F30 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x1FC8 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2602 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1FFF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2018 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE DUP1 PUSH2 0x203B JUMPI PUSH1 0x0 PUSH2 0x2048 JUMP JUMPDEST PUSH2 0x2048 TIMESTAMP PUSH3 0x93A80 PUSH2 0x4201 JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x27A37FC51E6C5D14309BBED3A54787C8788223B5D9CD5FE10605661665DD8415 SWAP2 ADD PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x208E PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x20F8 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1584AD594A70CBE1E6515592E1272A987D922B097EAD875069CEBE8B40C004A4 SWAP1 PUSH2 0xA46 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x214D PUSH2 0x22CB JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x216B DUP3 DUP5 DUP4 PUSH2 0x4219 JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH2 0x21A7 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x220C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2215 DUP2 PUSH2 0x2C9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2298 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x22C0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x42D2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x22D4 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x238D GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2352 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4348 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1341 JUMPI PUSH2 0x1341 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x23E9 SWAP2 SWAP1 PUSH2 0x4386 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2424 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x248D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A206661696C656420746F2067657420746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20646563696D616C73 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x22C3 SWAP2 SWAP1 PUSH2 0x43A2 JUMP JUMPDEST PUSH2 0x24F7 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x24C0 SWAP3 SWAP2 SWAP1 PUSH2 0x3E96 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2E12 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2557 JUMPI PUSH1 0x7 SLOAD PUSH2 0x1667 SWAP1 PUSH2 0xFFFF AND PUSH1 0x0 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP3 POP PUSH2 0x2EE7 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A205F61646170746572506172616D73206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1031329032B6B83A3C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x21 DUP6 ADD MSTORE PUSH1 0x41 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH1 0x61 DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x49 ADD DUP2 MSTORE PUSH1 0x69 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xFFFF DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x2666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420736F757263652063686169 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1B881A59 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2675 DUP6 PUSH2 0x2FB7 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x26B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP1 PUSH2 0x3F9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 LT ISZERO PUSH2 0x2788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E73756666696369656E74206C6971756964 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x697479 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2792 DUP4 DUP3 PUSH2 0x400B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x27D3 DUP7 DUP6 PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD GT PUSH2 0x27E7 JUMPI DUP1 PUSH1 0x0 PUSH2 0x27F0 JUMP JUMPDEST PUSH2 0x27F0 DUP2 PUSH2 0x30F1 JUMP JUMPDEST POP PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x280E JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x285E JUMPI PUSH1 0xD SLOAD PUSH2 0x282A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP4 PUSH2 0x3122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4528 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x2873 JUMPI DUP5 PUSH2 0x2877 JUMP JUMPDEST PUSH2 0xDEAD JUMPDEST SWAP5 POP PUSH2 0x288D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP7 DUP4 PUSH2 0x24A1 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4528 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0x28C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x2927 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2943 DUP4 PUSH2 0x293E DUP6 DUP6 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x2B62 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297B SWAP2 SWAP1 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2998 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x404A JUMP JUMPDEST SWAP1 POP PUSH2 0x29D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 ADDRESS DUP7 PUSH2 0x31B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2A02 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A43 SWAP2 SWAP1 PUSH2 0x404A JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4F DUP3 DUP3 PUSH2 0x4033 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x2A7E SWAP1 DUP5 PUSH2 0x43DB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20616D6F756E745344206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2AE1 DUP4 DUP4 PUSH2 0x24FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEE DUP9 DUP9 DUP9 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x2B58 SWAP1 PUSH2 0xFFFF AND DUP3 PUSH2 0x2B0A PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x373B JUMP JUMPDEST PUSH2 0x2B1A PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x373B JUMP JUMPDEST DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP11 SWAP3 POP PUSH2 0x31F0 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2943 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND PUSH2 0x43FD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2B9C DUP2 PUSH1 0x1F PUSH2 0x4201 JUMP JUMPDEST LT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2BE5 DUP3 DUP5 PUSH2 0x4201 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x2C29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x2C48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2C92 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x2C81 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2C69 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D10 JUMPI PUSH2 0x2D10 PUSH2 0x388A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D3A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x2D5C JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DA6 SWAP2 SWAP1 PUSH2 0x4386 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x2E03 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x441C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E67 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3395 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x2E88 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E88 SWAP2 SWAP1 PUSH2 0x447A JUMP JUMPDEST PUSH2 0x24F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF2 DUP4 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x2F60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x131E905C1C0E881B5A5B91D85CD31A5B5A5D081B9BDD081CD95D PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x2F6A DUP4 DUP3 PUSH2 0x4201 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4C7A4170703A20676173206C696D697420697320746F6F206C6F77 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x4A EQ PUSH2 0x301A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C6964207061796C6F6164206C656E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xCEE8D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x302F JUMPI PUSH2 0x302F PUSH2 0x4497 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3048 JUMPI PUSH2 0x3048 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x305E JUMPI PUSH2 0x305E PUSH2 0x43C5 JUMP JUMPDEST EQ PUSH2 0x30AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20756E6B6E6F776E207061636B65742074797065 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x21 DUP7 ADD MLOAD SWAP5 POP PUSH1 0x41 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x49 DUP7 ADD MLOAD SWAP3 POP DUP6 PUSH1 0x49 DUP2 MLOAD DUP2 LT PUSH2 0x30D3 JUMPI PUSH2 0x30D3 PUSH2 0x4497 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x1 EQ SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x3105 SWAP2 SWAP1 PUSH2 0x43FD JUMP JUMPDEST PUSH2 0x310F SWAP2 SWAP1 PUSH2 0x43DB JUMP JUMPDEST SWAP1 POP PUSH2 0x311B DUP2 DUP5 PUSH2 0x4033 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3178 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x31B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x31B2 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x320E SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x323A SWAP1 PUSH2 0x3CAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3287 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x325C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3287 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x326A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x32F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x3303 DUP8 DUP8 MLOAD PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x335A SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x44AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3387 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22C3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3470 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 MLOAD LT ISZERO PUSH2 0x33F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x4C7A4170703A20696E76616C69642061646170746572506172616D73 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST POP PUSH1 0x22 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x3420 JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x34ED SWAP2 SWAP1 PUSH2 0x4386 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x352A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x352F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3540 DUP8 DUP4 DUP4 DUP8 PUSH2 0x354B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x35BA JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x35B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x35B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA0C JUMP JUMPDEST POP DUP2 PUSH2 0x22C3 JUMP JUMPDEST PUSH2 0x22C3 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x35CF JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0x3A1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x3614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x362B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x365A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x369A DUP8 PUSH2 0x3602 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x36B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36C2 DUP11 DUP4 DUP12 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x36D6 PUSH1 0x40 DUP11 ADD PUSH2 0x3661 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F9 DUP10 DUP3 DUP11 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x371D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2943 DUP3 PUSH2 0x3602 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2943 DUP2 PUSH2 0x3726 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x376B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3774 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x37A2 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x37B2 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37F0 DUP5 PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x380B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3817 DUP7 DUP3 DUP8 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x384A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x386F DUP6 DUP6 PUSH2 0x3838 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x380B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x38C8 JUMPI PUSH2 0x38C8 PUSH2 0x388A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x38E9 JUMPI PUSH2 0x38E9 PUSH2 0x388A JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x390C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3915 DUP5 PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x3941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3954 PUSH2 0x394F DUP3 PUSH2 0x38D0 JUMP JUMPDEST PUSH2 0x38A0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x3969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH2 0x398E PUSH1 0x40 DUP6 ADD PUSH2 0x3661 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2943 DUP2 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39C5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x31B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3A06 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x39C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2943 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3A46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x3A51 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3A6E DUP9 PUSH1 0x60 DUP10 ADD PUSH2 0x3838 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3A89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36F9 DUP10 DUP3 DUP11 ADD PUSH2 0x3619 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AB1 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ABF PUSH1 0x20 DUP5 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3AE6 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3AF6 DUP2 PUSH2 0x3726 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3B21 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3B31 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP2 POP PUSH2 0x398E PUSH1 0x40 DUP6 ADD PUSH2 0x3661 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3B6F DUP8 PUSH1 0x40 DUP9 ADD PUSH2 0x3838 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B96 DUP9 DUP3 DUP10 ADD PUSH2 0x3619 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3BC5 DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3AF6 DUP2 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3BED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BF6 DUP7 PUSH2 0x3602 JUMP JUMPDEST SWAP5 POP PUSH2 0x3C04 PUSH1 0x20 DUP8 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C44 DUP5 PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH2 0x3C52 PUSH1 0x20 DUP6 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C81 DUP6 PUSH2 0x3602 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C8F PUSH1 0x20 DUP7 ADD PUSH2 0x3602 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x3C9F DUP2 PUSH2 0x3726 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3CC3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x384A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20696E76616C696420746F6B656E206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 DUP3 LT ISZERO PUSH2 0x3D65 JUMPI PUSH2 0x3D65 PUSH2 0x3D35 JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3DA9 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3D8F JUMPI PUSH2 0x3D8F PUSH2 0x3D35 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3D9C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x3D73 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3DC0 JUMPI POP PUSH1 0x1 PUSH2 0x2946 JUMP JUMPDEST DUP2 PUSH2 0x3DCD JUMPI POP PUSH1 0x0 PUSH2 0x2946 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3DE3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3DED JUMPI PUSH2 0x3E09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2946 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3DFE JUMPI PUSH2 0x3DFE PUSH2 0x3D35 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2946 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3E2C JUMPI POP DUP2 DUP2 EXP PUSH2 0x2946 JUMP JUMPDEST PUSH2 0x3E36 DUP4 DUP4 PUSH2 0x3D6E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3E4A JUMPI PUSH2 0x3E4A PUSH2 0x3D35 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2943 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH27 0xA8DED6CADC84E4D2C8CECA7440CCCACA40DCDEE840CADCDEEACED PUSH1 0x2B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x22C0 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x3EAF JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3F24 SWAP1 DUP4 ADD DUP8 PUSH2 0x39EE JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3F3F DUP2 DUP6 DUP8 PUSH2 0x3EAF JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x151BDAD95B909C9A5919D94E881C185D5CD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E4272696467653A20746F6B656E206973206E6F7420737570706F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x1D1959 PUSH1 0xEA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4002 JUMPI PUSH2 0x4002 PUSH2 0x3D35 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x402B JUMPI PUSH2 0x402B PUSH2 0x3D35 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4045 JUMPI PUSH2 0x4045 PUSH2 0x3D35 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x405C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x24F7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x40AB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1341 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x40B7 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x40F8 JUMPI PUSH2 0x40F8 PUSH2 0x388A JUMP JUMPDEST PUSH2 0x410C DUP2 PUSH2 0x4106 DUP5 SLOAD PUSH2 0x3CAF JUMP JUMPDEST DUP5 PUSH2 0x4084 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x413B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4129 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x4133 DUP6 DUP3 PUSH2 0x40CA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x416A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x414B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4188 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3540 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x3EAF JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x41E4 PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x3EAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4214 JUMPI PUSH2 0x4214 PUSH2 0x3D35 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x4230 JUMPI PUSH2 0x4230 PUSH2 0x388A JUMP JUMPDEST PUSH2 0x4244 DUP4 PUSH2 0x423E DUP4 SLOAD PUSH2 0x3CAF JUMP JUMPDEST DUP4 PUSH2 0x4084 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4272 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x4260 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x426A DUP7 DUP3 PUSH2 0x40CA JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x42A3 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4283 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x42C0 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x42FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x430B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x4319 PUSH2 0x394F DUP3 PUSH2 0x38D0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x432E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x433F DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x39C2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4365 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x3540 DUP2 DUP6 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4398 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x39C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x43F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4417 JUMPI PUSH2 0x4417 PUSH2 0x3D35 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4439 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x445A DUP2 DUP7 PUSH2 0x39EE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x446E DUP2 DUP6 PUSH2 0x39EE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x448C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2943 DUP2 PUSH2 0x3997 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x44CA PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x39EE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x44DC DUP2 DUP9 PUSH2 0x39EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x3F3F DUP2 DUP6 PUSH2 0x39EE JUMP INVALID 0xBE PUSH16 0xF12FEC5087498D44BC85F1A83235A630 SWAP5 0x4A 0x1E 0x2D GAS PUSH26 0x38AFE810370A5867FD19781F43410D9594FD4C02DD1D98DBE990 SWAP10 0xCB 0xD2 0x22 0xD5 DUP6 BYTE PUSH15 0x183C468D33CAA26469706673582212 KECCAK256 MOD ISZERO PUSH32 0xDBA7C438AFB6B392B8C87B00BC1EF9130AAF3306D405C15B805787094864736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"433:12357:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4703:232;;;;;;;;;;-1:-1:-1;4703:232:15;;;;;:::i;:::-;;:::i;:::-;;1256:825:2;;;;;;;;;;-1:-1:-1;1256:825:2;;;;;:::i;:::-;;:::i;4791:121::-;;;;;;;;;;-1:-1:-1;4791:121:2;;;;;:::i;:::-;;:::i;4119:576:15:-;;;;;;;;;;-1:-1:-1;4119:576:15;;;;;:::i;:::-;;:::i;6649:140:2:-;;;;;;;;;;-1:-1:-1;6649:140:2;;;;;:::i;:::-;;:::i;5852:345:15:-;;;;;;;;;;-1:-1:-1;5852:345:15;;;;;:::i;:::-;;:::i;4918:127:2:-;;;;;;;;;;-1:-1:-1;4918:127:2;;;;;:::i;:::-;;:::i;682:23:15:-;;;;;;;;;;;;;;;;;;;3199:25:18;;;3187:2;3172:18;682:23:15;;;;;;;;647:26;;;;;;;;;;-1:-1:-1;647:26:15;;;;;;;;;;;;;;;:::i;6884:247:2:-;;;;;;;;;;-1:-1:-1;6884:247:2;;;;;:::i;:::-;;:::i;:::-;;;4079:14:18;;4072:22;4054:41;;4042:2;4027:18;6884:247:2;3914:187:18;810:53:2;;;;;;;;;;-1:-1:-1;810:53:2;;;;;:::i;:::-;;;;;;;;;;;;;;991:19:15;;;;;;;;;;-1:-1:-1;991:19:15;;;;-1:-1:-1;;;;;991:19:15;;;;;;;;;;:::i;5051:176:2:-;;;;;;;;;;-1:-1:-1;5051:176:2;;;;;:::i;:::-;;:::i;3544:497:15:-;;;;;;;;;;-1:-1:-1;3544:497:15;;;;;:::i;:::-;;:::i;:::-;;;;5197:25:18;;;5253:2;5238:18;;5231:34;;;;5170:18;3544:497:15;5023:248:18;1091:36:15;;;;;;;;;;-1:-1:-1;1091:36:15;;;;-1:-1:-1;;;1091:36:15;;;;;;4943:189;;;;;;;;;;-1:-1:-1;4943:189:15;;;;;:::i;:::-;;:::i;622:85:3:-;;;;;;;;;;-1:-1:-1;622:85:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:24:15;;;;;;;;;;-1:-1:-1;1060:24:15;;;;-1:-1:-1;;;1060:24:15;;;;;;1955:380:3;;;;;;;;;;-1:-1:-1;1955:380:3;;;;;:::i;:::-;;:::i;785:47:15:-;;;;;;;;;;-1:-1:-1;785:47:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;5140:137;;;;;;;;;;-1:-1:-1;5140:137:15;;;;;:::i;:::-;;:::i;7183:57::-;;;;;;;;;;;;;:::i;682:51:2:-;;;;;;;;;;-1:-1:-1;682:51:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1698:868:15:-;;;;;;:::i;:::-;;:::i;739:65:2:-;;;;;;;;;;-1:-1:-1;739:65:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1201:85:8;;;;;;;;;;;;;:::i;917:42:15:-;;;;;;;;;;-1:-1:-1;917:42:15;;;;;:::i;:::-;;;;;;;;;;;;;;6562:239;;;;;;;;;;-1:-1:-1;6562:239:15;;;;;:::i;:::-;;:::i;869:23:2:-;;;;;;;;;;-1:-1:-1;869:23:2;;;;-1:-1:-1;;;;;869:23:2;;;6205:349:15;;;;;;;;;;-1:-1:-1;6205:349:15;;;;;:::i;:::-;;:::i;597:41::-;;;;;;;;;;;;637:1;597:41;;;;;10107:4:18;10095:17;;;10077:36;;10065:2;10050:18;597:41:15;9935:184:18;5864:326:2;;;;;;;;;;-1:-1:-1;5864:326:2;;;;;:::i;:::-;;:::i;7315:193:15:-;;;;;;;;;;-1:-1:-1;7315:193:15;;;;;:::i;:::-;;:::i;5580:278:2:-;;;;;;;;;;-1:-1:-1;5580:278:2;;;;;:::i;:::-;;:::i;547:43:15:-;;;;;;;;;;;;585:5;547:43;;630:46:2;;;;;;;;;;;;;;;6196:133;;;;;;;;;;-1:-1:-1;6196:133:2;;;;;:::i;:::-;;:::i;5460:159:15:-;;;;;;;;;;-1:-1:-1;5460:159:15;;;;;:::i;:::-;;:::i;2574:962::-;;;;;;:::i;:::-;;:::i;5285:167::-;;;;;;;;;;-1:-1:-1;5285:167:15;;;;;:::i;:::-;;:::i;4545:240:2:-;;;;;;;;;;-1:-1:-1;4545:240:2;;;;;:::i;:::-;;:::i;2554:795:3:-;;;;;;:::i;:::-;;:::i;6809:296:15:-;;;;;;;;;;-1:-1:-1;6809:296:15;;;;;:::i;:::-;;:::i;1134:33::-;;;;;;;;;;;;;;;;6335:255:2;;;;;;;;;;-1:-1:-1;6335:255:2;;;;;:::i;:::-;;:::i;714:40:15:-;;;;;;;;;;-1:-1:-1;714:40:15;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;714:40:15;;;;;;-1:-1:-1;;;;;12548:31:18;;;12530:50;;12518:2;12503:18;714:40:15;12386:200:18;5627:217:15;;;;;;;;;;-1:-1:-1;5627:217:15;;;;;:::i;:::-;;:::i;5370:204:2:-;;;;;;;;;;-1:-1:-1;5370:204:2;;;;;:::i;:::-;;:::i;1019:34:15:-;;;;;;;;;;-1:-1:-1;1019:34:15;;;;-1:-1:-1;;;1019:34:15;;;;;;839:44;;;;;;;;;;-1:-1:-1;839:44:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;2074:198:8;;;;;;;;;;-1:-1:-1;2074:198:8;;;;;:::i;:::-;;:::i;4239:247:2:-;;;;;;;;;;-1:-1:-1;4239:247:2;;;;;:::i;:::-;;:::i;4703:232:15:-;1094:13:8;:11;:13::i;:::-;585:5:15::1;4784:12;:30;;4776:73;;;::::0;-1:-1:-1;;;4776:73:15;;13258:2:18;4776:73:15::1;::::0;::::1;13240:21:18::0;13297:2;13277:18;;;13270:30;13336:32;13316:18;;;13309:60;13386:18;;4776:73:15::1;;;;;;;;;4860:11;:26:::0;;;4902:25:::1;::::0;3199::18;;;4902::15::1;::::0;3187:2:18;3172:18;4902:25:15::1;;;;;;;;4703:232:::0;:::o;1256:825:2:-;719:10:14;1532::2;-1:-1:-1;;;;;1508:35:2;;1500:78;;;;-1:-1:-1;;;1500:78:2;;13617:2:18;1500:78:2;;;13599:21:18;13656:2;13636:18;;;13629:30;13695:32;13675:18;;;13668:60;13745:18;;1500:78:2;13415:354:18;1500:78:2;1618:32;;;1589:26;1618:32;;;:19;:32;;;;;1589:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:13;:20;1813:11;;:18;;:42;:70;;;;;1882:1;1859:13;:20;:24;1813:70;:124;;;;-1:-1:-1;1913:24:2;;;;;;1887:22;;;;1897:11;;;;1887:22;:::i;:::-;;;;;;;;:50;1813:124;1792:209;;;;-1:-1:-1;;;1792:209:2;;14637:2:18;1792:209:2;;;14619:21:18;14676:2;14656:18;;;14649:30;14715:34;14695:18;;;14688:62;-1:-1:-1;;;14766:18:18;;;14759:36;14812:19;;1792:209:2;14435:402:18;1792:209:2;2012:62;2031:11;2044;;2012:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2012:62:2;;;;;;;;;;;;;;;;;;;;;;2057:6;;-1:-1:-1;2012:62:2;-1:-1:-1;2065:8:2;;;;;;2012:62;;2065:8;;;;2012:62;;;;;;;;;-1:-1:-1;2012:18:2;;-1:-1:-1;;;2012:62:2:i;:::-;1425:656;1256:825;;;;;;:::o;4791:121::-;1094:13:8;:11;:13::i;:::-;4870:35:2::1;::::0;-1:-1:-1;;;4870:35:2;;-1:-1:-1;;;;;4870:10:2::1;:25;::::0;::::1;::::0;:35:::1;::::0;4896:8;;4870:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4791:121:::0;:::o;4119:576:15:-;1094:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;4196:20:15;::::1;4188:67;;;;-1:-1:-1::0;;;4188:67:15::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4275:23:15;::::1;;::::0;;;:15:::1;:23;::::0;;;;;::::1;;4274:24;4266:74;;;::::0;-1:-1:-1;;;4266:74:15;;15447:2:18;4266:74:15::1;::::0;::::1;15429:21:18::0;15486:2;15466:18;;;15459:30;15525:34;15505:18;;;15498:62;-1:-1:-1;;;15576:18:18;;;15569:35;15621:19;;4266:74:15::1;15245:401:18::0;4266:74:15::1;4353:19;4375:22;4390:6;4375:14;:22::i;:::-;4353:44:::0;-1:-1:-1;637:1:15::1;4430:32;::::0;::::1;;;4408:130;;;::::0;-1:-1:-1;;;4408:130:15;;15853:2:18;4408:130:15::1;::::0;::::1;15835:21:18::0;15892:2;15872:18;;;15865:30;15931:34;15911:18;;;15904:62;-1:-1:-1;;;15982:18:18;;;15975:46;16038:19;;4408:130:15::1;15651:412:18::0;4408:130:15::1;-1:-1:-1::0;;;;;4551:23:15;::::1;;::::0;;;:15:::1;:23;::::0;;;;:30;;-1:-1:-1;;4551:30:15::1;4577:4;4551:30;::::0;;4618:31:::1;637:1;4618:13:::0;:31:::1;:::i;:::-;4613:37;::::0;:2:::1;:37;:::i;:::-;-1:-1:-1::0;;;;;4592:18:15;::::1;;::::0;;;:10:::1;:18;::::0;;;;;;:58;;;;4666:21;::::1;::::0;::::1;::::0;4603:6;;4666:21:::1;:::i;:::-;;;;;;;;4177:518;4119:576:::0;:::o;6649:140:2:-;1094:13:8;:11;:13::i;:::-;6739:35:2::1;::::0;;::::1;;::::0;;;:22:::1;:35;::::0;;;;:43;6649:140::o;5852:345:15:-;1094:13:8;:11;:13::i;:::-;5980:10:15::1;5993:20;6006:6;5993:12;:20::i;:::-;5980:33;;6045:5;6032:9;:18;;6024:58;;;;-1:-1:-1::0;;;6024:58:15::1;;;;;;;:::i;:::-;6095:43;-1:-1:-1::0;;;;;6095:27:15;::::1;6123:3:::0;6128:9;6095:27:::1;:43::i;:::-;6166:6;-1:-1:-1::0;;;;;6154:35:15::1;;6174:3;6179:9;6154:35;;;;;;;:::i;:::-;;;;;;;;5969:228;5852:345:::0;;;:::o;4918:127:2:-;1094:13:8;:11;:13::i;:::-;5000:38:2::1;::::0;-1:-1:-1;;;5000:38:2;;-1:-1:-1;;;;;5000:10:2::1;:28;::::0;::::1;::::0;:38:::1;::::0;5029:8;;5000:38:::1;;;:::i;6884:247::-:0;7025:32;;;6980:4;7025:32;;;:19;:32;;;;;6996:61;;6980:4;;7025:32;6996:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7112:11;;7102:22;;;;;;;:::i;:::-;;;;;;;;7084:13;7074:24;;;;;;:50;7067:57;;;6884:247;;;;;:::o;5051:176::-;1094:13:8;:11;:13::i;:::-;5165:55:2::1;::::0;-1:-1:-1;;;5165:55:2;;-1:-1:-1;;;;;5165:10:2::1;:29;::::0;::::1;::::0;:55:::1;::::0;5195:11;;5208;;;;5165:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3544:497:15::0;3686:14;3702:11;3731:35;3751:14;;3731:19;:35::i;:::-;3777:20;3800:45;3777:20;;;3800:18;:45::i;:::-;3777:68;-1:-1:-1;3856:13:15;;3872:29;;;;;;;;:::i;:::-;3970:12;;3946:87;;-1:-1:-1;;;3946:87:15;;-1:-1:-1;;;;;3872:43:15;;;;;;;;;-1:-1:-1;3946:10:15;:23;;;;;;:87;;3970:12;;;;;3992:4;;3999:7;;3872:43;;4018:14;;;;3946:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3926:107;;;;;;3544:497;;;;;;:::o;4943:189::-;1094:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;5013:19:15;::::1;5005:66;;;;-1:-1:-1::0;;;5005:66:15::1;;;;;;;:::i;:::-;5082:4;:12:::0;;-1:-1:-1;;;;;;5082:12:15::1;-1:-1:-1::0;;;;;5082:12:15;::::1;;::::0;;5110:14:::1;::::0;::::1;::::0;::::1;::::0;5082:12;;5110:14:::1;:::i;1955:380:3:-:0;719:10:14;2205:4:3;2181:29;2173:80;;;;-1:-1:-1;;;2173:80:3;;20144:2:18;2173:80:3;;;20126:21:18;20183:2;20163:18;;;20156:30;20222:34;20202:18;;;20195:62;-1:-1:-1;;;20273:18:18;;;20266:36;20319:19;;2173:80:3;19942:402:18;2173:80:3;2263:65;2285:11;2298;;2263:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2263:65:3;;;;;;;;;;;;;;;;;;;;;;2311:6;;-1:-1:-1;2263:65:3;-1:-1:-1;2319:8:3;;;;;;2263:65;;2319:8;;;;2263:65;;;;;;;;;-1:-1:-1;2263:21:3;;-1:-1:-1;;;2263:65:3:i;:::-;1955:380;;;;;;:::o;5140:137:15:-;1094:13:8;:11;:13::i;:::-;5208:12:15::1;:22:::0;;;::::1;;-1:-1:-1::0;;;5208:22:15::1;-1:-1:-1::0;;;;5208:22:15;;::::1;;::::0;;5246:23:::1;::::0;::::1;::::0;::::1;::::0;5223:7;4079:14:18;4072:22;4054:41;;4042:2;4027:18;;3914:187;7183:57:15;1094:13:8;:11;:13::i;:::-;7183:57:15:o;682:51:2:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1698:868:15:-;1235:12;;1933:6;;-1:-1:-1;;;1235:12:15;;;;1234:13;:38;;;;-1:-1:-1;;;;;;1252:20:15;;;;;;:12;:20;;;;;;;;1251:21;1234:38;1226:70;;;;-1:-1:-1;;;1226:70:15;;;;;;;:::i;:::-;2261:21:9::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;1973:23:15;::::2;;::::0;;;:15:::2;:23;::::0;;;;;::::2;;1965:71;;;;-1:-1:-1::0;;;1965:71:15::2;;;;;;;:::i;:::-;2084:30;2096:6;2104:9;2084:11;:30::i;:::-;2072:42;;2137:45;2152:6;2160:10;2172:9;2137:14;:45::i;:::-;2125:57;;2215:15;2233:26;2241:6;2249:9;2233:7;:26::i;:::-;2215:44;;2289:1;2278:8;-1:-1:-1::0;;;;;2278:12:15::2;;2270:69;;;::::0;-1:-1:-1;;;2270:69:15;;21303:2:18;2270:69:15::2;::::0;::::2;21285:21:18::0;21342:2;21322:18;;;21315:30;21381:34;21361:18;;;21354:62;-1:-1:-1;;;21432:18:18;;;21425:42;21484:19;;2270:69:15::2;21101:408:18::0;2270:69:15::2;-1:-1:-1::0;;;;;2350:14:15;::::2;;::::0;;;:6:::2;:14;::::0;;;;:26;;2368:8;;2350:14;:26:::2;::::0;2368:8;;-1:-1:-1;;;;;2350:26:15::2;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;2350:26:15::2;;;;;-1:-1:-1::0;;;;;2350:26:15::2;;;;;;2415:80;2426:6;2434:10;2446:8;2456:11;2469:14;;2485:9;2415:10;:80::i;:::-;2536:10;2524;-1:-1:-1::0;;;;;2511:47:15::2;2516:6;-1:-1:-1::0;;;;;2511:47:15::2;-1:-1:-1::0;;;;;;;;;;;2548:9:15::2;2511:47;;;;3199:25:18::0;;3187:2;3172:18;;3053:177;2511:47:15::2;;;;;;;;1954:612;2303:20:9::1;1716:1:::0;2809:7;:22;2629:209;1201:85:8;1247:7;1273:6;-1:-1:-1;;;;;1273:6:8;;1201:85::o;6562:239:15:-;1094:13:8;:11;:13::i;:::-;6696:46:15::1;6708:6;6716:3;6721:20;6734:6;6721:12;:20::i;6696:46::-;-1:-1:-1::0;;;;;6778:14:15;::::1;;::::0;;;:6:::1;:14;::::0;;;;;6753:40:::1;::::0;6765:6;;6773:3;;-1:-1:-1;;;;;6778:14:15::1;6753:11;:40::i;:::-;6562:239:::0;;:::o;6205:349::-;1094:13:8;:11;:13::i;:::-;1380:24:15::1;::::0;-1:-1:-1;;;1380:24:15;::::1;;;:68:::0;::::1;;;;1427:21;;1408:15;:40;;1380:68;1372:119;;;::::0;-1:-1:-1;;;1372:119:15;;21957:2:18;1372:119:15::1;::::0;::::1;21939:21:18::0;21996:2;21976:18;;;21969:30;22035:34;22015:18;;;22008:62;-1:-1:-1;;;22086:18:18;;;22079:36;22132:19;;1372:119:15::1;21755:402:18::0;1372:119:15::1;-1:-1:-1::0;;;;;6361:14:15;::::2;;::::0;;;:6:::2;:14;::::0;;;;:27;;6379:9;;6361:14;:27:::2;::::0;6379:9;;-1:-1:-1;;;;;6361:27:15::2;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;6361:27:15::2;;;;;-1:-1:-1::0;;;;;6361:27:15::2;;;;;;6401:13;6417:26;6425:6;6433:9;6417:7;:26::i;:::-;6401:42:::0;-1:-1:-1;6454:42:15::2;-1:-1:-1::0;;;;;6454:27:15;::::2;6482:3:::0;6401:42;6454:27:::2;:42::i;:::-;6524:6;-1:-1:-1::0;;;;;6512:34:15::2;;6532:3;6537:8;6512:34;;;;;;;:::i;5864:326:2:-:0;5987:35;;;5967:17;5987:35;;;:19;:35;;;;;5967:55;;5943:12;;5967:17;5987:35;5967:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6040:4;:11;6055:1;6040:16;6032:58;;;;-1:-1:-1;;;6032:58:2;;22598:2:18;6032:58:2;;;22580:21:18;22637:2;22617:18;;;22610:30;22676:31;22656:18;;;22649:59;22725:18;;6032:58:2;22396:353:18;6032:58:2;6107:31;6118:1;6135:2;6121:4;:11;:16;;;;:::i;:::-;6107:4;;:31;:10;:31::i;:::-;6100:38;5864:326;-1:-1:-1;;;5864:326:2:o;7315:193:15:-;-1:-1:-1;;;;;7420:14:15;;7374:4;7420:14;;;:6;:14;;;;;;7374:4;;7404:31;;7412:6;;-1:-1:-1;;;;;7420:14:15;7404:7;:31::i;:::-;7391:44;;7495:5;7460:6;-1:-1:-1;;;;;7453:24:15;;7486:4;7453:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;5580:278:2:-;1094:13:8;:11;:13::i;:::-;5751:14:2::1;;5775:4;5734:47;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;5734:47:2;;::::1;::::0;;;;;;5696:35:::1;::::0;::::1;;::::0;;;:19:::1;5734:47;5696:35:::0;;;:85:::1;::::0;:35;:85:::1;:::i;:::-;;5796:55;5820:14;5836;;5796:55;;;;;;;;:::i;:::-;;;;;;;;5580:278:::0;;;:::o;6196:133::-;1094:13:8;:11;:13::i;:::-;6265:8:2::1;:20:::0;;-1:-1:-1;;;;;;6265:20:2::1;-1:-1:-1::0;;;;;6265:20:2;::::1;;::::0;;6300:22:::1;::::0;::::1;::::0;::::1;::::0;6265:20;;6300:22:::1;:::i;5460:159:15:-:0;1094:13:8;:11;:13::i;:::-;5537:12:15::1;:28:::0;;-1:-1:-1;;5537:28:15::1;;::::0;::::1;;::::0;;5581:30:::1;::::0;::::1;::::0;::::1;::::0;5537:28;;5581:30:::1;:::i;2574:962::-:0;2787:4;;-1:-1:-1;;;;;2787:4:15;;;-1:-1:-1;;;1235:12:15;;;;1234:13;:38;;;;-1:-1:-1;;;;;;1252:20:15;;;;;;:12;:20;;;;;;;;1251:21;1234:38;1226:70;;;;-1:-1:-1;;;1226:70:15;;;;;;;:::i;:::-;2261:21:9::1;:19;:21::i;:::-;2833:4:15::2;::::0;-1:-1:-1;;;;;2833:4:15::2;2868:19:::0;;;::::2;::::0;:45:::2;;-1:-1:-1::0;;;;;;2891:22:15;::::2;;::::0;;;:15:::2;:22;::::0;;;;;::::2;;2868:45;2860:91;;;::::0;-1:-1:-1;;;2860:91:15;;25830:2:18;2860:91:15::2;::::0;::::2;25812:21:18::0;25869:2;25849:18;;;25842:30;25908:34;25888:18;;;25881:62;-1:-1:-1;;;25959:18:18;;;25952:31;26000:19;;2860:91:15::2;25628:397:18::0;2860:91:15::2;2974:29;2986:5;2993:9;2974:11;:29::i;:::-;2962:41;;3034:1;3022:9;:13;3014:68;;;::::0;-1:-1:-1;;;3014:68:15;;26232:2:18;3014:68:15::2;::::0;::::2;26214:21:18::0;26271:2;26251:18;;;26244:30;26310:34;26290:18;;;26283:62;-1:-1:-1;;;26361:18:18;;;26354:40;26411:19;;3014:68:15::2;26030:406:18::0;3014:68:15::2;3114:9;3101;:22;;3093:62;;;;-1:-1:-1::0;;;3093:62:15::2;;;;;;;:::i;:::-;3207:5;-1:-1:-1::0;;;;;3201:20:15::2;;3229:9;3201:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;3252:15;3270:25;3278:5;3285:9;3270:7;:25::i;:::-;-1:-1:-1::0;;;;;3306:13:15;::::2;;::::0;;;:6:::2;:13;::::0;;;;:25;;3252:43;;-1:-1:-1;3252:43:15;;3306:13;;;:25:::2;::::0;3252:43;;-1:-1:-1;;;;;3306:25:15::2;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;3306:25:15::2;;;;;-1:-1:-1::0;;;;;3306:25:15::2;;;;;;3370:91;3381:5;3388:10;3400:8;3410:11;3423:14;;3451:9;3439;:21;;;;:::i;:::-;3370:10;:91::i;:::-;3477:51;::::0;3199:25:18;;;3506:10:15;;3494::::2;::::0;3490:1:::2;::::0;-1:-1:-1;;;;;;;;;;;3477:51:15;3187:2:18;3172:18;3477:51:15::2;;;;;;;2806:730;;2303:20:9::1;1716:1:::0;2809:7;:22;2629:209;5285:167:15;1094:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;5368:20:15;::::1;;::::0;;;:12:::1;:20;::::0;;;;;;;;:30;;-1:-1:-1;;5368:30:15::1;::::0;::::1;;::::0;;::::1;::::0;;;5414;;26609:51:18;;;26676:18;;;26669:50;5414:30:15::1;::::0;26582:18:18;5414:30:15::1;26441:284:18::0;4545:240:2;1094:13:8;:11;:13::i;:::-;4716:62:2::1;::::0;-1:-1:-1;;;4716:62:2;;-1:-1:-1;;;;;4716:10:2::1;:20;::::0;::::1;::::0;:62:::1;::::0;4737:8;;4747;;4757:11;;4770:7;;;;4716:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4545:240:::0;;;;;:::o;2554:795:3:-;2801:27;;;2779:19;2801:27;;;:14;:27;;;;;;:40;;;;2829:11;;;;2801:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2801:48:3;;;;;;;;;;;;-1:-1:-1;2801:48:3;2859:73;;;;-1:-1:-1;;;2859:73:3;;27435:2:18;2859:73:3;;;27417:21:18;27474:2;27454:18;;;27447:30;27513:34;27493:18;;;27486:62;-1:-1:-1;;;27564:18:18;;;27557:33;27607:19;;2859:73:3;27233:399:18;2859:73:3;2973:11;2960:8;;2950:19;;;;;;;:::i;:::-;;;;;;;;:34;2942:80;;;;-1:-1:-1;;;2942:80:3;;27839:2:18;2942:80:3;;;27821:21:18;27878:2;27858:18;;;27851:30;27917:34;27897:18;;;27890:62;-1:-1:-1;;;27968:18:18;;;27961:31;28009:19;;2942:80:3;27637:397:18;2942:80:3;3068:27;;;3127:1;3068:27;;;:14;:27;;;;;;:40;;;;3096:11;;;;3068:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3068:48:3;;;;;;;;;;;;:61;;;;3196:65;;;;;;;;;;;;;;;;;;;3218:11;;3231;;3196:65;;;;;;3231:11;3196:65;;3231:11;3196:65;;;;;;;;;-1:-1:-1;;3196:65:3;;;;;;;;;;;;;;;;;;;;;;3244:6;;-1:-1:-1;3196:65:3;-1:-1:-1;3252:8:3;;;;;;3196:65;;3252:8;;;;3196:65;;;;;;;;;-1:-1:-1;3196:21:3;;-1:-1:-1;;;3196:65:3:i;:::-;3276:66;3296:11;3309;;3322:6;3330:11;3276:66;;;;;;;;;;:::i;:::-;;;;;;;;2725:624;2554:795;;;;;;:::o;6809:296:15:-;1094:13:8;:11;:13::i;:::-;6886:24:15::1;:34:::0;;-1:-1:-1;;;;6886:34:15::1;-1:-1:-1::0;;;6886:34:15;::::1;;;;::::0;;;6955:39:::1;;6993:1;6955:39;;;6965:25;:15;6983:7;6965:25;:::i;:::-;6931:21;:63:::0;;;7042:55:::1;::::0;;28863:14:18;;28856:22;28838:41;;28910:2;28895:18;;28888:34;;;;7042:55:15::1;::::0;28811:18:18;7042:55:15::1;28670:258:18::0;6335:255:2;1094:13:8;:11;:13::i;:::-;6470:28:2::1;::::0;;::::1;;::::0;;;:15:::1;:28;::::0;;;;;;;:41;;::::1;::::0;;;;;;;;;;:51;;;6536:47;;29156:34:18;;;29206:18;;29199:43;;;;29258:18;;;29251:34;;;6536:47:2::1;::::0;29119:2:18;29104:18;6536:47:2::1;28933:358:18::0;5627:217:15;1094:13:8;:11;:13::i;:::-;5722:22:15::1;:48:::0;;;::::1;;-1:-1:-1::0;;;5722:48:15::1;-1:-1:-1::0;;;;5722:48:15;;::::1;;::::0;;5786:50:::1;::::0;::::1;::::0;::::1;::::0;5747:23;4079:14:18;4072:22;4054:41;;4042:2;4027:18;;3914:187;5370:204:2;1094:13:8;:11;:13::i;:::-;5470:35:2::1;::::0;::::1;;::::0;;;:19:::1;:35;::::0;;;;:43:::1;5508:5:::0;;5470:35;:43:::1;:::i;:::-;;5528:39;5545:14;5561:5;;5528:39;;;;;;;;:::i;2074:198:8:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:8;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:8;;30705:2:18;2154:73:8::1;::::0;::::1;30687:21:18::0;30744:2;30724:18;;;30717:30;30783:34;30763:18;;;30756:62;-1:-1:-1;;;30834:18:18;;;30827:36;30880:19;;2154:73:8::1;30503:402:18::0;2154:73:8::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4239:247:2:-;4411:68;;-1:-1:-1;;;4411:68:2;;31147:6:18;31180:15;;;4411:68:2;;;31162:34:18;31232:15;;31212:18;;;31205:43;4460:4:2;31264:18:18;;;31257:60;31333:18;;;31326:34;;;4380:12:2;;4411:10;-1:-1:-1;;;;;4411:20:2;;;;31109:19:18;;4411:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4411:68:2;;;;;;;;;;;;:::i;:::-;4404:75;;4239:247;;;;;;;:::o;1359:130:8:-;719:10:14;1422:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:8;;1414:68;;;;-1:-1:-1;;;1414:68:8;;32212:2:18;1414:68:8;;;32194:21:18;;;32231:18;;;32224:30;32290:34;32270:18;;;32263:62;32342:18;;1414:68:8;32010:356:18;985:592:3;1172:12;1186:19;1209:199;1256:9;1279:3;1319:34;;;1355:11;1368;1381:6;1389:8;1296:102;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1296:102:3;;;;;;;;;;;;;;-1:-1:-1;;;;;1296:102:3;-1:-1:-1;;;;;;1296:102:3;;;;;;;;;;1217:4;;1209:199;;:33;:199::i;:::-;1171:237;;;;1466:7;1461:110;;1489:71;1509:11;1522;1535:6;1543:8;1553:6;1489:19;:71::i;9519:320:15:-;9668:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9668:37:15;-1:-1:-1;;;9668:37:15;;;9636:80;;9582:5;;;;;;-1:-1:-1;;;;;9636:17:15;;;:80;;9668:37;9636:80;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9600:116;;;;9735:7;9727:61;;;;-1:-1:-1;;;9727:61:15;;33412:2:18;9727:61:15;;;33394:21:18;33451:2;33431:18;;;33424:30;33490:34;33470:18;;;33463:62;-1:-1:-1;;;33541:18:18;;;33534:39;33590:19;;9727:61:15;33210:405:18;9727:61:15;9817:4;9806:25;;;;;;;;;;;;:::i;941:175:12:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:12;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:12;-1:-1:-1;;;;;;1050:58:12;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;11873:342:15:-;11962:22;;-1:-1:-1;;;11962:22:15;;;;11958:250;;;12016:12;;12001:81;;12016:12;;;12064:14;;12001:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12001:81:15;-1:-1:-1;12001:14:15;;-1:-1:-1;;12001:81:15:i;11958:250::-;12123:26;;12115:81;;;;-1:-1:-1;;;12115:81:15;;34232:2:18;12115:81:15;;;34214:21:18;34271:2;34251:18;;;34244:30;34310:34;34290:18;;;34283:62;-1:-1:-1;;;34361:18:18;;;34354:40;34411:19;;12115:81:15;34030:406:18;10715:342:15;10963:86;;;10879:20;10963:86;;;34648:49:18;-1:-1:-1;;;;;3232:23:7;;;;34713:11:18;;;34706:27;34749:12;;;34742:28;;;;34834:3;34804:16;-1:-1:-1;;;;;;34800:47:18;34786:12;;;34779:69;10963:86:15;;;;;;;;;34864:12:18;;;;10963:86:15;;;10715:342::o;7589:1261::-;7780:12;;;7765:27;;;7780:12;;7765:27;7757:76;;;;-1:-1:-1;;;7757:76:15;;35089:2:18;7757:76:15;;;35071:21:18;35128:2;35108:18;;;35101:30;35167:34;35147:18;;;35140:62;-1:-1:-1;;;35218:18:18;;;35211:34;35262:19;;7757:76:15;34887:400:18;7757:76:15;7847:13;7862:10;7874:15;7891:11;7906:31;7928:8;7906:21;:31::i;:::-;7957:12;;7846:91;;-1:-1:-1;7846:91:15;;-1:-1:-1;7846:91:15;-1:-1:-1;7846:91:15;-1:-1:-1;;;;7957:12:15;;;;7956:13;:37;;;;-1:-1:-1;;;;;;7974:19:15;;;;;;:12;:19;;;;;;;;7973:20;7956:37;7948:69;;;;-1:-1:-1;;;7948:69:15;;;;;;;:::i;:::-;-1:-1:-1;;;;;8036:22:15;;;;;;:15;:22;;;;;;;;8028:70;;;;-1:-1:-1;;;8028:70:15;;;;;;;:::i;:::-;-1:-1:-1;;;;;8146:13:15;;8131:12;8146:13;;;:6;:13;;;;;;-1:-1:-1;;;;;8146:13:15;;;;8178:17;;;;;8170:65;;;;-1:-1:-1;;;8170:65:15;;35494:2:18;8170:65:15;;;35476:21:18;35533:2;35513:18;;;35506:30;35572:34;35552:18;;;35545:62;-1:-1:-1;;;35623:18:18;;;35616:33;35666:19;;8170:65:15;35292:399:18;8170:65:15;8262:16;8270:8;8262:5;:16;:::i;:::-;-1:-1:-1;;;;;8246:13:15;;;;;;:6;:13;;;;;:32;;-1:-1:-1;;;;;;8246:32:15;-1:-1:-1;;;;;8246:32:15;;;;;;;;;;;8327:24;8246:13;8342:8;8327:7;:24::i;:::-;8311:40;;8391:1;8377:11;;:15;:51;;8416:8;8426:1;8377:51;;;8395:17;8403:8;8395:7;:17::i;:::-;-1:-1:-1;8491:4:15;;8362:66;;-1:-1:-1;;;;;;8482:13:15;;;8491:4;;8482:13;:23;;;;;8499:6;8482:23;8478:365;;;8535:4;;8522:41;;-1:-1:-1;;;;;8535:4:15;8549:2;8554:8;8522:12;:41::i;:::-;8583:33;;3199:25:18;;;-1:-1:-1;;;;;8583:33:15;;;8599:1;;-1:-1:-1;;;;;;;;;;;8583:33:15;3187:2:18;3172:18;8583:33:15;;;;;;;8478:365;;;-1:-1:-1;;;;;8654:16:15;;;:39;;8691:2;8654:39;;;8681:6;8654:39;8649:44;-1:-1:-1;8743:40:15;-1:-1:-1;;;;;8743:26:15;;8649:44;8774:8;8743:26;:40::i;:::-;8818:2;-1:-1:-1;;;;;8803:28:15;8811:5;-1:-1:-1;;;;;8803:28:15;-1:-1:-1;;;;;;;;;;;8822:8:15;8803:28;;;;3199:25:18;;3187:2;3172:18;;3053:177;8803:28:15;;;;;;;;8478:365;7746:1104;;;;;;7589:1261;;;;:::o;2336:287:9:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:9;;35898:2:18;2460:63:9;;;35880:21:18;35937:2;35917:18;;;35910:30;35976:33;35956:18;;;35949:61;36027:18;;2460:63:9;35696:355:18;2460:63:9;1759:1;2598:7;:18;2336:287::o;12636:151:15:-;12712:4;12736:43;12744:6;12752:26;12760:6;12768:9;12752:7;:26::i;:::-;12736:7;:43::i;:::-;12729:50;;12636:151;;;;;:::o;9068:443::-;9191:4;9252:18;9280:6;-1:-1:-1;;;;;9273:24:15;;9306:4;9273:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9252:60;-1:-1:-1;9323:64:15;-1:-1:-1;;;;;9323:31:15;;9355:5;9370:4;9377:9;9323:31;:64::i;:::-;9418:39;;-1:-1:-1;;;9418:39:15;;9398:17;;-1:-1:-1;;;;;9418:24:15;;;;;:39;;9451:4;;9418:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9398:59;-1:-1:-1;9475:28:15;9490:13;9398:59;9475:28;:::i;:::-;9468:35;9068:443;-1:-1:-1;;;;;;9068:443:15:o;12367:261::-;-1:-1:-1;;;;;12486:18:15;;12439:6;12486:18;;;:10;:18;;;;;;12439:6;;12474:30;;:9;:30;:::i;:::-;12458:46;-1:-1:-1;;;;;;12523:28:15;;;12515:71;;;;-1:-1:-1;;;12515:71:15;;36480:2:18;12515:71:15;;;36462:21:18;36519:2;36499:18;;;36492:30;36558:32;36538:18;;;36531:60;36608:18;;12515:71:15;36278:354:18;10052:572:15;10288:35;10308:14;;10288:19;:35::i;:::-;10334:20;10357:49;10376:6;10384:10;10396:9;10357:18;:49::i;:::-;10439:12;;10334:72;;-1:-1:-1;10417:199:15;;10439:12;;10334:72;10488:25;;;;:11;:25;:::i;:::-;10528:29;;;;;;;;:::i;:::-;10572:14;;10417:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10601:4:15;;-1:-1:-1;10417:7:15;;-1:-1:-1;;10417:199:15:i;:::-;10277:347;10052:572;;;;;;;:::o;12223:136::-;-1:-1:-1;;;;;12333:18:15;;12297:4;12333:18;;;:10;:18;;;;;;12321:30;;-1:-1:-1;;;;;12321:30:15;;;:::i;9258:2770:0:-;9374:12;9422:7;9406:12;9422:7;9416:2;9406:12;:::i;:::-;:23;;9398:50;;;;-1:-1:-1;;;9398:50:0;;37272:2:18;9398:50:0;;;37254:21:18;37311:2;37291:18;;;37284:30;-1:-1:-1;;;37330:18:18;;;37323:44;37384:18;;9398:50:0;37070:338:18;9398:50:0;9483:16;9492:7;9483:6;:16;:::i;:::-;9466:6;:13;:33;;9458:63;;;;-1:-1:-1;;;9458:63:0;;37615:2:18;9458:63:0;;;37597:21:18;37654:2;37634:18;;;37627:30;-1:-1:-1;;;37673:18:18;;;37666:47;37730:18;;9458:63:0;37413:341:18;9458:63:0;9532:22;9595:15;;9623:1967;;;;11731:4;11725:11;11712:24;;11917:1;11906:9;11899:20;11965:4;11954:9;11950:20;11944:4;11937:34;9588:2397;;9623:1967;9805:4;9799:11;9786:24;;10464:2;10455:7;10451:16;10846:9;10839:17;10833:4;10829:28;10817:9;10806;10802:25;10798:60;10894:7;10890:2;10886:16;11146:6;11132:9;11125:17;11119:4;11115:28;11103:9;11095:6;11091:22;11087:57;11083:70;10920:425;11179:3;11175:2;11172:11;10920:425;;;11317:9;;11306:21;;11220:4;11212:13;;;;11252;10920:425;;;-1:-1:-1;;11363:26:0;;;11571:2;11554:11;-1:-1:-1;;11550:25:0;11544:4;11537:39;-1:-1:-1;9588:2397:0;-1:-1:-1;12012:9:0;9258:2770;-1:-1:-1;;;;9258:2770:0:o;2426:187:8:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:8;;;-1:-1:-1;;;;;;2534:17:8;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;1111:1274:1:-;1265:4;1271:12;1331;1353:13;1376:24;1413:8;1403:19;;-1:-1:-1;;;;;1403:19:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:19:1;;1376:46;;1919:1;1890;1853:9;1847:16;1815:4;1804:9;1800:20;1766:1;1728:7;1699:4;1677:267;1665:279;;2011:16;2000:27;;2055:8;2046:7;2043:21;2040:76;;;2094:8;2083:19;;2040:76;2201:7;2188:11;2181:28;2321:7;2318:1;2311:4;2298:11;2294:22;2279:50;2356:8;;;;-1:-1:-1;1111:1274:1;-1:-1:-1;;;;;;1111:1274:1:o;1583:366:3:-;1852:8;1842:19;;;;;;1791:14;:27;1806:11;1791:27;;;;;;;;;;;;;;;1819:11;1791:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1791:48:3;;;;;;;;;:70;;;;1876:66;;;;1890:11;;1903;;1832:6;;1924:8;;1934:7;;1876:66;:::i;:::-;;;;;;;;1583:366;;;;;:::o;5196:642:12:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:12;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:12;;38932:2:18;5720:111:12;;;38914:21:18;38971:2;38951:18;;;38944:30;39010:34;38990:18;;;38983:62;-1:-1:-1;;;39061:18:18;;;39054:40;39111:19;;5720:111:12;38730:406:18;3011:453:2;3184:21;3208:28;3221:14;3208:12;:28::i;:::-;3265;;;;3246:16;3265:28;;;:15;:28;;;;;;;;:35;;;;;;;;;;3184:52;;-1:-1:-1;3318:15:2;3310:54;;;;-1:-1:-1;;;3310:54:2;;39343:2:18;3310:54:2;;;39325:21:18;39382:2;39362:18;;;39355:30;-1:-1:-1;;;39401:18:18;;;39394:56;39467:18;;3310:54:2;39141:350:18;3310:54:2;3402:23;3416:9;3402:11;:23;:::i;:::-;3382:16;:43;;3374:83;;;;-1:-1:-1;;;3374:83:2;;39698:2:18;3374:83:2;;;39680:21:18;39737:2;39717:18;;;39710:30;-1:-1:-1;;;39756:18:18;;;39749:57;39823:18;;3374:83:2;39496:351:18;11168:697:15;11286:13;11314:10;11339:15;11369:11;11416:8;:15;11435:2;11416:21;11408:69;;;;-1:-1:-1;;;11408:69:15;;40054:2:18;11408:69:15;;;40036:21:18;40093:2;40073:18;;;40066:30;40132:34;40112:18;;;40105:62;-1:-1:-1;;;40183:18:18;;;40176:33;40226:19;;11408:69:15;39852:399:18;11408:69:15;11488:21;11529:8;11538:1;11529:11;;;;;;;;:::i;:::-;;;;;;;11512:30;;;;;;;;:::i;:::-;11488:54;-1:-1:-1;11575:29:15;11561:10;:43;;;;;;;;:::i;:::-;;11553:88;;;;-1:-1:-1;;;11553:88:15;;40590:2:18;11553:88:15;;;40572:21:18;;;40609:18;;;40602:30;40668:34;40648:18;;;40641:62;40720:18;;11553:88:15;40388:356:18;11553:88:15;11705:2;11695:8;11691:17;11685:24;11676:33;;11749:2;11739:8;11735:17;11729:24;11723:30;;11799:2;11789:8;11785:17;11779:24;11767:36;;11839:8;11848:2;11839:12;;;;;;;;:::i;:::-;;;;;;;;;11833:19;;:24;;11856:1;11833:24;11824:33;;11397:468;11168:697;;;;;:::o;9847:197::-;9903:19;9924:8;585:5;9964:11;;9952:9;:23;;;;:::i;:::-;9951:42;;;;:::i;:::-;9945:48;-1:-1:-1;10021:15:15;9945:48;10021:9;:15;:::i;:::-;10004:32;;9847:197;;;:::o;8858:202::-;8986:32;;-1:-1:-1;;;8986:32:15;;;;;3199:25:18;;;-1:-1:-1;;;;;8986:21:15;;;;;3172:18:18;;8986:32:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9029:23:15;;-1:-1:-1;;;;;9029:12:15;;;-1:-1:-1;9029:23:15;;;;;-1:-1:-1;9042:9:15;;9029:23;;;;9042:9;9029:12;:23;;;;;;;;;;;;;;;;;;;;;8858:202;;;:::o;1355:203:12:-;1482:68;;-1:-1:-1;;;;;41007:15:18;;;1482:68:12;;;40989:34:18;41059:15;;41039:18;;;41032:43;41091:18;;;41084:34;;;1455:96:12;;1475:5;;-1:-1:-1;;;1505:27:12;40924:18:18;;1482:68:12;40749:375:18;2403:602:2;2679:32;;;2650:26;2679:32;;;:19;:32;;;;;2650:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:13;:20;2753:1;2729:25;2721:86;;;;-1:-1:-1;;;2721:86:2;;41331:2:18;2721:86:2;;;41313:21:18;41370:2;41350:18;;;41343:30;41409:34;41389:18;;;41382:62;-1:-1:-1;;;41460:18:18;;;41453:46;41516:19;;2721:86:2;41129:412:18;2721:86:2;2817:47;2835:11;2848:8;:15;2817:17;:47::i;:::-;2874:124;;-1:-1:-1;;;2874:124:2;;-1:-1:-1;;;;;2874:10:2;:15;;;;2897:10;;2874:124;;2909:11;;2922:13;;2937:8;;2947:14;;2963:18;;2983:14;;2874:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2640:365;2403:602;;;;;;:::o;4108:223:13:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;3470:266:2:-;3552:13;3610:2;3585:14;:21;:27;;3577:68;;;;-1:-1:-1;;;3577:68:2;;42590:2:18;3577:68:2;;;42572:21:18;42629:2;42609:18;;;42602:30;-1:-1:-1;;;42648:18:18;;;42641:58;42716:18;;3577:68:2;42388:352:18;3577:68:2;-1:-1:-1;3716:2:2;3696:23;3690:30;;3470:266::o;3742:395::-;3864:35;;;3840:21;3864:35;;;:22;:35;;;;;;;3913:21;;;3909:135;;-1:-1:-1;618:5:2;3909:135;4077:16;4061:12;:32;;4053:77;;;;-1:-1:-1;;;4053:77:2;;42947:2:18;4053:77:2;;;42929:21:18;;;42966:18;;;42959:30;43025:34;43005:18;;;42998:62;43077:18;;4053:77:2;42745:356:18;5165:446:13;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:13;;43308:2:18;5354:81:13;;;43290:21:18;43347:2;43327:18;;;43320:30;43386:34;43366:18;;;43359:62;-1:-1:-1;;;43437:18:18;;;43430:36;43483:19;;5354:81:13;43106:402:18;5354:81:13;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:13;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:13:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:13;;;8113:60;;;;-1:-1:-1;;;8113:60:13;;43715:2:18;8113:60:13;;;43697:21:18;43754:2;43734:18;;;43727:30;43793:31;43773:18;;;43766:59;43842:18;;8113:60:13;43513:353:18;8113:60:13;-1:-1:-1;8208:10:13;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:13;;;;;;;;:::i;14:180:18:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:18;;14:180;-1:-1:-1;14:180:18:o;199:159::-;266:20;;326:6;315:18;;305:29;;295:57;;348:1;345;338:12;295:57;199:159;;;:::o;363:347::-;414:8;424:6;478:3;471:4;463:6;459:17;455:27;445:55;;496:1;493;486:12;445:55;-1:-1:-1;519:20:18;;-1:-1:-1;;;;;551:30:18;;548:50;;;594:1;591;584:12;548:50;631:4;623:6;619:17;607:29;;683:3;676:4;667:6;659;655:19;651:30;648:39;645:59;;;700:1;697;690:12;645:59;363:347;;;;;:::o;715:171::-;782:20;;-1:-1:-1;;;;;831:30:18;;821:41;;811:69;;876:1;873;866:12;891:862;997:6;1005;1013;1021;1029;1037;1090:3;1078:9;1069:7;1065:23;1061:33;1058:53;;;1107:1;1104;1097:12;1058:53;1130:28;1148:9;1130:28;:::i;:::-;1120:38;-1:-1:-1;1209:2:18;1194:18;;1181:32;-1:-1:-1;;;;;1262:14:18;;;1259:34;;;1289:1;1286;1279:12;1259:34;1328:58;1378:7;1369:6;1358:9;1354:22;1328:58;:::i;:::-;1405:8;;-1:-1:-1;1302:84:18;-1:-1:-1;1302:84:18;;-1:-1:-1;1459:37:18;1492:2;1477:18;;1459:37;:::i;:::-;1449:47;;1549:2;1538:9;1534:18;1521:32;1505:48;;1578:2;1568:8;1565:16;1562:36;;;1594:1;1591;1584:12;1562:36;;1633:60;1685:7;1674:8;1663:9;1659:24;1633:60;:::i;:::-;891:862;;;;-1:-1:-1;891:862:18;;-1:-1:-1;891:862:18;;1712:8;;891:862;-1:-1:-1;;;891:862:18:o;1758:184::-;1816:6;1869:2;1857:9;1848:7;1844:23;1840:32;1837:52;;;1885:1;1882;1875:12;1837:52;1908:28;1926:9;1908:28;:::i;1947:131::-;-1:-1:-1;;;;;2022:31:18;;2012:42;;2002:70;;2068:1;2065;2058:12;2083:247;2142:6;2195:2;2183:9;2174:7;2170:23;2166:32;2163:52;;;2211:1;2208;2201:12;2163:52;2250:9;2237:23;2269:31;2294:5;2269:31;:::i;2335:252::-;2402:6;2410;2463:2;2451:9;2442:7;2438:23;2434:32;2431:52;;;2479:1;2476;2469:12;2431:52;2502:28;2520:9;2502:28;:::i;:::-;2492:38;2577:2;2562:18;;;;2549:32;;-1:-1:-1;;;2335:252:18:o;2592:456::-;2669:6;2677;2685;2738:2;2726:9;2717:7;2713:23;2709:32;2706:52;;;2754:1;2751;2744:12;2706:52;2793:9;2780:23;2812:31;2837:5;2812:31;:::i;:::-;2862:5;-1:-1:-1;2919:2:18;2904:18;;2891:32;2932:33;2891:32;2932:33;:::i;:::-;2592:456;;2984:7;;-1:-1:-1;;;3038:2:18;3023:18;;;;3010:32;;2592:456::o;3235:188::-;3409:6;3397:19;;;;3379:38;;3367:2;3352:18;;3235:188::o;3428:481::-;3506:6;3514;3522;3575:2;3563:9;3554:7;3550:23;3546:32;3543:52;;;3591:1;3588;3581:12;3543:52;3614:28;3632:9;3614:28;:::i;:::-;3604:38;-1:-1:-1;3693:2:18;3678:18;;3665:32;-1:-1:-1;;;;;3709:30:18;;3706:50;;;3752:1;3749;3742:12;3706:50;3791:58;3841:7;3832:6;3821:9;3817:22;3791:58;:::i;:::-;3428:481;;3868:8;;-1:-1:-1;3765:84:18;;-1:-1:-1;;;;3428:481:18:o;4106:203::-;-1:-1:-1;;;;;4270:32:18;;;;4252:51;;4240:2;4225:18;;4106:203::o;4314:158::-;4377:5;4422:2;4413:6;4408:3;4404:16;4400:25;4397:45;;;4438:1;4435;4428:12;4397:45;-1:-1:-1;4460:6:18;4314:158;-1:-1:-1;4314:158:18:o;4477:541::-;4586:6;4594;4602;4655:2;4643:9;4634:7;4630:23;4626:32;4623:52;;;4671:1;4668;4661:12;4623:52;4694:57;4743:7;4732:9;4694:57;:::i;:::-;4684:67;-1:-1:-1;4802:2:18;4787:18;;4774:32;-1:-1:-1;;;;;4818:30:18;;4815:50;;;4861:1;4858;4851:12;5276:127;5337:10;5332:3;5328:20;5325:1;5318:31;5368:4;5365:1;5358:15;5392:4;5389:1;5382:15;5408:275;5479:2;5473:9;5544:2;5525:13;;-1:-1:-1;;5521:27:18;5509:40;;-1:-1:-1;;;;;5564:34:18;;5600:22;;;5561:62;5558:88;;;5626:18;;:::i;:::-;5662:2;5655:22;5408:275;;-1:-1:-1;5408:275:18:o;5688:186::-;5736:4;-1:-1:-1;;;;;5758:30:18;;5755:56;;;5791:18;;:::i;:::-;-1:-1:-1;5857:2:18;5836:15;-1:-1:-1;;5832:29:18;5863:4;5828:40;;5688:186::o;5879:815::-;5963:6;5971;5979;6032:2;6020:9;6011:7;6007:23;6003:32;6000:52;;;6048:1;6045;6038:12;6000:52;6071:28;6089:9;6071:28;:::i;:::-;6061:38;-1:-1:-1;6150:2:18;6135:18;;6122:32;-1:-1:-1;;;;;6166:30:18;;6163:50;;;6209:1;6206;6199:12;6163:50;6232:22;;6285:4;6277:13;;6273:27;-1:-1:-1;6263:55:18;;6314:1;6311;6304:12;6263:55;6350:2;6337:16;6375:48;6391:31;6419:2;6391:31;:::i;:::-;6375:48;:::i;:::-;6446:2;6439:5;6432:17;6486:7;6481:2;6476;6472;6468:11;6464:20;6461:33;6458:53;;;6507:1;6504;6497:12;6458:53;6562:2;6557;6553;6549:11;6544:2;6537:5;6533:14;6520:45;6606:1;6601:2;6596;6589:5;6585:14;6581:23;6574:34;6627:5;6617:15;;;;;6651:37;6684:2;6673:9;6669:18;6651:37;:::i;:::-;6641:47;;5879:815;;;;;:::o;6881:118::-;6967:5;6960:13;6953:21;6946:5;6943:32;6933:60;;6989:1;6986;6979:12;7004:241;7060:6;7113:2;7101:9;7092:7;7088:23;7084:32;7081:52;;;7129:1;7126;7119:12;7081:52;7168:9;7155:23;7187:28;7209:5;7187:28;:::i;7250:258::-;7322:1;7332:113;7346:6;7343:1;7340:13;7332:113;;;7422:11;;;7416:18;7403:11;;;7396:39;7368:2;7361:10;7332:113;;;7463:6;7460:1;7457:13;7454:48;;;-1:-1:-1;;7498:1:18;7480:16;;7473:27;7250:258::o;7513:257::-;7554:3;7592:5;7586:12;7619:6;7614:3;7607:19;7635:63;7691:6;7684:4;7679:3;7675:14;7668:4;7661:5;7657:16;7635:63;:::i;:::-;7752:2;7731:15;-1:-1:-1;;7727:29:18;7718:39;;;;7759:4;7714:50;;7513:257;-1:-1:-1;;7513:257:18:o;7775:217::-;7922:2;7911:9;7904:21;7885:4;7942:44;7982:2;7971:9;7967:18;7959:6;7942:44;:::i;7997:814::-;8133:6;8141;8149;8157;8165;8173;8226:3;8214:9;8205:7;8201:23;8197:33;8194:53;;;8243:1;8240;8233:12;8194:53;8282:9;8269:23;8301:31;8326:5;8301:31;:::i;:::-;8351:5;-1:-1:-1;8403:2:18;8388:18;;8375:32;;-1:-1:-1;8454:2:18;8439:18;;8426:32;;-1:-1:-1;8477:66:18;8535:7;8530:2;8515:18;;8477:66;:::i;:::-;8467:76;-1:-1:-1;8594:3:18;8579:19;;8566:33;-1:-1:-1;;;;;8611:30:18;;8608:50;;;8654:1;8651;8644:12;8608:50;8693:58;8743:7;8734:6;8723:9;8719:22;8693:58;:::i;8816:256::-;8882:6;8890;8943:2;8931:9;8922:7;8918:23;8914:32;8911:52;;;8959:1;8956;8949:12;8911:52;8982:28;9000:9;8982:28;:::i;:::-;8972:38;;9029:37;9062:2;9051:9;9047:18;9029:37;:::i;:::-;9019:47;;8816:256;;;;;:::o;9077:388::-;9145:6;9153;9206:2;9194:9;9185:7;9181:23;9177:32;9174:52;;;9222:1;9219;9212:12;9174:52;9261:9;9248:23;9280:31;9305:5;9280:31;:::i;:::-;9330:5;-1:-1:-1;9387:2:18;9372:18;;9359:32;9400:33;9359:32;9400:33;:::i;:::-;9452:7;9442:17;;;9077:388;;;;;:::o;9470:460::-;9546:6;9554;9562;9615:2;9603:9;9594:7;9590:23;9586:32;9583:52;;;9631:1;9628;9621:12;9583:52;9670:9;9657:23;9689:31;9714:5;9689:31;:::i;:::-;9739:5;-1:-1:-1;9796:2:18;9781:18;;9768:32;9809:33;9768:32;9809:33;:::i;:::-;9861:7;-1:-1:-1;9887:37:18;9920:2;9905:18;;9887:37;:::i;10359:679::-;10486:6;10494;10502;10510;10518;10571:3;10559:9;10550:7;10546:23;10542:33;10539:53;;;10588:1;10585;10578:12;10539:53;10624:9;10611:23;10601:33;;10681:2;10670:9;10666:18;10653:32;10643:42;;10704:66;10762:7;10757:2;10746:9;10742:18;10704:66;:::i;:::-;10694:76;-1:-1:-1;10821:3:18;10806:19;;10793:33;-1:-1:-1;;;;;10838:30:18;;10835:50;;;10881:1;10878;10871:12;10835:50;10920:58;10970:7;10961:6;10950:9;10946:22;10920:58;:::i;:::-;10359:679;;;;-1:-1:-1;10359:679:18;;-1:-1:-1;10997:8:18;;10894:84;10359:679;-1:-1:-1;;;10359:679:18:o;11043:382::-;11108:6;11116;11169:2;11157:9;11148:7;11144:23;11140:32;11137:52;;;11185:1;11182;11175:12;11137:52;11224:9;11211:23;11243:31;11268:5;11243:31;:::i;:::-;11293:5;-1:-1:-1;11350:2:18;11335:18;;11322:32;11363:30;11322:32;11363:30;:::i;11430:622::-;11525:6;11533;11541;11549;11557;11610:3;11598:9;11589:7;11585:23;11581:33;11578:53;;;11627:1;11624;11617:12;11578:53;11650:28;11668:9;11650:28;:::i;:::-;11640:38;;11697:37;11730:2;11719:9;11715:18;11697:37;:::i;:::-;11687:47;-1:-1:-1;11781:2:18;11766:18;;11753:32;;-1:-1:-1;11836:2:18;11821:18;;11808:32;-1:-1:-1;;;;;11852:30:18;;11849:50;;;11895:1;11892;11885:12;12057:324;12132:6;12140;12148;12201:2;12189:9;12180:7;12176:23;12172:32;12169:52;;;12217:1;12214;12207:12;12169:52;12240:28;12258:9;12240:28;:::i;:::-;12230:38;;12287:37;12320:2;12309:9;12305:18;12287:37;:::i;:::-;12277:47;;12371:2;12360:9;12356:18;12343:32;12333:42;;12057:324;;;;;:::o;12591:460::-;12675:6;12683;12691;12699;12752:3;12740:9;12731:7;12727:23;12723:33;12720:53;;;12769:1;12766;12759:12;12720:53;12792:28;12810:9;12792:28;:::i;:::-;12782:38;;12839:37;12872:2;12861:9;12857:18;12839:37;:::i;:::-;12829:47;;12926:2;12915:9;12911:18;12898:32;12939:31;12964:5;12939:31;:::i;:::-;12591:460;;;;-1:-1:-1;12989:5:18;;13041:2;13026:18;13013:32;;-1:-1:-1;;12591:460:18:o;13774:380::-;13853:1;13849:12;;;;13896;;;13917:61;;13971:4;13963:6;13959:17;13949:27;;13917:61;14024:2;14016:6;14013:14;13993:18;13990:38;13987:161;;14070:10;14065:3;14061:20;14058:1;14051:31;14105:4;14102:1;14095:15;14133:4;14130:1;14123:15;14159:271;14342:6;14334;14329:3;14316:33;14298:3;14368:16;;14393:13;;;14368:16;14159:271;-1:-1:-1;14159:271:18:o;14842:398::-;15044:2;15026:21;;;15083:2;15063:18;;;15056:30;15122:34;15117:2;15102:18;;15095:62;-1:-1:-1;;;15188:2:18;15173:18;;15166:32;15230:3;15215:19;;14842:398::o;16068:127::-;16129:10;16124:3;16120:20;16117:1;16110:31;16160:4;16157:1;16150:15;16184:4;16181:1;16174:15;16200:195;16238:4;16275;16272:1;16268:12;16307:4;16304:1;16300:12;16332:3;16327;16324:12;16321:38;;;16339:18;;:::i;:::-;16376:13;;;16200:195;-1:-1:-1;;;16200:195:18:o;16400:422::-;16489:1;16532:5;16489:1;16546:270;16567:7;16557:8;16554:21;16546:270;;;16626:4;16622:1;16618:6;16614:17;16608:4;16605:27;16602:53;;;16635:18;;:::i;:::-;16685:7;16675:8;16671:22;16668:55;;;16705:16;;;;16668:55;16784:22;;;;16744:15;;;;16546:270;;;16550:3;16400:422;;;;;:::o;16827:806::-;16876:5;16906:8;16896:80;;-1:-1:-1;16947:1:18;16961:5;;16896:80;16995:4;16985:76;;-1:-1:-1;17032:1:18;17046:5;;16985:76;17077:4;17095:1;17090:59;;;;17163:1;17158:130;;;;17070:218;;17090:59;17120:1;17111:10;;17134:5;;;17158:130;17195:3;17185:8;17182:17;17179:43;;;17202:18;;:::i;:::-;-1:-1:-1;;17258:1:18;17244:16;;17273:5;;17070:218;;17372:2;17362:8;17359:16;17353:3;17347:4;17344:13;17340:36;17334:2;17324:8;17321:16;17316:2;17310:4;17307:12;17303:35;17300:77;17297:159;;;-1:-1:-1;17409:19:18;;;17441:5;;17297:159;17488:34;17513:8;17507:4;17488:34;:::i;:::-;17558:6;17554:1;17550:6;17546:19;17537:7;17534:32;17531:58;;;17569:18;;:::i;:::-;17607:20;;16827:806;-1:-1:-1;;;16827:806:18:o;17638:140::-;17696:5;17725:47;17766:4;17756:8;17752:19;17746:4;17725:47;:::i;17783:351::-;17985:2;17967:21;;;18024:2;18004:18;;;17997:30;-1:-1:-1;;;18058:2:18;18043:18;;18036:57;18125:2;18110:18;;17783:351::o;18139:274::-;-1:-1:-1;;;;;18331:32:18;;;;18313:51;;18395:2;18380:18;;18373:34;18301:2;18286:18;;18139:274::o;18418:266::-;18506:6;18501:3;18494:19;18558:6;18551:5;18544:4;18539:3;18535:14;18522:43;-1:-1:-1;18610:1:18;18585:16;;;18603:4;18581:27;;;18574:38;;;;18666:2;18645:15;;;-1:-1:-1;;18641:29:18;18632:39;;;18628:50;;18418:266::o;18689:326::-;18884:6;18876;18872:19;18861:9;18854:38;18928:2;18923;18912:9;18908:18;18901:30;18835:4;18948:61;19005:2;18994:9;18990:18;18982:6;18974;18948:61;:::i;19020:667::-;19311:6;19299:19;;19281:38;;-1:-1:-1;;;;;19355:32:18;;19350:2;19335:18;;19328:60;19375:3;19419:2;19404:18;;19397:31;;;-1:-1:-1;;19451:45:18;;19476:19;;19468:6;19451:45;:::i;:::-;19546:6;19539:14;19532:22;19527:2;19516:9;19512:18;19505:50;19604:9;19596:6;19592:22;19586:3;19575:9;19571:19;19564:51;19632:49;19674:6;19666;19658;19632:49;:::i;:::-;19624:57;19020:667;-1:-1:-1;;;;;;;;;19020:667:18:o;19692:245::-;19771:6;19779;19832:2;19820:9;19811:7;19807:23;19803:32;19800:52;;;19848:1;19845;19838:12;19800:52;-1:-1:-1;;19871:16:18;;19927:2;19912:18;;;19906:25;19871:16;;19906:25;;-1:-1:-1;19692:245:18:o;20349:343::-;20551:2;20533:21;;;20590:2;20570:18;;;20563:30;-1:-1:-1;;;20624:2:18;20609:18;;20602:49;20683:2;20668:18;;20349:343::o;20697:399::-;20899:2;20881:21;;;20938:2;20918:18;;;20911:30;20977:34;20972:2;20957:18;;20950:62;-1:-1:-1;;;21043:2:18;21028:18;;21021:33;21086:3;21071:19;;20697:399::o;21514:236::-;21553:3;-1:-1:-1;;;;;21619:10:18;;;21649;;;21679:12;;;21671:21;;21668:47;;;21695:18;;:::i;:::-;21731:13;;21514:236;-1:-1:-1;;;;21514:236:18:o;22162:229::-;22201:4;-1:-1:-1;;;;;22298:10:18;;;;22268;;22320:12;;;22317:38;;;22335:18;;:::i;:::-;22372:13;;22162:229;-1:-1:-1;;;22162:229:18:o;22754:125::-;22794:4;22822:1;22819;22816:8;22813:34;;;22827:18;;:::i;:::-;-1:-1:-1;22864:9:18;;22754:125::o;22884:184::-;22954:6;23007:2;22995:9;22986:7;22982:23;22978:32;22975:52;;;23023:1;23020;23013:12;22975:52;-1:-1:-1;23046:16:18;;22884:184;-1:-1:-1;22884:184:18:o;23073:352::-;23284:6;23276;23271:3;23258:33;23379:2;23350:15;;;;-1:-1:-1;;;;;;23346:45:18;23310:16;;23335:57;;;23416:2;23408:11;;23073:352;-1:-1:-1;23073:352:18:o;23555:544::-;23656:2;23651:3;23648:11;23645:448;;;23692:1;23717:5;23713:2;23706:17;23762:4;23758:2;23748:19;23832:2;23820:10;23816:19;23813:1;23809:27;23803:4;23799:38;23868:4;23856:10;23853:20;23850:47;;;-1:-1:-1;23891:4:18;23850:47;23946:2;23941:3;23937:12;23934:1;23930:20;23924:4;23920:31;23910:41;;24001:82;24019:2;24012:5;24009:13;24001:82;;;24064:17;;;24045:1;24034:13;24001:82;;24104:166;-1:-1:-1;;24232:1:18;24228:11;;;24224:24;24220:29;24210:40;24256:1;24252:11;;;;24207:57;;24104:166::o;24275:1348::-;24393:10;;-1:-1:-1;;;;;24415:30:18;;24412:56;;;24448:18;;:::i;:::-;24477:96;24566:6;24526:38;24558:4;24552:11;24526:38;:::i;:::-;24520:4;24477:96;:::i;:::-;24628:4;;24692:2;24681:14;;24709:1;24704:662;;;;25410:1;25427:6;25424:89;;;-1:-1:-1;25479:19:18;;;25473:26;25424:89;25539:67;25599:6;25592:5;25539:67;:::i;:::-;25533:4;25526:81;;24674:943;;24704:662;23502:1;23495:14;;;23539:4;23526:18;;-1:-1:-1;;24740:20:18;;;24857:236;24871:7;24868:1;24865:14;24857:236;;;24960:19;;;24954:26;24939:42;;25052:27;;;;25020:1;25008:14;;;;24887:19;;24857:236;;;24861:3;25121:6;25112:7;25109:19;25106:201;;;25182:19;;;25176:26;-1:-1:-1;;25265:1:18;25261:14;;;25277:3;25257:24;25253:37;25249:42;25234:58;25219:74;;25106:201;-1:-1:-1;;;;;25353:1:18;25337:14;;;25333:22;25320:36;;-1:-1:-1;24275:1348:18:o;26730:498::-;26930:4;26959:6;27004:2;26996:6;26992:15;26981:9;26974:34;27056:2;27048:6;27044:15;27039:2;27028:9;27024:18;27017:43;;27096:6;27091:2;27080:9;27076:18;27069:34;27139:3;27134:2;27123:9;27119:18;27112:31;27160:62;27217:3;27206:9;27202:19;27194:6;27186;27160:62;:::i;28039:493::-;28288:6;28280;28276:19;28265:9;28258:38;28332:3;28327:2;28316:9;28312:18;28305:31;28239:4;28353:62;28410:3;28399:9;28395:19;28387:6;28379;28353:62;:::i;:::-;-1:-1:-1;;;;;28451:31:18;;;;28471:2;28431:18;;28424:59;-1:-1:-1;28514:2:18;28499:18;28492:34;28345:70;28039:493;-1:-1:-1;;;28039:493:18:o;28537:128::-;28577:3;28608:1;28604:6;28601:1;28598:13;28595:39;;;28614:18;;:::i;:::-;-1:-1:-1;28650:9:18;;28537:128::o;29296:1202::-;-1:-1:-1;;;;;29410:27:18;;29407:53;;;29440:18;;:::i;:::-;29469:93;29558:3;29518:38;29550:4;29544:11;29518:38;:::i;:::-;29512:4;29469:93;:::i;:::-;29588:1;29613:2;29608:3;29605:11;29630:1;29625:615;;;;30284:1;30301:3;30298:93;;;-1:-1:-1;30357:19:18;;;30344:33;30298:93;30417:64;30477:3;30470:5;30417:64;:::i;:::-;30411:4;30404:78;;29598:894;;29625:615;23502:1;23495:14;;;23539:4;23526:18;;-1:-1:-1;;29661:17:18;;;29761:9;29783:229;29797:7;29794:1;29791:14;29783:229;;;29886:19;;;29873:33;29858:49;;29993:4;29978:20;;;;29946:1;29934:14;;;;29813:12;29783:229;;;29787:3;30040;30031:7;30028:16;30025:159;;;30164:1;30160:6;30154:3;30148;30145:1;30141:11;30137:21;30133:34;30129:39;30116:9;30111:3;30107:19;30094:33;30090:79;30082:6;30075:95;30025:159;;;30227:1;30221:3;30218:1;30214:11;30210:19;30204:4;30197:33;29598:894;;29296:1202;;;:::o;31371:634::-;31450:6;31503:2;31491:9;31482:7;31478:23;31474:32;31471:52;;;31519:1;31516;31509:12;31471:52;31546:16;;-1:-1:-1;;;;;31574:30:18;;31571:50;;;31617:1;31614;31607:12;31571:50;31640:22;;31693:4;31685:13;;31681:27;-1:-1:-1;31671:55:18;;31722:1;31719;31712:12;31671:55;31751:2;31745:9;31776:48;31792:31;31820:2;31792:31;:::i;31776:48::-;31847:2;31840:5;31833:17;31887:7;31882:2;31877;31873;31869:11;31865:20;31862:33;31859:53;;;31908:1;31905;31898:12;31859:53;31921:54;31972:2;31967;31960:5;31956:14;31951:2;31947;31943:11;31921:54;:::i;:::-;31994:5;31371:634;-1:-1:-1;;;;;31371:634:18:o;32371:555::-;32628:6;32620;32616:19;32605:9;32598:38;32672:3;32667:2;32656:9;32652:18;32645:31;32579:4;32699:45;32739:3;32728:9;32724:19;32716:6;32699:45;:::i;:::-;-1:-1:-1;;;;;32780:31:18;;32800:2;32760:18;;32753:59;32848:22;;;32843:2;32828:18;;32821:50;32888:32;32852:6;32905;32888:32;:::i;32931:274::-;33060:3;33098:6;33092:13;33114:53;33160:6;33155:3;33148:4;33140:6;33136:17;33114:53;:::i;:::-;33183:16;;;;;32931:274;-1:-1:-1;;32931:274:18:o;33620:273::-;33688:6;33741:2;33729:9;33720:7;33716:23;33712:32;33709:52;;;33757:1;33754;33747:12;33709:52;33789:9;33783:16;33839:4;33832:5;33828:16;33821:5;33818:27;33808:55;;33859:1;33856;33849:12;33898:127;33959:10;33954:3;33950:20;33947:1;33940:31;33990:4;33987:1;33980:15;34014:4;34011:1;34004:15;36056:217;36096:1;36122;36112:132;;36166:10;36161:3;36157:20;36154:1;36147:31;36201:4;36198:1;36191:15;36229:4;36226:1;36219:15;36112:132;-1:-1:-1;36258:9:18;;36056:217::o;36897:168::-;36937:7;37003:1;36999;36995:6;36991:14;36988:1;36985:21;36980:1;36973:9;36966:17;36962:45;36959:71;;;37010:18;;:::i;:::-;-1:-1:-1;37050:9:18;;36897:168::o;37759:716::-;38062:6;38054;38050:19;38039:9;38032:38;38106:3;38101:2;38090:9;38086:18;38079:31;38013:4;38133:45;38173:3;38162:9;38158:19;38150:6;38133:45;:::i;:::-;-1:-1:-1;;;;;38214:31:18;;38234:2;38194:18;;38187:59;38282:22;;;38277:2;38262:18;;38255:50;38328:32;38286:6;38345;38328:32;:::i;:::-;38314:46;;38409:9;38401:6;38397:22;38391:3;38380:9;38376:19;38369:51;38437:32;38462:6;38454;38437:32;:::i;:::-;38429:40;37759:716;-1:-1:-1;;;;;;;;37759:716:18:o;38480:245::-;38547:6;38600:2;38588:9;38579:7;38575:23;38571:32;38568:52;;;38616:1;38613;38606:12;38568:52;38648:9;38642:16;38667:28;38689:5;38667:28;:::i;40256:127::-;40317:10;40312:3;40308:20;40305:1;40298:31;40348:4;40345:1;40338:15;40372:4;40369:1;40362:15;41546:837;41895:6;41887;41883:19;41872:9;41865:38;41939:3;41934:2;41923:9;41919:18;41912:31;41846:4;41966:45;42006:3;41995:9;41991:19;41983:6;41966:45;:::i;:::-;42059:9;42051:6;42047:22;42042:2;42031:9;42027:18;42020:50;42093:32;42118:6;42110;42093:32;:::i;:::-;-1:-1:-1;;;;;42199:15:18;;;42194:2;42179:18;;42172:43;42252:15;;42246:3;42231:19;;42224:44;42305:22;;;42152:3;42284:19;;42277:51;42079:46;-1:-1:-1;42345:32:18;42079:46;42362:6;42345:32;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"3557800","executionCost":"infinite","totalCost":"infinite"},"external":{"BP_DENOMINATOR()":"910","DEFAULT_PAYLOAD_SIZE_LIMIT()":"998","SHARED_DECIMALS()":"842","accruedFeeLD(address)":"infinite","aptosChainId()":"2491","bridgeFeeBP()":"2416","emergencyWithdrawEnabled()":"2613","emergencyWithdrawTime()":"3230","enableEmergencyWithdraw(bool)":"51223","failedMessages(uint16,bytes,uint64)":"infinite","forceResumeReceive(uint16,bytes)":"infinite","getConfig(uint16,uint16,address,uint256)":"infinite","getTrustedRemoteAddress(uint16)":"infinite","globalPaused()":"2679","isTrustedRemote(uint16,bytes)":"infinite","ld2sdRates(address)":"3056","lzEndpoint()":"infinite","lzReceive(uint16,bytes,uint64,bytes)":"infinite","minDstGasLookup(uint16,uint16)":"infinite","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"infinite","owner()":"2898","pausedTokens(address)":"3607","payloadSizeLimitLookup(uint16)":"2698","precrime()":"2955","quoteForSend((address,address),bytes)":"infinite","registerToken(address)":"infinite","renounceOwnership()":"infinite","retryMessage(uint16,bytes,uint64,bytes)":"infinite","sendETHToAptos(bytes32,uint256,(address,address),bytes)":"infinite","sendToAptos(address,bytes32,uint256,(address,address),bytes)":"infinite","setAptosChainId(uint16)":"28632","setBridgeFeeBP(uint256)":"25603","setConfig(uint16,uint16,uint256,bytes)":"infinite","setGlobalPause(bool)":"28254","setMinDstGas(uint16,uint16,uint256)":"infinite","setPayloadSizeLimit(uint16,uint256)":"24767","setPrecrime(address)":"28652","setReceiveVersion(uint16)":"infinite","setSendVersion(uint16)":"infinite","setTokenPause(address,bool)":"infinite","setTrustedRemote(uint16,bytes)":"infinite","setTrustedRemoteAddress(uint16,bytes)":"infinite","setUseCustomAdapterParams(bool)":"28848","setWETH(address)":"28225","supportedTokens(address)":"2925","transferOwnership(address)":"infinite","trustedRemoteLookup(uint16)":"infinite","tvlSDs(address)":"3546","useCustomAdapterParams()":"3383","weth()":"2581","withdrawEmergency(address,address)":"infinite","withdrawFee(address,address,uint256)":"infinite","withdrawTVL(address,address,uint64)":"infinite"},"internal":{"_LDtoSD(address,uint256)":"infinite","_SDtoLD(address,uint64)":"2332","_checkAdapterParams(bytes calldata)":"infinite","_decodeReceivePayload(bytes memory)":"infinite","_encodeSendPayload(address,bytes32,uint64)":"infinite","_lockTokenFrom(address,address,uint256)":"infinite","_nonblockingLzReceive(uint16,bytes memory,uint64,bytes memory)":"infinite","_payFee(uint256)":"2373","_redeemETHTo(address,address payable,uint256)":"infinite","_removeDust(address,uint256)":"infinite","_sendToken(address,bytes32,uint64,struct LzLib.CallParams calldata,bytes calldata,uint256)":"infinite","_tokenDecimals(address)":"infinite"}},"methodIdentifiers":{"BP_DENOMINATOR()":"abe685cd","DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","SHARED_DECIMALS()":"97167964","accruedFeeLD(address)":"a2f27ae0","aptosChainId()":"2db88ecf","bridgeFeeBP()":"25a9f792","emergencyWithdrawEnabled()":"5747e69f","emergencyWithdrawTime()":"de9b9488","enableEmergencyWithdraw(bool)":"d71e409e","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","globalPaused()":"61a552dc","isTrustedRemote(uint16,bytes)":"3d8b38f6","ld2sdRates(address)":"92cc13c5","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","pausedTokens(address)":"ee7a4596","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","quoteForSend((address,address),bytes)":"468b9668","registerToken(address)":"09824a80","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","sendETHToAptos(bytes32,uint256,(address,address),bytes)":"ca23bb4c","sendToAptos(address,bytes32,uint256,(address,address),bytes)":"76a9099a","setAptosChainId(uint16)":"c21f5114","setBridgeFeeBP(uint256)":"000d5900","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setGlobalPause(bool)":"69a6b3db","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTokenPause(address,bool)":"cb8d3b1f","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","setUseCustomAdapterParams(bool)":"eab45d9c","setWETH(address)":"5b769f3c","supportedTokens(address)":"68c4ac26","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788","tvlSDs(address)":"e3179c3e","useCustomAdapterParams()":"ed629c5c","weth()":"3fc8cef3","withdrawEmergency(address,address)":"93f26a4c","withdrawFee(address,address,uint256)":"1095b6d7","withdrawTVL(address,address,uint64)":"95e2c168"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroEndpoint\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_aptosChainId\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"EnableEmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Receive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RegisterToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Send\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"aptosChainId\",\"type\":\"uint16\"}],\"name\":\"SetAptosChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bridgeFeeBP\",\"type\":\"uint256\"}],\"name\":\"SetBridgeBP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetGlobalPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"localChainId\",\"type\":\"uint16\"}],\"name\":\"SetLocalChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetTokenPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"SetUseCustomAdapterParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"name\":\"SetWETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawTVL\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BP_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHARED_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"accruedFeeLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aptosChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeFeeBP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"enableEmergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ld2sdRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"quoteForSend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_toAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendETHToAptos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_toAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendToAptos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_aptosChainId\",\"type\":\"uint16\"}],\"name\":\"setAptosChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bridgeFeeBP\",\"type\":\"uint256\"}],\"name\":\"setBridgeFeeBP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setGlobalPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setTokenPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"setUseCustomAdapterParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"name\":\"setWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tvlSDs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useCustomAdapterParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"}],\"name\":\"withdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_amountSD\",\"type\":\"uint64\"}],\"name\":\"withdrawTVL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenBridge.sol\":\"TokenBridge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\n            gasleft(),\\n            150,\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\n        );\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload,\\n        bytes memory _reason\\n    ) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function retryMessage(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x612ff1f2a158b7e64e873885b5ff08afa348998fd9005f384d555d643ba7968d\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/TokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity 0.8.15;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\\\";\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\n\\r\\nimport \\\"./interfaces/IWETH.sol\\\";\\r\\nimport \\\"./interfaces/ITokenBridge.sol\\\";\\r\\n\\r\\ncontract TokenBridge is ITokenBridge, NonblockingLzApp, ReentrancyGuard {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    uint public constant BP_DENOMINATOR = 10000;\\r\\n    uint8 public constant SHARED_DECIMALS = 6;\\r\\n\\r\\n    uint16 public aptosChainId;\\r\\n\\r\\n    uint public bridgeFeeBP;\\r\\n\\r\\n    mapping(address => uint64) public tvlSDs; // token address => tvl\\r\\n    mapping(address => bool) public supportedTokens;\\r\\n    mapping(address => bool) public pausedTokens; // token address => paused\\r\\n    mapping(address => uint) public ld2sdRates; // token address => rate\\r\\n    address public weth;\\r\\n\\r\\n    bool public useCustomAdapterParams;\\r\\n    bool public globalPaused;\\r\\n    bool public emergencyWithdrawEnabled;\\r\\n    uint public emergencyWithdrawTime;\\r\\n\\r\\n    modifier whenNotPaused(address _token) {\\r\\n        require(!globalPaused && !pausedTokens[_token], \\\"TokenBridge: paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier emergencyWithdrawUnlocked() {\\r\\n        require(emergencyWithdrawEnabled && block.timestamp >= emergencyWithdrawTime, \\\"TokenBridge: emergency withdraw locked\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        address _layerZeroEndpoint,\\r\\n        uint16 _aptosChainId\\r\\n    ) NonblockingLzApp(_layerZeroEndpoint) {\\r\\n        aptosChainId = _aptosChainId;\\r\\n    }\\r\\n\\r\\n    function sendToAptos(\\r\\n        address _token,\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable override whenNotPaused(_token) nonReentrant {\\r\\n        require(supportedTokens[_token], \\\"TokenBridge: token is not supported\\\");\\r\\n\\r\\n        // lock token\\r\\n        _amountLD = _removeDust(_token, _amountLD);\\r\\n        _amountLD = _lockTokenFrom(_token, msg.sender, _amountLD);\\r\\n\\r\\n        // add tvl\\r\\n        uint64 amountSD = _LDtoSD(_token, _amountLD);\\r\\n        require(amountSD > 0, \\\"TokenBridge: amountSD must be greater than 0\\\");\\r\\n        tvlSDs[_token] += amountSD;\\r\\n\\r\\n        // send to aptos\\r\\n        _sendToken(_token, _toAddress, amountSD, _callParams, _adapterParams, msg.value);\\r\\n        emit Send(_token, msg.sender, _toAddress, _amountLD);\\r\\n    }\\r\\n\\r\\n    function sendETHToAptos(\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable override whenNotPaused(weth) nonReentrant {\\r\\n        address _weth = weth; // save gas\\r\\n        require(_weth != address(0) && supportedTokens[_weth], \\\"TokenBridge: ETH is not supported\\\");\\r\\n        _amountLD = _removeDust(_weth, _amountLD);\\r\\n        require(_amountLD > 0, \\\"TokenBridge: amount must be greater than 0\\\");\\r\\n        require(msg.value >= _amountLD, \\\"TokenBridge: fee not enough\\\");\\r\\n\\r\\n        // wrap eth and add tvl\\r\\n        IWETH(_weth).deposit{value: _amountLD}();\\r\\n        uint64 amountSD = _LDtoSD(_weth, _amountLD);\\r\\n        tvlSDs[_weth] += amountSD;\\r\\n\\r\\n        // send to aptos\\r\\n        _sendToken(_weth, _toAddress, amountSD, _callParams, _adapterParams, msg.value - _amountLD);\\r\\n        emit Send(address(0), msg.sender, _toAddress, _amountLD);\\r\\n    }\\r\\n\\r\\n    function quoteForSend(LzLib.CallParams calldata _callParams, bytes calldata _adapterParams)\\r\\n        external\\r\\n        view\\r\\n        returns (uint nativeFee, uint zroFee)\\r\\n    {\\r\\n        _checkAdapterParams(_adapterParams);\\r\\n        bytes memory payload = _encodeSendPayload(address(0), bytes32(0), 0);\\r\\n        bool payInZRO = _callParams.zroPaymentAddress != address(0);\\r\\n        return\\r\\n            lzEndpoint.estimateFees(aptosChainId, address(this), payload, payInZRO, _adapterParams);\\r\\n    }\\r\\n\\r\\n    // ---------------------- owner functions ----------------------\\r\\n    function registerToken(address _token) external onlyOwner {\\r\\n        require(_token != address(0), \\\"TokenBridge: invalid token address\\\");\\r\\n        require(!supportedTokens[_token], \\\"TokenBridge: token already registered\\\");\\r\\n\\r\\n        uint8 localDecimals = _tokenDecimals(_token);\\r\\n        require(\\r\\n            localDecimals >= SHARED_DECIMALS,\\r\\n            \\\"TokenBridge: decimals must be >= SHARED_DECIMALS\\\"\\r\\n        );\\r\\n\\r\\n        supportedTokens[_token] = true;\\r\\n        ld2sdRates[_token] = 10**(localDecimals - SHARED_DECIMALS);\\r\\n        emit RegisterToken(_token);\\r\\n    }\\r\\n\\r\\n    function setBridgeFeeBP(uint _bridgeFeeBP) external onlyOwner {\\r\\n        require(_bridgeFeeBP <= BP_DENOMINATOR, \\\"TokenBridge: bridge fee > 100%\\\");\\r\\n        bridgeFeeBP = _bridgeFeeBP;\\r\\n        emit SetBridgeBP(_bridgeFeeBP);\\r\\n    }\\r\\n\\r\\n    function setWETH(address _weth) external onlyOwner {\\r\\n        require(_weth != address(0), \\\"TokenBridge: invalid token address\\\");\\r\\n        weth = _weth;\\r\\n        emit SetWETH(_weth);\\r\\n    }\\r\\n\\r\\n    function setGlobalPause(bool _paused) external onlyOwner {\\r\\n        globalPaused = _paused;\\r\\n        emit SetGlobalPause(_paused);\\r\\n    }\\r\\n\\r\\n    function setTokenPause(address _token, bool _paused) external onlyOwner {\\r\\n        pausedTokens[_token] = _paused;\\r\\n        emit SetTokenPause(_token, _paused);\\r\\n    }\\r\\n\\r\\n    function setAptosChainId(uint16 _aptosChainId) external onlyOwner {\\r\\n        aptosChainId = _aptosChainId;\\r\\n        emit SetAptosChainId(_aptosChainId);\\r\\n    }\\r\\n\\r\\n    function setUseCustomAdapterParams(bool _useCustomAdapterParams) external onlyOwner {\\r\\n        useCustomAdapterParams = _useCustomAdapterParams;\\r\\n        emit SetUseCustomAdapterParams(_useCustomAdapterParams);\\r\\n    }\\r\\n\\r\\n    function withdrawFee(\\r\\n        address _token,\\r\\n        address _to,\\r\\n        uint _amountLD\\r\\n    ) public onlyOwner {\\r\\n        uint feeLD = accruedFeeLD(_token);\\r\\n        require(_amountLD <= feeLD, \\\"TokenBridge: fee not enough\\\");\\r\\n\\r\\n        IERC20(_token).safeTransfer(_to, _amountLD);\\r\\n        emit WithdrawFee(_token, _to, _amountLD);\\r\\n    }\\r\\n\\r\\n    function withdrawTVL(\\r\\n        address _token,\\r\\n        address _to,\\r\\n        uint64 _amountSD\\r\\n    ) public onlyOwner emergencyWithdrawUnlocked {\\r\\n        tvlSDs[_token] -= _amountSD;\\r\\n\\r\\n        uint amountLD = _SDtoLD(_token, _amountSD);\\r\\n        IERC20(_token).safeTransfer(_to, amountLD);\\r\\n        emit WithdrawTVL(_token, _to, amountLD);\\r\\n    }\\r\\n\\r\\n    function withdrawEmergency(address _token, address _to) external onlyOwner {\\r\\n        // modifier redundant for extra safety\\r\\n        withdrawFee(_token, _to, accruedFeeLD(_token));\\r\\n        withdrawTVL(_token, _to, tvlSDs[_token]);\\r\\n    }\\r\\n\\r\\n    function enableEmergencyWithdraw(bool enabled) external onlyOwner {\\r\\n        emergencyWithdrawEnabled = enabled;\\r\\n        emergencyWithdrawTime = enabled ? block.timestamp + 1 weeks : 0; // overrides existing lock time\\r\\n        emit EnableEmergencyWithdraw(enabled, emergencyWithdrawTime);\\r\\n    }\\r\\n\\r\\n    // override the renounce ownership inherited by zeppelin ownable\\r\\n    function renounceOwnership() public override onlyOwner {}\\r\\n\\r\\n    // receive ETH from WETH\\r\\n    receive() external payable {}\\r\\n\\r\\n    function accruedFeeLD(address _token) public view returns (uint) {\\r\\n        uint tvlLD = _SDtoLD(_token, tvlSDs[_token]);\\r\\n        return IERC20(_token).balanceOf(address(this)) - tvlLD;\\r\\n    }\\r\\n\\r\\n    // ---------------------- internal functions ----------------------\\r\\n    function _nonblockingLzReceive(\\r\\n        uint16 _srcChainId,\\r\\n        bytes memory,\\r\\n        uint64,\\r\\n        bytes memory _payload\\r\\n    ) internal override {\\r\\n        require(_srcChainId == aptosChainId, \\\"TokenBridge: invalid source chain id\\\");\\r\\n\\r\\n        (address token, address to, uint64 amountSD, bool unwrap) = _decodeReceivePayload(_payload);\\r\\n        require(!globalPaused && !pausedTokens[token], \\\"TokenBridge: paused\\\");\\r\\n        require(supportedTokens[token], \\\"TokenBridge: token is not supported\\\");\\r\\n\\r\\n        // sub tvl\\r\\n        uint64 tvlSD = tvlSDs[token];\\r\\n        require(tvlSD >= amountSD, \\\"TokenBridge: insufficient liquidity\\\");\\r\\n        tvlSDs[token] = tvlSD - amountSD;\\r\\n\\r\\n        // pay fee\\r\\n        uint amountLD = _SDtoLD(token, amountSD);\\r\\n        (amountLD, ) = bridgeFeeBP > 0 ? _payFee(amountLD) : (amountLD, 0);\\r\\n\\r\\n        // redeem token to receiver\\r\\n        if (token == weth && unwrap) {\\r\\n            _redeemETHTo(weth, payable(to), amountLD);\\r\\n            emit Receive(address(0), to, amountLD);\\r\\n        } else {\\r\\n            to = to == address(0) ? address(0xdEaD) : to; // avoid failure in safeTransfer()\\r\\n            IERC20(token).safeTransfer(to, amountLD);\\r\\n            emit Receive(token, to, amountLD);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _redeemETHTo(\\r\\n        address _weth,\\r\\n        address payable _to,\\r\\n        uint _amountLD\\r\\n    ) internal {\\r\\n        IWETH(_weth).withdraw(_amountLD);\\r\\n        _to.transfer(_amountLD);\\r\\n    }\\r\\n\\r\\n    function _lockTokenFrom(\\r\\n        address _token,\\r\\n        address _from,\\r\\n        uint _amountLD\\r\\n    ) internal returns (uint) {\\r\\n        // support token with transfer fee\\r\\n        uint balanceBefore = IERC20(_token).balanceOf(address(this));\\r\\n        IERC20(_token).safeTransferFrom(_from, address(this), _amountLD);\\r\\n        uint balanceAfter = IERC20(_token).balanceOf(address(this));\\r\\n        return balanceAfter - balanceBefore;\\r\\n    }\\r\\n\\r\\n    function _tokenDecimals(address _token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = _token.staticcall(\\r\\n            abi.encodeWithSignature(\\\"decimals()\\\")\\r\\n        );\\r\\n        require(success, \\\"TokenBridge: failed to get token decimals\\\");\\r\\n        return abi.decode(data, (uint8));\\r\\n    }\\r\\n\\r\\n    function _payFee(uint _amountLD) internal view returns (uint amountAfterFee, uint fee) {\\r\\n        fee = (_amountLD * bridgeFeeBP) / BP_DENOMINATOR;\\r\\n        amountAfterFee = _amountLD - fee;\\r\\n    }\\r\\n\\r\\n    function _sendToken(\\r\\n        address _token,\\r\\n        bytes32 _toAddress,\\r\\n        uint64 _amountSD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams,\\r\\n        uint _fee\\r\\n    ) internal {\\r\\n        _checkAdapterParams(_adapterParams);\\r\\n        bytes memory payload = _encodeSendPayload(_token, _toAddress, _amountSD);\\r\\n        _lzSend(\\r\\n            aptosChainId,\\r\\n            payload,\\r\\n            _callParams.refundAddress,\\r\\n            _callParams.zroPaymentAddress,\\r\\n            _adapterParams,\\r\\n            _fee\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // send payload: packet type(1) + remote token(32) + receiver(32) + amount(8)\\r\\n    function _encodeSendPayload(\\r\\n        address _token,\\r\\n        bytes32 _toAddress,\\r\\n        uint64 _amountSD\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        bytes32 tokenBytes32 = LzLib.addressToBytes32(_token);\\r\\n        return\\r\\n            abi.encodePacked(uint8(PacketType.SEND_TO_APTOS), tokenBytes32, _toAddress, _amountSD);\\r\\n    }\\r\\n\\r\\n    // receive payload: packet type(1) + remote token(32) + receiver(32) + amount(8) + unwrap flag(1)\\r\\n    function _decodeReceivePayload(bytes memory _payload)\\r\\n        internal\\r\\n        pure\\r\\n        returns (\\r\\n            address token,\\r\\n            address to,\\r\\n            uint64 amountSD,\\r\\n            bool unwrap\\r\\n        )\\r\\n    {\\r\\n        require(_payload.length == 74, \\\"TokenBridge: invalid payload length\\\");\\r\\n        PacketType packetType = PacketType(uint8(_payload[0]));\\r\\n        require(packetType == PacketType.RECEIVE_FROM_APTOS, \\\"TokenBridge: unknown packet type\\\");\\r\\n        assembly {\\r\\n            token := mload(add(_payload, 33))\\r\\n            to := mload(add(_payload, 65))\\r\\n            amountSD := mload(add(_payload, 73))\\r\\n        }\\r\\n        unwrap = uint8(_payload[73]) == 1;\\r\\n    }\\r\\n\\r\\n    function _checkAdapterParams(bytes calldata _adapterParams) internal view {\\r\\n        if (useCustomAdapterParams) {\\r\\n            _checkGasLimit(aptosChainId, uint16(PacketType.SEND_TO_APTOS), _adapterParams, 0);\\r\\n        } else {\\r\\n            require(_adapterParams.length == 0, \\\"TokenBridge: _adapterParams must be empty.\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _SDtoLD(address _token, uint64 _amountSD) internal view returns (uint) {\\r\\n        return _amountSD * ld2sdRates[_token];\\r\\n    }\\r\\n\\r\\n    function _LDtoSD(address _token, uint _amountLD) internal view returns (uint64) {\\r\\n        uint amountSD = _amountLD / ld2sdRates[_token];\\r\\n        require(amountSD <= type(uint64).max, \\\"TokenBridge: amountSD overflow\\\");\\r\\n        return uint64(amountSD);\\r\\n    }\\r\\n\\r\\n    function _removeDust(address _token, uint _amountLD) internal view returns (uint) {\\r\\n        return _SDtoLD(_token, _LDtoSD(_token, _amountLD));\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x32159f2db92a4f6b5767ddc93535cbe423b533408e1af4eaf742e18d391620ae\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ITokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.6.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\n\\r\\ninterface ITokenBridge {\\r\\n    enum PacketType {\\r\\n        SEND_TO_APTOS,\\r\\n        RECEIVE_FROM_APTOS\\r\\n    }\\r\\n\\r\\n    function sendToAptos(\\r\\n        address _token,\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendETHToAptos(\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteForSend(LzLib.CallParams calldata _callParams, bytes calldata _adapterParams)\\r\\n        external\\r\\n        view\\r\\n        returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    event Send(address indexed token, address indexed from, bytes32 indexed to, uint amountLD);\\r\\n    event Receive(address indexed token, address indexed to, uint amountLD);\\r\\n    event RegisterToken(address token);\\r\\n    event SetBridgeBP(uint bridgeFeeBP);\\r\\n    event SetWETH(address weth);\\r\\n    event SetGlobalPause(bool paused);\\r\\n    event SetTokenPause(address token, bool paused);\\r\\n    event SetLocalChainId(uint16 localChainId);\\r\\n    event SetAptosChainId(uint16 aptosChainId);\\r\\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\\r\\n    event WithdrawFee(address indexed token, address to, uint amountLD);\\r\\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\\r\\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\\r\\n}\\r\\n\",\"keccak256\":\"0xf147f03f81fa28462ee5a457f7f7ce1b602f205aae1ac242b21fe4b3c7bc6269\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n    function withdraw(uint) external;\\r\\n\\r\\n    function approve(address to, uint value) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x35d711a3c1dcd8a5c7380c665516661094181754f0df97cbdfb38e1cff4440ea\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":997,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"},{"astId":1751,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"_status","offset":0,"slot":"6","type":"t_uint256"},{"astId":2673,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"aptosChainId","offset":0,"slot":"7","type":"t_uint16"},{"astId":2675,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"bridgeFeeBP","offset":0,"slot":"8","type":"t_uint256"},{"astId":2679,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"tvlSDs","offset":0,"slot":"9","type":"t_mapping(t_address,t_uint64)"},{"astId":2683,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"supportedTokens","offset":0,"slot":"10","type":"t_mapping(t_address,t_bool)"},{"astId":2687,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"pausedTokens","offset":0,"slot":"11","type":"t_mapping(t_address,t_bool)"},{"astId":2691,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"ld2sdRates","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint256)"},{"astId":2693,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"weth","offset":0,"slot":"13","type":"t_address"},{"astId":2695,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"useCustomAdapterParams","offset":20,"slot":"13","type":"t_bool"},{"astId":2697,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"globalPaused","offset":21,"slot":"13","type":"t_bool"},{"astId":2699,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"emergencyWithdrawEnabled","offset":22,"slot":"13","type":"t_bool"},{"astId":2701,"contract":"contracts/TokenBridge.sol:TokenBridge","label":"emergencyWithdrawTime","offset":0,"slot":"14","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_address,t_uint64)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ITokenBridge.sol":{"ITokenBridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"EnableEmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Receive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"RegisterToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"bytes32","name":"to","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Send","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"aptosChainId","type":"uint16"}],"name":"SetAptosChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bridgeFeeBP","type":"uint256"}],"name":"SetBridgeBP","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetGlobalPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"localChainId","type":"uint16"}],"name":"SetLocalChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetTokenPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useCustomAdapterParams","type":"bool"}],"name":"SetUseCustomAdapterParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"weth","type":"address"}],"name":"SetWETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawTVL","type":"event"},{"inputs":[{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"quoteForSend","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_toAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendETHToAptos","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"_toAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendToAptos","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"quoteForSend((address,address),bytes)":"468b9668","sendETHToAptos(bytes32,uint256,(address,address),bytes)":"ca23bb4c","sendToAptos(address,bytes32,uint256,(address,address),bytes)":"76a9099a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"EnableEmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Receive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RegisterToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Send\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"aptosChainId\",\"type\":\"uint16\"}],\"name\":\"SetAptosChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bridgeFeeBP\",\"type\":\"uint256\"}],\"name\":\"SetBridgeBP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetGlobalPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"localChainId\",\"type\":\"uint16\"}],\"name\":\"SetLocalChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetTokenPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"SetUseCustomAdapterParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"name\":\"SetWETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawTVL\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"quoteForSend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_toAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendETHToAptos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_toAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendToAptos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITokenBridge.sol\":\"ITokenBridge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ITokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.6.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\n\\r\\ninterface ITokenBridge {\\r\\n    enum PacketType {\\r\\n        SEND_TO_APTOS,\\r\\n        RECEIVE_FROM_APTOS\\r\\n    }\\r\\n\\r\\n    function sendToAptos(\\r\\n        address _token,\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendETHToAptos(\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteForSend(LzLib.CallParams calldata _callParams, bytes calldata _adapterParams)\\r\\n        external\\r\\n        view\\r\\n        returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    event Send(address indexed token, address indexed from, bytes32 indexed to, uint amountLD);\\r\\n    event Receive(address indexed token, address indexed to, uint amountLD);\\r\\n    event RegisterToken(address token);\\r\\n    event SetBridgeBP(uint bridgeFeeBP);\\r\\n    event SetWETH(address weth);\\r\\n    event SetGlobalPause(bool paused);\\r\\n    event SetTokenPause(address token, bool paused);\\r\\n    event SetLocalChainId(uint16 localChainId);\\r\\n    event SetAptosChainId(uint16 aptosChainId);\\r\\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\\r\\n    event WithdrawFee(address indexed token, address to, uint amountLD);\\r\\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\\r\\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\\r\\n}\\r\\n\",\"keccak256\":\"0xf147f03f81fa28462ee5a457f7f7ce1b602f205aae1ac242b21fe4b3c7bc6269\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IWETH.sol":{"IWETH":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n    function withdraw(uint) external;\\r\\n\\r\\n    function approve(address to, uint value) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x35d711a3c1dcd8a5c7380c665516661094181754f0df97cbdfb38e1cff4440ea\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}