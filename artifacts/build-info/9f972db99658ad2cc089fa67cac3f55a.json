{"id":"9f972db99658ad2cc089fa67cac3f55a","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\nlibrary BytesLib {\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(\n                0x40,\n                and(\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n                    not(31) // Round down to the nearest 32 bytes.\n                )\n            )\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint _start,\n        uint _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1, \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                    // the next line is the loop condition:\n                    // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {\n\n                        } eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.7.6;\n\nlibrary ExcessivelySafeCall {\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := call(\n                _gas, // gas\n                _target, // recipient\n                0, // ether value\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeStaticCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal view returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := staticcall(\n                _gas, // gas\n                _target, // recipient\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /**\n     * @notice Swaps function selectors in encoded contract calls\n     * @dev Allows reuse of encoded calldata for functions with identical\n     * argument types but different names. It simply swaps out the first 4 bytes\n     * for the new selector. This function modifies memory in place, and should\n     * only be used with caution.\n     * @param _newSelector The new 4-byte selector\n     * @param _buf The encoded contract args\n     */\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\n        require(_buf.length >= 4);\n        uint _mask = LOW_28_MASK;\n        assembly {\n            // load the first word of\n            let _word := mload(add(_buf, 0x20))\n            // mask out the top 4 bytes\n            // /x\n            _word := and(_word, _mask)\n            _word := or(_newSelector, _word)\n            mstore(add(_buf, 0x20), _word)\n        }\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\nimport \"./ILayerZeroUserApplicationConfig.sol\";\n\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\n    // @param _dstChainId - the destination chain identifier\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\n    // @param _payload - a custom bytes payload to send to the destination contract\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\n    function send(\n        uint16 _dstChainId,\n        bytes calldata _destination,\n        bytes calldata _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes calldata _adapterParams\n    ) external payable;\n\n    // @notice used by the messaging library to publish verified payload\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source contract (as bytes) at the source chain\n    // @param _dstAddress - the address on destination chain\n    // @param _nonce - the unbound message ordering nonce\n    // @param _gasLimit - the gas limit for external contract execution\n    // @param _payload - verified payload to send to the destination contract\n    function receivePayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        address _dstAddress,\n        uint64 _nonce,\n        uint _gasLimit,\n        bytes calldata _payload\n    ) external;\n\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\n\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\n    // @param _srcAddress - the source chain contract address\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\n\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\n    // @param _dstChainId - the destination chain identifier\n    // @param _userApplication - the user app address on this EVM chain\n    // @param _payload - the custom message to send over LayerZero\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\n    function estimateFees(\n        uint16 _dstChainId,\n        address _userApplication,\n        bytes calldata _payload,\n        bool _payInZRO,\n        bytes calldata _adapterParam\n    ) external view returns (uint nativeFee, uint zroFee);\n\n    // @notice get this Endpoint's immutable source identifier\n    function getChainId() external view returns (uint16);\n\n    // @notice the interface to retry failed message on this Endpoint destination\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    // @param _payload - the payload to be retried\n    function retryPayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        bytes calldata _payload\n    ) external;\n\n    // @notice query if any STORED payload (message blocking) at the endpoint.\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\n\n    // @notice query if the _libraryAddress is valid for sending msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the _libraryAddress is valid for receiving msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the non-reentrancy guard for send() is on\n    // @return true if the guard is on. false otherwise\n    function isSendingPayload() external view returns (bool);\n\n    // @notice query if the non-reentrancy guard for receive() is on\n    // @return true if the guard is on. false otherwise\n    function isReceivingPayload() external view returns (bool);\n\n    // @notice get the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _userApplication - the contract address of the user application\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address _userApplication,\n        uint _configType\n    ) external view returns (bytes memory);\n\n    // @notice get the send() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getSendVersion(address _userApplication) external view returns (uint16);\n\n    // @notice get the lzReceive() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroReceiver {\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\n    // @param _srcChainId - the source endpoint identifier\n    // @param _srcAddress - the source sending contract address from the source chain\n    // @param _nonce - the ordered message nonce\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) external;\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroUserApplicationConfig {\n    // @notice set the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    // @param _config - configuration in the bytes. can encode arbitrary content.\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external;\n\n    // @notice set the send() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setSendVersion(uint16 _version) external;\n\n    // @notice set the lzReceive() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setReceiveVersion(uint16 _version) external;\n\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\n    // @param _srcChainId - the chainId of the source chain\n    // @param _srcAddress - the contract address of the source contract at the source chain\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.6.0;\npragma experimental ABIEncoderV2;\n\nlibrary LzLib {\n    // LayerZero communication\n    struct CallParams {\n        address payable refundAddress;\n        address zroPaymentAddress;\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n\n    struct AirdropParams {\n        uint airdropAmount;\n        bytes32 airdropAddress;\n    }\n\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\n        } else {\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\n        }\n    }\n\n    // Build Adapter Params\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\n        // txType 1\n        // bytes  [2       32      ]\n        // fields [txType  extraGas]\n        return abi.encodePacked(uint16(1), _uaGas);\n    }\n\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\n        require(_params.airdropAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(_params.airdropAddress != bytes32(0x0), \"Airdrop address must be set\");\n\n        // txType 2\n        // bytes  [2       32        32            bytes[]         ]\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\n    }\n\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    // Decode Adapter Params\n    function decodeAdapterParams(bytes memory _adapterParams)\n        internal\n        pure\n        returns (\n            uint16 txType,\n            uint uaGas,\n            uint airdropAmount,\n            address payable airdropAddress\n        )\n    {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            txType := mload(add(_adapterParams, 2))\n            uaGas := mload(add(_adapterParams, 34))\n        }\n        require(txType == 1 || txType == 2, \"Unsupported txType\");\n        require(uaGas > 0, \"Gas too low\");\n\n        if (txType == 2) {\n            assembly {\n                airdropAmount := mload(add(_adapterParams, 66))\n                airdropAddress := mload(add(_adapterParams, 86))\n            }\n        }\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\n        return address(uint160(uint(_bytes32Address)));\n    }\n\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\n        return bytes32(uint(uint160(_address)));\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/ILayerZeroReceiver.sol\";\nimport \"./interfaces/ILayerZeroUserApplicationConfig.sol\";\nimport \"./interfaces/ILayerZeroEndpoint.sol\";\nimport \"../libraries/BytesLib.sol\";\n\n/*\n * a generic LzReceiver implementation\n */\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\n    using BytesLib for bytes;\n\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\n\n    ILayerZeroEndpoint public immutable lzEndpoint;\n    mapping(uint16 => bytes) public trustedRemoteLookup;\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\n    address public precrime;\n\n    event SetPrecrime(address precrime);\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\n\n    constructor(address _endpoint) {\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\n    }\n\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual override {\n        // lzReceive must be called by the endpoint for security\n        require(_msgSender() == address(lzEndpoint), \"LzApp: invalid endpoint caller\");\n\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\n        require(\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\n            \"LzApp: invalid source sending contract\"\n        );\n\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function _lzSend(\n        uint16 _dstChainId,\n        bytes memory _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes memory _adapterParams,\n        uint _nativeFee\n    ) internal virtual {\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\n        require(trustedRemote.length != 0, \"LzApp: destination chain is not a trusted source\");\n        _checkPayloadSize(_dstChainId, _payload.length);\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\n    }\n\n    function _checkGasLimit(\n        uint16 _dstChainId,\n        uint16 _type,\n        bytes memory _adapterParams,\n        uint _extraGas\n    ) internal view virtual {\n        uint providedGasLimit = _getGasLimit(_adapterParams);\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\n        require(minGasLimit > 0, \"LzApp: minGasLimit not set\");\n        require(providedGasLimit >= minGasLimit + _extraGas, \"LzApp: gas limit is too low\");\n    }\n\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\n        require(_adapterParams.length >= 34, \"LzApp: invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\n        if (payloadSizeLimit == 0) {\n            // use default if not set\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\n        }\n        require(_payloadSize <= payloadSizeLimit, \"LzApp: payload size is too large\");\n    }\n\n    //---------------------------UserApplication config----------------------------------------\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address,\n        uint _configType\n    ) external view returns (bytes memory) {\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\n    }\n\n    // generic config for LayerZero user Application\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external override onlyOwner {\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\n    }\n\n    function setSendVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setSendVersion(_version);\n    }\n\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setReceiveVersion(_version);\n    }\n\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\n    }\n\n    // _path = abi.encodePacked(remoteAddress, localAddress)\n    // this function set the trusted path for the cross-chain communication\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = _path;\n        emit SetTrustedRemote(_remoteChainId, _path);\n    }\n\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\n    }\n\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\n        require(path.length != 0, \"LzApp: no trusted path record\");\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\n    }\n\n    function setPrecrime(address _precrime) external onlyOwner {\n        precrime = _precrime;\n        emit SetPrecrime(_precrime);\n    }\n\n    function setMinDstGas(\n        uint16 _dstChainId,\n        uint16 _packetType,\n        uint _minGas\n    ) external onlyOwner {\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\n    }\n\n    // if the size is 0, it means default size limit\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\n        payloadSizeLimitLookup[_dstChainId] = _size;\n    }\n\n    //--------------------------- VIEW FUNCTION ----------------------------------------\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\n        return keccak256(trustedSource) == keccak256(_srcAddress);\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./LzApp.sol\";\nimport \"../libraries/ExcessivelySafeCall.sol\";\n\n/*\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\n */\nabstract contract NonblockingLzApp is LzApp {\n    using ExcessivelySafeCall for address;\n\n    constructor(address _endpoint) LzApp(_endpoint) {}\n\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\n\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\n\n    // overriding the virtual function in LzReceiver\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual override {\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\n            gasleft(),\n            150,\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\n        );\n        // try-catch all errors/exceptions\n        if (!success) {\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\n        }\n    }\n\n    function _storeFailedMessage(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload,\n        bytes memory _reason\n    ) internal virtual {\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\n    }\n\n    function nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual {\n        // only internal transaction\n        require(_msgSender() == address(this), \"NonblockingLzApp: caller must be LzApp\");\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    //@notice override this function\n    function _nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function retryMessage(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public payable virtual {\n        // assert there is message to retry\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\n        require(payloadHash != bytes32(0), \"NonblockingLzApp: no stored message\");\n        require(keccak256(_payload) == payloadHash, \"NonblockingLzApp: invalid payload\");\n        // clear the stored message\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\n        // execute the message. revert if it fails again\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/interfaces/ITokenBridge.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity >=0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\";\r\n\r\ninterface ITokenBridge {\r\n    enum PacketType {\r\n        SEND_TO_APTOS,\r\n        RECEIVE_FROM_APTOS\r\n    }\r\n\r\n    function sendToAptos(\r\n        address _token,\r\n        bytes32 _toAddress,\r\n        uint _amountLD,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    function sendETHToAptos(\r\n        bytes32 _toAddress,\r\n        uint _amountLD,\r\n        LzLib.CallParams calldata _callParams,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    function quoteForSend(LzLib.CallParams calldata _callParams, bytes calldata _adapterParams)\r\n        external\r\n        view\r\n        returns (uint nativeFee, uint zroFee);\r\n\r\n    event Send(address indexed token, address indexed from, bytes32 indexed to, uint amountLD);\r\n    event Receive(address indexed token, address indexed to, uint amountLD);\r\n    event RegisterToken(address token);\r\n    event SetBridgeBP(uint bridgeFeeBP);\r\n    event SetWETH(address weth);\r\n    event SetGlobalPause(bool paused);\r\n    event SetTokenPause(address token, bool paused);\r\n    event SetLocalChainId(uint16 localChainId);\r\n    event SetAptosChainId(uint16 aptosChainId);\r\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\r\n    event WithdrawFee(address indexed token, address to, uint amountLD);\r\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\r\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\r\n}\r\n"},"contracts/interfaces/IWETH.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n\r\n    function transfer(address to, uint value) external returns (bool);\r\n\r\n    function withdraw(uint) external;\r\n\r\n    function approve(address to, uint value) external returns (bool);\r\n}\r\n"},"contracts/LayerZeroTest.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\";\r\n\r\n/*\r\n    LayerZero BNB Testnet\r\n      lzChainId: 10102  lzEndpoint: 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1\r\n      contract: \r\n    LayerZero Fantom Testnet\r\n      lzChainId:10112   lzEndpoint: 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf\r\n      contract: \r\n*/\r\n\r\ncontract LayerZeroTest is NonblockingLzApp {\r\n    string public data = \"Nothing received yet\";\r\n    uint16 destChainId;\r\n    \r\n    constructor(address _lzEndpoint) NonblockingLzApp(_lzEndpoint) {\r\n        if (_lzEndpoint == 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1) destChainId = 10112;\r\n        if (_lzEndpoint == 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf) destChainId = 10102;\r\n        // if (_lzEndpoint == 0xf69186dfBa60DdB133E91E9A4B5673624293d8F8) destChainId = 10109;\r\n        // if (_lzEndpoint == 0x6aB5Ae6822647046626e83ee6dB8187151E1d5ab) destChainId = 10143;\r\n    }\r\n\r\n    function _nonblockingLzReceive(uint16, bytes memory, uint64, bytes memory _payload) internal override {\r\n       data = abi.decode(_payload, (string));\r\n    }\r\n\r\n    function send(string memory _message) public payable {\r\n        bytes memory payload = abi.encode(_message);\r\n        _lzSend(destChainId, payload, payable(msg.sender), address(0x0), bytes(\"\"), msg.value);\r\n    }\r\n\r\n    function trustAddress(address _otherContract) public onlyOwner {\r\n        trustedRemoteLookup[destChainId] = abi.encodePacked(_otherContract, address(this));   \r\n    }\r\n}"},"contracts/mocks/LZEndpointMock.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity ^0.8.12;\r\n\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\";\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\";\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\";\r\n\r\n/*\r\nlike a real LayerZero enpoint but can be mocked, which handle message transmission, verification, and receipt.\r\n- blocking: LayerZero provides ordered delivery of messages from a given sender to a destination chain.\r\n- non-reentrancy: endpoint has a non-reentrancy guard for both the send() and receive(), respectively.\r\n- adapter parameters: allows UAs to add arbitrary transaction params in the send() function, like airdrop on destination chain.\r\nunlike a real LayerZero endpoint, it is\r\n- no messaging library versioning\r\n- send() will short circuit to lzReceive()\r\n- no user application configuration\r\n*/\r\ncontract LZEndpointMock is ILayerZeroEndpoint {\r\n    uint8 internal constant _NOT_ENTERED = 1;\r\n    uint8 internal constant _ENTERED = 2;\r\n\r\n    mapping(address => address) public lzEndpointLookup;\r\n\r\n    uint16 public mockChainId;\r\n    bool public nextMsgBlocked;\r\n    bool public callReceive; // if true, call lzReceive() in send()\r\n\r\n    // fee config\r\n    RelayerFeeConfig public relayerFeeConfig;\r\n    ProtocolFeeConfig public protocolFeeConfig;\r\n    uint public oracleFee;\r\n    bytes public defaultAdapterParams;\r\n\r\n    // path = remote addrss + local address\r\n    // inboundNonce = [srcChainId][path].\r\n    mapping(uint16 => mapping(bytes => uint64)) public inboundNonce;\r\n    //todo: this is a hack\r\n    // outboundNonce = [dstChainId][srcAddress]\r\n    mapping(uint16 => mapping(address => uint64)) public outboundNonce;\r\n    //    // outboundNonce = [dstChainId][path].\r\n    //    mapping(uint16 => mapping(bytes => uint64)) public outboundNonce;\r\n    // storedPayload = [srcChainId][path]\r\n    mapping(uint16 => mapping(bytes => StoredPayload)) public storedPayload;\r\n    // msgToDeliver = [srcChainId][path]\r\n    mapping(uint16 => mapping(bytes => QueuedPayload[])) public msgsToDeliver;\r\n\r\n    // reentrancy guard\r\n    uint8 internal _send_entered_state = 1;\r\n    uint8 internal _receive_entered_state = 1;\r\n\r\n    struct ProtocolFeeConfig {\r\n        uint zroFee;\r\n        uint nativeBP;\r\n    }\r\n\r\n    struct RelayerFeeConfig {\r\n        uint128 dstPriceRatio; // 10^10\r\n        uint128 dstGasPriceInWei;\r\n        uint128 dstNativeAmtCap;\r\n        uint64 baseGas;\r\n        uint64 gasPerByte;\r\n    }\r\n\r\n    struct StoredPayload {\r\n        uint64 payloadLength;\r\n        address dstAddress;\r\n        bytes32 payloadHash;\r\n    }\r\n\r\n    struct QueuedPayload {\r\n        address dstAddress;\r\n        uint64 nonce;\r\n        bytes payload;\r\n    }\r\n\r\n    modifier sendNonReentrant() {\r\n        require(_send_entered_state == _NOT_ENTERED, \"LayerZeroMock: no send reentrancy\");\r\n        _send_entered_state = _ENTERED;\r\n        _;\r\n        _send_entered_state = _NOT_ENTERED;\r\n    }\r\n\r\n    modifier receiveNonReentrant() {\r\n        require(_receive_entered_state == _NOT_ENTERED, \"LayerZeroMock: no receive reentrancy\");\r\n        _receive_entered_state = _ENTERED;\r\n        _;\r\n        _receive_entered_state = _NOT_ENTERED;\r\n    }\r\n\r\n    event UaForceResumeReceive(uint16 chainId, bytes srcAddress);\r\n    event PayloadCleared(uint16 srcChainId, bytes srcAddress, uint64 nonce, address dstAddress);\r\n    event PayloadStored(\r\n        uint16 srcChainId,\r\n        bytes srcAddress,\r\n        address dstAddress,\r\n        uint64 nonce,\r\n        bytes payload,\r\n        bytes reason\r\n    );\r\n    event ValueTransferFailed(address indexed to, uint indexed quantity);\r\n    event Packet(bytes payload);\r\n\r\n    constructor(uint16 _chainId) {\r\n        mockChainId = _chainId;\r\n\r\n        // init config\r\n        relayerFeeConfig = RelayerFeeConfig({\r\n            dstPriceRatio: 1e10, // 1:1, same chain, same native coin\r\n            dstGasPriceInWei: 1e10,\r\n            dstNativeAmtCap: 1e19,\r\n            baseGas: 100,\r\n            gasPerByte: 1\r\n        });\r\n        protocolFeeConfig = ProtocolFeeConfig({zroFee: 1e18, nativeBP: 1000}); // BP 0.1\r\n        oracleFee = 1e16;\r\n        defaultAdapterParams = LzLib.buildDefaultAdapterParams(100000);\r\n    }\r\n\r\n    // ------------------------------ ILayerZeroEndpoint Functions ------------------------------\r\n    function send(\r\n        uint16 _chainId,\r\n        bytes memory _path,\r\n        bytes calldata _payload,\r\n        address payable _refundAddress,\r\n        address _zroPaymentAddress,\r\n        bytes memory _adapterParams\r\n    ) external payable override sendNonReentrant {\r\n        require(_path.length == 40, \"LayerZeroMock: incorrect remote address size\"); // only support evm chains\r\n\r\n        // not handle zro token\r\n        uint16 dstChainId = _chainId;\r\n        bytes memory adapterParams = _adapterParams.length > 0\r\n            ? _adapterParams\r\n            : defaultAdapterParams;\r\n        (uint nativeFee, ) = estimateFees(\r\n            dstChainId,\r\n            msg.sender,\r\n            _payload,\r\n            _zroPaymentAddress != address(0x0),\r\n            adapterParams\r\n        );\r\n        require(msg.value >= nativeFee, \"LayerZeroMock: not enough native for fees\");\r\n\r\n        uint64 nonce = ++outboundNonce[dstChainId][msg.sender];\r\n\r\n        // refund if they send too much\r\n        uint amount = msg.value - nativeFee;\r\n        if (amount > 0) {\r\n            (bool success, ) = _refundAddress.call{value: amount}(\"\");\r\n            require(success, \"LayerZeroMock: failed to refund\");\r\n        }\r\n\r\n        // Mock the process of receiving msg on dst chain\r\n        // Mock the relayer paying the dstNativeAddr the amount of extra native token\r\n        (, uint extraGas, uint dstNativeAmt, address payable dstNativeAddr) = LzLib\r\n            .decodeAdapterParams(adapterParams);\r\n        if (dstNativeAmt > 0) {\r\n            (bool success, ) = dstNativeAddr.call{value: dstNativeAmt}(\"\");\r\n            if (!success) {\r\n                emit ValueTransferFailed(dstNativeAddr, dstNativeAmt);\r\n            }\r\n        }\r\n\r\n        // emit the data packet\r\n        address dstAddr;\r\n        assembly {\r\n            dstAddr := mload(add(_path, 20))\r\n        }\r\n        bytes memory payload = _payload;\r\n        bytes memory encodedPayload = abi.encodePacked(\r\n            nonce,\r\n            mockChainId,\r\n            msg.sender,\r\n            dstChainId,\r\n            dstAddr,\r\n            payload\r\n        );\r\n        emit Packet(encodedPayload);\r\n\r\n        if (callReceive) {\r\n            address lzEndpoint = lzEndpointLookup[dstAddr];\r\n            require(\r\n                lzEndpoint != address(0),\r\n                \"LayerZeroMock: destination LayerZero Endpoint not found\"\r\n            );\r\n\r\n            bytes memory srcUaAddress = abi.encodePacked(msg.sender, dstAddr); // cast this address to bytes\r\n            LZEndpointMock(lzEndpoint).receivePayload(\r\n                mockChainId,\r\n                srcUaAddress,\r\n                dstAddr,\r\n                nonce,\r\n                extraGas,\r\n                payload\r\n            );\r\n        }\r\n    }\r\n\r\n    function receivePayload(\r\n        uint16 _srcChainId,\r\n        bytes calldata _path,\r\n        address _dstAddress,\r\n        uint64 _nonce,\r\n        uint _gasLimit,\r\n        bytes calldata _payload\r\n    ) external override receiveNonReentrant {\r\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\r\n\r\n        // assert and increment the nonce. no message shuffling\r\n        require(_nonce == ++inboundNonce[_srcChainId][_path], \"LayerZeroMock: wrong nonce\");\r\n\r\n        // queue the following msgs inside of a stack to simulate a successful send on src, but not fully delivered on dst\r\n        if (sp.payloadHash != bytes32(0)) {\r\n            QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\r\n            QueuedPayload memory newMsg = QueuedPayload(_dstAddress, _nonce, _payload);\r\n\r\n            // warning, might run into gas issues trying to forward through a bunch of queued msgs\r\n            // shift all the msgs over so we can treat this like a fifo via array.pop()\r\n            if (msgs.length > 0) {\r\n                // extend the array\r\n                msgs.push(newMsg);\r\n\r\n                // shift all the indexes up for pop()\r\n                for (uint i = 0; i < msgs.length - 1; i++) {\r\n                    msgs[i + 1] = msgs[i];\r\n                }\r\n\r\n                // put the newMsg at the bottom of the stack\r\n                msgs[0] = newMsg;\r\n            } else {\r\n                msgs.push(newMsg);\r\n            }\r\n        } else if (nextMsgBlocked) {\r\n            storedPayload[_srcChainId][_path] = StoredPayload(\r\n                uint64(_payload.length),\r\n                _dstAddress,\r\n                keccak256(_payload)\r\n            );\r\n            emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, bytes(\"\"));\r\n            // ensure the next msgs that go through are no longer blocked\r\n            nextMsgBlocked = false;\r\n        } else {\r\n            try\r\n                ILayerZeroReceiver(_dstAddress).lzReceive{gas: _gasLimit}(\r\n                    _srcChainId,\r\n                    _path,\r\n                    _nonce,\r\n                    _payload\r\n                )\r\n            {} catch (bytes memory reason) {\r\n                storedPayload[_srcChainId][_path] = StoredPayload(\r\n                    uint64(_payload.length),\r\n                    _dstAddress,\r\n                    keccak256(_payload)\r\n                );\r\n                emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, reason);\r\n                // ensure the next msgs that go through are no longer blocked\r\n                nextMsgBlocked = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getInboundNonce(uint16 _chainID, bytes calldata _path)\r\n        external\r\n        view\r\n        override\r\n        returns (uint64)\r\n    {\r\n        return inboundNonce[_chainID][_path];\r\n    }\r\n\r\n    function getOutboundNonce(uint16 _chainID, address _srcAddress)\r\n        external\r\n        view\r\n        override\r\n        returns (uint64)\r\n    {\r\n        return outboundNonce[_chainID][_srcAddress];\r\n    }\r\n\r\n    function estimateFees(\r\n        uint16 _dstChainId,\r\n        address _userApplication,\r\n        bytes memory _payload,\r\n        bool _payInZRO,\r\n        bytes memory _adapterParams\r\n    ) public view returns (uint nativeFee, uint zroFee) {\r\n        bytes memory adapterParams = _adapterParams.length > 0\r\n            ? _adapterParams\r\n            : defaultAdapterParams;\r\n\r\n        // Relayer Fee\r\n        uint relayerFee = _getRelayerFee(\r\n            _dstChainId,\r\n            1,\r\n            _userApplication,\r\n            _payload.length,\r\n            adapterParams\r\n        );\r\n\r\n        // LayerZero Fee\r\n        uint protocolFee = _getProtocolFees(_payInZRO, relayerFee, oracleFee);\r\n        _payInZRO ? zroFee = protocolFee : nativeFee = protocolFee;\r\n\r\n        // return the sum of fees\r\n        nativeFee = nativeFee + relayerFee + oracleFee;\r\n    }\r\n\r\n    function getChainId() external view override returns (uint16) {\r\n        return mockChainId;\r\n    }\r\n\r\n    function retryPayload(\r\n        uint16 _srcChainId,\r\n        bytes calldata _path,\r\n        bytes calldata _payload\r\n    ) external override {\r\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\r\n        require(sp.payloadHash != bytes32(0), \"LayerZeroMock: no stored payload\");\r\n        require(\r\n            _payload.length == sp.payloadLength && keccak256(_payload) == sp.payloadHash,\r\n            \"LayerZeroMock: invalid payload\"\r\n        );\r\n\r\n        address dstAddress = sp.dstAddress;\r\n        // empty the storedPayload\r\n        sp.payloadLength = 0;\r\n        sp.dstAddress = address(0);\r\n        sp.payloadHash = bytes32(0);\r\n\r\n        uint64 nonce = inboundNonce[_srcChainId][_path];\r\n\r\n        ILayerZeroReceiver(dstAddress).lzReceive(_srcChainId, _path, nonce, _payload);\r\n        emit PayloadCleared(_srcChainId, _path, nonce, dstAddress);\r\n    }\r\n\r\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _path)\r\n        external\r\n        view\r\n        override\r\n        returns (bool)\r\n    {\r\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\r\n        return sp.payloadHash != bytes32(0);\r\n    }\r\n\r\n    function getSendLibraryAddress(address) external view override returns (address) {\r\n        return address(this);\r\n    }\r\n\r\n    function getReceiveLibraryAddress(address) external view override returns (address) {\r\n        return address(this);\r\n    }\r\n\r\n    function isSendingPayload() external view override returns (bool) {\r\n        return _send_entered_state == _ENTERED;\r\n    }\r\n\r\n    function isReceivingPayload() external view override returns (bool) {\r\n        return _receive_entered_state == _ENTERED;\r\n    }\r\n\r\n    function getConfig(\r\n        uint16, /*_version*/\r\n        uint16, /*_chainId*/\r\n        address, /*_ua*/\r\n        uint /*_configType*/\r\n    ) external pure override returns (bytes memory) {\r\n        return \"\";\r\n    }\r\n\r\n    function getSendVersion(\r\n        address /*_userApplication*/\r\n    ) external pure override returns (uint16) {\r\n        return 1;\r\n    }\r\n\r\n    function getReceiveVersion(\r\n        address /*_userApplication*/\r\n    ) external pure override returns (uint16) {\r\n        return 1;\r\n    }\r\n\r\n    function setConfig(\r\n        uint16, /*_version*/\r\n        uint16, /*_chainId*/\r\n        uint, /*_configType*/\r\n        bytes memory /*_config*/\r\n    ) external override {}\r\n\r\n    function setSendVersion(\r\n        uint16 /*version*/\r\n    ) external override {}\r\n\r\n    function setReceiveVersion(\r\n        uint16 /*version*/\r\n    ) external override {}\r\n\r\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _path) external override {\r\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\r\n        // revert if no messages are cached. safeguard malicious UA behaviour\r\n        require(sp.payloadHash != bytes32(0), \"LayerZeroMock: no stored payload\");\r\n        require(sp.dstAddress == msg.sender, \"LayerZeroMock: invalid caller\");\r\n\r\n        // empty the storedPayload\r\n        sp.payloadLength = 0;\r\n        sp.dstAddress = address(0);\r\n        sp.payloadHash = bytes32(0);\r\n\r\n        emit UaForceResumeReceive(_srcChainId, _path);\r\n\r\n        // resume the receiving of msgs after we force clear the \"stuck\" msg\r\n        _clearMsgQue(_srcChainId, _path);\r\n    }\r\n\r\n    // ------------------------------ Other Public/External Functions --------------------------------------------------\r\n\r\n    // used to simulate messages received get stored as a payload\r\n    function blockNextMsg() external {\r\n        nextMsgBlocked = true;\r\n    }\r\n\r\n    function setDestLzEndpoint(address destAddr, address lzEndpointAddr) external {\r\n        lzEndpointLookup[destAddr] = lzEndpointAddr;\r\n    }\r\n\r\n    function setCallReceive(bool _callReceive) external {\r\n        callReceive = _callReceive;\r\n    }\r\n\r\n    function setRelayerPrice(\r\n        uint128 _dstPriceRatio,\r\n        uint128 _dstGasPriceInWei,\r\n        uint128 _dstNativeAmtCap,\r\n        uint64 _baseGas,\r\n        uint64 _gasPerByte\r\n    ) external {\r\n        relayerFeeConfig.dstPriceRatio = _dstPriceRatio;\r\n        relayerFeeConfig.dstGasPriceInWei = _dstGasPriceInWei;\r\n        relayerFeeConfig.dstNativeAmtCap = _dstNativeAmtCap;\r\n        relayerFeeConfig.baseGas = _baseGas;\r\n        relayerFeeConfig.gasPerByte = _gasPerByte;\r\n    }\r\n\r\n    function setProtocolFee(uint _zroFee, uint _nativeBP) external {\r\n        protocolFeeConfig.zroFee = _zroFee;\r\n        protocolFeeConfig.nativeBP = _nativeBP;\r\n    }\r\n\r\n    function setOracleFee(uint _oracleFee) external {\r\n        oracleFee = _oracleFee;\r\n    }\r\n\r\n    function setDefaultAdapterParams(bytes memory _adapterParams) external {\r\n        defaultAdapterParams = _adapterParams;\r\n    }\r\n\r\n    // --------------------- Internal Functions ---------------------\r\n    // simulates the relayer pushing through the rest of the msgs that got delayed due to the stored payload\r\n    function _clearMsgQue(uint16 _srcChainId, bytes calldata _path) internal {\r\n        QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\r\n\r\n        // warning, might run into gas issues trying to forward through a bunch of queued msgs\r\n        while (msgs.length > 0) {\r\n            QueuedPayload memory payload = msgs[msgs.length - 1];\r\n            ILayerZeroReceiver(payload.dstAddress).lzReceive(\r\n                _srcChainId,\r\n                _path,\r\n                payload.nonce,\r\n                payload.payload\r\n            );\r\n            msgs.pop();\r\n        }\r\n    }\r\n\r\n    function _getProtocolFees(\r\n        bool _payInZro,\r\n        uint _relayerFee,\r\n        uint _oracleFee\r\n    ) internal view returns (uint) {\r\n        if (_payInZro) {\r\n            return protocolFeeConfig.zroFee;\r\n        } else {\r\n            return ((_relayerFee + _oracleFee) * protocolFeeConfig.nativeBP) / 10000;\r\n        }\r\n    }\r\n\r\n    function _getRelayerFee(\r\n        uint16, /* _dstChainId */\r\n        uint16, /* _outboundProofType */\r\n        address, /* _userApplication */\r\n        uint _payloadSize,\r\n        bytes memory _adapterParams\r\n    ) internal view returns (uint) {\r\n        (uint16 txType, uint extraGas, uint dstNativeAmt, ) = LzLib.decodeAdapterParams(\r\n            _adapterParams\r\n        );\r\n        uint totalRemoteToken; // = baseGas + extraGas + requiredNativeAmount\r\n        if (txType == 2) {\r\n            require(\r\n                relayerFeeConfig.dstNativeAmtCap >= dstNativeAmt,\r\n                \"LayerZeroMock: dstNativeAmt too large \"\r\n            );\r\n            totalRemoteToken += dstNativeAmt;\r\n        }\r\n        // remoteGasTotal = dstGasPriceInWei * (baseGas + extraGas)\r\n        uint remoteGasTotal = relayerFeeConfig.dstGasPriceInWei *\r\n            (relayerFeeConfig.baseGas + extraGas);\r\n        totalRemoteToken += remoteGasTotal;\r\n\r\n        // tokenConversionRate = dstPrice / localPrice\r\n        // basePrice = totalRemoteToken * tokenConversionRate\r\n        uint basePrice = (totalRemoteToken * relayerFeeConfig.dstPriceRatio) / 10**10;\r\n\r\n        // pricePerByte = (dstGasPriceInWei * gasPerBytes) * tokenConversionRate\r\n        uint pricePerByte = (relayerFeeConfig.dstGasPriceInWei *\r\n            relayerFeeConfig.gasPerByte *\r\n            relayerFeeConfig.dstPriceRatio) / 10**10;\r\n\r\n        return basePrice + _payloadSize * pricePerByte;\r\n    }\r\n}\r\n"},"contracts/mocks/Token.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity ^0.8.12;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract Token is ERC20 {\r\n    uint8 DECIMALS;\r\n\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals\r\n    ) ERC20(_name, _symbol) {\r\n        DECIMALS = _decimals;\r\n        _mint(msg.sender, 10000 * 10**DECIMALS);\r\n    }\r\n\r\n    function mint(address _account, uint _amount) public {\r\n        _mint(_account, _amount);\r\n    }\r\n\r\n    function decimals() public view override returns (uint8) {\r\n        return DECIMALS;\r\n    }\r\n}\r\n"},"contracts/mocks/WETH.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\r\n\r\npragma solidity >=0.4.22;\r\n\r\ncontract WETH {\r\n    string public name = \"Wrapped Ether\";\r\n    string public symbol = \"WETH\";\r\n    uint8 public decimals = 18;\r\n\r\n    event Approval(address indexed src, address indexed guy, uint wad);\r\n    event Transfer(address indexed src, address indexed dst, uint wad);\r\n    event Deposit(address indexed dst, uint wad);\r\n    event Withdrawal(address indexed src, uint wad);\r\n\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n\r\n    receive() external payable {\r\n        deposit();\r\n    }\r\n\r\n    function deposit() public payable {\r\n        balanceOf[msg.sender] += msg.value;\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw(uint wad) public {\r\n        require(balanceOf[msg.sender] >= wad);\r\n        balanceOf[msg.sender] -= wad;\r\n        payable(msg.sender).transfer(wad);\r\n        emit Withdrawal(msg.sender, wad);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function approve(address guy, uint wad) public returns (bool) {\r\n        allowance[msg.sender][guy] = wad;\r\n        emit Approval(msg.sender, guy, wad);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address dst, uint wad) public returns (bool) {\r\n        return transferFrom(msg.sender, dst, wad);\r\n    }\r\n\r\n    function transferFrom(\r\n        address src,\r\n        address dst,\r\n        uint wad\r\n    ) public returns (bool) {\r\n        require(balanceOf[src] >= wad);\r\n\r\n        if (src != msg.sender && allowance[src][msg.sender] != type(uint).max) {\r\n            require(allowance[src][msg.sender] >= wad);\r\n            allowance[src][msg.sender] -= wad;\r\n        }\r\n\r\n        balanceOf[src] -= wad;\r\n        balanceOf[dst] += wad;\r\n\r\n        emit Transfer(src, dst, wad);\r\n\r\n        return true;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":1},"evmVersion":"berlin","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol","exportedSymbols":{"BytesLib":[332]},"id":333,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:0"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":332,"linearizedBaseContracts":[332],"name":"BytesLib","nameLocation":"377:8:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":16,"nodeType":"Block","src":"494:2865:0","statements":[{"assignments":[11],"declarations":[{"constant":false,"id":11,"mutability":"mutable","name":"tempBytes","nameLocation":"517:9:0","nodeType":"VariableDeclaration","scope":16,"src":"504:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10,"name":"bytes","nodeType":"ElementaryTypeName","src":"504:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":12,"nodeType":"VariableDeclarationStatement","src":"504:22:0"},{"AST":{"nodeType":"YulBlock","src":"546:2780:0","statements":[{"nodeType":"YulAssignment","src":"690:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"703:5:0"},"nodeType":"YulFunctionCall","src":"703:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"690:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"846:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"866:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"860:5:0"},"nodeType":"YulFunctionCall","src":"860:16:0"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"850:6:0","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"896:9:0"},{"name":"length","nodeType":"YulIdentifier","src":"907:6:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"889:6:0"},"nodeType":"YulFunctionCall","src":"889:25:0"},"nodeType":"YulExpressionStatement","src":"889:25:0"},{"nodeType":"YulVariableDeclaration","src":"1124:30:0","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1138:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"1149:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:0"},"nodeType":"YulFunctionCall","src":"1134:20:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1128:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1279:26:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1294:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"1298:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:0"},"nodeType":"YulFunctionCall","src":"1290:15:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1283:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:162:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1816:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1826:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1820:5:0"},"nodeType":"YulFunctionCall","src":"1820:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1809:6:0"},"nodeType":"YulFunctionCall","src":"1809:21:0"},"nodeType":"YulExpressionStatement","src":"1809:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1515:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"1519:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1512:2:0"},"nodeType":"YulFunctionCall","src":"1512:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1524:157:0","statements":[{"nodeType":"YulAssignment","src":"1612:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1622:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"1626:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:0"},"nodeType":"YulFunctionCall","src":"1618:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1612:2:0"}]},{"nodeType":"YulAssignment","src":"1648:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1658:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:0"},"nodeType":"YulFunctionCall","src":"1654:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1648:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"1323:188:0","statements":[{"nodeType":"YulVariableDeclaration","src":"1467:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1481:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"1492:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:0"},"nodeType":"YulFunctionCall","src":"1477:20:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1471:2:0","type":""}]}]},"src":"1319:525:0"},{"nodeType":"YulAssignment","src":"2045:27:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2061:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2055:5:0"},"nodeType":"YulFunctionCall","src":"2055:17:0"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2045:6:0"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2092:9:0"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2107:6:0"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2121:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2115:5:0"},"nodeType":"YulFunctionCall","src":"2115:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2103:3:0"},"nodeType":"YulFunctionCall","src":"2103:29:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2085:6:0"},"nodeType":"YulFunctionCall","src":"2085:48:0"},"nodeType":"YulExpressionStatement","src":"2085:48:0"},{"nodeType":"YulAssignment","src":"2271:9:0","value":{"name":"end","nodeType":"YulIdentifier","src":"2277:3:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2271:2:0"}]},{"nodeType":"YulAssignment","src":"2407:22:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2418:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"2422:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2414:3:0"},"nodeType":"YulFunctionCall","src":"2414:15:0"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2407:3:0"}]},{"body":{"nodeType":"YulBlock","src":"2611:53:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2636:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2646:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2640:5:0"},"nodeType":"YulFunctionCall","src":"2640:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2629:6:0"},"nodeType":"YulFunctionCall","src":"2629:21:0"},"nodeType":"YulExpressionStatement","src":"2629:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2514:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"2518:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2511:2:0"},"nodeType":"YulFunctionCall","src":"2511:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2523:87:0","statements":[{"nodeType":"YulAssignment","src":"2541:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2551:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"2555:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:0"},"nodeType":"YulFunctionCall","src":"2547:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2541:2:0"}]},{"nodeType":"YulAssignment","src":"2577:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2587:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"2591:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2583:3:0"},"nodeType":"YulFunctionCall","src":"2583:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2577:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"2447:63:0","statements":[{"nodeType":"YulVariableDeclaration","src":"2465:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2479:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"2491:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:0"},"nodeType":"YulFunctionCall","src":"2475:21:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2469:2:0","type":""}]}]},"src":"2443:221:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3113:4:0","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3168:3:0"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3184:6:0"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3198:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3192:5:0"},"nodeType":"YulFunctionCall","src":"3192:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3180:3:0"},"nodeType":"YulFunctionCall","src":"3180:29:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3173:6:0"},"nodeType":"YulFunctionCall","src":"3173:37:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:0"},"nodeType":"YulFunctionCall","src":"3164:47:0"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:0","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:0"},"nodeType":"YulFunctionCall","src":"3160:56:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3242:2:0","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3238:3:0"},"nodeType":"YulFunctionCall","src":"3238:7:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3135:3:0"},"nodeType":"YulFunctionCall","src":"3135:167:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3089:6:0"},"nodeType":"YulFunctionCall","src":"3089:227:0"},"nodeType":"YulExpressionStatement","src":"3089:227:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":5,"isOffset":false,"isSlot":false,"src":"2061:10:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2479:10:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"1481:9:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"3198:9:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"866:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"1138:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"2092:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"2121:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"690:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"896:9:0","valueSize":1}],"id":13,"nodeType":"InlineAssembly","src":"537:2789:0"},{"expression":{"id":14,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3343:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":9,"id":15,"nodeType":"Return","src":"3336:16:0"}]},"id":17,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"401:6:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"mutability":"mutable","name":"_preBytes","nameLocation":"421:9:0","nodeType":"VariableDeclaration","scope":17,"src":"408:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2,"name":"bytes","nodeType":"ElementaryTypeName","src":"408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"_postBytes","nameLocation":"445:10:0","nodeType":"VariableDeclaration","scope":17,"src":"432:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4,"name":"bytes","nodeType":"ElementaryTypeName","src":"432:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"407:49:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17,"src":"480:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7,"name":"bytes","nodeType":"ElementaryTypeName","src":"480:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"479:14:0"},"scope":332,"src":"392:2967:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":25,"nodeType":"Block","src":"3447:5805:0","statements":[{"AST":{"nodeType":"YulBlock","src":"3466:5780:0","statements":[{"nodeType":"YulVariableDeclaration","src":"3689:34:0","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3708:14:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3702:5:0"},"nodeType":"YulFunctionCall","src":"3702:21:0"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3693:5:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4216:76:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4239:5:0"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4254:5:0","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4272:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:0","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4268:3:0"},"nodeType":"YulFunctionCall","src":"4268:13:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4261:6:0"},"nodeType":"YulFunctionCall","src":"4261:21:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4250:3:0"},"nodeType":"YulFunctionCall","src":"4250:33:0"},{"kind":"number","nodeType":"YulLiteral","src":"4285:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4246:3:0"},"nodeType":"YulFunctionCall","src":"4246:41:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4235:3:0"},"nodeType":"YulFunctionCall","src":"4235:53:0"},{"kind":"number","nodeType":"YulLiteral","src":"4290:1:0","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4231:3:0"},"nodeType":"YulFunctionCall","src":"4231:61:0"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4220:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4305:32:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4326:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4320:5:0"},"nodeType":"YulFunctionCall","src":"4320:17:0"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4309:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4350:38:0","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4371:7:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"4380:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4367:3:0"},"nodeType":"YulFunctionCall","src":"4367:21:0"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4354:9:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4721:1485:0","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"5002:14:0"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5314:5:0"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5532:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"5544:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5528:3:0"},"nodeType":"YulFunctionCall","src":"5528:21:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5522:5:0"},"nodeType":"YulFunctionCall","src":"5522:28:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:5:0","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5670:2:0","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5674:7:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5666:3:0"},"nodeType":"YulFunctionCall","src":"5666:16:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5655:3:0"},"nodeType":"YulFunctionCall","src":"5655:28:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5415:3:0"},"nodeType":"YulFunctionCall","src":"5415:302:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:5:0","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5917:2:0","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5921:9:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5913:3:0"},"nodeType":"YulFunctionCall","src":"5913:18:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5902:3:0"},"nodeType":"YulFunctionCall","src":"5902:30:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5378:3:0"},"nodeType":"YulFunctionCall","src":"5378:584:0"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6115:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"6124:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6111:3:0"},"nodeType":"YulFunctionCall","src":"6111:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5345:3:0"},"nodeType":"YulFunctionCall","src":"5345:807:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5145:3:0"},"nodeType":"YulFunctionCall","src":"5145:1029:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4974:6:0"},"nodeType":"YulFunctionCall","src":"4974:1218:0"},"nodeType":"YulExpressionStatement","src":"4974:1218:0"}]},"nodeType":"YulCase","src":"4714:1492:0","value":{"kind":"number","nodeType":"YulLiteral","src":"4719:1:0","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6226:1725:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6435:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6440:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6428:6:0"},"nodeType":"YulFunctionCall","src":"6428:27:0"},"nodeType":"YulExpressionStatement","src":"6428:27:0"},{"nodeType":"YulVariableDeclaration","src":"6472:53:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6496:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6501:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6486:9:0"},"nodeType":"YulFunctionCall","src":"6486:20:0"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6512:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"6521:2:0","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6508:3:0"},"nodeType":"YulFunctionCall","src":"6508:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6482:3:0"},"nodeType":"YulFunctionCall","src":"6482:43:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6476:2:0","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6585:14:0"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6609:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"6620:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6605:3:0"},"nodeType":"YulFunctionCall","src":"6605:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"6624:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6601:3:0"},"nodeType":"YulFunctionCall","src":"6601:25:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6578:6:0"},"nodeType":"YulFunctionCall","src":"6578:49:0"},"nodeType":"YulExpressionStatement","src":"6578:49:0"},{"nodeType":"YulVariableDeclaration","src":"7215:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7233:2:0","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7237:7:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7229:3:0"},"nodeType":"YulFunctionCall","src":"7229:16:0"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7219:6:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7262:33:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7276:10:0"},{"name":"submod","nodeType":"YulIdentifier","src":"7288:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7272:3:0"},"nodeType":"YulFunctionCall","src":"7272:23:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7266:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7312:35:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7327:10:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"7339:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:0"},"nodeType":"YulFunctionCall","src":"7323:24:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7316:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7364:38:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7384:5:0","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7391:6:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7380:3:0"},"nodeType":"YulFunctionCall","src":"7380:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7376:3:0"},"nodeType":"YulFunctionCall","src":"7376:26:0"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7368:4:0","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7427:2:0"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7439:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"7446:66:0","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7435:3:0"},"nodeType":"YulFunctionCall","src":"7435:78:0"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7525:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7519:5:0"},"nodeType":"YulFunctionCall","src":"7519:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7530:4:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7515:3:0"},"nodeType":"YulFunctionCall","src":"7515:20:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7431:3:0"},"nodeType":"YulFunctionCall","src":"7431:105:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7420:6:0"},"nodeType":"YulFunctionCall","src":"7420:117:0"},"nodeType":"YulExpressionStatement","src":"7420:117:0"},{"body":{"nodeType":"YulBlock","src":"7765:61:0","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7794:2:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7804:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7798:5:0"},"nodeType":"YulFunctionCall","src":"7798:9:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7787:6:0"},"nodeType":"YulFunctionCall","src":"7787:21:0"},"nodeType":"YulExpressionStatement","src":"7787:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7659:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"7663:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7656:2:0"},"nodeType":"YulFunctionCall","src":"7656:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7668:96:0","statements":[{"nodeType":"YulAssignment","src":"7690:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7700:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7704:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:0"},"nodeType":"YulFunctionCall","src":"7696:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7690:2:0"}]},{"nodeType":"YulAssignment","src":"7727:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7737:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7741:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7733:3:0"},"nodeType":"YulFunctionCall","src":"7733:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7727:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"7559:96:0","statements":[{"nodeType":"YulAssignment","src":"7581:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7591:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7595:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7587:3:0"},"nodeType":"YulFunctionCall","src":"7587:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7581:2:0"}]},{"nodeType":"YulAssignment","src":"7621:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7631:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7635:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:0"},"nodeType":"YulFunctionCall","src":"7627:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7621:2:0"}]}]},"src":"7555:271:0"},{"nodeType":"YulAssignment","src":"7844:32:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7856:5:0","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7867:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"7871:3:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7863:3:0"},"nodeType":"YulFunctionCall","src":"7863:12:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7852:3:0"},"nodeType":"YulFunctionCall","src":"7852:24:0"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"7844:4:0"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7901:2:0"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7919:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7913:5:0"},"nodeType":"YulFunctionCall","src":"7913:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7924:4:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7909:3:0"},"nodeType":"YulFunctionCall","src":"7909:20:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7931:4:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7905:3:0"},"nodeType":"YulFunctionCall","src":"7905:31:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7894:6:0"},"nodeType":"YulFunctionCall","src":"7894:43:0"},"nodeType":"YulExpressionStatement","src":"7894:43:0"}]},"nodeType":"YulCase","src":"6219:1732:0","value":{"kind":"number","nodeType":"YulLiteral","src":"6224:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7972:1264:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8069:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8074:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8062:6:0"},"nodeType":"YulFunctionCall","src":"8062:27:0"},"nodeType":"YulExpressionStatement","src":"8062:27:0"},{"nodeType":"YulVariableDeclaration","src":"8182:53:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8206:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8211:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8196:9:0"},"nodeType":"YulFunctionCall","src":"8196:20:0"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8222:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:0","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8218:3:0"},"nodeType":"YulFunctionCall","src":"8218:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8192:3:0"},"nodeType":"YulFunctionCall","src":"8192:43:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8186:2:0","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8295:14:0"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8319:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"8330:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8315:3:0"},"nodeType":"YulFunctionCall","src":"8315:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"8334:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8311:3:0"},"nodeType":"YulFunctionCall","src":"8311:25:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8288:6:0"},"nodeType":"YulFunctionCall","src":"8288:49:0"},"nodeType":"YulExpressionStatement","src":"8288:49:0"},{"nodeType":"YulVariableDeclaration","src":"8464:34:0","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8486:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8495:2:0","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8482:3:0"},"nodeType":"YulFunctionCall","src":"8482:16:0"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8468:10:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8515:34:0","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8537:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8546:2:0","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8533:3:0"},"nodeType":"YulFunctionCall","src":"8533:16:0"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8519:10:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8566:33:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8584:2:0","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8588:10:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8580:3:0"},"nodeType":"YulFunctionCall","src":"8580:19:0"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8570:6:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8616:33:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8630:10:0"},{"name":"submod","nodeType":"YulIdentifier","src":"8642:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:0"},"nodeType":"YulFunctionCall","src":"8626:23:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8620:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8666:35:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8681:10:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"8693:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8677:3:0"},"nodeType":"YulFunctionCall","src":"8677:24:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8670:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8718:38:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8738:5:0","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8745:6:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8734:3:0"},"nodeType":"YulFunctionCall","src":"8734:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"8754:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8730:3:0"},"nodeType":"YulFunctionCall","src":"8730:26:0"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8722:4:0","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8781:2:0"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8795:2:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8789:5:0"},"nodeType":"YulFunctionCall","src":"8789:9:0"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8810:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8804:5:0"},"nodeType":"YulFunctionCall","src":"8804:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"8815:4:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8800:3:0"},"nodeType":"YulFunctionCall","src":"8800:20:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8785:3:0"},"nodeType":"YulFunctionCall","src":"8785:36:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8774:6:0"},"nodeType":"YulFunctionCall","src":"8774:48:0"},"nodeType":"YulExpressionStatement","src":"8774:48:0"},{"body":{"nodeType":"YulBlock","src":"9050:61:0","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9079:2:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9089:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9083:5:0"},"nodeType":"YulFunctionCall","src":"9083:9:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9072:6:0"},"nodeType":"YulFunctionCall","src":"9072:21:0"},"nodeType":"YulExpressionStatement","src":"9072:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8944:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"8948:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8941:2:0"},"nodeType":"YulFunctionCall","src":"8941:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8953:96:0","statements":[{"nodeType":"YulAssignment","src":"8975:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8985:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8989:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:0"},"nodeType":"YulFunctionCall","src":"8981:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8975:2:0"}]},{"nodeType":"YulAssignment","src":"9012:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9022:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"9026:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9018:3:0"},"nodeType":"YulFunctionCall","src":"9018:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9012:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"8844:96:0","statements":[{"nodeType":"YulAssignment","src":"8866:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8876:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8872:3:0"},"nodeType":"YulFunctionCall","src":"8872:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8866:2:0"}]},{"nodeType":"YulAssignment","src":"8903:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8913:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8917:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8909:3:0"},"nodeType":"YulFunctionCall","src":"8909:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"8903:2:0"}]}]},"src":"8840:271:0"},{"nodeType":"YulAssignment","src":"9129:32:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9141:5:0","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9152:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"9156:3:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9148:3:0"},"nodeType":"YulFunctionCall","src":"9148:12:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9137:3:0"},"nodeType":"YulFunctionCall","src":"9137:24:0"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9129:4:0"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9186:2:0"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9204:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9198:5:0"},"nodeType":"YulFunctionCall","src":"9198:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"9209:4:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9194:3:0"},"nodeType":"YulFunctionCall","src":"9194:20:0"},{"name":"mask","nodeType":"YulIdentifier","src":"9216:4:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9190:3:0"},"nodeType":"YulFunctionCall","src":"9190:31:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9179:6:0"},"nodeType":"YulFunctionCall","src":"9179:43:0"},"nodeType":"YulExpressionStatement","src":"9179:43:0"}]},"nodeType":"YulCase","src":"7964:1272:0","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4669:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"4678:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4666:2:0"},"nodeType":"YulFunctionCall","src":"4666:15:0"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4686:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4683:2:0"},"nodeType":"YulFunctionCall","src":"4683:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4662:3:0"},"nodeType":"YulFunctionCall","src":"4662:39:0"},"nodeType":"YulSwitch","src":"4655:4581:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":false,"src":"4326:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"5532:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"7276:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"7327:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"8630:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"8681:10:0","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"3708:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"5002:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"6440:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"6585:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"8074:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"8295:14:0","suffix":"slot","valueSize":1}],"id":24,"nodeType":"InlineAssembly","src":"3457:5789:0"}]},"id":26,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3374:13:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"_preBytes","nameLocation":"3402:9:0","nodeType":"VariableDeclaration","scope":26,"src":"3388:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":18,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"_postBytes","nameLocation":"3426:10:0","nodeType":"VariableDeclaration","scope":26,"src":"3413:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":20,"name":"bytes","nodeType":"ElementaryTypeName","src":"3413:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3387:50:0"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"3447:0:0"},"scope":332,"src":"3365:5887:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"9388:2640:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":38,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9416:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9406:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":41,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9406:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9431:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":37,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9398:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"9398:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":47,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"9466:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9473:6:0","memberName":"length","nodeType":"MemberAccess","src":"9466:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"9483:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":50,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9492:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9483:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9466:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9501:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":46,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"9458:63:0"},{"assignments":[57],"declarations":[{"constant":false,"id":57,"mutability":"mutable","name":"tempBytes","nameLocation":"9545:9:0","nodeType":"VariableDeclaration","scope":62,"src":"9532:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"9532:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":58,"nodeType":"VariableDeclarationStatement","src":"9532:22:0"},{"AST":{"nodeType":"YulBlock","src":"9574:2421:0","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9630:1960:0","statements":[{"nodeType":"YulAssignment","src":"9786:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9805:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9799:5:0"},"nodeType":"YulFunctionCall","src":"9799:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"9786:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"10434:33:0","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10455:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"10464:2:0","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10451:3:0"},"nodeType":"YulFunctionCall","src":"10451:16:0"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10438:9:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10788:70:0","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10806:9:0"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"10817:9:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10802:3:0"},"nodeType":"YulFunctionCall","src":"10802:25:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10833:4:0","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"10846:9:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10839:6:0"},"nodeType":"YulFunctionCall","src":"10839:17:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10829:3:0"},"nodeType":"YulFunctionCall","src":"10829:28:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10798:3:0"},"nodeType":"YulFunctionCall","src":"10798:60:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"10792:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10875:27:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10890:2:0"},{"name":"_length","nodeType":"YulIdentifier","src":"10894:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10886:3:0"},"nodeType":"YulFunctionCall","src":"10886:16:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"10879:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"11284:61:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11313:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11323:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11317:5:0"},"nodeType":"YulFunctionCall","src":"11317:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11306:6:0"},"nodeType":"YulFunctionCall","src":"11306:21:0"},"nodeType":"YulExpressionStatement","src":"11306:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11175:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"11179:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11172:2:0"},"nodeType":"YulFunctionCall","src":"11172:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11184:99:0","statements":[{"nodeType":"YulAssignment","src":"11206:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11216:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11220:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11212:3:0"},"nodeType":"YulFunctionCall","src":"11212:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11206:2:0"}]},{"nodeType":"YulAssignment","src":"11246:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11256:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11260:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:0"},"nodeType":"YulFunctionCall","src":"11252:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11246:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"10924:247:0","statements":[{"nodeType":"YulVariableDeclaration","src":"11073:80:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11095:6:0"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11103:9:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11091:3:0"},"nodeType":"YulFunctionCall","src":"11091:22:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11119:4:0","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11132:9:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11125:6:0"},"nodeType":"YulFunctionCall","src":"11125:17:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11115:3:0"},"nodeType":"YulFunctionCall","src":"11115:28:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:0"},"nodeType":"YulFunctionCall","src":"11087:57:0"},{"name":"_start","nodeType":"YulIdentifier","src":"11146:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11083:3:0"},"nodeType":"YulFunctionCall","src":"11083:70:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11077:2:0","type":""}]}]},"src":"10920:425:0"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11370:9:0"},{"name":"_length","nodeType":"YulIdentifier","src":"11381:7:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11363:6:0"},"nodeType":"YulFunctionCall","src":"11363:26:0"},"nodeType":"YulExpressionStatement","src":"11363:26:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11544:4:0","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11558:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11562:2:0","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11554:3:0"},"nodeType":"YulFunctionCall","src":"11554:11:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11571:2:0","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11567:3:0"},"nodeType":"YulFunctionCall","src":"11567:7:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11550:3:0"},"nodeType":"YulFunctionCall","src":"11550:25:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11537:6:0"},"nodeType":"YulFunctionCall","src":"11537:39:0"},"nodeType":"YulExpressionStatement","src":"11537:39:0"}]},"nodeType":"YulCase","src":"9623:1967:0","value":{"kind":"number","nodeType":"YulLiteral","src":"9628:1:0","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11694:291:0","statements":[{"nodeType":"YulAssignment","src":"11712:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11731:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11725:5:0"},"nodeType":"YulFunctionCall","src":"11725:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11712:9:0"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11906:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"11917:1:0","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11899:6:0"},"nodeType":"YulFunctionCall","src":"11899:20:0"},"nodeType":"YulExpressionStatement","src":"11899:20:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11944:4:0","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11954:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"11965:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11950:3:0"},"nodeType":"YulFunctionCall","src":"11950:20:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11937:6:0"},"nodeType":"YulFunctionCall","src":"11937:34:0"},"nodeType":"YulExpressionStatement","src":"11937:34:0"}]},"nodeType":"YulCase","src":"11686:299:0","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9602:7:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9595:6:0"},"nodeType":"YulFunctionCall","src":"9595:15:0"},"nodeType":"YulSwitch","src":"9588:2397:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":28,"isOffset":false,"isSlot":false,"src":"11095:6:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"10455:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"10894:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"11381:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"9602:7:0","valueSize":1},{"declaration":30,"isOffset":false,"isSlot":false,"src":"11146:6:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"10806:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11370:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11712:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11906:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11954:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"9786:9:0","valueSize":1}],"id":59,"nodeType":"InlineAssembly","src":"9565:2430:0"},{"expression":{"id":60,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"12012:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":36,"id":61,"nodeType":"Return","src":"12005:16:0"}]},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9267:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"_bytes","nameLocation":"9295:6:0","nodeType":"VariableDeclaration","scope":63,"src":"9282:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"9282:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"_start","nameLocation":"9316:6:0","nodeType":"VariableDeclaration","scope":63,"src":"9311:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint","nodeType":"ElementaryTypeName","src":"9311:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"_length","nameLocation":"9337:7:0","nodeType":"VariableDeclaration","scope":63,"src":"9332:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint","nodeType":"ElementaryTypeName","src":"9332:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9272:78:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"9374:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":34,"name":"bytes","nodeType":"ElementaryTypeName","src":"9374:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9373:14:0"},"scope":332,"src":"9258:2770:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"12119:266:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":73,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"12137:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12144:6:0","memberName":"length","nodeType":"MemberAccess","src":"12137:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":75,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12154:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12163:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12154:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12137:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12167:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":72,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"12129:62:0"},{"assignments":[83],"declarations":[{"constant":false,"id":83,"mutability":"mutable","name":"tempAddress","nameLocation":"12209:11:0","nodeType":"VariableDeclaration","scope":88,"src":"12201:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"12201:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":84,"nodeType":"VariableDeclarationStatement","src":"12201:19:0"},{"AST":{"nodeType":"YulBlock","src":"12240:110:0","statements":[{"nodeType":"YulAssignment","src":"12254:86:0","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12287:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12295:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12283:3:0"},"nodeType":"YulFunctionCall","src":"12283:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12302:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12279:3:0"},"nodeType":"YulFunctionCall","src":"12279:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12273:5:0"},"nodeType":"YulFunctionCall","src":"12273:37:0"},{"kind":"number","nodeType":"YulLiteral","src":"12312:27:0","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12269:3:0"},"nodeType":"YulFunctionCall","src":"12269:71:0"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12254:11:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":65,"isOffset":false,"isSlot":false,"src":"12287:6:0","valueSize":1},{"declaration":67,"isOffset":false,"isSlot":false,"src":"12302:6:0","valueSize":1},{"declaration":83,"isOffset":false,"isSlot":false,"src":"12254:11:0","valueSize":1}],"id":85,"nodeType":"InlineAssembly","src":"12231:119:0"},{"expression":{"id":86,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"12367:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":71,"id":87,"nodeType":"Return","src":"12360:18:0"}]},"id":89,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"12043:9:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"_bytes","nameLocation":"12066:6:0","nodeType":"VariableDeclaration","scope":89,"src":"12053:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":64,"name":"bytes","nodeType":"ElementaryTypeName","src":"12053:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"_start","nameLocation":"12079:6:0","nodeType":"VariableDeclaration","scope":89,"src":"12074:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint","nodeType":"ElementaryTypeName","src":"12074:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12052:34:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"12110:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"12110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12109:9:0"},"scope":332,"src":"12034:351:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"12472:217:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":99,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"12490:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12497:6:0","memberName":"length","nodeType":"MemberAccess","src":"12490:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":101,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"12507:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12516:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12507:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12490:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12519:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12482:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12482:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"12482:59:0"},{"assignments":[109],"declarations":[{"constant":false,"id":109,"mutability":"mutable","name":"tempUint","nameLocation":"12557:8:0","nodeType":"VariableDeclaration","scope":114,"src":"12551:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":108,"name":"uint8","nodeType":"ElementaryTypeName","src":"12551:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":110,"nodeType":"VariableDeclarationStatement","src":"12551:14:0"},{"AST":{"nodeType":"YulBlock","src":"12585:72:0","statements":[{"nodeType":"YulAssignment","src":"12599:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12625:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12633:3:0","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12621:3:0"},"nodeType":"YulFunctionCall","src":"12621:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12639:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12617:3:0"},"nodeType":"YulFunctionCall","src":"12617:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12611:5:0"},"nodeType":"YulFunctionCall","src":"12611:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12599:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":91,"isOffset":false,"isSlot":false,"src":"12625:6:0","valueSize":1},{"declaration":93,"isOffset":false,"isSlot":false,"src":"12639:6:0","valueSize":1},{"declaration":109,"isOffset":false,"isSlot":false,"src":"12599:8:0","valueSize":1}],"id":111,"nodeType":"InlineAssembly","src":"12576:81:0"},{"expression":{"id":112,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12674:8:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":97,"id":113,"nodeType":"Return","src":"12667:15:0"}]},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"12400:7:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"_bytes","nameLocation":"12421:6:0","nodeType":"VariableDeclaration","scope":115,"src":"12408:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":90,"name":"bytes","nodeType":"ElementaryTypeName","src":"12408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"_start","nameLocation":"12434:6:0","nodeType":"VariableDeclaration","scope":115,"src":"12429:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint","nodeType":"ElementaryTypeName","src":"12429:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12407:34:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"12465:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":95,"name":"uint8","nodeType":"ElementaryTypeName","src":"12465:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12464:7:0"},"scope":332,"src":"12391:298:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"12778:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":125,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"12796:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12803:6:0","memberName":"length","nodeType":"MemberAccess","src":"12796:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":127,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"12813:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12822:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12813:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12796:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12825:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12788:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12788:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"12788:60:0"},{"assignments":[135],"declarations":[{"constant":false,"id":135,"mutability":"mutable","name":"tempUint","nameLocation":"12865:8:0","nodeType":"VariableDeclaration","scope":140,"src":"12858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":134,"name":"uint16","nodeType":"ElementaryTypeName","src":"12858:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":136,"nodeType":"VariableDeclarationStatement","src":"12858:15:0"},{"AST":{"nodeType":"YulBlock","src":"12893:72:0","statements":[{"nodeType":"YulAssignment","src":"12907:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12933:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12941:3:0","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12929:3:0"},"nodeType":"YulFunctionCall","src":"12929:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12947:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:0"},"nodeType":"YulFunctionCall","src":"12925:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12919:5:0"},"nodeType":"YulFunctionCall","src":"12919:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12907:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":117,"isOffset":false,"isSlot":false,"src":"12933:6:0","valueSize":1},{"declaration":119,"isOffset":false,"isSlot":false,"src":"12947:6:0","valueSize":1},{"declaration":135,"isOffset":false,"isSlot":false,"src":"12907:8:0","valueSize":1}],"id":137,"nodeType":"InlineAssembly","src":"12884:81:0"},{"expression":{"id":138,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"12982:8:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":123,"id":139,"nodeType":"Return","src":"12975:15:0"}]},"id":141,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"12704:8:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"_bytes","nameLocation":"12726:6:0","nodeType":"VariableDeclaration","scope":141,"src":"12713:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"12713:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"_start","nameLocation":"12739:6:0","nodeType":"VariableDeclaration","scope":141,"src":"12734:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint","nodeType":"ElementaryTypeName","src":"12734:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12712:34:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"12770:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":121,"name":"uint16","nodeType":"ElementaryTypeName","src":"12770:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12769:8:0"},"scope":332,"src":"12695:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"13086:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":151,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"13104:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13111:6:0","memberName":"length","nodeType":"MemberAccess","src":"13104:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":153,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"13121:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13130:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13121:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13133:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13096:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13096:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":159,"nodeType":"ExpressionStatement","src":"13096:60:0"},{"assignments":[161],"declarations":[{"constant":false,"id":161,"mutability":"mutable","name":"tempUint","nameLocation":"13173:8:0","nodeType":"VariableDeclaration","scope":166,"src":"13166:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":160,"name":"uint32","nodeType":"ElementaryTypeName","src":"13166:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":162,"nodeType":"VariableDeclarationStatement","src":"13166:15:0"},{"AST":{"nodeType":"YulBlock","src":"13201:72:0","statements":[{"nodeType":"YulAssignment","src":"13215:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13241:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13249:3:0","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13237:3:0"},"nodeType":"YulFunctionCall","src":"13237:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13255:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:0"},"nodeType":"YulFunctionCall","src":"13233:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13227:5:0"},"nodeType":"YulFunctionCall","src":"13227:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13215:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":143,"isOffset":false,"isSlot":false,"src":"13241:6:0","valueSize":1},{"declaration":145,"isOffset":false,"isSlot":false,"src":"13255:6:0","valueSize":1},{"declaration":161,"isOffset":false,"isSlot":false,"src":"13215:8:0","valueSize":1}],"id":163,"nodeType":"InlineAssembly","src":"13192:81:0"},{"expression":{"id":164,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"13290:8:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":149,"id":165,"nodeType":"Return","src":"13283:15:0"}]},"id":167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"13012:8:0","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"_bytes","nameLocation":"13034:6:0","nodeType":"VariableDeclaration","scope":167,"src":"13021:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":142,"name":"bytes","nodeType":"ElementaryTypeName","src":"13021:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"_start","nameLocation":"13047:6:0","nodeType":"VariableDeclaration","scope":167,"src":"13042:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint","nodeType":"ElementaryTypeName","src":"13042:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13020:34:0"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"13078:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":147,"name":"uint32","nodeType":"ElementaryTypeName","src":"13078:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13077:8:0"},"scope":332,"src":"13003:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":192,"nodeType":"Block","src":"13394:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":177,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"13412:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13419:6:0","memberName":"length","nodeType":"MemberAccess","src":"13412:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":179,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"13429:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13438:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13429:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13412:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13441:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13404:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"13404:60:0"},{"assignments":[187],"declarations":[{"constant":false,"id":187,"mutability":"mutable","name":"tempUint","nameLocation":"13481:8:0","nodeType":"VariableDeclaration","scope":192,"src":"13474:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":186,"name":"uint64","nodeType":"ElementaryTypeName","src":"13474:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":188,"nodeType":"VariableDeclarationStatement","src":"13474:15:0"},{"AST":{"nodeType":"YulBlock","src":"13509:72:0","statements":[{"nodeType":"YulAssignment","src":"13523:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13549:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13557:3:0","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13545:3:0"},"nodeType":"YulFunctionCall","src":"13545:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13563:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13541:3:0"},"nodeType":"YulFunctionCall","src":"13541:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13535:5:0"},"nodeType":"YulFunctionCall","src":"13535:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13523:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":169,"isOffset":false,"isSlot":false,"src":"13549:6:0","valueSize":1},{"declaration":171,"isOffset":false,"isSlot":false,"src":"13563:6:0","valueSize":1},{"declaration":187,"isOffset":false,"isSlot":false,"src":"13523:8:0","valueSize":1}],"id":189,"nodeType":"InlineAssembly","src":"13500:81:0"},{"expression":{"id":190,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"13598:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":175,"id":191,"nodeType":"Return","src":"13591:15:0"}]},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13320:8:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"_bytes","nameLocation":"13342:6:0","nodeType":"VariableDeclaration","scope":193,"src":"13329:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"13329:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"_start","nameLocation":"13355:6:0","nodeType":"VariableDeclaration","scope":193,"src":"13350:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint","nodeType":"ElementaryTypeName","src":"13350:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13328:34:0"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":193,"src":"13386:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":173,"name":"uint64","nodeType":"ElementaryTypeName","src":"13386:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13385:8:0"},"scope":332,"src":"13311:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"13702:220:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":203,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"13720:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13727:6:0","memberName":"length","nodeType":"MemberAccess","src":"13720:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":205,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"13737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13746:2:0","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13737:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13750:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13712:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13712:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"13712:61:0"},{"assignments":[213],"declarations":[{"constant":false,"id":213,"mutability":"mutable","name":"tempUint","nameLocation":"13790:8:0","nodeType":"VariableDeclaration","scope":218,"src":"13783:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":212,"name":"uint96","nodeType":"ElementaryTypeName","src":"13783:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":214,"nodeType":"VariableDeclarationStatement","src":"13783:15:0"},{"AST":{"nodeType":"YulBlock","src":"13818:72:0","statements":[{"nodeType":"YulAssignment","src":"13832:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13858:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13866:3:0","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:0"},"nodeType":"YulFunctionCall","src":"13854:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13872:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13850:3:0"},"nodeType":"YulFunctionCall","src":"13850:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13844:5:0"},"nodeType":"YulFunctionCall","src":"13844:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13832:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":195,"isOffset":false,"isSlot":false,"src":"13858:6:0","valueSize":1},{"declaration":197,"isOffset":false,"isSlot":false,"src":"13872:6:0","valueSize":1},{"declaration":213,"isOffset":false,"isSlot":false,"src":"13832:8:0","valueSize":1}],"id":215,"nodeType":"InlineAssembly","src":"13809:81:0"},{"expression":{"id":216,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"13907:8:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":201,"id":217,"nodeType":"Return","src":"13900:15:0"}]},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13628:8:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"_bytes","nameLocation":"13650:6:0","nodeType":"VariableDeclaration","scope":219,"src":"13637:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":194,"name":"bytes","nodeType":"ElementaryTypeName","src":"13637:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"_start","nameLocation":"13663:6:0","nodeType":"VariableDeclaration","scope":219,"src":"13658:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint","nodeType":"ElementaryTypeName","src":"13658:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13636:34:0"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"13694:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":199,"name":"uint96","nodeType":"ElementaryTypeName","src":"13694:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13693:8:0"},"scope":332,"src":"13619:303:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"14013:223:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":229,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"14031:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14038:6:0","memberName":"length","nodeType":"MemberAccess","src":"14031:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"14048:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14057:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14048:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14031:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14061:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14023:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14023:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"14023:62:0"},{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"tempUint","nameLocation":"14103:8:0","nodeType":"VariableDeclaration","scope":244,"src":"14095:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":238,"name":"uint128","nodeType":"ElementaryTypeName","src":"14095:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":240,"nodeType":"VariableDeclarationStatement","src":"14095:16:0"},{"AST":{"nodeType":"YulBlock","src":"14131:73:0","statements":[{"nodeType":"YulAssignment","src":"14145:49:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14171:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14179:4:0","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:0"},"nodeType":"YulFunctionCall","src":"14167:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14186:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:0"},"nodeType":"YulFunctionCall","src":"14163:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14157:5:0"},"nodeType":"YulFunctionCall","src":"14157:37:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14145:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":221,"isOffset":false,"isSlot":false,"src":"14171:6:0","valueSize":1},{"declaration":223,"isOffset":false,"isSlot":false,"src":"14186:6:0","valueSize":1},{"declaration":239,"isOffset":false,"isSlot":false,"src":"14145:8:0","valueSize":1}],"id":241,"nodeType":"InlineAssembly","src":"14122:82:0"},{"expression":{"id":242,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"14221:8:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":227,"id":243,"nodeType":"Return","src":"14214:15:0"}]},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"13937:9:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"_bytes","nameLocation":"13960:6:0","nodeType":"VariableDeclaration","scope":245,"src":"13947:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"13947:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"_start","nameLocation":"13973:6:0","nodeType":"VariableDeclaration","scope":245,"src":"13968:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint","nodeType":"ElementaryTypeName","src":"13968:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13946:34:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"14004:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":225,"name":"uint128","nodeType":"ElementaryTypeName","src":"14004:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14003:9:0"},"scope":332,"src":"13928:308:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"14324:220:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":255,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"14342:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14349:6:0","memberName":"length","nodeType":"MemberAccess","src":"14342:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":257,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"14359:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14368:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14359:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14342:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14372:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14334:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"14334:62:0"},{"assignments":[265],"declarations":[{"constant":false,"id":265,"mutability":"mutable","name":"tempUint","nameLocation":"14411:8:0","nodeType":"VariableDeclaration","scope":270,"src":"14406:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint","nodeType":"ElementaryTypeName","src":"14406:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":266,"nodeType":"VariableDeclarationStatement","src":"14406:13:0"},{"AST":{"nodeType":"YulBlock","src":"14439:73:0","statements":[{"nodeType":"YulAssignment","src":"14453:49:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14479:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14487:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14475:3:0"},"nodeType":"YulFunctionCall","src":"14475:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14494:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14471:3:0"},"nodeType":"YulFunctionCall","src":"14471:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14465:5:0"},"nodeType":"YulFunctionCall","src":"14465:37:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14453:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":247,"isOffset":false,"isSlot":false,"src":"14479:6:0","valueSize":1},{"declaration":249,"isOffset":false,"isSlot":false,"src":"14494:6:0","valueSize":1},{"declaration":265,"isOffset":false,"isSlot":false,"src":"14453:8:0","valueSize":1}],"id":267,"nodeType":"InlineAssembly","src":"14430:82:0"},{"expression":{"id":268,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"14529:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":253,"id":269,"nodeType":"Return","src":"14522:15:0"}]},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"14251:9:0","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"_bytes","nameLocation":"14274:6:0","nodeType":"VariableDeclaration","scope":271,"src":"14261:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":246,"name":"bytes","nodeType":"ElementaryTypeName","src":"14261:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"_start","nameLocation":"14287:6:0","nodeType":"VariableDeclaration","scope":271,"src":"14282:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint","nodeType":"ElementaryTypeName","src":"14282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14260:34:0"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"14318:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint","nodeType":"ElementaryTypeName","src":"14318:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14317:6:0"},"scope":332,"src":"14242:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"14635:232:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":281,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"14653:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14660:6:0","memberName":"length","nodeType":"MemberAccess","src":"14653:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":283,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"14670:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14679:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14670:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14653:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14683:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14645:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14645:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"14645:62:0"},{"assignments":[291],"declarations":[{"constant":false,"id":291,"mutability":"mutable","name":"tempBytes32","nameLocation":"14725:11:0","nodeType":"VariableDeclaration","scope":296,"src":"14717:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14717:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":292,"nodeType":"VariableDeclarationStatement","src":"14717:19:0"},{"AST":{"nodeType":"YulBlock","src":"14756:76:0","statements":[{"nodeType":"YulAssignment","src":"14770:52:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14799:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14807:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:0"},"nodeType":"YulFunctionCall","src":"14795:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14814:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14791:3:0"},"nodeType":"YulFunctionCall","src":"14791:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14785:5:0"},"nodeType":"YulFunctionCall","src":"14785:37:0"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"14770:11:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":273,"isOffset":false,"isSlot":false,"src":"14799:6:0","valueSize":1},{"declaration":275,"isOffset":false,"isSlot":false,"src":"14814:6:0","valueSize":1},{"declaration":291,"isOffset":false,"isSlot":false,"src":"14770:11:0","valueSize":1}],"id":293,"nodeType":"InlineAssembly","src":"14747:85:0"},{"expression":{"id":294,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"14849:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":279,"id":295,"nodeType":"Return","src":"14842:18:0"}]},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14559:9:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"_bytes","nameLocation":"14582:6:0","nodeType":"VariableDeclaration","scope":297,"src":"14569:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"14569:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"_start","nameLocation":"14595:6:0","nodeType":"VariableDeclaration","scope":297,"src":"14590:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint","nodeType":"ElementaryTypeName","src":"14590:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14568:34:0"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"14626:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14626:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14625:9:0"},"scope":332,"src":"14550:317:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"14966:1331:0","statements":[{"assignments":[307],"declarations":[{"constant":false,"id":307,"mutability":"mutable","name":"success","nameLocation":"14981:7:0","nodeType":"VariableDeclaration","scope":313,"src":"14976:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":306,"name":"bool","nodeType":"ElementaryTypeName","src":"14976:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":309,"initialValue":{"hexValue":"74727565","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"14976:19:0"},{"AST":{"nodeType":"YulBlock","src":"15015:1251:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15029:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15049:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15043:5:0"},"nodeType":"YulFunctionCall","src":"15043:16:0"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15033:6:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15192:969:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15421:11:0","value":{"kind":"number","nodeType":"YulLiteral","src":"15431:1:0","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15425:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15450:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15464:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"15475:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15460:3:0"},"nodeType":"YulFunctionCall","src":"15460:20:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15454:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15497:26:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15512:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"15516:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15508:3:0"},"nodeType":"YulFunctionCall","src":"15508:15:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15501:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"15863:284:0","statements":[{"body":{"nodeType":"YulBlock","src":"15999:130:0","statements":[{"nodeType":"YulAssignment","src":"16063:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16074:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16063:7:0"}]},{"nodeType":"YulAssignment","src":"16100:7:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16106:1:0","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16100:2:0"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15982:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15976:5:0"},"nodeType":"YulFunctionCall","src":"15976:9:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15993:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15987:5:0"},"nodeType":"YulFunctionCall","src":"15987:9:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15973:2:0"},"nodeType":"YulFunctionCall","src":"15973:24:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15966:6:0"},"nodeType":"YulFunctionCall","src":"15966:32:0"},"nodeType":"YulIf","src":"15963:166:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15745:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"15749:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15742:2:0"},"nodeType":"YulFunctionCall","src":"15742:11:0"},{"name":"cb","nodeType":"YulIdentifier","src":"15755:2:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15738:3:0"},"nodeType":"YulFunctionCall","src":"15738:20:0"},{"kind":"number","nodeType":"YulLiteral","src":"15760:1:0","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15735:2:0"},"nodeType":"YulFunctionCall","src":"15735:27:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15763:99:0","statements":[{"nodeType":"YulAssignment","src":"15785:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15795:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"15799:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15791:3:0"},"nodeType":"YulFunctionCall","src":"15791:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"15785:2:0"}]},{"nodeType":"YulAssignment","src":"15825:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15835:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"15839:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:0"},"nodeType":"YulFunctionCall","src":"15831:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"15825:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"15545:189:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15567:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15581:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"15593:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15577:3:0"},"nodeType":"YulFunctionCall","src":"15577:21:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15571:2:0","type":""}]}]},"src":"15541:606:0"}]},"nodeType":"YulCase","src":"15185:976:0","value":{"kind":"number","nodeType":"YulLiteral","src":"15190:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16182:74:0","statements":[{"nodeType":"YulAssignment","src":"16230:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16241:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16230:7:0"}]}]},"nodeType":"YulCase","src":"16174:82:0","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15146:6:0"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15160:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15154:5:0"},"nodeType":"YulFunctionCall","src":"15154:17:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15143:2:0"},"nodeType":"YulFunctionCall","src":"15143:29:0"},"nodeType":"YulSwitch","src":"15136:1120:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":301,"isOffset":false,"isSlot":false,"src":"15160:10:0","valueSize":1},{"declaration":301,"isOffset":false,"isSlot":false,"src":"15581:10:0","valueSize":1},{"declaration":299,"isOffset":false,"isSlot":false,"src":"15049:9:0","valueSize":1},{"declaration":299,"isOffset":false,"isSlot":false,"src":"15464:9:0","valueSize":1},{"declaration":307,"isOffset":false,"isSlot":false,"src":"16063:7:0","valueSize":1},{"declaration":307,"isOffset":false,"isSlot":false,"src":"16230:7:0","valueSize":1}],"id":310,"nodeType":"InlineAssembly","src":"15006:1260:0"},{"expression":{"id":311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"16283:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":305,"id":312,"nodeType":"Return","src":"16276:14:0"}]},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"14882:5:0","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"_preBytes","nameLocation":"14901:9:0","nodeType":"VariableDeclaration","scope":314,"src":"14888:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"14888:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"_postBytes","nameLocation":"14925:10:0","nodeType":"VariableDeclaration","scope":314,"src":"14912:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"14912:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14887:49:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"14960:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"14960:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14959:6:0"},"scope":332,"src":"14873:1424:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"16404:2585:0","statements":[{"assignments":[324],"declarations":[{"constant":false,"id":324,"mutability":"mutable","name":"success","nameLocation":"16419:7:0","nodeType":"VariableDeclaration","scope":330,"src":"16414:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":323,"name":"bool","nodeType":"ElementaryTypeName","src":"16414:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":326,"initialValue":{"hexValue":"74727565","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16429:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16414:19:0"},{"AST":{"nodeType":"YulBlock","src":"16453:2505:0","statements":[{"nodeType":"YulVariableDeclaration","src":"16512:34:0","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16531:14:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16525:5:0"},"nodeType":"YulFunctionCall","src":"16525:21:0"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16516:5:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16637:76:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16660:5:0"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16675:5:0","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16693:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"16700:1:0","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16689:3:0"},"nodeType":"YulFunctionCall","src":"16689:13:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16682:6:0"},"nodeType":"YulFunctionCall","src":"16682:21:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16671:3:0"},"nodeType":"YulFunctionCall","src":"16671:33:0"},{"kind":"number","nodeType":"YulLiteral","src":"16706:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16667:3:0"},"nodeType":"YulFunctionCall","src":"16667:41:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16656:3:0"},"nodeType":"YulFunctionCall","src":"16656:53:0"},{"kind":"number","nodeType":"YulLiteral","src":"16711:1:0","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16652:3:0"},"nodeType":"YulFunctionCall","src":"16652:61:0"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16641:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16726:32:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"16747:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16741:5:0"},"nodeType":"YulFunctionCall","src":"16741:17:0"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"16730:7:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16882:1971:0","statements":[{"body":{"nodeType":"YulBlock","src":"17193:1646:0","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17265:340:0","statements":[{"nodeType":"YulAssignment","src":"17358:38:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17375:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"17382:5:0","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17371:3:0"},"nodeType":"YulFunctionCall","src":"17371:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"17390:5:0","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17367:3:0"},"nodeType":"YulFunctionCall","src":"17367:29:0"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17358:5:0"}]},{"body":{"nodeType":"YulBlock","src":"17473:110:0","statements":[{"nodeType":"YulAssignment","src":"17545:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17556:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17545:7:0"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17435:5:0"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17452:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"17464:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17448:3:0"},"nodeType":"YulFunctionCall","src":"17448:21:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17442:5:0"},"nodeType":"YulFunctionCall","src":"17442:28:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17432:2:0"},"nodeType":"YulFunctionCall","src":"17432:39:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17425:6:0"},"nodeType":"YulFunctionCall","src":"17425:47:0"},"nodeType":"YulIf","src":"17422:161:0"}]},"nodeType":"YulCase","src":"17258:347:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17263:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17634:1187:0","statements":[{"nodeType":"YulVariableDeclaration","src":"17903:11:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17913:1:0","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"17907:2:0","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18027:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18032:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18020:6:0"},"nodeType":"YulFunctionCall","src":"18020:27:0"},"nodeType":"YulExpressionStatement","src":"18020:27:0"},{"nodeType":"YulVariableDeclaration","src":"18072:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18092:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18097:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18082:9:0"},"nodeType":"YulFunctionCall","src":"18082:20:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18076:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18128:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18142:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"18154:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18138:3:0"},"nodeType":"YulFunctionCall","src":"18138:21:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18132:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18184:27:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18199:2:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"18203:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18195:3:0"},"nodeType":"YulFunctionCall","src":"18195:16:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18188:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"18545:254:0","statements":[{"body":{"nodeType":"YulBlock","src":"18611:162:0","statements":[{"nodeType":"YulAssignment","src":"18691:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18702:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18691:7:0"}]},{"nodeType":"YulAssignment","src":"18736:7:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18742:1:0","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"18736:2:0"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18594:2:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18588:5:0"},"nodeType":"YulFunctionCall","src":"18588:9:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18605:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18599:5:0"},"nodeType":"YulFunctionCall","src":"18599:9:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18585:2:0"},"nodeType":"YulFunctionCall","src":"18585:24:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18578:6:0"},"nodeType":"YulFunctionCall","src":"18578:32:0"},"nodeType":"YulIf","src":"18575:198:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18406:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"18410:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18403:2:0"},"nodeType":"YulFunctionCall","src":"18403:11:0"},{"name":"cb","nodeType":"YulIdentifier","src":"18416:2:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18399:3:0"},"nodeType":"YulFunctionCall","src":"18399:20:0"},{"kind":"number","nodeType":"YulLiteral","src":"18421:1:0","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18396:2:0"},"nodeType":"YulFunctionCall","src":"18396:27:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18424:120:0","statements":[{"nodeType":"YulAssignment","src":"18454:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18464:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"18468:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18460:3:0"},"nodeType":"YulFunctionCall","src":"18460:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18454:2:0"}]},{"nodeType":"YulAssignment","src":"18499:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18509:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"18513:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18505:3:0"},"nodeType":"YulFunctionCall","src":"18505:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18499:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"18367:28:0","statements":[]},"src":"18363:436:0"}]},"nodeType":"YulCase","src":"17626:1195:0","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17225:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"17234:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17222:2:0"},"nodeType":"YulFunctionCall","src":"17222:15:0"},"nodeType":"YulSwitch","src":"17215:1606:0"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17183:7:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17176:6:0"},"nodeType":"YulFunctionCall","src":"17176:15:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17169:6:0"},"nodeType":"YulFunctionCall","src":"17169:23:0"},"nodeType":"YulIf","src":"17166:1673:0"}]},"nodeType":"YulCase","src":"16875:1978:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16880:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18874:74:0","statements":[{"nodeType":"YulAssignment","src":"18922:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18933:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18922:7:0"}]}]},"nodeType":"YulCase","src":"18866:82:0","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"16845:7:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"16854:7:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16842:2:0"},"nodeType":"YulFunctionCall","src":"16842:20:0"},"nodeType":"YulSwitch","src":"16835:2113:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":318,"isOffset":false,"isSlot":false,"src":"16747:10:0","valueSize":1},{"declaration":318,"isOffset":false,"isSlot":false,"src":"17452:10:0","valueSize":1},{"declaration":318,"isOffset":false,"isSlot":false,"src":"18142:10:0","valueSize":1},{"declaration":316,"isOffset":false,"isSlot":true,"src":"16531:14:0","suffix":"slot","valueSize":1},{"declaration":316,"isOffset":false,"isSlot":true,"src":"18032:14:0","suffix":"slot","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"17545:7:0","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"18691:7:0","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"18922:7:0","valueSize":1}],"id":327,"nodeType":"InlineAssembly","src":"16444:2514:0"},{"expression":{"id":328,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"18975:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":322,"id":329,"nodeType":"Return","src":"18968:14:0"}]},"id":331,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"16312:12:0","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"_preBytes","nameLocation":"16339:9:0","nodeType":"VariableDeclaration","scope":331,"src":"16325:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"16325:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"_postBytes","nameLocation":"16363:10:0","nodeType":"VariableDeclaration","scope":331,"src":"16350:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"16350:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16324:50:0"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":331,"src":"16398:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"16398:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16397:6:0"},"scope":332,"src":"16303:2686:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":333,"src":"369:18622:0","usedErrors":[],"usedEvents":[]}],"src":"336:18656:0"},"id":0},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol","exportedSymbols":{"ExcessivelySafeCall":[429]},"id":430,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":334,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"46:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"ExcessivelySafeCall","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":429,"linearizedBaseContracts":[429],"name":"ExcessivelySafeCall","nameLocation":"80:19:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":337,"mutability":"constant","name":"LOW_28_MASK","nameLocation":"120:11:1","nodeType":"VariableDeclaration","scope":429,"src":"106:94:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"106:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134:66:1","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"1285:1100:1","statements":[{"assignments":[354],"declarations":[{"constant":false,"id":354,"mutability":"mutable","name":"_toCopy","nameLocation":"1336:7:1","nodeType":"VariableDeclaration","scope":371,"src":"1331:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint","nodeType":"ElementaryTypeName","src":"1331:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":355,"nodeType":"VariableDeclarationStatement","src":"1331:12:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"_success","nameLocation":"1358:8:1","nodeType":"VariableDeclaration","scope":371,"src":"1353:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":356,"name":"bool","nodeType":"ElementaryTypeName","src":"1353:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":358,"nodeType":"VariableDeclarationStatement","src":"1353:13:1"},{"assignments":[360],"declarations":[{"constant":false,"id":360,"mutability":"mutable","name":"_returnData","nameLocation":"1389:11:1","nodeType":"VariableDeclaration","scope":371,"src":"1376:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":359,"name":"bytes","nodeType":"ElementaryTypeName","src":"1376:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":365,"initialValue":{"arguments":[{"id":363,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1413:8:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1403:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":361,"name":"bytes","nodeType":"ElementaryTypeName","src":"1407:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1403:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1376:46:1"},{"AST":{"nodeType":"YulBlock","src":"1651:688:1","statements":[{"nodeType":"YulAssignment","src":"1665:279:1","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"1699:4:1"},{"name":"_target","nodeType":"YulIdentifier","src":"1728:7:1"},{"kind":"number","nodeType":"YulLiteral","src":"1766:1:1","type":"","value":"0"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1804:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1815:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:1"},"nodeType":"YulFunctionCall","src":"1800:20:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1853:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1847:5:1"},"nodeType":"YulFunctionCall","src":"1847:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"1890:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1919:1:1","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1677:4:1"},"nodeType":"YulFunctionCall","src":"1677:267:1"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"1665:8:1"}]},{"nodeType":"YulAssignment","src":"2000:27:1","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2011:14:1"},"nodeType":"YulFunctionCall","src":"2011:16:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2000:7:1"}]},{"body":{"nodeType":"YulBlock","src":"2065:51:1","statements":[{"nodeType":"YulAssignment","src":"2083:19:1","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2094:8:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2083:7:1"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2046:7:1"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2055:8:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2043:2:1"},"nodeType":"YulFunctionCall","src":"2043:21:1"},"nodeType":"YulIf","src":"2040:76:1"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2188:11:1"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2201:7:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2181:6:1"},"nodeType":"YulFunctionCall","src":"2181:28:1"},"nodeType":"YulExpressionStatement","src":"2181:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2298:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"2311:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:1"},"nodeType":"YulFunctionCall","src":"2294:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"2318:1:1","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2321:7:1"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2279:14:1"},"nodeType":"YulFunctionCall","src":"2279:50:1"},"nodeType":"YulExpressionStatement","src":"2279:50:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":346,"isOffset":false,"isSlot":false,"src":"1804:9:1","valueSize":1},{"declaration":346,"isOffset":false,"isSlot":false,"src":"1853:9:1","valueSize":1},{"declaration":342,"isOffset":false,"isSlot":false,"src":"1699:4:1","valueSize":1},{"declaration":344,"isOffset":false,"isSlot":false,"src":"2055:8:1","valueSize":1},{"declaration":344,"isOffset":false,"isSlot":false,"src":"2094:8:1","valueSize":1},{"declaration":360,"isOffset":false,"isSlot":false,"src":"2188:11:1","valueSize":1},{"declaration":360,"isOffset":false,"isSlot":false,"src":"2298:11:1","valueSize":1},{"declaration":357,"isOffset":false,"isSlot":false,"src":"1665:8:1","valueSize":1},{"declaration":340,"isOffset":false,"isSlot":false,"src":"1728:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2000:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2046:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2083:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2201:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2321:7:1","valueSize":1}],"id":366,"nodeType":"InlineAssembly","src":"1642:697:1"},{"expression":{"components":[{"id":367,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2356:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":368,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"2366:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2355:23:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":352,"id":370,"nodeType":"Return","src":"2348:30:1"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"207:899:1","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeCall","nameLocation":"1120:19:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"_target","nameLocation":"1157:7:1","nodeType":"VariableDeclaration","scope":372,"src":"1149:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"_gas","nameLocation":"1179:4:1","nodeType":"VariableDeclaration","scope":372,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"_maxCopy","nameLocation":"1200:8:1","nodeType":"VariableDeclaration","scope":372,"src":"1193:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":343,"name":"uint16","nodeType":"ElementaryTypeName","src":"1193:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"_calldata","nameLocation":"1231:9:1","nodeType":"VariableDeclaration","scope":372,"src":"1218:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":345,"name":"bytes","nodeType":"ElementaryTypeName","src":"1218:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1139:107:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"1265:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"1265:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"1271:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":350,"name":"bytes","nodeType":"ElementaryTypeName","src":"1271:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1264:20:1"},"scope":429,"src":"1111:1274:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"3480:1072:1","statements":[{"assignments":[389],"declarations":[{"constant":false,"id":389,"mutability":"mutable","name":"_toCopy","nameLocation":"3531:7:1","nodeType":"VariableDeclaration","scope":406,"src":"3526:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint","nodeType":"ElementaryTypeName","src":"3526:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":390,"nodeType":"VariableDeclarationStatement","src":"3526:12:1"},{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"_success","nameLocation":"3553:8:1","nodeType":"VariableDeclaration","scope":406,"src":"3548:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":391,"name":"bool","nodeType":"ElementaryTypeName","src":"3548:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":393,"nodeType":"VariableDeclarationStatement","src":"3548:13:1"},{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"_returnData","nameLocation":"3584:11:1","nodeType":"VariableDeclaration","scope":406,"src":"3571:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"3571:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":400,"initialValue":{"arguments":[{"id":398,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3608:8:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3598:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":396,"name":"bytes","nodeType":"ElementaryTypeName","src":"3602:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3598:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3571:46:1"},{"AST":{"nodeType":"YulBlock","src":"3846:660:1","statements":[{"nodeType":"YulAssignment","src":"3860:251:1","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"3900:4:1"},{"name":"_target","nodeType":"YulIdentifier","src":"3929:7:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"3971:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3982:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:1"},"nodeType":"YulFunctionCall","src":"3967:20:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4020:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4014:5:1"},"nodeType":"YulFunctionCall","src":"4014:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"4057:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4086:1:1","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"3872:10:1"},"nodeType":"YulFunctionCall","src":"3872:239:1"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"3860:8:1"}]},{"nodeType":"YulAssignment","src":"4167:27:1","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4178:14:1"},"nodeType":"YulFunctionCall","src":"4178:16:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4167:7:1"}]},{"body":{"nodeType":"YulBlock","src":"4232:51:1","statements":[{"nodeType":"YulAssignment","src":"4250:19:1","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4261:8:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4250:7:1"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4213:7:1"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4222:8:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4210:2:1"},"nodeType":"YulFunctionCall","src":"4210:21:1"},"nodeType":"YulIf","src":"4207:76:1"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4355:11:1"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4368:7:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4348:6:1"},"nodeType":"YulFunctionCall","src":"4348:28:1"},"nodeType":"YulExpressionStatement","src":"4348:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4465:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4478:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:1"},"nodeType":"YulFunctionCall","src":"4461:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"4485:1:1","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4488:7:1"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"4446:14:1"},"nodeType":"YulFunctionCall","src":"4446:50:1"},"nodeType":"YulExpressionStatement","src":"4446:50:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":381,"isOffset":false,"isSlot":false,"src":"3971:9:1","valueSize":1},{"declaration":381,"isOffset":false,"isSlot":false,"src":"4020:9:1","valueSize":1},{"declaration":377,"isOffset":false,"isSlot":false,"src":"3900:4:1","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"4222:8:1","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"4261:8:1","valueSize":1},{"declaration":395,"isOffset":false,"isSlot":false,"src":"4355:11:1","valueSize":1},{"declaration":395,"isOffset":false,"isSlot":false,"src":"4465:11:1","valueSize":1},{"declaration":392,"isOffset":false,"isSlot":false,"src":"3860:8:1","valueSize":1},{"declaration":375,"isOffset":false,"isSlot":false,"src":"3929:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4167:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4213:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4250:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4368:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4488:7:1","valueSize":1}],"id":401,"nodeType":"InlineAssembly","src":"3837:669:1"},{"expression":{"components":[{"id":402,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4523:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":403,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4533:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4522:23:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":387,"id":405,"nodeType":"Return","src":"4515:30:1"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2391:899:1","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeStaticCall","nameLocation":"3304:25:1","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"_target","nameLocation":"3347:7:1","nodeType":"VariableDeclaration","scope":407,"src":"3339:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"_gas","nameLocation":"3369:4:1","nodeType":"VariableDeclaration","scope":407,"src":"3364:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint","nodeType":"ElementaryTypeName","src":"3364:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"_maxCopy","nameLocation":"3390:8:1","nodeType":"VariableDeclaration","scope":407,"src":"3383:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":378,"name":"uint16","nodeType":"ElementaryTypeName","src":"3383:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_calldata","nameLocation":"3421:9:1","nodeType":"VariableDeclaration","scope":407,"src":"3408:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":380,"name":"bytes","nodeType":"ElementaryTypeName","src":"3408:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3329:107:1"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3460:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"3460:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3466:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"3466:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:20:1"},"scope":429,"src":"3295:1257:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":427,"nodeType":"Block","src":"5081:376:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":416,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5099:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:1","memberName":"length","nodeType":"MemberAccess","src":"5099:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5114:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5099:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"5091:25:1"},{"assignments":[423],"declarations":[{"constant":false,"id":423,"mutability":"mutable","name":"_mask","nameLocation":"5131:5:1","nodeType":"VariableDeclaration","scope":427,"src":"5126:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":425,"initialValue":{"id":424,"name":"LOW_28_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5139:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5126:24:1"},{"AST":{"nodeType":"YulBlock","src":"5169:282:1","statements":[{"nodeType":"YulVariableDeclaration","src":"5221:35:1","value":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5244:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"5250:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:1"},"nodeType":"YulFunctionCall","src":"5240:15:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5234:5:1"},"nodeType":"YulFunctionCall","src":"5234:22:1"},"variables":[{"name":"_word","nodeType":"YulTypedName","src":"5225:5:1","type":""}]},{"nodeType":"YulAssignment","src":"5327:26:1","value":{"arguments":[{"name":"_word","nodeType":"YulIdentifier","src":"5340:5:1"},{"name":"_mask","nodeType":"YulIdentifier","src":"5347:5:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5336:3:1"},"nodeType":"YulFunctionCall","src":"5336:17:1"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5327:5:1"}]},{"nodeType":"YulAssignment","src":"5366:32:1","value":{"arguments":[{"name":"_newSelector","nodeType":"YulIdentifier","src":"5378:12:1"},{"name":"_word","nodeType":"YulIdentifier","src":"5392:5:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5375:2:1"},"nodeType":"YulFunctionCall","src":"5375:23:1"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5366:5:1"}]},{"expression":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5422:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"5428:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5418:3:1"},"nodeType":"YulFunctionCall","src":"5418:15:1"},{"name":"_word","nodeType":"YulIdentifier","src":"5435:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5411:6:1"},"nodeType":"YulFunctionCall","src":"5411:30:1"},"nodeType":"YulExpressionStatement","src":"5411:30:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":412,"isOffset":false,"isSlot":false,"src":"5244:4:1","valueSize":1},{"declaration":412,"isOffset":false,"isSlot":false,"src":"5422:4:1","valueSize":1},{"declaration":423,"isOffset":false,"isSlot":false,"src":"5347:5:1","valueSize":1},{"declaration":410,"isOffset":false,"isSlot":false,"src":"5378:12:1","valueSize":1}],"id":426,"nodeType":"InlineAssembly","src":"5160:291:1"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"4558:442:1","text":" @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"},"id":428,"implemented":true,"kind":"function","modifiers":[],"name":"swapSelector","nameLocation":"5014:12:1","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"_newSelector","nameLocation":"5034:12:1","nodeType":"VariableDeclaration","scope":428,"src":"5027:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":409,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5027:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"_buf","nameLocation":"5061:4:1","nodeType":"VariableDeclaration","scope":428,"src":"5048:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":411,"name":"bytes","nodeType":"ElementaryTypeName","src":"5048:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5026:40:1"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"5081:0:1"},"scope":429,"src":"5005:452:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":430,"src":"72:5387:1","usedErrors":[],"usedEvents":[]}],"src":"46:5414:1"},"id":1},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol","exportedSymbols":{"BytesLib":[332],"Context":[3259],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LzApp":[971],"Ownable":[1740]},"id":972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":431,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1741,"src":"58:52:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","file":"./interfaces/ILayerZeroReceiver.sol","id":433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1372,"src":"111:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./interfaces/ILayerZeroUserApplicationConfig.sol","id":434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1403,"src":"157:58:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","file":"./interfaces/ILayerZeroEndpoint.sol","id":435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1358,"src":"216:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol","file":"../libraries/BytesLib.sol","id":436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":333,"src":"262:35:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":437,"name":"Ownable","nameLocations":["372:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1740,"src":"372:7:2"},"id":438,"nodeType":"InheritanceSpecifier","src":"372:7:2"},{"baseName":{"id":439,"name":"ILayerZeroReceiver","nameLocations":["381:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"381:18:2"},"id":440,"nodeType":"InheritanceSpecifier","src":"381:18:2"},{"baseName":{"id":441,"name":"ILayerZeroUserApplicationConfig","nameLocations":["401:31:2"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"401:31:2"},"id":442,"nodeType":"InheritanceSpecifier","src":"401:31:2"}],"canonicalName":"LzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":971,"linearizedBaseContracts":[971,1402,1371,1740,3259],"name":"LzApp","nameLocation":"363:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":445,"libraryName":{"id":443,"name":"BytesLib","nameLocations":["445:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":332,"src":"445:8:2"},"nodeType":"UsingForDirective","src":"439:25:2","typeName":{"id":444,"name":"bytes","nodeType":"ElementaryTypeName","src":"458:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":true,"functionSelector":"c4461834","id":448,"mutability":"constant","name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nameLocation":"589:26:2","nodeType":"VariableDeclaration","scope":971,"src":"568:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint","nodeType":"ElementaryTypeName","src":"568:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:5:2","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"b353aaa7","id":451,"mutability":"immutable","name":"lzEndpoint","nameLocation":"666:10:2","nodeType":"VariableDeclaration","scope":971,"src":"630:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"},"typeName":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"ILayerZeroEndpoint","nameLocations":["630:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"630:18:2"},"referencedDeclaration":1357,"src":"630:18:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"visibility":"public"},{"constant":false,"functionSelector":"7533d788","id":455,"mutability":"mutable","name":"trustedRemoteLookup","nameLocation":"714:19:2","nodeType":"VariableDeclaration","scope":971,"src":"682:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"typeName":{"id":454,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":452,"name":"uint16","nodeType":"ElementaryTypeName","src":"690:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"682:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"700:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":false,"functionSelector":"8cfd8f5c","id":461,"mutability":"mutable","name":"minDstGasLookup","nameLocation":"789:15:2","nodeType":"VariableDeclaration","scope":971,"src":"739:65:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"typeName":{"id":460,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":456,"name":"uint16","nodeType":"ElementaryTypeName","src":"747:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"739:42:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":459,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":457,"name":"uint16","nodeType":"ElementaryTypeName","src":"765:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"757:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":458,"name":"uint","nodeType":"ElementaryTypeName","src":"775:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3f1f4fa4","id":465,"mutability":"mutable","name":"payloadSizeLimitLookup","nameLocation":"841:22:2","nodeType":"VariableDeclaration","scope":971,"src":"810:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"typeName":{"id":464,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":462,"name":"uint16","nodeType":"ElementaryTypeName","src":"818:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"810:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":463,"name":"uint","nodeType":"ElementaryTypeName","src":"828:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"950c8a74","id":467,"mutability":"mutable","name":"precrime","nameLocation":"884:8:2","nodeType":"VariableDeclaration","scope":971,"src":"869:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b","id":471,"name":"SetPrecrime","nameLocation":"905:11:2","nodeType":"EventDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"indexed":false,"mutability":"mutable","name":"precrime","nameLocation":"925:8:2","nodeType":"VariableDeclaration","scope":471,"src":"917:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:18:2"},"src":"899:36:2"},{"anonymous":false,"eventSelector":"fa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab","id":477,"name":"SetTrustedRemote","nameLocation":"946:16:2","nodeType":"EventDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"970:14:2","nodeType":"VariableDeclaration","scope":477,"src":"963:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":472,"name":"uint16","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":475,"indexed":false,"mutability":"mutable","name":"_path","nameLocation":"992:5:2","nodeType":"VariableDeclaration","scope":477,"src":"986:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"962:36:2"},"src":"940:59:2"},{"anonymous":false,"eventSelector":"8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce","id":483,"name":"SetTrustedRemoteAddress","nameLocation":"1010:23:2","nodeType":"EventDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"1041:14:2","nodeType":"VariableDeclaration","scope":483,"src":"1034:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":478,"name":"uint16","nodeType":"ElementaryTypeName","src":"1034:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":481,"indexed":false,"mutability":"mutable","name":"_remoteAddress","nameLocation":"1063:14:2","nodeType":"VariableDeclaration","scope":483,"src":"1057:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":480,"name":"bytes","nodeType":"ElementaryTypeName","src":"1057:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1033:45:2"},"src":"1004:75:2"},{"anonymous":false,"eventSelector":"9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0","id":491,"name":"SetMinDstGas","nameLocation":"1090:12:2","nodeType":"EventDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"indexed":false,"mutability":"mutable","name":"_dstChainId","nameLocation":"1110:11:2","nodeType":"VariableDeclaration","scope":491,"src":"1103:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":484,"name":"uint16","nodeType":"ElementaryTypeName","src":"1103:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":487,"indexed":false,"mutability":"mutable","name":"_type","nameLocation":"1130:5:2","nodeType":"VariableDeclaration","scope":491,"src":"1123:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":486,"name":"uint16","nodeType":"ElementaryTypeName","src":"1123:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":489,"indexed":false,"mutability":"mutable","name":"_minDstGas","nameLocation":"1142:10:2","nodeType":"VariableDeclaration","scope":491,"src":"1137:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint","nodeType":"ElementaryTypeName","src":"1137:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1102:51:2"},"src":"1084:70:2"},{"body":{"id":502,"nodeType":"Block","src":"1191:59:2","statements":[{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":496,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1201:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":498,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"1233:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"ILayerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1214:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpoint_$1357_$","typeString":"type(contract ILayerZeroEndpoint)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1214:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"src":"1201:42:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":501,"nodeType":"ExpressionStatement","src":"1201:42:2"}]},"id":503,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"_endpoint","nameLocation":"1180:9:2","nodeType":"VariableDeclaration","scope":503,"src":"1172:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"1172:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1171:19:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"1191:0:2"},"scope":971,"src":"1160:90:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1370],"body":{"id":561,"nodeType":"Block","src":"1425:656:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":516,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"1508:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1508:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":520,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1532:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1524:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:2","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1508:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1545:32:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""},"value":"LzApp: invalid endpoint caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""}],"id":515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1500:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"1500:78:2"},{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"trustedRemote","nameLocation":"1602:13:2","nodeType":"VariableDeclaration","scope":561,"src":"1589:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"1589:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":531,"initialValue":{"baseExpression":{"id":528,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"1618:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":530,"indexExpression":{"id":529,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1638:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1618:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1589:61:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":533,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1813:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:6:2","memberName":"length","nodeType":"MemberAccess","src":"1813:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":535,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1835:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1849:6:2","memberName":"length","nodeType":"MemberAccess","src":"1835:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1813:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":538,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1859:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1873:6:2","memberName":"length","nodeType":"MemberAccess","src":"1859:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1859:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:70:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":544,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1897:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":543,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1887:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":547,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1923:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":546,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1913:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1887:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:124:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e7472616374","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1951:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""},"value":"LzApp: invalid source sending contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""}],"id":532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1792:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:209:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"1792:209:2"},{"expression":{"arguments":[{"id":555,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2031:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":556,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2044:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":557,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2057:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":558,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2065:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":554,"name":"_blockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2012:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2012:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"2012:62:2"}]},"functionSelector":"001d3567","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1265:9:2","nodeType":"FunctionDefinition","overrides":{"id":513,"nodeType":"OverrideSpecifier","overrides":[],"src":"1416:8:2"},"parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"_srcChainId","nameLocation":"1291:11:2","nodeType":"VariableDeclaration","scope":562,"src":"1284:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":504,"name":"uint16","nodeType":"ElementaryTypeName","src":"1284:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"_srcAddress","nameLocation":"1327:11:2","nodeType":"VariableDeclaration","scope":562,"src":"1312:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":506,"name":"bytes","nodeType":"ElementaryTypeName","src":"1312:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"_nonce","nameLocation":"1355:6:2","nodeType":"VariableDeclaration","scope":562,"src":"1348:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":508,"name":"uint64","nodeType":"ElementaryTypeName","src":"1348:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_payload","nameLocation":"1386:8:2","nodeType":"VariableDeclaration","scope":562,"src":"1371:23:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":510,"name":"bytes","nodeType":"ElementaryTypeName","src":"1371:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1274:126:2"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"1425:0:2"},"scope":971,"src":"1256:825:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":573,"implemented":false,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"2239:18:2","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"_srcChainId","nameLocation":"2274:11:2","nodeType":"VariableDeclaration","scope":573,"src":"2267:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":563,"name":"uint16","nodeType":"ElementaryTypeName","src":"2267:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"_srcAddress","nameLocation":"2308:11:2","nodeType":"VariableDeclaration","scope":573,"src":"2295:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"2295:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"_nonce","nameLocation":"2336:6:2","nodeType":"VariableDeclaration","scope":573,"src":"2329:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"2329:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"_payload","nameLocation":"2365:8:2","nodeType":"VariableDeclaration","scope":573,"src":"2352:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":569,"name":"bytes","nodeType":"ElementaryTypeName","src":"2352:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2257:122:2"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"2396:0:2"},"scope":971,"src":"2230:167:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":621,"nodeType":"Block","src":"2640:365:2","statements":[{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"trustedRemote","nameLocation":"2663:13:2","nodeType":"VariableDeclaration","scope":621,"src":"2650:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"2650:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":593,"initialValue":{"baseExpression":{"id":590,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"2679:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":592,"indexExpression":{"id":591,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2699:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2679:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2650:61:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":595,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2729:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2743:6:2","memberName":"length","nodeType":"MemberAccess","src":"2729:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2756:50:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""},"value":"LzApp: destination chain is not a trusted source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2721:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"2721:86:2"},{"expression":{"arguments":[{"id":603,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2835:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":604,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2848:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2857:6:2","memberName":"length","nodeType":"MemberAccess","src":"2848:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"_checkPayloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"2817:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint256) view"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"2817:47:2"},{"expression":{"arguments":[{"id":613,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2909:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":614,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2922:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":615,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2937:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":616,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"2947:14:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":617,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"2963:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"2983:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":608,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"2874:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:4:2","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"2874:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":611,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2897:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2874:34:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:124:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"2874:124:2"}]},"id":622,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"2412:7:2","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"_dstChainId","nameLocation":"2436:11:2","nodeType":"VariableDeclaration","scope":622,"src":"2429:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":574,"name":"uint16","nodeType":"ElementaryTypeName","src":"2429:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"_payload","nameLocation":"2470:8:2","nodeType":"VariableDeclaration","scope":622,"src":"2457:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":576,"name":"bytes","nodeType":"ElementaryTypeName","src":"2457:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"_refundAddress","nameLocation":"2504:14:2","nodeType":"VariableDeclaration","scope":622,"src":"2488:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"2488:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"2536:18:2","nodeType":"VariableDeclaration","scope":622,"src":"2528:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"2528:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"_adapterParams","nameLocation":"2577:14:2","nodeType":"VariableDeclaration","scope":622,"src":"2564:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":582,"name":"bytes","nodeType":"ElementaryTypeName","src":"2564:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"_nativeFee","nameLocation":"2606:10:2","nodeType":"VariableDeclaration","scope":622,"src":"2601:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint","nodeType":"ElementaryTypeName","src":"2601:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2419:203:2"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2640:0:2"},"scope":971,"src":"2403:602:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"3174:290:2","statements":[{"assignments":[634],"declarations":[{"constant":false,"id":634,"mutability":"mutable","name":"providedGasLimit","nameLocation":"3189:16:2","nodeType":"VariableDeclaration","scope":663,"src":"3184:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint","nodeType":"ElementaryTypeName","src":"3184:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":638,"initialValue":{"arguments":[{"id":636,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3221:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":635,"name":"_getGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"3208:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3208:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3184:52:2"},{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"minGasLimit","nameLocation":"3251:11:2","nodeType":"VariableDeclaration","scope":663,"src":"3246:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint","nodeType":"ElementaryTypeName","src":"3246:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":646,"initialValue":{"baseExpression":{"baseExpression":{"id":641,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"3265:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":643,"indexExpression":{"id":642,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3281:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":645,"indexExpression":{"id":644,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"3294:5:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3246:54:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3318:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3332:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3318:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3335:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""},"value":"LzApp: minGasLimit not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""}],"id":647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3310:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3310:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"3310:54:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"providedGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3382:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3402:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":657,"name":"_extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"3416:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3402:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3382:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3427:29:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""},"value":"LzApp: gas limit is too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3374:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3374:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"3374:83:2"}]},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_checkGasLimit","nameLocation":"3020:14:2","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"_dstChainId","nameLocation":"3051:11:2","nodeType":"VariableDeclaration","scope":664,"src":"3044:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":623,"name":"uint16","nodeType":"ElementaryTypeName","src":"3044:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"_type","nameLocation":"3079:5:2","nodeType":"VariableDeclaration","scope":664,"src":"3072:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":625,"name":"uint16","nodeType":"ElementaryTypeName","src":"3072:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"_adapterParams","nameLocation":"3107:14:2","nodeType":"VariableDeclaration","scope":664,"src":"3094:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"3094:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"_extraGas","nameLocation":"3136:9:2","nodeType":"VariableDeclaration","scope":664,"src":"3131:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint","nodeType":"ElementaryTypeName","src":"3131:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3034:117:2"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"3174:0:2"},"scope":971,"src":"3011:453:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":680,"nodeType":"Block","src":"3567:169:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":672,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3585:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3600:6:2","memberName":"length","nodeType":"MemberAccess","src":"3585:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3334","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3610:2:2","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"3585:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3614:30:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""},"value":"LzApp: invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""}],"id":671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3577:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"3577:68:2"},{"AST":{"nodeType":"YulBlock","src":"3664:66:2","statements":[{"nodeType":"YulAssignment","src":"3678:42:2","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"3700:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3716:2:2","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:2"},"nodeType":"YulFunctionCall","src":"3696:23:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3690:5:2"},"nodeType":"YulFunctionCall","src":"3690:30:2"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"3678:8:2"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":666,"isOffset":false,"isSlot":false,"src":"3700:14:2","valueSize":1},{"declaration":669,"isOffset":false,"isSlot":false,"src":"3678:8:2","valueSize":1}],"id":679,"nodeType":"InlineAssembly","src":"3655:75:2"}]},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasLimit","nameLocation":"3479:12:2","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"_adapterParams","nameLocation":"3505:14:2","nodeType":"VariableDeclaration","scope":681,"src":"3492:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"3492:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3491:29:2"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"gasLimit","nameLocation":"3557:8:2","nodeType":"VariableDeclaration","scope":681,"src":"3552:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint","nodeType":"ElementaryTypeName","src":"3552:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3551:15:2"},"scope":971,"src":"3470:266:2","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"3830:307:2","statements":[{"assignments":[689],"declarations":[{"constant":false,"id":689,"mutability":"mutable","name":"payloadSizeLimit","nameLocation":"3845:16:2","nodeType":"VariableDeclaration","scope":710,"src":"3840:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint","nodeType":"ElementaryTypeName","src":"3840:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":693,"initialValue":{"baseExpression":{"id":690,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3864:22:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":692,"indexExpression":{"id":691,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3887:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3864:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3840:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3913:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3913:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":702,"nodeType":"IfStatement","src":"3909:135:2","trueBody":{"id":701,"nodeType":"Block","src":"3936:108:2","statements":[{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":697,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3988:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":698,"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4007:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3988:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"nodeType":"ExpressionStatement","src":"3988:45:2"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"_payloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4061:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":705,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4061:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4095:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""},"value":"LzApp: payload size is too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""}],"id":703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4053:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4053:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"4053:77:2"}]},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_checkPayloadSize","nameLocation":"3751:17:2","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"_dstChainId","nameLocation":"3776:11:2","nodeType":"VariableDeclaration","scope":711,"src":"3769:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":682,"name":"uint16","nodeType":"ElementaryTypeName","src":"3769:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"_payloadSize","nameLocation":"3794:12:2","nodeType":"VariableDeclaration","scope":711,"src":"3789:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint","nodeType":"ElementaryTypeName","src":"3789:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3768:39:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3830:0:2"},"scope":971,"src":"3742:395:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"4394:92:2","statements":[{"expression":{"arguments":[{"id":726,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4432:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":727,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4442:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4460:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4452:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4467:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":724,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4411:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4422:9:2","memberName":"getConfig","nodeType":"MemberAccess","referencedDeclaration":1342,"src":"4411:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint16,uint16,address,uint256) view external returns (bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":723,"id":734,"nodeType":"Return","src":"4404:75:2"}]},"functionSelector":"f5ecbdbc","id":736,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"4248:9:2","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"_version","nameLocation":"4274:8:2","nodeType":"VariableDeclaration","scope":736,"src":"4267:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":712,"name":"uint16","nodeType":"ElementaryTypeName","src":"4267:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"_chainId","nameLocation":"4299:8:2","nodeType":"VariableDeclaration","scope":736,"src":"4292:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":714,"name":"uint16","nodeType":"ElementaryTypeName","src":"4292:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"4317:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"4317:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"_configType","nameLocation":"4339:11:2","nodeType":"VariableDeclaration","scope":736,"src":"4334:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint","nodeType":"ElementaryTypeName","src":"4334:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4257:99:2"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"4380:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":721,"name":"bytes","nodeType":"ElementaryTypeName","src":"4380:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4379:14:2"},"scope":971,"src":"4239:247:2","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1384],"body":{"id":759,"nodeType":"Block","src":"4706:79:2","statements":[{"expression":{"arguments":[{"id":753,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4737:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":754,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4747:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":755,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4757:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":756,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4770:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":750,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4716:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4727:9:2","memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"4716:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint16,uint256,bytes memory) external"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"4716:62:2"}]},"functionSelector":"cbed8b9c","id":760,"implemented":true,"kind":"function","modifiers":[{"id":748,"kind":"modifierInvocation","modifierName":{"id":747,"name":"onlyOwner","nameLocations":["4696:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4696:9:2"},"nodeType":"ModifierInvocation","src":"4696:9:2"}],"name":"setConfig","nameLocation":"4554:9:2","nodeType":"FunctionDefinition","overrides":{"id":746,"nodeType":"OverrideSpecifier","overrides":[],"src":"4687:8:2"},"parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"_version","nameLocation":"4580:8:2","nodeType":"VariableDeclaration","scope":760,"src":"4573:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":737,"name":"uint16","nodeType":"ElementaryTypeName","src":"4573:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"_chainId","nameLocation":"4605:8:2","nodeType":"VariableDeclaration","scope":760,"src":"4598:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":739,"name":"uint16","nodeType":"ElementaryTypeName","src":"4598:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"_configType","nameLocation":"4628:11:2","nodeType":"VariableDeclaration","scope":760,"src":"4623:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint","nodeType":"ElementaryTypeName","src":"4623:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"_config","nameLocation":"4664:7:2","nodeType":"VariableDeclaration","scope":760,"src":"4649:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"4649:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4563:114:2"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"4706:0:2"},"scope":971,"src":"4545:240:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1389],"body":{"id":774,"nodeType":"Block","src":"4860:52:2","statements":[{"expression":{"arguments":[{"id":771,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4896:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":768,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4870:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4881:14:2","memberName":"setSendVersion","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"4870:25:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"4870:35:2"}]},"functionSelector":"07e0db17","id":775,"implemented":true,"kind":"function","modifiers":[{"id":766,"kind":"modifierInvocation","modifierName":{"id":765,"name":"onlyOwner","nameLocations":["4850:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4850:9:2"},"nodeType":"ModifierInvocation","src":"4850:9:2"}],"name":"setSendVersion","nameLocation":"4800:14:2","nodeType":"FunctionDefinition","overrides":{"id":764,"nodeType":"OverrideSpecifier","overrides":[],"src":"4841:8:2"},"parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"_version","nameLocation":"4822:8:2","nodeType":"VariableDeclaration","scope":775,"src":"4815:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":761,"name":"uint16","nodeType":"ElementaryTypeName","src":"4815:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4814:17:2"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"4860:0:2"},"scope":971,"src":"4791:121:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1394],"body":{"id":789,"nodeType":"Block","src":"4990:55:2","statements":[{"expression":{"arguments":[{"id":786,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5029:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":783,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5000:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5011:17:2","memberName":"setReceiveVersion","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"5000:28:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"5000:38:2"}]},"functionSelector":"10ddb137","id":790,"implemented":true,"kind":"function","modifiers":[{"id":781,"kind":"modifierInvocation","modifierName":{"id":780,"name":"onlyOwner","nameLocations":["4980:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"4980:9:2"},"nodeType":"ModifierInvocation","src":"4980:9:2"}],"name":"setReceiveVersion","nameLocation":"4927:17:2","nodeType":"FunctionDefinition","overrides":{"id":779,"nodeType":"OverrideSpecifier","overrides":[],"src":"4971:8:2"},"parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"_version","nameLocation":"4952:8:2","nodeType":"VariableDeclaration","scope":790,"src":"4945:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":776,"name":"uint16","nodeType":"ElementaryTypeName","src":"4945:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4944:17:2"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"4990:0:2"},"scope":971,"src":"4918:127:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1401],"body":{"id":807,"nodeType":"Block","src":"5155:72:2","statements":[{"expression":{"arguments":[{"id":803,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"5195:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":804,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"5208:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":800,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5165:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5176:18:2","memberName":"forceResumeReceive","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"5165:29:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory) external"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5165:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"5165:55:2"}]},"functionSelector":"42d65a8d","id":808,"implemented":true,"kind":"function","modifiers":[{"id":798,"kind":"modifierInvocation","modifierName":{"id":797,"name":"onlyOwner","nameLocations":["5145:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5145:9:2"},"nodeType":"ModifierInvocation","src":"5145:9:2"}],"name":"forceResumeReceive","nameLocation":"5060:18:2","nodeType":"FunctionDefinition","overrides":{"id":796,"nodeType":"OverrideSpecifier","overrides":[],"src":"5136:8:2"},"parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"_srcChainId","nameLocation":"5086:11:2","nodeType":"VariableDeclaration","scope":808,"src":"5079:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":791,"name":"uint16","nodeType":"ElementaryTypeName","src":"5079:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"_srcAddress","nameLocation":"5114:11:2","nodeType":"VariableDeclaration","scope":808,"src":"5099:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"5099:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5078:48:2"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"5155:0:2"},"scope":971,"src":"5051:176:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":828,"nodeType":"Block","src":"5460:114:2","statements":[{"expression":{"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":817,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5470:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":819,"indexExpression":{"id":818,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5490:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5470:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":820,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5508:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"5470:43:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":822,"nodeType":"ExpressionStatement","src":"5470:43:2"},{"eventCall":{"arguments":[{"id":824,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5545:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":825,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5561:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":823,"name":"SetTrustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"5528:16:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5528:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"EmitStatement","src":"5523:44:2"}]},"functionSelector":"eb8d72b7","id":829,"implemented":true,"kind":"function","modifiers":[{"id":815,"kind":"modifierInvocation","modifierName":{"id":814,"name":"onlyOwner","nameLocations":["5450:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5450:9:2"},"nodeType":"ModifierInvocation","src":"5450:9:2"}],"name":"setTrustedRemote","nameLocation":"5379:16:2","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5403:14:2","nodeType":"VariableDeclaration","scope":829,"src":"5396:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":809,"name":"uint16","nodeType":"ElementaryTypeName","src":"5396:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"_path","nameLocation":"5434:5:2","nodeType":"VariableDeclaration","scope":829,"src":"5419:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":811,"name":"bytes","nodeType":"ElementaryTypeName","src":"5419:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5395:45:2"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"5460:0:2"},"scope":971,"src":"5370:204:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":856,"nodeType":"Block","src":"5686:172:2","statements":[{"expression":{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":838,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5696:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":840,"indexExpression":{"id":839,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5716:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5696:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":843,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5751:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"id":846,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5775:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}],"id":845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5767:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"5767:7:2","typeDescriptions":{}}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":841,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5734:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5738:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"5734:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5734:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5696:85:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":850,"nodeType":"ExpressionStatement","src":"5696:85:2"},{"eventCall":{"arguments":[{"id":852,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5820:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":853,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5836:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":851,"name":"SetTrustedRemoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5796:23:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5796:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"EmitStatement","src":"5791:60:2"}]},"functionSelector":"a6c3d165","id":857,"implemented":true,"kind":"function","modifiers":[{"id":836,"kind":"modifierInvocation","modifierName":{"id":835,"name":"onlyOwner","nameLocations":["5676:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"5676:9:2"},"nodeType":"ModifierInvocation","src":"5676:9:2"}],"name":"setTrustedRemoteAddress","nameLocation":"5589:23:2","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5620:14:2","nodeType":"VariableDeclaration","scope":857,"src":"5613:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":830,"name":"uint16","nodeType":"ElementaryTypeName","src":"5613:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"_remoteAddress","nameLocation":"5651:14:2","nodeType":"VariableDeclaration","scope":857,"src":"5636:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":832,"name":"bytes","nodeType":"ElementaryTypeName","src":"5636:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5612:54:2"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"5686:0:2"},"scope":971,"src":"5580:278:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":887,"nodeType":"Block","src":"5957:233:2","statements":[{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"path","nameLocation":"5980:4:2","nodeType":"VariableDeclaration","scope":887,"src":"5967:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"5967:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":869,"initialValue":{"baseExpression":{"id":866,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5987:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":868,"indexExpression":{"id":867,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"6007:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5987:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5967:55:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":871,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6040:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6045:6:2","memberName":"length","nodeType":"MemberAccess","src":"6040:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6055:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6040:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6058:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""},"value":"LzApp: no trusted path record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""}],"id":870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6032:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6032:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"6032:58:2"},{"expression":{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6118:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":881,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6121:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6126:6:2","memberName":"length","nodeType":"MemberAccess","src":"6121:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6135:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6121:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":878,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6107:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6112:5:2","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":63,"src":"6107:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6107:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":863,"id":886,"nodeType":"Return","src":"6100:38:2"}]},"functionSelector":"9f38369a","id":888,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedRemoteAddress","nameLocation":"5873:23:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5904:14:2","nodeType":"VariableDeclaration","scope":888,"src":"5897:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":858,"name":"uint16","nodeType":"ElementaryTypeName","src":"5897:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5896:23:2"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"5943:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":861,"name":"bytes","nodeType":"ElementaryTypeName","src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5942:14:2"},"scope":971,"src":"5864:326:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":903,"nodeType":"Block","src":"6255:74:2","statements":[{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":895,"name":"precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"6265:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":896,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6276:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6265:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":898,"nodeType":"ExpressionStatement","src":"6265:20:2"},{"eventCall":{"arguments":[{"id":900,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6312:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":899,"name":"SetPrecrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6300:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"EmitStatement","src":"6295:27:2"}]},"functionSelector":"baf3292d","id":904,"implemented":true,"kind":"function","modifiers":[{"id":893,"kind":"modifierInvocation","modifierName":{"id":892,"name":"onlyOwner","nameLocations":["6245:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6245:9:2"},"nodeType":"ModifierInvocation","src":"6245:9:2"}],"name":"setPrecrime","nameLocation":"6205:11:2","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"_precrime","nameLocation":"6225:9:2","nodeType":"VariableDeclaration","scope":904,"src":"6217:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6216:19:2"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"6255:0:2"},"scope":971,"src":"6196:133:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":929,"nodeType":"Block","src":"6460:130:2","statements":[{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":915,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6470:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":918,"indexExpression":{"id":916,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6486:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6470:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":919,"indexExpression":{"id":917,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6499:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6470:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":920,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6470:51:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":922,"nodeType":"ExpressionStatement","src":"6470:51:2"},{"eventCall":{"arguments":[{"id":924,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6549:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":925,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6562:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":926,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6575:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"SetMinDstGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"6536:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"EmitStatement","src":"6531:52:2"}]},"functionSelector":"df2a5b3b","id":930,"implemented":true,"kind":"function","modifiers":[{"id":913,"kind":"modifierInvocation","modifierName":{"id":912,"name":"onlyOwner","nameLocations":["6450:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6450:9:2"},"nodeType":"ModifierInvocation","src":"6450:9:2"}],"name":"setMinDstGas","nameLocation":"6344:12:2","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"_dstChainId","nameLocation":"6373:11:2","nodeType":"VariableDeclaration","scope":930,"src":"6366:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":905,"name":"uint16","nodeType":"ElementaryTypeName","src":"6366:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"_packetType","nameLocation":"6401:11:2","nodeType":"VariableDeclaration","scope":930,"src":"6394:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":907,"name":"uint16","nodeType":"ElementaryTypeName","src":"6394:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"_minGas","nameLocation":"6427:7:2","nodeType":"VariableDeclaration","scope":930,"src":"6422:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint","nodeType":"ElementaryTypeName","src":"6422:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6356:84:2"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"6460:0:2"},"scope":971,"src":"6335:255:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":945,"nodeType":"Block","src":"6729:60:2","statements":[{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":939,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6739:22:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":941,"indexExpression":{"id":940,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6762:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6739:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":942,"name":"_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6777:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6739:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":944,"nodeType":"ExpressionStatement","src":"6739:43:2"}]},"functionSelector":"0df37483","id":946,"implemented":true,"kind":"function","modifiers":[{"id":937,"kind":"modifierInvocation","modifierName":{"id":936,"name":"onlyOwner","nameLocations":["6719:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"6719:9:2"},"nodeType":"ModifierInvocation","src":"6719:9:2"}],"name":"setPayloadSizeLimit","nameLocation":"6658:19:2","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"_dstChainId","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":946,"src":"6678:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":931,"name":"uint16","nodeType":"ElementaryTypeName","src":"6678:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"_size","nameLocation":"6703:5:2","nodeType":"VariableDeclaration","scope":946,"src":"6698:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint","nodeType":"ElementaryTypeName","src":"6698:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6677:32:2"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"6729:0:2"},"scope":971,"src":"6649:140:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":969,"nodeType":"Block","src":"6986:145:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"trustedSource","nameLocation":"7009:13:2","nodeType":"VariableDeclaration","scope":969,"src":"6996:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":955,"name":"bytes","nodeType":"ElementaryTypeName","src":"6996:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":960,"initialValue":{"baseExpression":{"id":957,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"7025:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":959,"indexExpression":{"id":958,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"7045:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7025:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6996:61:2"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":962,"name":"trustedSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7084:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7074:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7074:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":965,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"7112:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7102:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7074:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":954,"id":968,"nodeType":"Return","src":"7067:57:2"}]},"functionSelector":"3d8b38f6","id":970,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedRemote","nameLocation":"6893:15:2","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"_srcChainId","nameLocation":"6916:11:2","nodeType":"VariableDeclaration","scope":970,"src":"6909:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":947,"name":"uint16","nodeType":"ElementaryTypeName","src":"6909:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"_srcAddress","nameLocation":"6944:11:2","nodeType":"VariableDeclaration","scope":970,"src":"6929:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":949,"name":"bytes","nodeType":"ElementaryTypeName","src":"6929:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6908:48:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":970,"src":"6980:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":952,"name":"bool","nodeType":"ElementaryTypeName","src":"6980:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6979:6:2"},"scope":971,"src":"6884:247:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":972,"src":"345:6788:2","usedErrors":[],"usedEvents":[471,477,483,491,1641]}],"src":"33:7101:2"},"id":2},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","exportedSymbols":{"BytesLib":[332],"Context":[3259],"ExcessivelySafeCall":[429],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LzApp":[971],"NonblockingLzApp":[1212],"Ownable":[1740]},"id":1213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":973,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol","file":"./LzApp.sol","id":974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1213,"sourceUnit":972,"src":"58:21:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol","file":"../libraries/ExcessivelySafeCall.sol","id":975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1213,"sourceUnit":430,"src":"80:46:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":976,"name":"LzApp","nameLocations":["510:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":971,"src":"510:5:3"},"id":977,"nodeType":"InheritanceSpecifier","src":"510:5:3"}],"canonicalName":"NonblockingLzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":1212,"linearizedBaseContracts":[1212,971,1402,1371,1740,3259],"name":"NonblockingLzApp","nameLocation":"490:16:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":980,"libraryName":{"id":978,"name":"ExcessivelySafeCall","nameLocations":["528:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":429,"src":"528:19:3"},"nodeType":"UsingForDirective","src":"522:38:3","typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":988,"nodeType":"Block","src":"614:2:3","statements":[]},"id":989,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":985,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"603:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":986,"kind":"baseConstructorSpecifier","modifierName":{"id":984,"name":"LzApp","nameLocations":["597:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":971,"src":"597:5:3"},"nodeType":"ModifierInvocation","src":"597:16:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"_endpoint","nameLocation":"586:9:3","nodeType":"VariableDeclaration","scope":989,"src":"578:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"577:19:3"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[],"src":"614:0:3"},"scope":1212,"src":"566:50:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"5b8c41e6","id":997,"mutability":"mutable","name":"failedMessages","nameLocation":"693:14:3","nodeType":"VariableDeclaration","scope":1212,"src":"622:85:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"typeName":{"id":996,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":990,"name":"uint16","nodeType":"ElementaryTypeName","src":"630:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"622:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":995,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":991,"name":"bytes","nodeType":"ElementaryTypeName","src":"648:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"640:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes => mapping(uint64 => bytes32))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":994,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":992,"name":"uint64","nodeType":"ElementaryTypeName","src":"665:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"657:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"675:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c","id":1009,"name":"MessageFailed","nameLocation":"720:13:3","nodeType":"EventDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"741:11:3","nodeType":"VariableDeclaration","scope":1009,"src":"734:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":998,"name":"uint16","nodeType":"ElementaryTypeName","src":"734:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1001,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"760:11:3","nodeType":"VariableDeclaration","scope":1009,"src":"754:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1000,"name":"bytes","nodeType":"ElementaryTypeName","src":"754:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1003,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"780:6:3","nodeType":"VariableDeclaration","scope":1009,"src":"773:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1002,"name":"uint64","nodeType":"ElementaryTypeName","src":"773:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1005,"indexed":false,"mutability":"mutable","name":"_payload","nameLocation":"794:8:3","nodeType":"VariableDeclaration","scope":1009,"src":"788:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"788:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1007,"indexed":false,"mutability":"mutable","name":"_reason","nameLocation":"810:7:3","nodeType":"VariableDeclaration","scope":1009,"src":"804:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1006,"name":"bytes","nodeType":"ElementaryTypeName","src":"804:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"733:85:3"},"src":"714:105:3"},{"anonymous":false,"eventSelector":"c264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5","id":1019,"name":"RetryMessageSuccess","nameLocation":"830:19:3","nodeType":"EventDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"857:11:3","nodeType":"VariableDeclaration","scope":1019,"src":"850:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1010,"name":"uint16","nodeType":"ElementaryTypeName","src":"850:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"876:11:3","nodeType":"VariableDeclaration","scope":1019,"src":"870:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1012,"name":"bytes","nodeType":"ElementaryTypeName","src":"870:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1015,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"896:6:3","nodeType":"VariableDeclaration","scope":1019,"src":"889:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1014,"name":"uint64","nodeType":"ElementaryTypeName","src":"889:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":false,"mutability":"mutable","name":"_payloadHash","nameLocation":"912:12:3","nodeType":"VariableDeclaration","scope":1019,"src":"904:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"849:76:3"},"src":"824:102:3"},{"baseFunctions":[573],"body":{"id":1067,"nodeType":"Block","src":"1161:416:3","statements":[{"assignments":[1032,1034],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"success","nameLocation":"1177:7:3","nodeType":"VariableDeclaration","scope":1067,"src":"1172:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"1172:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"reason","nameLocation":"1199:6:3","nodeType":"VariableDeclaration","scope":1067,"src":"1186:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"1186:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1054,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1040,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1256:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1256:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313530","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1279:3:3","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},{"arguments":[{"expression":{"expression":{"id":1045,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1319:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1324:20:3","memberName":"nonblockingLzReceive","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"1319:25:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1345:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1319:34:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1048,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1355:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1049,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1368:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1050,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1381:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1051,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1389:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1043,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1296:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1300:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1296:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1296:102:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1037,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1217:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1209:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"1209:7:3","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:19:3","memberName":"excessivelySafeCall","nodeType":"MemberAccess","referencedDeclaration":372,"src":"1209:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,uint256,uint16,bytes memory) returns (bool,bytes memory)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:199:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1171:237:3"},{"condition":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1465:8:3","subExpression":{"id":1055,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1466:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"1461:110:3","trueBody":{"id":1065,"nodeType":"Block","src":"1475:96:3","statements":[{"expression":{"arguments":[{"id":1058,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1509:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1059,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1522:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1060,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1535:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1061,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1543:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1062,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1553:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1057,"name":"_storeFailedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1489:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"1489:71:3"}]}}]},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"994:18:3","nodeType":"FunctionDefinition","overrides":{"id":1029,"nodeType":"OverrideSpecifier","overrides":[],"src":"1152:8:3"},"parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"_srcChainId","nameLocation":"1029:11:3","nodeType":"VariableDeclaration","scope":1068,"src":"1022:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1020,"name":"uint16","nodeType":"ElementaryTypeName","src":"1022:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"_srcAddress","nameLocation":"1063:11:3","nodeType":"VariableDeclaration","scope":1068,"src":"1050:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"1050:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"_nonce","nameLocation":"1091:6:3","nodeType":"VariableDeclaration","scope":1068,"src":"1084:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1024,"name":"uint64","nodeType":"ElementaryTypeName","src":"1084:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"_payload","nameLocation":"1120:8:3","nodeType":"VariableDeclaration","scope":1068,"src":"1107:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"1107:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1012:122:3"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"1161:0:3"},"scope":1212,"src":"985:592:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"1781:168:3","statements":[{"expression":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1081,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1791:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1085,"indexExpression":{"id":1082,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1806:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1086,"indexExpression":{"id":1083,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1819:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1087,"indexExpression":{"id":1084,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1832:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1791:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1089,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1852:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1088,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1842:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1791:70:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1092,"nodeType":"ExpressionStatement","src":"1791:70:3"},{"eventCall":{"arguments":[{"id":1094,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1890:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1095,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1903:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1096,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1916:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1097,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1924:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1098,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1934:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1093,"name":"MessageFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1876:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"EmitStatement","src":"1871:71:3"}]},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_storeFailedMessage","nameLocation":"1592:19:3","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"_srcChainId","nameLocation":"1628:11:3","nodeType":"VariableDeclaration","scope":1102,"src":"1621:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1069,"name":"uint16","nodeType":"ElementaryTypeName","src":"1621:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"_srcAddress","nameLocation":"1662:11:3","nodeType":"VariableDeclaration","scope":1102,"src":"1649:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"1649:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"_nonce","nameLocation":"1690:6:3","nodeType":"VariableDeclaration","scope":1102,"src":"1683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1073,"name":"uint64","nodeType":"ElementaryTypeName","src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"_payload","nameLocation":"1719:8:3","nodeType":"VariableDeclaration","scope":1102,"src":"1706:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1075,"name":"bytes","nodeType":"ElementaryTypeName","src":"1706:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"_reason","nameLocation":"1750:7:3","nodeType":"VariableDeclaration","scope":1102,"src":"1737:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"1737:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1611:152:3"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"1781:0:3"},"scope":1212,"src":"1583:366:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"2126:209:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1114,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"2181:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1118,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2205:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"2197:7:3","typeDescriptions":{}}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2197:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2181:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a417070","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2212:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""},"value":"NonblockingLzApp: caller must be LzApp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""}],"id":1113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2173:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:80:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"2173:80:3"},{"expression":{"arguments":[{"id":1125,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2285:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1126,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2298:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1127,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2311:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1128,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2319:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1124,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"2263:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"2263:65:3"}]},"functionSelector":"66ad5c8a","id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"nonblockingLzReceive","nameLocation":"1964:20:3","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"_srcChainId","nameLocation":"2001:11:3","nodeType":"VariableDeclaration","scope":1132,"src":"1994:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1103,"name":"uint16","nodeType":"ElementaryTypeName","src":"1994:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"_srcAddress","nameLocation":"2037:11:3","nodeType":"VariableDeclaration","scope":1132,"src":"2022:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"2022:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"_nonce","nameLocation":"2065:6:3","nodeType":"VariableDeclaration","scope":1132,"src":"2058:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1107,"name":"uint64","nodeType":"ElementaryTypeName","src":"2058:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"_payload","nameLocation":"2096:8:3","nodeType":"VariableDeclaration","scope":1132,"src":"2081:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"2081:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1984:126:3"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"2126:0:3"},"scope":1212,"src":"1955:380:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"2387:21:3","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"_srcChainId","nameLocation":"2425:11:3","nodeType":"VariableDeclaration","scope":1143,"src":"2418:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1133,"name":"uint16","nodeType":"ElementaryTypeName","src":"2418:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"_srcAddress","nameLocation":"2459:11:3","nodeType":"VariableDeclaration","scope":1143,"src":"2446:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1135,"name":"bytes","nodeType":"ElementaryTypeName","src":"2446:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"_nonce","nameLocation":"2487:6:3","nodeType":"VariableDeclaration","scope":1143,"src":"2480:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1137,"name":"uint64","nodeType":"ElementaryTypeName","src":"2480:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"_payload","nameLocation":"2516:8:3","nodeType":"VariableDeclaration","scope":1143,"src":"2503:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"2503:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2408:122:3"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"2547:0:3"},"scope":1212,"src":"2378:170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"2725:624:3","statements":[{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"payloadHash","nameLocation":"2787:11:3","nodeType":"VariableDeclaration","scope":1210,"src":"2779:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1163,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1156,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2801:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1158,"indexExpression":{"id":1157,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"2816:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1160,"indexExpression":{"id":1159,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2829:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1162,"indexExpression":{"id":1161,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2842:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2779:70:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2867:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2882:7:3","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2882:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2867:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373616765","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2894:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""},"value":"NonblockingLzApp: no stored message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""}],"id":1164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2859:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2859:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1173,"nodeType":"ExpressionStatement","src":"2859:73:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1176,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"2960:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1175,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2950:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1178,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2973:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2950:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6164","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2986:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""},"value":"NonblockingLzApp: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""}],"id":1174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2942:80:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"2942:80:3"},{"expression":{"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1183,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3068:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1187,"indexExpression":{"id":1184,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3083:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3068:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1188,"indexExpression":{"id":1185,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3096:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3068:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1189,"indexExpression":{"id":1186,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3109:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3068:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3119:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3119:7:3","typeDescriptions":{}}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3119:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3068:61:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1195,"nodeType":"ExpressionStatement","src":"3068:61:3"},{"expression":{"arguments":[{"id":1197,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3218:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1198,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3231:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1199,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3244:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1200,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3252:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1196,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3196:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"3196:65:3"},{"eventCall":{"arguments":[{"id":1204,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3296:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1205,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3309:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1206,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3322:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1207,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3330:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1203,"name":"RetryMessageSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3276:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes32_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes32)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"3271:71:3"}]},"functionSelector":"d1deba1f","id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"retryMessage","nameLocation":"2563:12:3","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"_srcChainId","nameLocation":"2592:11:3","nodeType":"VariableDeclaration","scope":1211,"src":"2585:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1144,"name":"uint16","nodeType":"ElementaryTypeName","src":"2585:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"_srcAddress","nameLocation":"2628:11:3","nodeType":"VariableDeclaration","scope":1211,"src":"2613:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2613:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"_nonce","nameLocation":"2656:6:3","nodeType":"VariableDeclaration","scope":1211,"src":"2649:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1148,"name":"uint64","nodeType":"ElementaryTypeName","src":"2649:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"_payload","nameLocation":"2687:8:3","nodeType":"VariableDeclaration","scope":1211,"src":"2672:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1150,"name":"bytes","nodeType":"ElementaryTypeName","src":"2672:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2575:126:3"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"2725:0:3"},"scope":1212,"src":"2554:795:3","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":1213,"src":"472:2879:3","usedErrors":[],"usedEvents":[471,477,483,491,1009,1019,1641]}],"src":"33:3319:3"},"id":3},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","exportedSymbols":{"ILayerZeroEndpoint":[1357],"ILayerZeroUserApplicationConfig":[1402]},"id":1358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1214,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:4"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./ILayerZeroUserApplicationConfig.sol","id":1215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1358,"sourceUnit":1403,"src":"59:47:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1216,"name":"ILayerZeroUserApplicationConfig","nameLocations":["140:31:4"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"140:31:4"},"id":1217,"nodeType":"InheritanceSpecifier","src":"140:31:4"}],"canonicalName":"ILayerZeroEndpoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1357,"linearizedBaseContracts":[1357,1402],"name":"ILayerZeroEndpoint","nameLocation":"118:18:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c5803100","id":1232,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"923:4:4","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"_dstChainId","nameLocation":"944:11:4","nodeType":"VariableDeclaration","scope":1232,"src":"937:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1218,"name":"uint16","nodeType":"ElementaryTypeName","src":"937:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"_destination","nameLocation":"980:12:4","nodeType":"VariableDeclaration","scope":1232,"src":"965:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"965:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"_payload","nameLocation":"1017:8:4","nodeType":"VariableDeclaration","scope":1232,"src":"1002:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1222,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"_refundAddress","nameLocation":"1051:14:4","nodeType":"VariableDeclaration","scope":1232,"src":"1035:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1035:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"1083:18:4","nodeType":"VariableDeclaration","scope":1232,"src":"1075:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"_adapterParams","nameLocation":"1126:14:4","nodeType":"VariableDeclaration","scope":1232,"src":"1111:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"1111:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"927:219:4"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"1163:0:4"},"scope":1357,"src":"914:250:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c2fa4813","id":1247,"implemented":false,"kind":"function","modifiers":[],"name":"receivePayload","nameLocation":"1656:14:4","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"_srcChainId","nameLocation":"1687:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1680:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1233,"name":"uint16","nodeType":"ElementaryTypeName","src":"1680:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"_srcAddress","nameLocation":"1723:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1708:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1235,"name":"bytes","nodeType":"ElementaryTypeName","src":"1708:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"_dstAddress","nameLocation":"1752:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1744:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"_nonce","nameLocation":"1780:6:4","nodeType":"VariableDeclaration","scope":1247,"src":"1773:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1239,"name":"uint64","nodeType":"ElementaryTypeName","src":"1773:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"_gasLimit","nameLocation":"1801:9:4","nodeType":"VariableDeclaration","scope":1247,"src":"1796:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint","nodeType":"ElementaryTypeName","src":"1796:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"_payload","nameLocation":"1835:8:4","nodeType":"VariableDeclaration","scope":1247,"src":"1820:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"1820:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1670:179:4"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"1858:0:4"},"scope":1357,"src":"1647:212:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fdc07c70","id":1256,"implemented":false,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"2095:15:4","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"_srcChainId","nameLocation":"2118:11:4","nodeType":"VariableDeclaration","scope":1256,"src":"2111:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1248,"name":"uint16","nodeType":"ElementaryTypeName","src":"2111:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"_srcAddress","nameLocation":"2146:11:4","nodeType":"VariableDeclaration","scope":1256,"src":"2131:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2131:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2110:48:4"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"2182:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1253,"name":"uint64","nodeType":"ElementaryTypeName","src":"2182:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2181:8:4"},"scope":1357,"src":"2086:104:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a145748","id":1265,"implemented":false,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"2365:16:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"_dstChainId","nameLocation":"2389:11:4","nodeType":"VariableDeclaration","scope":1265,"src":"2382:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1257,"name":"uint16","nodeType":"ElementaryTypeName","src":"2382:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"_srcAddress","nameLocation":"2410:11:4","nodeType":"VariableDeclaration","scope":1265,"src":"2402:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2381:41:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"2446:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1262,"name":"uint64","nodeType":"ElementaryTypeName","src":"2446:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2445:8:4"},"scope":1357,"src":"2356:98:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40a7bb10","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"2977:12:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"_dstChainId","nameLocation":"3006:11:4","nodeType":"VariableDeclaration","scope":1282,"src":"2999:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1266,"name":"uint16","nodeType":"ElementaryTypeName","src":"2999:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"_userApplication","nameLocation":"3035:16:4","nodeType":"VariableDeclaration","scope":1282,"src":"3027:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"3027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"_payload","nameLocation":"3076:8:4","nodeType":"VariableDeclaration","scope":1282,"src":"3061:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3061:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"_payInZRO","nameLocation":"3099:9:4","nodeType":"VariableDeclaration","scope":1282,"src":"3094:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"3094:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"_adapterParam","nameLocation":"3133:13:4","nodeType":"VariableDeclaration","scope":1282,"src":"3118:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1274,"name":"bytes","nodeType":"ElementaryTypeName","src":"3118:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2989:163:4"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"nativeFee","nameLocation":"3181:9:4","nodeType":"VariableDeclaration","scope":1282,"src":"3176:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint","nodeType":"ElementaryTypeName","src":"3176:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"zroFee","nameLocation":"3197:6:4","nodeType":"VariableDeclaration","scope":1282,"src":"3192:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint","nodeType":"ElementaryTypeName","src":"3192:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3175:29:4"},"scope":1357,"src":"2968:237:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3408e470","id":1287,"implemented":false,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"3283:10:4","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"3293:2:4"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"3319:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1284,"name":"uint16","nodeType":"ElementaryTypeName","src":"3319:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3318:8:4"},"scope":1357,"src":"3274:53:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaff5f16","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"3593:12:4","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"_srcChainId","nameLocation":"3622:11:4","nodeType":"VariableDeclaration","scope":1296,"src":"3615:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1288,"name":"uint16","nodeType":"ElementaryTypeName","src":"3615:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"_srcAddress","nameLocation":"3658:11:4","nodeType":"VariableDeclaration","scope":1296,"src":"3643:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1290,"name":"bytes","nodeType":"ElementaryTypeName","src":"3643:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"_payload","nameLocation":"3694:8:4","nodeType":"VariableDeclaration","scope":1296,"src":"3679:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1292,"name":"bytes","nodeType":"ElementaryTypeName","src":"3679:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3605:103:4"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[],"src":"3717:0:4"},"scope":1357,"src":"3584:134:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0eaf6ea6","id":1305,"implemented":false,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"3930:16:4","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"_srcChainId","nameLocation":"3954:11:4","nodeType":"VariableDeclaration","scope":1305,"src":"3947:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1297,"name":"uint16","nodeType":"ElementaryTypeName","src":"3947:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"_srcAddress","nameLocation":"3982:11:4","nodeType":"VariableDeclaration","scope":1305,"src":"3967:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"3967:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3946:48:4"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"4018:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1302,"name":"bool","nodeType":"ElementaryTypeName","src":"4018:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4017:6:4"},"scope":1357,"src":"3921:103:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c729da1","id":1312,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"4182:21:4","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"_userApplication","nameLocation":"4212:16:4","nodeType":"VariableDeclaration","scope":1312,"src":"4204:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:26:4"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1312,"src":"4253:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4252:9:4"},"scope":1357,"src":"4173:89:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ba2fd6","id":1319,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"4422:24:4","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"_userApplication","nameLocation":"4455:16:4","nodeType":"VariableDeclaration","scope":1319,"src":"4447:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"4447:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4446:26:4"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1319,"src":"4496:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"4496:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4495:9:4"},"scope":1357,"src":"4413:92:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e97a448a","id":1324,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"4642:16:4","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[],"src":"4658:2:4"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"4684:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1321,"name":"bool","nodeType":"ElementaryTypeName","src":"4684:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4683:6:4"},"scope":1357,"src":"4633:57:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca066b35","id":1329,"implemented":false,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"4830:18:4","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"4848:2:4"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1329,"src":"4874:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1326,"name":"bool","nodeType":"ElementaryTypeName","src":"4874:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4873:6:4"},"scope":1357,"src":"4821:59:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5ecbdbc","id":1342,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"5287:9:4","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"_version","nameLocation":"5313:8:4","nodeType":"VariableDeclaration","scope":1342,"src":"5306:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1330,"name":"uint16","nodeType":"ElementaryTypeName","src":"5306:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"_chainId","nameLocation":"5338:8:4","nodeType":"VariableDeclaration","scope":1342,"src":"5331:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1332,"name":"uint16","nodeType":"ElementaryTypeName","src":"5331:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"_userApplication","nameLocation":"5364:16:4","nodeType":"VariableDeclaration","scope":1342,"src":"5356:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"5356:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"_configType","nameLocation":"5395:11:4","nodeType":"VariableDeclaration","scope":1342,"src":"5390:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint","nodeType":"ElementaryTypeName","src":"5390:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5296:116:4"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"5436:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"5436:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5435:14:4"},"scope":1357,"src":"5278:172:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"096568f6","id":1349,"implemented":false,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"5609:14:4","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"_userApplication","nameLocation":"5632:16:4","nodeType":"VariableDeclaration","scope":1349,"src":"5624:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"5624:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5623:26:4"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1349,"src":"5673:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1346,"name":"uint16","nodeType":"ElementaryTypeName","src":"5673:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5672:8:4"},"scope":1357,"src":"5600:81:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"da1a7c9a","id":1356,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"5845:17:4","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"_userApplication","nameLocation":"5871:16:4","nodeType":"VariableDeclaration","scope":1356,"src":"5863:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"5863:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5862:26:4"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"5912:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1353,"name":"uint16","nodeType":"ElementaryTypeName","src":"5912:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5911:8:4"},"scope":1357,"src":"5836:84:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1358,"src":"108:5814:4","usedErrors":[],"usedEvents":[]}],"src":"33:5890:4"},"id":4},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[1371]},"id":1372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1359,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1371,"linearizedBaseContracts":[1371],"name":"ILayerZeroReceiver","nameLocation":"69:18:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"001d3567","id":1370,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"482:9:5","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"_srcChainId","nameLocation":"508:11:5","nodeType":"VariableDeclaration","scope":1370,"src":"501:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1360,"name":"uint16","nodeType":"ElementaryTypeName","src":"501:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"_srcAddress","nameLocation":"544:11:5","nodeType":"VariableDeclaration","scope":1370,"src":"529:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1362,"name":"bytes","nodeType":"ElementaryTypeName","src":"529:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"_nonce","nameLocation":"572:6:5","nodeType":"VariableDeclaration","scope":1370,"src":"565:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1364,"name":"uint64","nodeType":"ElementaryTypeName","src":"565:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"_payload","nameLocation":"603:8:5","nodeType":"VariableDeclaration","scope":1370,"src":"588:23:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"588:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"491:126:5"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"626:0:5"},"scope":1371,"src":"473:154:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1372,"src":"59:570:5","usedErrors":[],"usedEvents":[]}],"src":"33:597:5"},"id":5},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","exportedSymbols":{"ILayerZeroUserApplicationConfig":[1402]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1373,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroUserApplicationConfig","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1402,"linearizedBaseContracts":[1402],"name":"ILayerZeroUserApplicationConfig","nameLocation":"69:31:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cbed8b9c","id":1384,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"512:9:6","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"_version","nameLocation":"538:8:6","nodeType":"VariableDeclaration","scope":1384,"src":"531:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1374,"name":"uint16","nodeType":"ElementaryTypeName","src":"531:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"_chainId","nameLocation":"563:8:6","nodeType":"VariableDeclaration","scope":1384,"src":"556:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1376,"name":"uint16","nodeType":"ElementaryTypeName","src":"556:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"_configType","nameLocation":"586:11:6","nodeType":"VariableDeclaration","scope":1384,"src":"581:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"_config","nameLocation":"622:7:6","nodeType":"VariableDeclaration","scope":1384,"src":"607:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1380,"name":"bytes","nodeType":"ElementaryTypeName","src":"607:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"521:114:6"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"644:0:6"},"scope":1402,"src":"503:142:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"07e0db17","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"793:14:6","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"_version","nameLocation":"815:8:6","nodeType":"VariableDeclaration","scope":1389,"src":"808:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1385,"name":"uint16","nodeType":"ElementaryTypeName","src":"808:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"807:17:6"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"833:0:6"},"scope":1402,"src":"784:50:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10ddb137","id":1394,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"987:17:6","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"_version","nameLocation":"1012:8:6","nodeType":"VariableDeclaration","scope":1394,"src":"1005:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1390,"name":"uint16","nodeType":"ElementaryTypeName","src":"1005:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1004:17:6"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[],"src":"1030:0:6"},"scope":1402,"src":"978:53:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42d65a8d","id":1401,"implemented":false,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"1309:18:6","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"_srcChainId","nameLocation":"1335:11:6","nodeType":"VariableDeclaration","scope":1401,"src":"1328:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1395,"name":"uint16","nodeType":"ElementaryTypeName","src":"1328:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"_srcAddress","nameLocation":"1363:11:6","nodeType":"VariableDeclaration","scope":1401,"src":"1348:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"1348:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1327:48:6"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"1384:0:6"},"scope":1402,"src":"1300:85:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1403,"src":"59:1328:6","usedErrors":[],"usedEvents":[]}],"src":"33:1355:6"},"id":6},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","exportedSymbols":{"LzLib":[1627]},"id":1628,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"38:24:7"},{"id":1405,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"63:33:7"},{"abstract":false,"baseContracts":[],"canonicalName":"LzLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1627,"linearizedBaseContracts":[1627],"name":"LzLib","nameLocation":"106:5:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LzLib.CallParams","id":1410,"members":[{"constant":false,"id":1407,"mutability":"mutable","name":"refundAddress","nameLocation":"193:13:7","nodeType":"VariableDeclaration","scope":1410,"src":"177:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"177:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"zroPaymentAddress","nameLocation":"224:17:7","nodeType":"VariableDeclaration","scope":1410,"src":"216:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CallParams","nameLocation":"156:10:7","nodeType":"StructDefinition","scope":1627,"src":"149:99:7","visibility":"public"},{"canonicalName":"LzLib.AirdropParams","id":1415,"members":[{"constant":false,"id":1412,"mutability":"mutable","name":"airdropAmount","nameLocation":"402:13:7","nodeType":"VariableDeclaration","scope":1415,"src":"397:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint","nodeType":"ElementaryTypeName","src":"397:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"airdropAddress","nameLocation":"433:14:7","nodeType":"VariableDeclaration","scope":1415,"src":"425:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"425:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"AirdropParams","nameLocation":"373:13:7","nodeType":"StructDefinition","scope":1627,"src":"366:88:7","visibility":"public"},{"body":{"id":1453,"nodeType":"Block","src":"600:284:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1425,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"614:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"629:13:7","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"614:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"614:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1429,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"651:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"666:14:7","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"651:29:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"692:3:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"684:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"651:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"614:82:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1451,"nodeType":"Block","src":"783:95:7","statements":[{"expression":{"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1444,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"797:13:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1446,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"839:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1447,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"852:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}],"id":1445,"name":"buildAirdropAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"813:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_AirdropParams_$1415_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,struct LzLib.AirdropParams memory) pure returns (bytes memory)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"813:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"797:70:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1450,"nodeType":"ExpressionStatement","src":"797:70:7"}]},"id":1452,"nodeType":"IfStatement","src":"610:268:7","trueBody":{"id":1443,"nodeType":"Block","src":"698:79:7","statements":[{"expression":{"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1437,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"712:13:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1439,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"754:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1438,"name":"buildDefaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"728:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"712:54:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"nodeType":"ExpressionStatement","src":"712:54:7"}]}}]},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"buildAdapterParams","nameLocation":"469:18:7","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"_airdropParams","nameLocation":"515:14:7","nodeType":"VariableDeclaration","scope":1454,"src":"488:41:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"LzLib.AirdropParams","nameLocations":["488:5:7","494:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"488:19:7"},"referencedDeclaration":1415,"src":"488:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"_uaGasLimit","nameLocation":"536:11:7","nodeType":"VariableDeclaration","scope":1454,"src":"531:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint","nodeType":"ElementaryTypeName","src":"531:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:61:7"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"adapterParams","nameLocation":"585:13:7","nodeType":"VariableDeclaration","scope":1454,"src":"572:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1422,"name":"bytes","nodeType":"ElementaryTypeName","src":"572:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"571:28:7"},"scope":1627,"src":"460:424:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1470,"nodeType":"Block","src":"1003:153:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1131:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1463,"name":"uint16","nodeType":"ElementaryTypeName","src":"1131:6:7","typeDescriptions":{}}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1131:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1467,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1142:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1114:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1118:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1114:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1460,"id":1469,"nodeType":"Return","src":"1107:42:7"}]},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"buildDefaultAdapterParams","nameLocation":"927:25:7","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"_uaGas","nameLocation":"958:6:7","nodeType":"VariableDeclaration","scope":1471,"src":"953:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint","nodeType":"ElementaryTypeName","src":"953:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:13:7"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1471,"src":"989:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1458,"name":"bytes","nodeType":"ElementaryTypeName","src":"989:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"988:14:7"},"scope":1627,"src":"918:238:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1513,"nodeType":"Block","src":"1277:438:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1482,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1295:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:13:7","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"1295:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1319:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1295:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""},"value":"Airdrop amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""}],"id":1481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1287:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1287:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"1287:75:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1490,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1380:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1388:14:7","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"1380:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1414:3:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1406:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1406:7:7","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1406:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1380:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f702061646472657373206d75737420626520736574","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1420:29:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""},"value":"Airdrop address must be set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""}],"id":1489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1372:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"1372:78:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"32","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1650:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1643:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1502,"name":"uint16","nodeType":"ElementaryTypeName","src":"1643:6:7","typeDescriptions":{}}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1643:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1506,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1654:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1507,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1662:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1670:13:7","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"1662:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1509,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1685:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1693:14:7","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"1685:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1500,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1626:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1630:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1626:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1626:82:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1480,"id":1512,"nodeType":"Return","src":"1619:89:7"}]},"id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"buildAirdropAdapterParams","nameLocation":"1171:25:7","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"_uaGas","nameLocation":"1202:6:7","nodeType":"VariableDeclaration","scope":1514,"src":"1197:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint","nodeType":"ElementaryTypeName","src":"1197:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"_params","nameLocation":"1231:7:7","nodeType":"VariableDeclaration","scope":1514,"src":"1210:28:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":1475,"nodeType":"UserDefinedTypeName","pathNode":{"id":1474,"name":"AirdropParams","nameLocations":["1210:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"1210:13:7"},"referencedDeclaration":1415,"src":"1210:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1415_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"}],"src":"1196:43:7"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"1263:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1478,"name":"bytes","nodeType":"ElementaryTypeName","src":"1263:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1262:14:7"},"scope":1627,"src":"1162:553:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"1809:192:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1522,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"1827:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1842:6:7","memberName":"length","nodeType":"MemberAccess","src":"1827:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:2:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"1827:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1526,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"1858:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1873:6:7","memberName":"length","nodeType":"MemberAccess","src":"1858:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:2:7","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"1858:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1827:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1886:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":1521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1819:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:91:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"1819:91:7"},{"AST":{"nodeType":"YulBlock","src":"1929:66:7","statements":[{"nodeType":"YulAssignment","src":"1943:42:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"1965:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"1981:2:7","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:7"},"nodeType":"YulFunctionCall","src":"1961:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1955:5:7"},"nodeType":"YulFunctionCall","src":"1955:30:7"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"1943:8:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":false,"src":"1965:14:7","valueSize":1},{"declaration":1519,"isOffset":false,"isSlot":false,"src":"1943:8:7","valueSize":1}],"id":1534,"nodeType":"InlineAssembly","src":"1920:75:7"}]},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"getGasLimit","nameLocation":"1730:11:7","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"_adapterParams","nameLocation":"1755:14:7","nodeType":"VariableDeclaration","scope":1536,"src":"1742:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"1742:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1741:29:7"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"gasLimit","nameLocation":"1799:8:7","nodeType":"VariableDeclaration","scope":1536,"src":"1794:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint","nodeType":"ElementaryTypeName","src":"1794:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1793:15:7"},"scope":1627,"src":"1721:280:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"2282:555:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1550,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"2300:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2315:6:7","memberName":"length","nodeType":"MemberAccess","src":"2300:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2325:2:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"2300:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1554,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"2331:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:6:7","memberName":"length","nodeType":"MemberAccess","src":"2331:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2355:2:7","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"2331:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2300:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2359:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":1549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2292:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:91:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"2292:91:7"},{"AST":{"nodeType":"YulBlock","src":"2402:115:7","statements":[{"nodeType":"YulAssignment","src":"2416:39:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2436:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2452:1:7","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:7"},"nodeType":"YulFunctionCall","src":"2432:22:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2426:5:7"},"nodeType":"YulFunctionCall","src":"2426:29:7"},"variableNames":[{"name":"txType","nodeType":"YulIdentifier","src":"2416:6:7"}]},{"nodeType":"YulAssignment","src":"2468:39:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2487:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2503:2:7","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:7"},"nodeType":"YulFunctionCall","src":"2483:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2477:5:7"},"nodeType":"YulFunctionCall","src":"2477:30:7"},"variableNames":[{"name":"uaGas","nodeType":"YulIdentifier","src":"2468:5:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2436:14:7","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2487:14:7","valueSize":1},{"declaration":1541,"isOffset":false,"isSlot":false,"src":"2416:6:7","valueSize":1},{"declaration":1543,"isOffset":false,"isSlot":false,"src":"2468:5:7","valueSize":1}],"id":1562,"nodeType":"InlineAssembly","src":"2393:124:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2534:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2534:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2549:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2559:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2549:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e737570706f7274656420747854797065","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2562:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""},"value":"Unsupported txType"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""}],"id":1563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2526:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1573,"nodeType":"ExpressionStatement","src":"2526:57:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2601:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2609:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2601:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47617320746f6f206c6f77","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2612:13:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""},"value":"Gas too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""}],"id":1574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2593:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2593:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"2593:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2641:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2651:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2641:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"IfStatement","src":"2637:194:7","trueBody":{"id":1585,"nodeType":"Block","src":"2654:177:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2677:144:7","statements":[{"nodeType":"YulAssignment","src":"2695:47:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2722:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2738:2:7","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2718:3:7"},"nodeType":"YulFunctionCall","src":"2718:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2712:5:7"},"nodeType":"YulFunctionCall","src":"2712:30:7"},"variableNames":[{"name":"airdropAmount","nodeType":"YulIdentifier","src":"2695:13:7"}]},{"nodeType":"YulAssignment","src":"2759:48:7","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2787:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2803:2:7","type":"","value":"86"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:7"},"nodeType":"YulFunctionCall","src":"2783:23:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2777:5:7"},"nodeType":"YulFunctionCall","src":"2777:30:7"},"variableNames":[{"name":"airdropAddress","nodeType":"YulIdentifier","src":"2759:14:7"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2722:14:7","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"2787:14:7","valueSize":1},{"declaration":1547,"isOffset":false,"isSlot":false,"src":"2759:14:7","valueSize":1},{"declaration":1545,"isOffset":false,"isSlot":false,"src":"2695:13:7","valueSize":1}],"id":1584,"nodeType":"InlineAssembly","src":"2668:153:7"}]}}]},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"decodeAdapterParams","nameLocation":"2045:19:7","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"_adapterParams","nameLocation":"2078:14:7","nodeType":"VariableDeclaration","scope":1588,"src":"2065:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1537,"name":"bytes","nodeType":"ElementaryTypeName","src":"2065:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2064:29:7"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"txType","nameLocation":"2161:6:7","nodeType":"VariableDeclaration","scope":1588,"src":"2154:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1540,"name":"uint16","nodeType":"ElementaryTypeName","src":"2154:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"uaGas","nameLocation":"2186:5:7","nodeType":"VariableDeclaration","scope":1588,"src":"2181:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint","nodeType":"ElementaryTypeName","src":"2181:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"airdropAmount","nameLocation":"2210:13:7","nodeType":"VariableDeclaration","scope":1588,"src":"2205:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint","nodeType":"ElementaryTypeName","src":"2205:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"airdropAddress","nameLocation":"2253:14:7","nodeType":"VariableDeclaration","scope":1588,"src":"2237:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"2237:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2140:137:7"},"scope":1627,"src":"2036:801:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1606,"nodeType":"Block","src":"3046:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1601,"name":"_bytes32Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"3084:15:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3079:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1599,"name":"uint","nodeType":"ElementaryTypeName","src":"3079:4:7","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3071:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1597,"name":"uint160","nodeType":"ElementaryTypeName","src":"3071:7:7","typeDescriptions":{}}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3071:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3063:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:7","typeDescriptions":{}}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1594,"id":1605,"nodeType":"Return","src":"3056:46:7"}]},"id":1607,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToAddress","nameLocation":"2963:16:7","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"_bytes32Address","nameLocation":"2988:15:7","nodeType":"VariableDeclaration","scope":1607,"src":"2980:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2980:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2979:25:7"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"_address","nameLocation":"3036:8:7","nodeType":"VariableDeclaration","scope":1607,"src":"3028:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"3028:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3027:18:7"},"scope":1627,"src":"2954:155:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"3207:56:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1620,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3245:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3237:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1618,"name":"uint160","nodeType":"ElementaryTypeName","src":"3237:7:7","typeDescriptions":{}}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3232:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1616,"name":"uint","nodeType":"ElementaryTypeName","src":"3232:4:7","typeDescriptions":{}}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3224:7:7","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1613,"id":1624,"nodeType":"Return","src":"3217:39:7"}]},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"addressToBytes32","nameLocation":"3124:16:7","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"_address","nameLocation":"3149:8:7","nodeType":"VariableDeclaration","scope":1626,"src":"3141:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3140:18:7"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"_bytes32Address","nameLocation":"3190:15:7","nodeType":"VariableDeclaration","scope":1626,"src":"3182:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3182:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3181:25:7"},"scope":1627,"src":"3115:148:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1628,"src":"98:3167:7","usedErrors":[],"usedEvents":[]}],"src":"38:3228:7"},"id":7},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3259],"Ownable":[1740]},"id":1741,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1629,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1741,"sourceUnit":3260,"src":"127:30:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1632,"name":"Context","nameLocations":["683:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3259,"src":"683:7:8"},"id":1633,"nodeType":"InheritanceSpecifier","src":"683:7:8"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"159:494:8","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1740,"linearizedBaseContracts":[1740,3259],"name":"Ownable","nameLocation":"672:7:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1635,"mutability":"mutable","name":"_owner","nameLocation":"713:6:8","nodeType":"VariableDeclaration","scope":1740,"src":"697:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1641,"name":"OwnershipTransferred","nameLocation":"732:20:8","nodeType":"EventDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:8","nodeType":"VariableDeclaration","scope":1641,"src":"753:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:8","nodeType":"VariableDeclaration","scope":1641,"src":"784:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:8"},"src":"726:84:8"},{"body":{"id":1650,"nodeType":"Block","src":"926:49:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1646,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"955:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1645,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"936:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1649,"nodeType":"ExpressionStatement","src":"936:32:8"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"816:91:8","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1651,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[],"src":"923:2:8"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"926:0:8"},"scope":1740,"src":"912:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1658,"nodeType":"Block","src":"1084:41:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1654,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1094:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1656,"nodeType":"ExpressionStatement","src":"1094:13:8"},{"id":1657,"nodeType":"PlaceholderStatement","src":"1117:1:8"}]},"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"981:77:8","text":" @dev Throws if called by any account other than the owner."},"id":1659,"name":"onlyOwner","nameLocation":"1072:9:8","nodeType":"ModifierDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"1081:2:8"},"src":"1063:62:8","virtual":false,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"1256:30:8","statements":[{"expression":{"id":1665,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1273:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1664,"id":1666,"nodeType":"Return","src":"1266:13:8"}]},"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"1131:65:8","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:8","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"1215:2:8"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"1247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:8"},"scope":1740,"src":"1201:85:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1681,"nodeType":"Block","src":"1404:85:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1422:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1675,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"1433:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"1414:68:8"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"1292:62:8","text":" @dev Throws if the sender is not the owner."},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:8","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"1379:2:8"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"1404:0:8"},"scope":1740,"src":"1359:130:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1695,"nodeType":"Block","src":"1878:47:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:8","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1688,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1888:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"ExpressionStatement","src":"1888:30:8"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"1495:324:8","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1696,"implemented":true,"kind":"function","modifiers":[{"id":1686,"kind":"modifierInvocation","modifierName":{"id":1685,"name":"onlyOwner","nameLocations":["1868:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"1868:9:8"},"nodeType":"ModifierInvocation","src":"1868:9:8"}],"name":"renounceOwnership","nameLocation":"1833:17:8","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[],"src":"1850:2:8"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"1878:0:8"},"scope":1740,"src":"1824:101:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1718,"nodeType":"Block","src":"2144:128:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2162:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:8","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"2154:73:8"},{"expression":{"arguments":[{"id":1715,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2256:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1714,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2237:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"ExpressionStatement","src":"2237:28:8"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1931:138:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1719,"implemented":true,"kind":"function","modifiers":[{"id":1702,"kind":"modifierInvocation","modifierName":{"id":1701,"name":"onlyOwner","nameLocations":["2134:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"2134:9:8"},"nodeType":"ModifierInvocation","src":"2134:9:8"}],"name":"transferOwnership","nameLocation":"2083:17:8","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:8","nodeType":"VariableDeclaration","scope":1719,"src":"2101:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:8"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"2144:0:8"},"scope":1740,"src":"2074:198:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1738,"nodeType":"Block","src":"2489:124:8","statements":[{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:8","nodeType":"VariableDeclaration","scope":1738,"src":"2499:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1728,"initialValue":{"id":1727,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"2518:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:8"},{"expression":{"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1729,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"2534:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1730,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2543:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1732,"nodeType":"ExpressionStatement","src":"2534:17:8"},{"eventCall":{"arguments":[{"id":1734,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2587:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1735,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"2597:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1733,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2566:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"EmitStatement","src":"2561:45:8"}]},"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"2278:143:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:8","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:8","nodeType":"VariableDeclaration","scope":1739,"src":"2454:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:8"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"2489:0:8"},"scope":1740,"src":"2426:187:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1741,"src":"654:1961:8","usedErrors":[],"usedEvents":[1641]}],"src":"102:2514:8"},"id":8},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1805]},"id":1806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1742,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"137:750:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1805,"linearizedBaseContracts":[1805],"name":"ReentrancyGuard","nameLocation":"906:15:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1746,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:9","nodeType":"VariableDeclaration","scope":1805,"src":"1676:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1749,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:9","nodeType":"VariableDeclaration","scope":1805,"src":"1723:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1751,"mutability":"mutable","name":"_status","nameLocation":"1783:7:9","nodeType":"VariableDeclaration","scope":1805,"src":"1767:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1758,"nodeType":"Block","src":"1811:39:9","statements":[{"expression":{"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1754,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"1821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1755,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1831:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1757,"nodeType":"ExpressionStatement","src":"1821:22:9"}]},"id":1759,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[],"src":"1808:2:9"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"1811:0:9"},"scope":1805,"src":"1797:53:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1769,"nodeType":"Block","src":"2251:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1762,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"2261:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"2261:21:9"},{"id":1765,"nodeType":"PlaceholderStatement","src":"2292:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1766,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"2303:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1768,"nodeType":"ExpressionStatement","src":"2303:20:9"}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"1856:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1770,"name":"nonReentrant","nameLocation":"2236:12:9","nodeType":"ModifierDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"2248:2:9"},"src":"2227:103:9","virtual":false,"visibility":"internal"},{"body":{"id":1784,"nodeType":"Block","src":"2375:248:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2468:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1775,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2479:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"2460:63:9"},{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1780,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1781,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2608:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"2598:18:9"}]},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:9","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"2364:2:9"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"2375:0:9"},"scope":1805,"src":"2336:287:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1792,"nodeType":"Block","src":"2667:171:9","statements":[{"expression":{"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1788,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1789,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2819:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1791,"nodeType":"ExpressionStatement","src":"2809:22:9"}]},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:9","nodeType":"FunctionDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"2656:2:9"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[],"src":"2667:0:9"},"scope":1805,"src":"2629:209:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1803,"nodeType":"Block","src":"3081:43:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1799,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"3098:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1800,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"3109:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1798,"id":1802,"nodeType":"Return","src":"3091:26:9"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"2844:168:9","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1804,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:9","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"3049:2:9"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1804,"src":"3075:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1796,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:9"},"scope":1805,"src":"3017:107:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1806,"src":"888:2238:9","usedErrors":[],"usedEvents":[]}],"src":"112:3015:9"},"id":9},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3259],"ERC20":[2392],"IERC20":[2470],"IERC20Metadata":[2495]},"id":2393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1807,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2393,"sourceUnit":2471,"src":"130:22:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2393,"sourceUnit":2496,"src":"153:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2393,"sourceUnit":3260,"src":"195:33:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1812,"name":"Context","nameLocations":["1550:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3259,"src":"1550:7:10"},"id":1813,"nodeType":"InheritanceSpecifier","src":"1550:7:10"},{"baseName":{"id":1814,"name":"IERC20","nameLocations":["1559:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"1559:6:10"},"id":1815,"nodeType":"InheritanceSpecifier","src":"1559:6:10"},{"baseName":{"id":1816,"name":"IERC20Metadata","nameLocations":["1567:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2495,"src":"1567:14:10"},"id":1817,"nodeType":"InheritanceSpecifier","src":"1567:14:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"230:1301:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":2392,"linearizedBaseContracts":[2392,2495,2470,3259],"name":"ERC20","nameLocation":"1541:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1821,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:10","nodeType":"VariableDeclaration","scope":2392,"src":"1588:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1820,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1827,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:10","nodeType":"VariableDeclaration","scope":2392,"src":"1640:67:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1826,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1825,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1829,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:10","nodeType":"VariableDeclaration","scope":2392,"src":"1714:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1831,"mutability":"mutable","name":"_name","nameLocation":"1764:5:10","nodeType":"VariableDeclaration","scope":2392,"src":"1749:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1830,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1833,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:10","nodeType":"VariableDeclaration","scope":2392,"src":"1775:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1832,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1849,"nodeType":"Block","src":"2036:57:10","statements":[{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1841,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2046:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1842,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2054:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1844,"nodeType":"ExpressionStatement","src":"2046:13:10"},{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1845,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"2069:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1846,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2079:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1848,"nodeType":"ExpressionStatement","src":"2069:17:10"}]},"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"1804:171:10","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1850,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"name_","nameLocation":"2006:5:10","nodeType":"VariableDeclaration","scope":1850,"src":"1992:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1835,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:10","nodeType":"VariableDeclaration","scope":1850,"src":"2013:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:10"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"2036:0:10"},"scope":2392,"src":"1980:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2482],"body":{"id":1859,"nodeType":"Block","src":"2227:29:10","statements":[{"expression":{"id":1857,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2244:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1856,"id":1858,"nodeType":"Return","src":"2237:12:10"}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"2099:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1860,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:10","nodeType":"FunctionDefinition","overrides":{"id":1853,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:10"},"parameters":{"id":1852,"nodeType":"ParameterList","parameters":[],"src":"2171:2:10"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"2212:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:10"},"scope":2392,"src":"2158:98:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2488],"body":{"id":1869,"nodeType":"Block","src":"2440:31:10","statements":[{"expression":{"id":1867,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"2457:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1866,"id":1868,"nodeType":"Return","src":"2450:14:10"}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"2262:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:10","nodeType":"FunctionDefinition","overrides":{"id":1863,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:10"},"parameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"2384:2:10"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1870,"src":"2425:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1864,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:10"},"scope":2392,"src":"2369:102:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2494],"body":{"id":1879,"nodeType":"Block","src":"3169:26:10","statements":[{"expression":{"hexValue":"3138","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1876,"id":1878,"nodeType":"Return","src":"3179:9:10"}]},"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"2477:622:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1880,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:10","nodeType":"FunctionDefinition","overrides":{"id":1873,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:10"},"parameters":{"id":1872,"nodeType":"ParameterList","parameters":[],"src":"3121:2:10"},"returnParameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1880,"src":"3162:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1874,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:10"},"scope":2392,"src":"3104:91:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2419],"body":{"id":1889,"nodeType":"Block","src":"3325:36:10","statements":[{"expression":{"id":1887,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"3342:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1886,"id":1888,"nodeType":"Return","src":"3335:19:10"}]},"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"3201:49:10","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:10","nodeType":"FunctionDefinition","overrides":{"id":1883,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:10"},"parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"3275:2:10"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1890,"src":"3316:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:10"},"scope":2392,"src":"3255:106:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2427],"body":{"id":1903,"nodeType":"Block","src":"3502:42:10","statements":[{"expression":{"baseExpression":{"id":1899,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"3519:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1901,"indexExpression":{"id":1900,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3529:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1898,"id":1902,"nodeType":"Return","src":"3512:25:10"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"3367:47:10","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:10","nodeType":"FunctionDefinition","overrides":{"id":1895,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:10"},"parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"account","nameLocation":"3446:7:10","nodeType":"VariableDeclaration","scope":1904,"src":"3438:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:10"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"3493:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:10"},"scope":2392,"src":"3419:125:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2437],"body":{"id":1928,"nodeType":"Block","src":"3825:104:10","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"owner","nameLocation":"3843:5:10","nodeType":"VariableDeclaration","scope":1928,"src":"3835:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1917,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"3851:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:10"},{"expression":{"arguments":[{"id":1921,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"3883:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"3890:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1923,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"3894:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"3873:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"ExpressionStatement","src":"3873:28:10"},{"expression":{"hexValue":"74727565","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1914,"id":1927,"nodeType":"Return","src":"3911:11:10"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"3550:185:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:10","nodeType":"FunctionDefinition","overrides":{"id":1911,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:10"},"parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"to","nameLocation":"3766:2:10","nodeType":"VariableDeclaration","scope":1929,"src":"3758:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"amount","nameLocation":"3778:6:10","nodeType":"VariableDeclaration","scope":1929,"src":"3770:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:10"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"3819:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1912,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:10"},"scope":2392,"src":"3740:189:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2447],"body":{"id":1946,"nodeType":"Block","src":"4085:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1940,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"4102:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1942,"indexExpression":{"id":1941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4114:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1944,"indexExpression":{"id":1943,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4121:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1939,"id":1945,"nodeType":"Return","src":"4095:34:10"}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"3935:47:10","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:10","nodeType":"FunctionDefinition","overrides":{"id":1936,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:10"},"parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"owner","nameLocation":"4014:5:10","nodeType":"VariableDeclaration","scope":1947,"src":"4006:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"spender","nameLocation":"4029:7:10","nodeType":"VariableDeclaration","scope":1947,"src":"4021:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:10"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"4076:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:10"},"scope":2392,"src":"3987:149:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2457],"body":{"id":1971,"nodeType":"Block","src":"4533:108:10","statements":[{"assignments":[1959],"declarations":[{"constant":false,"id":1959,"mutability":"mutable","name":"owner","nameLocation":"4551:5:10","nodeType":"VariableDeclaration","scope":1971,"src":"4543:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1962,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1960,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"4559:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:10"},{"expression":{"arguments":[{"id":1964,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"4590:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1965,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4597:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1966,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"4606:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"4581:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"ExpressionStatement","src":"4581:32:10"},{"expression":{"hexValue":"74727565","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1957,"id":1970,"nodeType":"Return","src":"4623:11:10"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"4142:297:10","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:10","nodeType":"FunctionDefinition","overrides":{"id":1954,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:10"},"parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"spender","nameLocation":"4469:7:10","nodeType":"VariableDeclaration","scope":1972,"src":"4461:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"amount","nameLocation":"4486:6:10","nodeType":"VariableDeclaration","scope":1972,"src":"4478:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:10"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"4527:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1955,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:10"},"scope":2392,"src":"4444:197:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2469],"body":{"id":2004,"nodeType":"Block","src":"5306:153:10","statements":[{"assignments":[1986],"declarations":[{"constant":false,"id":1986,"mutability":"mutable","name":"spender","nameLocation":"5324:7:10","nodeType":"VariableDeclaration","scope":2004,"src":"5316:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1989,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1987,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"5334:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:10"},{"expression":{"arguments":[{"id":1991,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"5372:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"5378:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1993,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"5387:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1990,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"5356:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"5356:38:10"},{"expression":{"arguments":[{"id":1997,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"5414:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1998,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"5420:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1999,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"5424:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1996,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"5404:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"ExpressionStatement","src":"5404:27:10"},{"expression":{"hexValue":"74727565","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1984,"id":2003,"nodeType":"Return","src":"5441:11:10"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"4647:551:10","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:10","nodeType":"FunctionDefinition","overrides":{"id":1981,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:10"},"parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"from","nameLocation":"5233:4:10","nodeType":"VariableDeclaration","scope":2005,"src":"5225:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"to","nameLocation":"5247:2:10","nodeType":"VariableDeclaration","scope":2005,"src":"5239:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"amount","nameLocation":"5259:6:10","nodeType":"VariableDeclaration","scope":2005,"src":"5251:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:10"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"5300:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1982,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:10"},"scope":2392,"src":"5203:256:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2033,"nodeType":"Block","src":"5948:140:10","statements":[{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"owner","nameLocation":"5966:5:10","nodeType":"VariableDeclaration","scope":2033,"src":"5958:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2019,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2017,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"5974:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:10"},{"expression":{"arguments":[{"id":2021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6005:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2022,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6012:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2024,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6031:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2025,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6038:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2023,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"6021:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2027,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"6049:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2020,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"5996:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2030,"nodeType":"ExpressionStatement","src":"5996:64:10"},{"expression":{"hexValue":"74727565","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2014,"id":2032,"nodeType":"Return","src":"6070:11:10"}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"5465:384:10","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:10","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"spender","nameLocation":"5889:7:10","nodeType":"VariableDeclaration","scope":2034,"src":"5881:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2007,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:10","nodeType":"VariableDeclaration","scope":2034,"src":"5898:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:10"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2034,"src":"5942:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2012,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:10"},"scope":2392,"src":"5854:234:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2074,"nodeType":"Block","src":"6674:328:10","statements":[{"assignments":[2045],"declarations":[{"constant":false,"id":2045,"mutability":"mutable","name":"owner","nameLocation":"6692:5:10","nodeType":"VariableDeclaration","scope":2074,"src":"6684:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2048,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2046,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"6700:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:10"},{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:10","nodeType":"VariableDeclaration","scope":2074,"src":"6722:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2052,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"6759:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2053,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"6766:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2051,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"6749:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6792:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2058,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"6812:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":2056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2062,"nodeType":"ExpressionStatement","src":"6784:85:10"},{"id":2071,"nodeType":"UncheckedBlock","src":"6879:95:10","statements":[{"expression":{"arguments":[{"id":2064,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"6912:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2065,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"6919:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6928:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2067,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"6947:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2063,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6903:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2070,"nodeType":"ExpressionStatement","src":"6903:60:10"}]},{"expression":{"hexValue":"74727565","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2043,"id":2073,"nodeType":"Return","src":"6984:11:10"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"6094:476:10","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:10","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"spender","nameLocation":"6610:7:10","nodeType":"VariableDeclaration","scope":2075,"src":"6602:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:10","nodeType":"VariableDeclaration","scope":2075,"src":"6619:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:10"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"6668:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2041,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:10"},"scope":2392,"src":"6575:427:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2151,"nodeType":"Block","src":"7534:710:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"7552:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:10","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":2085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2094,"nodeType":"ExpressionStatement","src":"7544:68:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2096,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"7630:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:10","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2095,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2104,"nodeType":"ExpressionStatement","src":"7622:64:10"},{"expression":{"arguments":[{"id":2106,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"7718:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2107,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"7724:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7728:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2105,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7697:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"ExpressionStatement","src":"7697:38:10"},{"assignments":[2112],"declarations":[{"constant":false,"id":2112,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:10","nodeType":"VariableDeclaration","scope":2151,"src":"7746:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2116,"initialValue":{"baseExpression":{"id":2113,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"7768:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2115,"indexExpression":{"id":2114,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"7778:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"7801:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2119,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7816:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":2117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"ExpressionStatement","src":"7793:72:10"},{"id":2138,"nodeType":"UncheckedBlock","src":"7875:273:10","statements":[{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2124,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"7899:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2126,"indexExpression":{"id":2125,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"7909:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2127,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"7917:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2128,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7931:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"7899:38:10"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2132,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"8114:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2134,"indexExpression":{"id":2133,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"8124:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2135,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8131:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"8114:23:10"}]},{"eventCall":{"arguments":[{"id":2140,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"8172:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2141,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"8178:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8182:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2139,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8163:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"EmitStatement","src":"8158:31:10"},{"expression":{"arguments":[{"id":2146,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"8220:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2147,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"8226:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2148,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"8230:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2145,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"8200:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"ExpressionStatement","src":"8200:37:10"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"7008:443:10","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:10","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"from","nameLocation":"7483:4:10","nodeType":"VariableDeclaration","scope":2152,"src":"7475:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"to","nameLocation":"7497:2:10","nodeType":"VariableDeclaration","scope":2152,"src":"7489:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"amount","nameLocation":"7509:6:10","nodeType":"VariableDeclaration","scope":2152,"src":"7501:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:10"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"7534:0:10"},"scope":2392,"src":"7456:788:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2208,"nodeType":"Block","src":"8585:470:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2161,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8603:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:10","typeDescriptions":{}}},"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":2160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2169,"nodeType":"ExpressionStatement","src":"8595:65:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:10","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2175,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8704:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2176,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8713:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2170,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"8671:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"ExpressionStatement","src":"8671:49:10"},{"expression":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2179,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"8731:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2180,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8747:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"nodeType":"ExpressionStatement","src":"8731:22:10"},{"id":2189,"nodeType":"UncheckedBlock","src":"8763:175:10","statements":[{"expression":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2183,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"8899:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2185,"indexExpression":{"id":2184,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8909:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2186,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8921:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2188,"nodeType":"ExpressionStatement","src":"8899:28:10"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:10","typeDescriptions":{}}},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2195,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8973:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2196,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8982:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"8952:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2198,"nodeType":"EmitStatement","src":"8947:42:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:10","typeDescriptions":{}}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2204,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9032:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2205,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"9041:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2199,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"9000:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2207,"nodeType":"ExpressionStatement","src":"9000:48:10"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"8250:265:10","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:10","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"account","nameLocation":"8543:7:10","nodeType":"VariableDeclaration","scope":2209,"src":"8535:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"amount","nameLocation":"8560:6:10","nodeType":"VariableDeclaration","scope":2209,"src":"8552:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:10"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"8585:0:10"},"scope":2392,"src":"8520:535:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"9440:594:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"9458:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:10","typeDescriptions":{}}},"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":2217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"ExpressionStatement","src":"9450:67:10"},{"expression":{"arguments":[{"id":2228,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"9549:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:10","typeDescriptions":{}}},"id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"9570:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2227,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"9528:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"ExpressionStatement","src":"9528:49:10"},{"assignments":[2237],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:10","nodeType":"VariableDeclaration","scope":2280,"src":"9588:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2241,"initialValue":{"baseExpression":{"id":2238,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"9613:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2240,"indexExpression":{"id":2239,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"9623:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9649:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"9667:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":2242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2248,"nodeType":"ExpressionStatement","src":"9641:71:10"},{"id":2261,"nodeType":"UncheckedBlock","src":"9722:194:10","statements":[{"expression":{"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2249,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"9746:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2251,"indexExpression":{"id":2250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"9756:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9767:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2253,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"9784:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2256,"nodeType":"ExpressionStatement","src":"9746:44:10"},{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2257,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"9883:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2258,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"9899:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"9883:22:10"}]},{"eventCall":{"arguments":[{"id":2263,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"9940:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:10","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2268,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"9961:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2262,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"9931:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"EmitStatement","src":"9926:42:10"},{"expression":{"arguments":[{"id":2272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"9999:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:10","typeDescriptions":{}}},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2277,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"10020:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2271,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"9979:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"ExpressionStatement","src":"9979:48:10"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"9061:309:10","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:10","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"account","nameLocation":"9398:7:10","nodeType":"VariableDeclaration","scope":2281,"src":"9390:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"amount","nameLocation":"9415:6:10","nodeType":"VariableDeclaration","scope":2281,"src":"9407:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:10"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"9440:0:10"},"scope":2392,"src":"9375:659:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"10540:257:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"10558:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:10","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":2291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"ExpressionStatement","src":"10550:68:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10636:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:10","typeDescriptions":{}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":2301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"ExpressionStatement","src":"10628:68:10"},{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2311,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"10707:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2314,"indexExpression":{"id":2312,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"10719:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2315,"indexExpression":{"id":2313,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10726:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2316,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10737:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ExpressionStatement","src":"10707:36:10"},{"eventCall":{"arguments":[{"id":2320,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"10767:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10774:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10783:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2319,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"10758:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2324,"nodeType":"EmitStatement","src":"10753:37:10"}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"10040:412:10","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:10","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"owner","nameLocation":"10483:5:10","nodeType":"VariableDeclaration","scope":2326,"src":"10475:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"spender","nameLocation":"10498:7:10","nodeType":"VariableDeclaration","scope":2326,"src":"10490:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"amount","nameLocation":"10515:6:10","nodeType":"VariableDeclaration","scope":2326,"src":"10507:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:10"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[],"src":"10540:0:10"},"scope":2392,"src":"10457:340:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2368,"nodeType":"Block","src":"11168:321:10","statements":[{"assignments":[2337],"declarations":[{"constant":false,"id":2337,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:10","nodeType":"VariableDeclaration","scope":2368,"src":"11178:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2342,"initialValue":{"arguments":[{"id":2339,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"11215:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2340,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"11222:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2338,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"11205:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"11244:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:10","memberName":"max","nodeType":"MemberAccess","src":"11264:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2367,"nodeType":"IfStatement","src":"11240:243:10","trueBody":{"id":2366,"nodeType":"Block","src":"11283:200:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"11305:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2352,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"11325:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":2350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2356,"nodeType":"ExpressionStatement","src":"11297:68:10"},{"id":2365,"nodeType":"UncheckedBlock","src":"11379:94:10","statements":[{"expression":{"arguments":[{"id":2358,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"11416:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2359,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"11423:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"11432:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2361,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"11451:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2357,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"11407:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2364,"nodeType":"ExpressionStatement","src":"11407:51:10"}]}]}}]},"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"10803:270:10","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:10","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"owner","nameLocation":"11111:5:10","nodeType":"VariableDeclaration","scope":2369,"src":"11103:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"spender","nameLocation":"11126:7:10","nodeType":"VariableDeclaration","scope":2369,"src":"11118:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"amount","nameLocation":"11143:6:10","nodeType":"VariableDeclaration","scope":2369,"src":"11135:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:10"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[],"src":"11168:0:10"},"scope":2392,"src":"11078:411:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"12162:2:10","statements":[]},"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"11495:573:10","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:10","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"from","nameLocation":"12111:4:10","nodeType":"VariableDeclaration","scope":2380,"src":"12103:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"to","nameLocation":"12125:2:10","nodeType":"VariableDeclaration","scope":2380,"src":"12117:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"amount","nameLocation":"12137:6:10","nodeType":"VariableDeclaration","scope":2380,"src":"12129:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:10"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[],"src":"12162:0:10"},"scope":2392,"src":"12073:91:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2390,"nodeType":"Block","src":"12840:2:10","statements":[]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"12170:577:10","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:10","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"from","nameLocation":"12789:4:10","nodeType":"VariableDeclaration","scope":2391,"src":"12781:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"to","nameLocation":"12803:2:10","nodeType":"VariableDeclaration","scope":2391,"src":"12795:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"amount","nameLocation":"12815:6:10","nodeType":"VariableDeclaration","scope":2391,"src":"12807:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:10"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"12840:0:10"},"scope":2392,"src":"12752:90:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2393,"src":"1532:11312:10","usedErrors":[],"usedEvents":[2404,2413]}],"src":"105:12740:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2470]},"id":2471,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2394,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"131:70:11","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2470,"linearizedBaseContracts":[2470],"name":"IERC20","nameLocation":"212:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"225:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2404,"name":"Transfer","nameLocation":"394:8:11","nodeType":"EventDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:11","nodeType":"VariableDeclaration","scope":2404,"src":"403:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:11","nodeType":"VariableDeclaration","scope":2404,"src":"425:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2402,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:11","nodeType":"VariableDeclaration","scope":2404,"src":"445:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:11"},"src":"388:72:11"},{"anonymous":false,"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"466:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2413,"name":"Approval","nameLocation":"625:8:11","nodeType":"EventDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:11","nodeType":"VariableDeclaration","scope":2413,"src":"634:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2409,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:11","nodeType":"VariableDeclaration","scope":2413,"src":"657:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2411,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:11","nodeType":"VariableDeclaration","scope":2413,"src":"682:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:11"},"src":"619:78:11"},{"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"703:66:11","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2419,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:11","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"794:2:11"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"820:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:11"},"scope":2470,"src":"774:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"835:72:11","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2427,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:11","nodeType":"FunctionDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"account","nameLocation":"939:7:11","nodeType":"VariableDeclaration","scope":2427,"src":"931:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:11"},"returnParameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2427,"src":"971:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:11"},"scope":2470,"src":"912:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"986:202:11","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2437,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:11","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"to","nameLocation":"1219:2:11","nodeType":"VariableDeclaration","scope":2437,"src":"1211:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"amount","nameLocation":"1231:6:11","nodeType":"VariableDeclaration","scope":2437,"src":"1223:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:11"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"1257:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2434,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:11"},"scope":2470,"src":"1193:70:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"1269:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2447,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:11","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"owner","nameLocation":"1565:5:11","nodeType":"VariableDeclaration","scope":2447,"src":"1557:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"spender","nameLocation":"1580:7:11","nodeType":"VariableDeclaration","scope":2447,"src":"1572:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2441,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:11"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"1612:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:11"},"scope":2470,"src":"1538:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"1627:642:11","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2457,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:11","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"spender","nameLocation":"2299:7:11","nodeType":"VariableDeclaration","scope":2457,"src":"2291:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"amount","nameLocation":"2316:6:11","nodeType":"VariableDeclaration","scope":2457,"src":"2308:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:11"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2457,"src":"2342:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2454,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:11"},"scope":2470,"src":"2274:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"2354:287:11","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2469,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:11","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"from","nameLocation":"2676:4:11","nodeType":"VariableDeclaration","scope":2469,"src":"2668:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"to","nameLocation":"2690:2:11","nodeType":"VariableDeclaration","scope":2469,"src":"2682:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"amount","nameLocation":"2702:6:11","nodeType":"VariableDeclaration","scope":2469,"src":"2694:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:11"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2469,"src":"2728:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2466,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:11"},"scope":2470,"src":"2646:88:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2471,"src":"202:2534:11","usedErrors":[],"usedEvents":[2404,2413]}],"src":"106:2631:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2470],"IERC20Metadata":[2495]},"id":2496,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2472,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2496,"sourceUnit":2471,"src":"135:23:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2475,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"305:6:12"},"id":2476,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"160:116:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2495,"linearizedBaseContracts":[2495,2470],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2482,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2479,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":2495,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2488,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2485,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":2495,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2494,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2494,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2491,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":2495,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2496,"src":"277:405:12","usedErrors":[],"usedEvents":[2404,2413]}],"src":"110:573:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2531]},"id":2532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2497,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"148:480:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2531,"linearizedBaseContracts":[2531],"name":"IERC20Permit","nameLocation":"639:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"658:792:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2516,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:13","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"owner","nameLocation":"1488:5:13","nodeType":"VariableDeclaration","scope":2516,"src":"1480:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"spender","nameLocation":"1511:7:13","nodeType":"VariableDeclaration","scope":2516,"src":"1503:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"value","nameLocation":"1536:5:13","nodeType":"VariableDeclaration","scope":2516,"src":"1528:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:13","nodeType":"VariableDeclaration","scope":2516,"src":"1551:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"v","nameLocation":"1583:1:13","nodeType":"VariableDeclaration","scope":2516,"src":"1577:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2508,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"r","nameLocation":"1602:1:13","nodeType":"VariableDeclaration","scope":2516,"src":"1594:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"s","nameLocation":"1621:1:13","nodeType":"VariableDeclaration","scope":2516,"src":"1613:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:13"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"1637:0:13"},"scope":2531,"src":"1455:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"1644:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2524,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:13","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"owner","nameLocation":"1967:5:13","nodeType":"VariableDeclaration","scope":2524,"src":"1959:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2518,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:13"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2524,"src":"1997:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:13"},"scope":2531,"src":"1943:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"2012:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2530,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:13","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[],"src":"2223:2:13"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"2249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:13"},"scope":2531,"src":"2198:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2532,"src":"629:1631:13","usedErrors":[],"usedEvents":[]}],"src":"123:2138:13"},"id":13},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[3237],"IERC20":[2470],"IERC20Permit":[2531],"SafeERC20":[2907]},"id":2908,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":2471,"src":"140:23:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":2535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":2532,"src":"164:40:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":2536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2908,"sourceUnit":3238,"src":"205:36:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"243:457:14","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2907,"linearizedBaseContracts":[2907],"name":"SafeERC20","nameLocation":"709:9:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2540,"libraryName":{"id":2538,"name":"Address","nameLocations":["731:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3237,"src":"731:7:14"},"nodeType":"UsingForDirective","src":"725:26:14","typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":2563,"nodeType":"Block","src":"1013:103:14","statements":[{"expression":{"arguments":[{"id":2552,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"1043:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2555,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"1073:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"1073:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"1098:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"1102:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2553,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2551,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"1023:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2562,"nodeType":"ExpressionStatement","src":"1023:86:14"}]},"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"757:179:14","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2564,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:14","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"token","nameLocation":"970:5:14","nodeType":"VariableDeclaration","scope":2564,"src":"963:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2543,"nodeType":"UserDefinedTypeName","pathNode":{"id":2542,"name":"IERC20","nameLocations":["963:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"963:6:14"},"referencedDeclaration":2470,"src":"963:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"to","nameLocation":"985:2:14","nodeType":"VariableDeclaration","scope":2564,"src":"977:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"value","nameLocation":"997:5:14","nodeType":"VariableDeclaration","scope":2564,"src":"989:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:14"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"1013:0:14"},"scope":2907,"src":"941:175:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2590,"nodeType":"Block","src":"1445:113:14","statements":[{"expression":{"arguments":[{"id":2578,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"1475:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2581,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"1505:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"1505:18:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2584,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"1534:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"1540:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1544:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2579,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2577,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"1455:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"1455:96:14"}]},"documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"1122:228:14","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2591,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:14","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"token","nameLocation":"1388:5:14","nodeType":"VariableDeclaration","scope":2591,"src":"1381:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2567,"nodeType":"UserDefinedTypeName","pathNode":{"id":2566,"name":"IERC20","nameLocations":["1381:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"1381:6:14"},"referencedDeclaration":2470,"src":"1381:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"from","nameLocation":"1403:4:14","nodeType":"VariableDeclaration","scope":2591,"src":"1395:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"to","nameLocation":"1417:2:14","nodeType":"VariableDeclaration","scope":2591,"src":"1409:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"value","nameLocation":"1429:5:14","nodeType":"VariableDeclaration","scope":2591,"src":"1421:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:14"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[],"src":"1445:0:14"},"scope":2907,"src":"1355:203:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"1894:497:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"2143:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2907","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2907","typeString":"library SafeERC20"}],"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:14","typeDescriptions":{}}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2613,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"2190:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2607,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2159:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:14","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"2159:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":2602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2621,"nodeType":"ExpressionStatement","src":"2121:163:14"},{"expression":{"arguments":[{"id":2623,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2314:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2626,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2344:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:14","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"2344:13:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:14","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2629,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"2368:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"2377:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2624,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2622,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2294:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2633,"nodeType":"ExpressionStatement","src":"2294:90:14"}]},"documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"1564:249:14","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:14","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"token","nameLocation":"1846:5:14","nodeType":"VariableDeclaration","scope":2635,"src":"1839:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2594,"nodeType":"UserDefinedTypeName","pathNode":{"id":2593,"name":"IERC20","nameLocations":["1839:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"1839:6:14"},"referencedDeclaration":2470,"src":"1839:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"spender","nameLocation":"1861:7:14","nodeType":"VariableDeclaration","scope":2635,"src":"1853:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"value","nameLocation":"1878:5:14","nodeType":"VariableDeclaration","scope":2635,"src":"1870:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:14"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[],"src":"1894:0:14"},"scope":2907,"src":"1818:573:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2671,"nodeType":"Block","src":"2668:194:14","statements":[{"assignments":[2647],"declarations":[{"constant":false,"id":2647,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:14","nodeType":"VariableDeclaration","scope":2671,"src":"2678:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2656,"initialValue":{"arguments":[{"arguments":[{"id":2652,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2907","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2907","typeString":"library SafeERC20"}],"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:14","typeDescriptions":{}}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2654,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2732:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2648,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2701:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:14","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"2701:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:14"},{"expression":{"arguments":[{"id":2658,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2770:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2661,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2800:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:14","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"2800:13:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:14","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2664,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2824:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2665,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"2833:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"2848:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2659,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2657,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2750:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2670,"nodeType":"ExpressionStatement","src":"2750:105:14"}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"2397:180:14","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2672,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:14","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"token","nameLocation":"2620:5:14","nodeType":"VariableDeclaration","scope":2672,"src":"2613:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2638,"nodeType":"UserDefinedTypeName","pathNode":{"id":2637,"name":"IERC20","nameLocations":["2613:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"2613:6:14"},"referencedDeclaration":2470,"src":"2613:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"spender","nameLocation":"2635:7:14","nodeType":"VariableDeclaration","scope":2672,"src":"2627:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"value","nameLocation":"2652:5:14","nodeType":"VariableDeclaration","scope":2672,"src":"2644:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:14"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[],"src":"2668:0:14"},"scope":2907,"src":"2582:280:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"3139:321:14","statements":[{"id":2715,"nodeType":"UncheckedBlock","src":"3149:305:14","statements":[{"assignments":[2684],"declarations":[{"constant":false,"id":2684,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:14","nodeType":"VariableDeclaration","scope":2715,"src":"3173:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2693,"initialValue":{"arguments":[{"arguments":[{"id":2689,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2907","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2907","typeString":"library SafeERC20"}],"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:14","typeDescriptions":{}}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2691,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3227:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2685,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3196:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:14","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"3196:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3257:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3273:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":2694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"ExpressionStatement","src":"3249:75:14"},{"expression":{"arguments":[{"id":2702,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3358:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2705,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3388:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:14","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"3388:13:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:14","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2708,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3412:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3421:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3436:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2703,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2701,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"3338:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2714,"nodeType":"ExpressionStatement","src":"3338:105:14"}]}]},"documentation":{"id":2673,"nodeType":"StructuredDocumentation","src":"2868:180:14","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:14","nodeType":"FunctionDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"token","nameLocation":"3091:5:14","nodeType":"VariableDeclaration","scope":2717,"src":"3084:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2675,"nodeType":"UserDefinedTypeName","pathNode":{"id":2674,"name":"IERC20","nameLocations":["3084:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"3084:6:14"},"referencedDeclaration":2470,"src":"3084:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"spender","nameLocation":"3106:7:14","nodeType":"VariableDeclaration","scope":2717,"src":"3098:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"value","nameLocation":"3123:5:14","nodeType":"VariableDeclaration","scope":2717,"src":"3115:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:14"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[],"src":"3139:0:14"},"scope":2907,"src":"3053:407:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"3856:333:14","statements":[{"assignments":[2729],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:14","nodeType":"VariableDeclaration","scope":2763,"src":"3866:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2728,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2738,"initialValue":{"arguments":[{"expression":{"expression":{"id":2732,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3917:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:14","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"3917:13:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:14","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2735,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"3941:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"3950:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2730,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:14"},{"condition":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:14","subExpression":{"arguments":[{"id":2740,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"3996:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"id":2741,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"4003:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2739,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"3972:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2762,"nodeType":"IfStatement","src":"3967:216:14","trueBody":{"id":2761,"nodeType":"Block","src":"4018:165:14","statements":[{"expression":{"arguments":[{"id":2745,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4052:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":2748,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4082:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:14","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"4082:13:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:14","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2751,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4106:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":2746,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2744,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4032:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2755,"nodeType":"ExpressionStatement","src":"4032:86:14"},{"expression":{"arguments":[{"id":2757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"4152:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},{"id":2758,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"4159:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2756,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4132:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2470_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2760,"nodeType":"ExpressionStatement","src":"4132:40:14"}]}}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"3466:308:14","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:14","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"token","nameLocation":"3808:5:14","nodeType":"VariableDeclaration","scope":2764,"src":"3801:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2720,"nodeType":"UserDefinedTypeName","pathNode":{"id":2719,"name":"IERC20","nameLocations":["3801:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"3801:6:14"},"referencedDeclaration":2470,"src":"3801:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"spender","nameLocation":"3823:7:14","nodeType":"VariableDeclaration","scope":2764,"src":"3815:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"value","nameLocation":"3840:5:14","nodeType":"VariableDeclaration","scope":2764,"src":"3832:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:14"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[],"src":"3856:0:14"},"scope":2907,"src":"3779:410:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"4556:257:14","statements":[{"assignments":[2786],"declarations":[{"constant":false,"id":2786,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:14","nodeType":"VariableDeclaration","scope":2820,"src":"4566:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2791,"initialValue":{"arguments":[{"id":2789,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"4601:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2787,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4588:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$2531","typeString":"contract IERC20Permit"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:14","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2524,"src":"4588:12:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:14"},{"expression":{"arguments":[{"id":2795,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"4630:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"4637:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"4646:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2798,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4653:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2799,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"4663:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2800,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"4666:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2801,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"4669:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2792,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4617:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$2531","typeString":"contract IERC20Permit"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:14","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":2516,"src":"4617:12:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2803,"nodeType":"ExpressionStatement","src":"4617:54:14"},{"assignments":[2805],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:14","nodeType":"VariableDeclaration","scope":2820,"src":"4681:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"id":2808,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"4715:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2806,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4702:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$2531","typeString":"contract IERC20Permit"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:14","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2524,"src":"4702:12:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4739:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"4753:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":2811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2819,"nodeType":"ExpressionStatement","src":"4731:75:14"}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"4195:141:14","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:14","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"token","nameLocation":"4383:5:14","nodeType":"VariableDeclaration","scope":2821,"src":"4370:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$2531","typeString":"contract IERC20Permit"},"typeName":{"id":2767,"nodeType":"UserDefinedTypeName","pathNode":{"id":2766,"name":"IERC20Permit","nameLocations":["4370:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2531,"src":"4370:12:14"},"referencedDeclaration":2531,"src":"4370:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$2531","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"owner","nameLocation":"4406:5:14","nodeType":"VariableDeclaration","scope":2821,"src":"4398:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"spender","nameLocation":"4429:7:14","nodeType":"VariableDeclaration","scope":2821,"src":"4421:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2771,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"value","nameLocation":"4454:5:14","nodeType":"VariableDeclaration","scope":2821,"src":"4446:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:14","nodeType":"VariableDeclaration","scope":2821,"src":"4469:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"v","nameLocation":"4501:1:14","nodeType":"VariableDeclaration","scope":2821,"src":"4495:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2777,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"r","nameLocation":"4520:1:14","nodeType":"VariableDeclaration","scope":2821,"src":"4512:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"s","nameLocation":"4539:1:14","nodeType":"VariableDeclaration","scope":2821,"src":"4531:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:14"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"4556:0:14"},"scope":2907,"src":"4341:472:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"5266:572:14","statements":[{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:14","nodeType":"VariableDeclaration","scope":2857,"src":"5615:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2830,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2840,"initialValue":{"arguments":[{"id":2837,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"5669:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":2834,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"5649:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:14","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:14","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"5641:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2842,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"5728:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:14","memberName":"length","nodeType":"MemberAccess","src":"5728:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2848,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"5765:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2849,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:14","typeDescriptions":{}}}],"id":2851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2846,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:14","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:14","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":2841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"ExpressionStatement","src":"5720:111:14"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"4819:372:14","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:14","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"token","nameLocation":"5232:5:14","nodeType":"VariableDeclaration","scope":2858,"src":"5225:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2824,"nodeType":"UserDefinedTypeName","pathNode":{"id":2823,"name":"IERC20","nameLocations":["5225:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"5225:6:14"},"referencedDeclaration":2470,"src":"5225:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"data","nameLocation":"5252:4:14","nodeType":"VariableDeclaration","scope":2858,"src":"5239:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2826,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:14"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[],"src":"5266:0:14"},"scope":2907,"src":"5196:642:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2905,"nodeType":"Block","src":"6428:505:14","statements":[{"assignments":[2870,2872],"declarations":[{"constant":false,"id":2870,"mutability":"mutable","name":"success","nameLocation":"6729:7:14","nodeType":"VariableDeclaration","scope":2905,"src":"6724:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2869,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:14","nodeType":"VariableDeclaration","scope":2905,"src":"6738:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2871,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2880,"initialValue":{"arguments":[{"id":2878,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"6785:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"6773:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:14","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:14","memberName":"call","nodeType":"MemberAccess","src":"6765:19:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:14"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"6819:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2882,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"6831:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:14","memberName":"length","nodeType":"MemberAccess","src":"6831:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2888,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"6868:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2889,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:14","typeDescriptions":{}}}],"id":2891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2886,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:14","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:14","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":2900,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"6919:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}],"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:14","typeDescriptions":{}}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2896,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"6892:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3237_$","typeString":"type(library Address)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:14","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2925,"src":"6892:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2868,"id":2904,"nodeType":"Return","src":"6800:126:14"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"5844:490:14","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2906,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:14","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"token","nameLocation":"6379:5:14","nodeType":"VariableDeclaration","scope":2906,"src":"6372:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"},"typeName":{"id":2861,"nodeType":"UserDefinedTypeName","pathNode":{"id":2860,"name":"IERC20","nameLocations":["6372:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"6372:6:14"},"referencedDeclaration":2470,"src":"6372:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2470","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"data","nameLocation":"6399:4:14","nodeType":"VariableDeclaration","scope":2906,"src":"6386:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2863,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:14"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"6422:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2866,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:14"},"scope":2907,"src":"6339:594:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2908,"src":"701:6234:14","usedErrors":[],"usedEvents":[]}],"src":"115:6821:14"},"id":14},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3237]},"id":3238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2909,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"126:67:15","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3237,"linearizedBaseContracts":[3237],"name":"Address","nameLocation":"202:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2924,"nodeType":"Block","src":"1478:254:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2918,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"1702:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:15","memberName":"code","nodeType":"MemberAccess","src":"1702:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:15","memberName":"length","nodeType":"MemberAccess","src":"1702:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2917,"id":2923,"nodeType":"Return","src":"1695:30:15"}]},"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"216:1191:15","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2925,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:15","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"account","nameLocation":"1440:7:15","nodeType":"VariableDeclaration","scope":2925,"src":"1432:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:15"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2925,"src":"1472:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2915,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:15"},"scope":3237,"src":"1412:320:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2958,"nodeType":"Block","src":"2718:241:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2936,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3237","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3237","typeString":"library Address"}],"id":2935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:15","typeDescriptions":{}}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:15","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2939,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2761:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2943,"nodeType":"ExpressionStatement","src":"2728:73:15"},{"assignments":[2945,null],"declarations":[{"constant":false,"id":2945,"mutability":"mutable","name":"success","nameLocation":"2818:7:15","nodeType":"VariableDeclaration","scope":2958,"src":"2813:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2944,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2952,"initialValue":{"arguments":[{"hexValue":"","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2946,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2831:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:15","memberName":"call","nodeType":"MemberAccess","src":"2831:14:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2948,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2853:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:15"},{"expression":{"arguments":[{"id":2954,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"2882:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2957,"nodeType":"ExpressionStatement","src":"2874:78:15"}]},"documentation":{"id":2926,"nodeType":"StructuredDocumentation","src":"1738:904:15","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2959,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:15","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:15","nodeType":"VariableDeclaration","scope":2959,"src":"2666:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"amount","nameLocation":"2701:6:15","nodeType":"VariableDeclaration","scope":2959,"src":"2693:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:15"},"returnParameters":{"id":2932,"nodeType":"ParameterList","parameters":[],"src":"2718:0:15"},"scope":3237,"src":"2647:312:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2976,"nodeType":"Block","src":"3790:96:15","statements":[{"expression":{"arguments":[{"id":2970,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"3829:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2971,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"3837:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2969,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3017,3061],"referencedDeclaration":3061,"src":"3807:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2968,"id":2975,"nodeType":"Return","src":"3800:79:15"}]},"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"2965:731:15","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2977,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:15","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"target","nameLocation":"3731:6:15","nodeType":"VariableDeclaration","scope":2977,"src":"3723:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"data","nameLocation":"3752:4:15","nodeType":"VariableDeclaration","scope":2977,"src":"3739:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2963,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:15"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2977,"src":"3776:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2966,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:15"},"scope":3237,"src":"3701:185:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"4255:76:15","statements":[{"expression":{"arguments":[{"id":2990,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"4294:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2991,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"4302:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2993,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"4311:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2989,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3017,3061],"referencedDeclaration":3061,"src":"4272:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2988,"id":2995,"nodeType":"Return","src":"4265:59:15"}]},"documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"3892:211:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:15","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"target","nameLocation":"4147:6:15","nodeType":"VariableDeclaration","scope":2997,"src":"4139:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"data","nameLocation":"4176:4:15","nodeType":"VariableDeclaration","scope":2997,"src":"4163:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2981,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:15","nodeType":"VariableDeclaration","scope":2997,"src":"4190:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2983,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:15"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2997,"src":"4241:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2986,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:15"},"scope":3237,"src":"4108:223:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"4806:111:15","statements":[{"expression":{"arguments":[{"id":3010,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"4845:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3011,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"4853:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"4859:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3009,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3017,3061],"referencedDeclaration":3061,"src":"4823:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3008,"id":3015,"nodeType":"Return","src":"4816:94:15"}]},"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"4337:351:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:15","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"target","nameLocation":"4732:6:15","nodeType":"VariableDeclaration","scope":3017,"src":"4724:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"data","nameLocation":"4753:4:15","nodeType":"VariableDeclaration","scope":3017,"src":"4740:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3001,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"value","nameLocation":"4767:5:15","nodeType":"VariableDeclaration","scope":3017,"src":"4759:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:15"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3017,"src":"4792:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3006,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:15"},"scope":3237,"src":"4693:224:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3060,"nodeType":"Block","src":"5344:267:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3034,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3237","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3237","typeString":"library Address"}],"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3032,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:15","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:15","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"5387:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3041,"nodeType":"ExpressionStatement","src":"5354:81:15"},{"assignments":[3043,3045],"declarations":[{"constant":false,"id":3043,"mutability":"mutable","name":"success","nameLocation":"5451:7:15","nodeType":"VariableDeclaration","scope":3060,"src":"5446:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3042,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:15","nodeType":"VariableDeclaration","scope":3060,"src":"5460:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3044,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3052,"initialValue":{"arguments":[{"id":3050,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"5513:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3046,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5487:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:15","memberName":"call","nodeType":"MemberAccess","src":"5487:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"5506:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:15"},{"expression":{"arguments":[{"id":3054,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5562:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3055,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"5570:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3056,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"5579:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3057,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5591:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3053,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"5535:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3030,"id":3059,"nodeType":"Return","src":"5528:76:15"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"4923:237:15","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3061,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:15","nodeType":"FunctionDefinition","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"target","nameLocation":"5213:6:15","nodeType":"VariableDeclaration","scope":3061,"src":"5205:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"data","nameLocation":"5242:4:15","nodeType":"VariableDeclaration","scope":3061,"src":"5229:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3021,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"value","nameLocation":"5264:5:15","nodeType":"VariableDeclaration","scope":3061,"src":"5256:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3026,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:15","nodeType":"VariableDeclaration","scope":3061,"src":"5279:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3025,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:15"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3061,"src":"5330:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3028,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:15"},"scope":3237,"src":"5165:446:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3077,"nodeType":"Block","src":"5888:97:15","statements":[{"expression":{"arguments":[{"id":3072,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"5924:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3073,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"5932:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3071,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3078,3107],"referencedDeclaration":3107,"src":"5905:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3070,"id":3076,"nodeType":"Return","src":"5898:80:15"}]},"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"5617:166:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3078,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:15","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"target","nameLocation":"5824:6:15","nodeType":"VariableDeclaration","scope":3078,"src":"5816:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"data","nameLocation":"5845:4:15","nodeType":"VariableDeclaration","scope":3078,"src":"5832:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3065,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:15"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"5874:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3068,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:15"},"scope":3237,"src":"5788:197:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"6327:168:15","statements":[{"assignments":[3091,3093],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"success","nameLocation":"6343:7:15","nodeType":"VariableDeclaration","scope":3106,"src":"6338:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:15","nodeType":"VariableDeclaration","scope":3106,"src":"6352:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3092,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3098,"initialValue":{"arguments":[{"id":3096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"6397:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3094,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"6379:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:15","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:15"},{"expression":{"arguments":[{"id":3100,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"6446:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3101,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"6454:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3102,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"6463:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3103,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"6475:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3099,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"6419:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3089,"id":3105,"nodeType":"Return","src":"6412:76:15"}]},"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"5991:173:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:15","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"target","nameLocation":"6214:6:15","nodeType":"VariableDeclaration","scope":3107,"src":"6206:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"data","nameLocation":"6243:4:15","nodeType":"VariableDeclaration","scope":3107,"src":"6230:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3082,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:15","nodeType":"VariableDeclaration","scope":3107,"src":"6257:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3084,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:15"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"6313:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3087,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:15"},"scope":3237,"src":"6169:326:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"6771:101:15","statements":[{"expression":{"arguments":[{"id":3118,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"6809:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3119,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"6817:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3117,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3124,3153],"referencedDeclaration":3153,"src":"6788:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3116,"id":3122,"nodeType":"Return","src":"6781:84:15"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"6501:168:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"target","nameLocation":"6712:6:15","nodeType":"VariableDeclaration","scope":3124,"src":"6704:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"data","nameLocation":"6733:4:15","nodeType":"VariableDeclaration","scope":3124,"src":"6720:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:15"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"6757:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3114,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:15"},"scope":3237,"src":"6674:198:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3152,"nodeType":"Block","src":"7213:170:15","statements":[{"assignments":[3137,3139],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"success","nameLocation":"7229:7:15","nodeType":"VariableDeclaration","scope":3152,"src":"7224:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3136,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:15","nodeType":"VariableDeclaration","scope":3152,"src":"7238:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3138,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3144,"initialValue":{"arguments":[{"id":3142,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7285:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3140,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7265:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:15","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:15","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:15"},{"expression":{"arguments":[{"id":3146,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7334:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"7342:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3148,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"7351:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3149,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"7363:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3145,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"7307:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3135,"id":3151,"nodeType":"Return","src":"7300:76:15"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"6878:175:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3153,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:15","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"target","nameLocation":"7105:6:15","nodeType":"VariableDeclaration","scope":3153,"src":"7097:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"data","nameLocation":"7134:4:15","nodeType":"VariableDeclaration","scope":3153,"src":"7121:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3128,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:15","nodeType":"VariableDeclaration","scope":3153,"src":"7148:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3130,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:15"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3153,"src":"7199:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3133,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:15"},"scope":3237,"src":"7058:325:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3191,"nodeType":"Block","src":"7865:434:15","statements":[{"condition":{"id":3167,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"7879:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3189,"nodeType":"Block","src":"8235:58:15","statements":[{"expression":{"arguments":[{"id":3185,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"8257:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3186,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"8269:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3184,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"8249:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3188,"nodeType":"ExpressionStatement","src":"8249:33:15"}]},"id":3190,"nodeType":"IfStatement","src":"7875:418:15","trueBody":{"id":3183,"nodeType":"Block","src":"7888:341:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3168,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7906:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:15","memberName":"length","nodeType":"MemberAccess","src":"7906:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3180,"nodeType":"IfStatement","src":"7902:286:15","trueBody":{"id":3179,"nodeType":"Block","src":"7930:258:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3174,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"8132:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3173,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"8121:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3178,"nodeType":"ExpressionStatement","src":"8113:60:15"}]}},{"expression":{"id":3181,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"8208:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3166,"id":3182,"nodeType":"Return","src":"8201:17:15"}]}}]},"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"7389:277:15","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:15","nodeType":"FunctionDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"target","nameLocation":"7724:6:15","nodeType":"VariableDeclaration","scope":3192,"src":"7716:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"success","nameLocation":"7745:7:15","nodeType":"VariableDeclaration","scope":3192,"src":"7740:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3157,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:15","nodeType":"VariableDeclaration","scope":3192,"src":"7762:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3159,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:15","nodeType":"VariableDeclaration","scope":3192,"src":"7795:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3161,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:15"},"returnParameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"7851:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3164,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:15"},"scope":3237,"src":"7671:628:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"8680:135:15","statements":[{"condition":{"id":3204,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"8694:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3213,"nodeType":"Block","src":"8751:58:15","statements":[{"expression":{"arguments":[{"id":3209,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"8773:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3210,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"8785:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3208,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"8765:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3212,"nodeType":"ExpressionStatement","src":"8765:33:15"}]},"id":3214,"nodeType":"IfStatement","src":"8690:119:15","trueBody":{"id":3207,"nodeType":"Block","src":"8703:42:15","statements":[{"expression":{"id":3205,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"8724:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3203,"id":3206,"nodeType":"Return","src":"8717:17:15"}]}}]},"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"8305:210:15","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:15","nodeType":"FunctionDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"success","nameLocation":"8560:7:15","nodeType":"VariableDeclaration","scope":3216,"src":"8555:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3194,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3197,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:15","nodeType":"VariableDeclaration","scope":3216,"src":"8577:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3196,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:15","nodeType":"VariableDeclaration","scope":3216,"src":"8610:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3198,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:15"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"8666:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3201,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:15"},"scope":3237,"src":"8520:295:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3235,"nodeType":"Block","src":"8904:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3223,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"8980:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:15","memberName":"length","nodeType":"MemberAccess","src":"8980:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3233,"nodeType":"Block","src":"9310:45:15","statements":[{"expression":{"arguments":[{"id":3230,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"9331:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3229,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3232,"nodeType":"ExpressionStatement","src":"9324:20:15"}]},"id":3234,"nodeType":"IfStatement","src":"8976:379:15","trueBody":{"id":3228,"nodeType":"Block","src":"9003:301:15","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:15","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:15"},"nodeType":"YulFunctionCall","src":"9202:17:15"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:15","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:15"},"nodeType":"YulFunctionCall","src":"9243:19:15"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:15"},"nodeType":"YulFunctionCall","src":"9236:44:15"},"nodeType":"YulExpressionStatement","src":"9236:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":3218,"isOffset":false,"isSlot":false,"src":"9208:10:15","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"9251:10:15","valueSize":1}],"id":3227,"nodeType":"InlineAssembly","src":"9152:142:15"}]}}]},"id":3236,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:15","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:15","nodeType":"VariableDeclaration","scope":3236,"src":"8838:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3217,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:15","nodeType":"VariableDeclaration","scope":3236,"src":"8863:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3219,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:15"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[],"src":"8904:0:15"},"scope":3237,"src":"8821:540:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3238,"src":"194:9169:15","usedErrors":[],"usedEvents":[]}],"src":"101:9263:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3259]},"id":3260,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3239,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"111:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3259,"linearizedBaseContracts":[3259],"name":"Context","nameLocation":"626:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3248,"nodeType":"Block","src":"702:34:16","statements":[{"expression":{"expression":{"id":3245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:16","memberName":"sender","nodeType":"MemberAccess","src":"719:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3244,"id":3247,"nodeType":"Return","src":"712:17:16"}]},"id":3249,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:16","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[],"src":"659:2:16"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3249,"src":"693:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:16"},"scope":3259,"src":"640:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"809:32:16","statements":[{"expression":{"expression":{"id":3254,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:16","memberName":"data","nodeType":"MemberAccess","src":"826:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3253,"id":3256,"nodeType":"Return","src":"819:15:16"}]},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:16","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[],"src":"759:2:16"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"793:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3251,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:16"},"scope":3259,"src":"742:99:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3260,"src":"608:235:16","usedErrors":[],"usedEvents":[]}],"src":"86:758:16"},"id":16},"contracts/LayerZeroTest.sol":{"ast":{"absolutePath":"contracts/LayerZeroTest.sol","exportedSymbols":{"BytesLib":[332],"Context":[3259],"ExcessivelySafeCall":[429],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LayerZeroTest":[3372],"LzApp":[971],"NonblockingLzApp":[1212],"Ownable":[1740]},"id":3373,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3261,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:17"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","id":3262,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3373,"sourceUnit":1213,"src":"61:79:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3263,"name":"NonblockingLzApp","nameLocations":["433:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"433:16:17"},"id":3264,"nodeType":"InheritanceSpecifier","src":"433:16:17"}],"canonicalName":"LayerZeroTest","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3372,"linearizedBaseContracts":[3372,1212,971,1402,1371,1740,3259],"name":"LayerZeroTest","nameLocation":"416:13:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"73d4a13a","id":3267,"mutability":"mutable","name":"data","nameLocation":"471:4:17","nodeType":"VariableDeclaration","scope":3372,"src":"457:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3265,"name":"string","nodeType":"ElementaryTypeName","src":"457:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4e6f7468696e6720726563656976656420796574","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"478:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f324ae8c96aaabd8b3d916f154deafc34f8dfa978a3f72051c324727f0a37915","typeString":"literal_string \"Nothing received yet\""},"value":"Nothing received yet"},"visibility":"public"},{"constant":false,"id":3269,"mutability":"mutable","name":"destChainId","nameLocation":"514:11:17","nodeType":"VariableDeclaration","scope":3372,"src":"507:18:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3268,"name":"uint16","nodeType":"ElementaryTypeName","src":"507:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"body":{"id":3293,"nodeType":"Block","src":"601:386:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"616:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307836466362393735353344343135313643623232386163303346644338423961306139646630344131","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1"},"src":"616:57:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3284,"nodeType":"IfStatement","src":"612:82:17","trueBody":{"expression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"675:11:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130313132","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10112_by_1","typeString":"int_const 10112"},"value":"10112"},"src":"675:19:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":3283,"nodeType":"ExpressionStatement","src":"675:19:17"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"709:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307837646341443732363430463833354230464133364546443344366433656339303243374535616366","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"724:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf"},"src":"709:57:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3292,"nodeType":"IfStatement","src":"705:82:17","trueBody":{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3288,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"768:11:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130313032","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"782:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10102_by_1","typeString":"int_const 10102"},"value":"10102"},"src":"768:19:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":3291,"nodeType":"ExpressionStatement","src":"768:19:17"}}]},"id":3294,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3274,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"588:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3275,"kind":"baseConstructorSpecifier","modifierName":{"id":3273,"name":"NonblockingLzApp","nameLocations":["571:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"571:16:17"},"nodeType":"ModifierInvocation","src":"571:29:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"_lzEndpoint","nameLocation":"558:11:17","nodeType":"VariableDeclaration","scope":3294,"src":"550:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"549:21:17"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[],"src":"601:0:17"},"scope":3372,"src":"538:449:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":3316,"nodeType":"Block","src":"1097:55:17","statements":[{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"1107:4:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3309,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"1125:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1136:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3310,"name":"string","nodeType":"ElementaryTypeName","src":"1136:6:17","typeDescriptions":{}}}],"id":3312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1135:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":3307,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1114:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1118:6:17","memberName":"decode","nodeType":"MemberAccess","src":"1114:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1107:37:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3315,"nodeType":"ExpressionStatement","src":"1107:37:17"}]},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"1004:21:17","nodeType":"FunctionDefinition","overrides":{"id":3304,"nodeType":"OverrideSpecifier","overrides":[],"src":"1088:8:17"},"parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"1026:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3295,"name":"uint16","nodeType":"ElementaryTypeName","src":"1026:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"1034:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3297,"name":"bytes","nodeType":"ElementaryTypeName","src":"1034:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"1048:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3299,"name":"uint64","nodeType":"ElementaryTypeName","src":"1048:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"_payload","nameLocation":"1069:8:17","nodeType":"VariableDeclaration","scope":3317,"src":"1056:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3301,"name":"bytes","nodeType":"ElementaryTypeName","src":"1056:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1025:53:17"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[],"src":"1097:0:17"},"scope":3372,"src":"995:157:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3349,"nodeType":"Block","src":"1213:159:17","statements":[{"assignments":[3323],"declarations":[{"constant":false,"id":3323,"mutability":"mutable","name":"payload","nameLocation":"1237:7:17","nodeType":"VariableDeclaration","scope":3349,"src":"1224:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3322,"name":"bytes","nodeType":"ElementaryTypeName","src":"1224:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3328,"initialValue":{"arguments":[{"id":3326,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"1258:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3324,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1247:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1251:6:17","memberName":"encode","nodeType":"MemberAccess","src":"1247:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1247:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1224:43:17"},{"expression":{"arguments":[{"id":3330,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"1286:11:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3331,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"1299:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":3334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1316:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1320:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1316:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1308:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3332,"name":"address","nodeType":"ElementaryTypeName","src":"1308:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"hexValue":"307830","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:3:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1329:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3337,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:17","typeDescriptions":{}}},"id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1329:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1349:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1343:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1343:5:17","typeDescriptions":{}}},"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1343:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1354:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1358:5:17","memberName":"value","nodeType":"MemberAccess","src":"1354:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"name":"_lzSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"1278:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,bytes memory,address payable,address,bytes memory,uint256)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:86:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3348,"nodeType":"ExpressionStatement","src":"1278:86:17"}]},"functionSelector":"66792ba1","id":3350,"implemented":true,"kind":"function","modifiers":[],"name":"send","nameLocation":"1169:4:17","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"_message","nameLocation":"1188:8:17","nodeType":"VariableDeclaration","scope":3350,"src":"1174:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3318,"name":"string","nodeType":"ElementaryTypeName","src":"1174:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1173:24:17"},"returnParameters":{"id":3321,"nodeType":"ParameterList","parameters":[],"src":"1213:0:17"},"scope":3372,"src":"1160:212:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3370,"nodeType":"Block","src":"1443:104:17","statements":[{"expression":{"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3357,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"1454:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":3359,"indexExpression":{"id":3358,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"1474:11:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1454:32:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3362,"name":"_otherContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"1506:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3365,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1530:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_LayerZeroTest_$3372","typeString":"contract LayerZeroTest"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LayerZeroTest_$3372","typeString":"contract LayerZeroTest"}],"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1522:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3363,"name":"address","nodeType":"ElementaryTypeName","src":"1522:7:17","typeDescriptions":{}}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1522:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3360,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1489:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1493:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1489:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1454:82:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3369,"nodeType":"ExpressionStatement","src":"1454:82:17"}]},"functionSelector":"5cdf1649","id":3371,"implemented":true,"kind":"function","modifiers":[{"id":3355,"kind":"modifierInvocation","modifierName":{"id":3354,"name":"onlyOwner","nameLocations":["1433:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":1659,"src":"1433:9:17"},"nodeType":"ModifierInvocation","src":"1433:9:17"}],"name":"trustAddress","nameLocation":"1389:12:17","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"_otherContract","nameLocation":"1410:14:17","nodeType":"VariableDeclaration","scope":3371,"src":"1402:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1401:24:17"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[],"src":"1443:0:17"},"scope":3372,"src":"1380:167:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3373,"src":"407:1143:17","usedErrors":[],"usedEvents":[471,477,483,491,1009,1019,1641]}],"src":"33:1517:17"},"id":17},"contracts/interfaces/ITokenBridge.sol":{"ast":{"absolutePath":"contracts/interfaces/ITokenBridge.sol","exportedSymbols":{"ITokenBridge":[3492],"LzLib":[1627]},"id":3493,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3374,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"40:24:18"},{"id":3375,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"66:33:18"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","id":3376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3493,"sourceUnit":1628,"src":"103:73:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ITokenBridge","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3492,"linearizedBaseContracts":[3492],"name":"ITokenBridge","nameLocation":"190:12:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ITokenBridge.PacketType","id":3379,"members":[{"id":3377,"name":"SEND_TO_APTOS","nameLocation":"237:13:18","nodeType":"EnumValue","src":"237:13:18"},{"id":3378,"name":"RECEIVE_FROM_APTOS","nameLocation":"261:18:18","nodeType":"EnumValue","src":"261:18:18"}],"name":"PacketType","nameLocation":"215:10:18","nodeType":"EnumDefinition","src":"210:76:18"},{"functionSelector":"76a9099a","id":3393,"implemented":false,"kind":"function","modifiers":[],"name":"sendToAptos","nameLocation":"303:11:18","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"_token","nameLocation":"333:6:18","nodeType":"VariableDeclaration","scope":3393,"src":"325:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"_toAddress","nameLocation":"358:10:18","nodeType":"VariableDeclaration","scope":3393,"src":"350:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"350:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"_amountLD","nameLocation":"384:9:18","nodeType":"VariableDeclaration","scope":3393,"src":"379:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint","nodeType":"ElementaryTypeName","src":"379:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"_callParams","nameLocation":"430:11:18","nodeType":"VariableDeclaration","scope":3393,"src":"404:37:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":3387,"nodeType":"UserDefinedTypeName","pathNode":{"id":3386,"name":"LzLib.CallParams","nameLocations":["404:5:18","410:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"404:16:18"},"referencedDeclaration":1410,"src":"404:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"_adapterParams","nameLocation":"467:14:18","nodeType":"VariableDeclaration","scope":3393,"src":"452:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3389,"name":"bytes","nodeType":"ElementaryTypeName","src":"452:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"314:174:18"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[],"src":"505:0:18"},"scope":3492,"src":"294:212:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ca23bb4c","id":3405,"implemented":false,"kind":"function","modifiers":[],"name":"sendETHToAptos","nameLocation":"523:14:18","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"_toAddress","nameLocation":"556:10:18","nodeType":"VariableDeclaration","scope":3405,"src":"548:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"548:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"_amountLD","nameLocation":"582:9:18","nodeType":"VariableDeclaration","scope":3405,"src":"577:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint","nodeType":"ElementaryTypeName","src":"577:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"_callParams","nameLocation":"628:11:18","nodeType":"VariableDeclaration","scope":3405,"src":"602:37:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":3399,"nodeType":"UserDefinedTypeName","pathNode":{"id":3398,"name":"LzLib.CallParams","nameLocations":["602:5:18","608:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"602:16:18"},"referencedDeclaration":1410,"src":"602:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"_adapterParams","nameLocation":"665:14:18","nodeType":"VariableDeclaration","scope":3405,"src":"650:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3401,"name":"bytes","nodeType":"ElementaryTypeName","src":"650:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"537:149:18"},"returnParameters":{"id":3404,"nodeType":"ParameterList","parameters":[],"src":"703:0:18"},"scope":3492,"src":"514:190:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"468b9668","id":3417,"implemented":false,"kind":"function","modifiers":[],"name":"quoteForSend","nameLocation":"721:12:18","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"_callParams","nameLocation":"760:11:18","nodeType":"VariableDeclaration","scope":3417,"src":"734:37:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_calldata_ptr","typeString":"struct LzLib.CallParams"},"typeName":{"id":3407,"nodeType":"UserDefinedTypeName","pathNode":{"id":3406,"name":"LzLib.CallParams","nameLocations":["734:5:18","740:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"734:16:18"},"referencedDeclaration":1410,"src":"734:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_CallParams_$1410_storage_ptr","typeString":"struct LzLib.CallParams"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"_adapterParams","nameLocation":"788:14:18","nodeType":"VariableDeclaration","scope":3417,"src":"773:29:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3409,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"733:70:18"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"nativeFee","nameLocation":"859:9:18","nodeType":"VariableDeclaration","scope":3417,"src":"854:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint","nodeType":"ElementaryTypeName","src":"854:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"zroFee","nameLocation":"875:6:18","nodeType":"VariableDeclaration","scope":3417,"src":"870:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint","nodeType":"ElementaryTypeName","src":"870:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"853:29:18"},"scope":3492,"src":"712:171:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"be6ff12fec5087498d44bc85f1a83235a630944a1e2d5a7938afe810370a5867","id":3427,"name":"Send","nameLocation":"897:4:18","nodeType":"EventDefinition","parameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"918:5:18","nodeType":"VariableDeclaration","scope":3427,"src":"902:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3418,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3421,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"941:4:18","nodeType":"VariableDeclaration","scope":3427,"src":"925:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3420,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3423,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"963:2:18","nodeType":"VariableDeclaration","scope":3427,"src":"947:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"947:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3425,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"972:8:18","nodeType":"VariableDeclaration","scope":3427,"src":"967:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint","nodeType":"ElementaryTypeName","src":"967:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:80:18"},"src":"891:91:18"},{"anonymous":false,"eventSelector":"fd19781f43410d9594fd4c02dd1d98dbe99099cbd222d5851a6e183c468d33ca","id":3435,"name":"Receive","nameLocation":"994:7:18","nodeType":"EventDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1018:5:18","nodeType":"VariableDeclaration","scope":3435,"src":"1002:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3428,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3431,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1041:2:18","nodeType":"VariableDeclaration","scope":3435,"src":"1025:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3430,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3433,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1050:8:18","nodeType":"VariableDeclaration","scope":3435,"src":"1045:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint","nodeType":"ElementaryTypeName","src":"1045:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:58:18"},"src":"988:72:18"},{"anonymous":false,"eventSelector":"f7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc16","id":3439,"name":"RegisterToken","nameLocation":"1072:13:18","nodeType":"EventDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1094:5:18","nodeType":"VariableDeclaration","scope":3439,"src":"1086:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3436,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1085:15:18"},"src":"1066:35:18"},{"anonymous":false,"eventSelector":"9a749c8193bfd56b2b2a05c0bd18fbb0f69801a3fd6576c40b90537fd0fc3854","id":3443,"name":"SetBridgeBP","nameLocation":"1113:11:18","nodeType":"EventDefinition","parameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"indexed":false,"mutability":"mutable","name":"bridgeFeeBP","nameLocation":"1130:11:18","nodeType":"VariableDeclaration","scope":3443,"src":"1125:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint","nodeType":"ElementaryTypeName","src":"1125:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1124:18:18"},"src":"1107:36:18"},{"anonymous":false,"eventSelector":"e390bcec6614d6b1f8ae47a4d9d46531ce328e3d293ecd6ddd015cb01eff0300","id":3447,"name":"SetWETH","nameLocation":"1155:7:18","nodeType":"EventDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"indexed":false,"mutability":"mutable","name":"weth","nameLocation":"1171:4:18","nodeType":"VariableDeclaration","scope":3447,"src":"1163:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3444,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1162:14:18"},"src":"1149:28:18"},{"anonymous":false,"eventSelector":"5362d4bd13945e8d116b90d83a7050fa61ceb02bb79bfae783377adb46916d94","id":3451,"name":"SetGlobalPause","nameLocation":"1189:14:18","nodeType":"EventDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"1209:6:18","nodeType":"VariableDeclaration","scope":3451,"src":"1204:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3448,"name":"bool","nodeType":"ElementaryTypeName","src":"1204:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1203:13:18"},"src":"1183:34:18"},{"anonymous":false,"eventSelector":"b1656bd3b50ddb6b12ef259c86e9cb359952b53c4403cfb5a83e23c515a35e22","id":3457,"name":"SetTokenPause","nameLocation":"1229:13:18","nodeType":"EventDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1251:5:18","nodeType":"VariableDeclaration","scope":3457,"src":"1243:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3452,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3455,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"1263:6:18","nodeType":"VariableDeclaration","scope":3457,"src":"1258:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3454,"name":"bool","nodeType":"ElementaryTypeName","src":"1258:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1242:28:18"},"src":"1223:48:18"},{"anonymous":false,"eventSelector":"f5d18385702760f931e7395b5deb636c964542a4284bf07dca2adbd0d7e21614","id":3461,"name":"SetLocalChainId","nameLocation":"1283:15:18","nodeType":"EventDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"indexed":false,"mutability":"mutable","name":"localChainId","nameLocation":"1306:12:18","nodeType":"VariableDeclaration","scope":3461,"src":"1299:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3458,"name":"uint16","nodeType":"ElementaryTypeName","src":"1299:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1298:21:18"},"src":"1277:43:18"},{"anonymous":false,"eventSelector":"6a9ea26cc7efedf0df6fd048e06f3de4be1a978bb5d440277147c76e1c0eb75a","id":3465,"name":"SetAptosChainId","nameLocation":"1332:15:18","nodeType":"EventDefinition","parameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"indexed":false,"mutability":"mutable","name":"aptosChainId","nameLocation":"1355:12:18","nodeType":"VariableDeclaration","scope":3465,"src":"1348:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3462,"name":"uint16","nodeType":"ElementaryTypeName","src":"1348:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1347:21:18"},"src":"1326:43:18"},{"anonymous":false,"eventSelector":"1584ad594a70cbe1e6515592e1272a987d922b097ead875069cebe8b40c004a4","id":3469,"name":"SetUseCustomAdapterParams","nameLocation":"1381:25:18","nodeType":"EventDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"indexed":false,"mutability":"mutable","name":"useCustomAdapterParams","nameLocation":"1412:22:18","nodeType":"VariableDeclaration","scope":3469,"src":"1407:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3466,"name":"bool","nodeType":"ElementaryTypeName","src":"1407:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1406:29:18"},"src":"1375:61:18"},{"anonymous":false,"eventSelector":"f15a0a3784dea9b4fe33bc98e2450745e262d310237b2868ea8ef56967ff3ecb","id":3477,"name":"WithdrawFee","nameLocation":"1448:11:18","nodeType":"EventDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1476:5:18","nodeType":"VariableDeclaration","scope":3477,"src":"1460:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3470,"name":"address","nodeType":"ElementaryTypeName","src":"1460:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3473,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1491:2:18","nodeType":"VariableDeclaration","scope":3477,"src":"1483:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3472,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3475,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1500:8:18","nodeType":"VariableDeclaration","scope":3477,"src":"1495:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint","nodeType":"ElementaryTypeName","src":"1495:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1459:50:18"},"src":"1442:68:18"},{"anonymous":false,"eventSelector":"49507695f37b729944475cf3388760a14760fef784b7ab5ca8863a5f3f8be6bd","id":3485,"name":"WithdrawTVL","nameLocation":"1522:11:18","nodeType":"EventDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1550:5:18","nodeType":"VariableDeclaration","scope":3485,"src":"1534:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"1534:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3481,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1565:2:18","nodeType":"VariableDeclaration","scope":3485,"src":"1557:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3483,"indexed":false,"mutability":"mutable","name":"amountLD","nameLocation":"1574:8:18","nodeType":"VariableDeclaration","scope":3485,"src":"1569:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint","nodeType":"ElementaryTypeName","src":"1569:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:50:18"},"src":"1516:68:18"},{"anonymous":false,"eventSelector":"27a37fc51e6c5d14309bbed3a54787c8788223b5d9cd5fe10605661665dd8415","id":3491,"name":"EnableEmergencyWithdraw","nameLocation":"1596:23:18","nodeType":"EventDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"1625:7:18","nodeType":"VariableDeclaration","scope":3491,"src":"1620:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3486,"name":"bool","nodeType":"ElementaryTypeName","src":"1620:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3489,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"1639:10:18","nodeType":"VariableDeclaration","scope":3491,"src":"1634:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint","nodeType":"ElementaryTypeName","src":"1634:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1619:31:18"},"src":"1590:61:18"}],"scope":3493,"src":"180:1474:18","usedErrors":[],"usedEvents":[3427,3435,3439,3443,3447,3451,3457,3461,3465,3469,3477,3485,3491]}],"src":"40:1616:18"},"id":18},"contracts/interfaces/IWETH.sol":{"ast":{"absolutePath":"contracts/interfaces/IWETH.sol","exportedSymbols":{"IWETH":[3521]},"id":3522,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3494,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"40:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3521,"linearizedBaseContracts":[3521],"name":"IWETH","nameLocation":"78:5:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":3497,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"100:7:19","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[],"src":"107:2:19"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[],"src":"126:0:19"},"scope":3521,"src":"91:36:19","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":3506,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"144:8:19","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"to","nameLocation":"161:2:19","nodeType":"VariableDeclaration","scope":3506,"src":"153:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3498,"name":"address","nodeType":"ElementaryTypeName","src":"153:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"value","nameLocation":"170:5:19","nodeType":"VariableDeclaration","scope":3506,"src":"165:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint","nodeType":"ElementaryTypeName","src":"165:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"152:24:19"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3506,"src":"195:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3503,"name":"bool","nodeType":"ElementaryTypeName","src":"195:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"194:6:19"},"scope":3521,"src":"135:66:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":3511,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"218:8:19","nodeType":"FunctionDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3511,"src":"227:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint","nodeType":"ElementaryTypeName","src":"227:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:6:19"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[],"src":"241:0:19"},"scope":3521,"src":"209:33:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":3520,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"259:7:19","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"to","nameLocation":"275:2:19","nodeType":"VariableDeclaration","scope":3520,"src":"267:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3512,"name":"address","nodeType":"ElementaryTypeName","src":"267:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"value","nameLocation":"284:5:19","nodeType":"VariableDeclaration","scope":3520,"src":"279:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint","nodeType":"ElementaryTypeName","src":"279:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"266:24:19"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3520,"src":"309:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3517,"name":"bool","nodeType":"ElementaryTypeName","src":"309:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"308:6:19"},"scope":3521,"src":"250:65:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3522,"src":"68:250:19","usedErrors":[],"usedEvents":[]}],"src":"40:280:19"},"id":19},"contracts/mocks/LZEndpointMock.sol":{"ast":{"absolutePath":"contracts/mocks/LZEndpointMock.sol","exportedSymbols":{"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LZEndpointMock":[4860],"LzLib":[1627]},"id":4861,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3523,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"40:24:20"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol","id":3524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4861,"sourceUnit":1628,"src":"68:73:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","id":3525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4861,"sourceUnit":1358,"src":"143:92:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","id":3526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4861,"sourceUnit":1372,"src":"237:92:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3527,"name":"ILayerZeroEndpoint","nameLocations":["975:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"975:18:20"},"id":3528,"nodeType":"InheritanceSpecifier","src":"975:18:20"}],"canonicalName":"LZEndpointMock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4860,"linearizedBaseContracts":[4860,1357,1402],"name":"LZEndpointMock","nameLocation":"957:14:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3531,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1025:12:20","nodeType":"VariableDeclaration","scope":4860,"src":"1001:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3529,"name":"uint8","nodeType":"ElementaryTypeName","src":"1001:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1040:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":3534,"mutability":"constant","name":"_ENTERED","nameLocation":"1072:8:20","nodeType":"VariableDeclaration","scope":4860,"src":"1048:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3532,"name":"uint8","nodeType":"ElementaryTypeName","src":"1048:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1083:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":false,"functionSelector":"c81b383a","id":3538,"mutability":"mutable","name":"lzEndpointLookup","nameLocation":"1128:16:20","nodeType":"VariableDeclaration","scope":4860,"src":"1093:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":3537,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3535,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1093:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3536,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"db14f305","id":3540,"mutability":"mutable","name":"mockChainId","nameLocation":"1167:11:20","nodeType":"VariableDeclaration","scope":4860,"src":"1153:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3539,"name":"uint16","nodeType":"ElementaryTypeName","src":"1153:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"functionSelector":"3e0dd83e","id":3542,"mutability":"mutable","name":"nextMsgBlocked","nameLocation":"1197:14:20","nodeType":"VariableDeclaration","scope":4860,"src":"1185:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3541,"name":"bool","nodeType":"ElementaryTypeName","src":"1185:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"6fbac4b5","id":3544,"mutability":"mutable","name":"callReceive","nameLocation":"1230:11:20","nodeType":"VariableDeclaration","scope":4860,"src":"1218:23:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3543,"name":"bool","nodeType":"ElementaryTypeName","src":"1218:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"907c5e7e","id":3547,"mutability":"mutable","name":"relayerFeeConfig","nameLocation":"1332:16:20","nodeType":"VariableDeclaration","scope":4860,"src":"1308:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig"},"typeName":{"id":3546,"nodeType":"UserDefinedTypeName","pathNode":{"id":3545,"name":"RelayerFeeConfig","nameLocations":["1308:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":3603,"src":"1308:16:20"},"referencedDeclaration":3603,"src":"1308:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage_ptr","typeString":"struct LZEndpointMock.RelayerFeeConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"07d3277f","id":3550,"mutability":"mutable","name":"protocolFeeConfig","nameLocation":"1380:17:20","nodeType":"VariableDeclaration","scope":4860,"src":"1355:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig"},"typeName":{"id":3549,"nodeType":"UserDefinedTypeName","pathNode":{"id":3548,"name":"ProtocolFeeConfig","nameLocations":["1355:17:20"],"nodeType":"IdentifierPath","referencedDeclaration":3592,"src":"1355:17:20"},"referencedDeclaration":3592,"src":"1355:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage_ptr","typeString":"struct LZEndpointMock.ProtocolFeeConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"f9cd3ceb","id":3552,"mutability":"mutable","name":"oracleFee","nameLocation":"1416:9:20","nodeType":"VariableDeclaration","scope":4860,"src":"1404:21:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint","nodeType":"ElementaryTypeName","src":"1404:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"272bd384","id":3554,"mutability":"mutable","name":"defaultAdapterParams","nameLocation":"1445:20:20","nodeType":"VariableDeclaration","scope":4860,"src":"1432:33:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":3553,"name":"bytes","nodeType":"ElementaryTypeName","src":"1432:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"public"},{"constant":false,"functionSelector":"9924d33b","id":3560,"mutability":"mutable","name":"inboundNonce","nameLocation":"1613:12:20","nodeType":"VariableDeclaration","scope":4860,"src":"1562:63:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes => uint64))"},"typeName":{"id":3559,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3555,"name":"uint16","nodeType":"ElementaryTypeName","src":"1570:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1562:43:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes => uint64))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3558,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3556,"name":"bytes","nodeType":"ElementaryTypeName","src":"1588:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"1580:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes => uint64)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3557,"name":"uint64","nodeType":"ElementaryTypeName","src":"1597:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}}},"visibility":"public"},{"constant":false,"functionSelector":"b2086499","id":3566,"mutability":"mutable","name":"outboundNonce","nameLocation":"1762:13:20","nodeType":"VariableDeclaration","scope":4860,"src":"1709:66:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"},"typeName":{"id":3565,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3561,"name":"uint16","nodeType":"ElementaryTypeName","src":"1717:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1709:45:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3564,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1727:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3563,"name":"uint64","nodeType":"ElementaryTypeName","src":"1746:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}}},"visibility":"public"},{"constant":false,"functionSelector":"76a386dc","id":3573,"mutability":"mutable","name":"storedPayload","nameLocation":"2010:13:20","nodeType":"VariableDeclaration","scope":4860,"src":"1952:71:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))"},"typeName":{"id":3572,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3567,"name":"uint16","nodeType":"ElementaryTypeName","src":"1960:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1952:50:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3571,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3568,"name":"bytes","nodeType":"ElementaryTypeName","src":"1978:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"1970:31:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$","typeString":"mapping(bytes => struct LZEndpointMock.StoredPayload)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3570,"nodeType":"UserDefinedTypeName","pathNode":{"id":3569,"name":"StoredPayload","nameLocations":["1987:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"1987:13:20"},"referencedDeclaration":3610,"src":"1987:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}}}},"visibility":"public"},{"constant":false,"functionSelector":"12a9ee6b","id":3581,"mutability":"mutable","name":"msgsToDeliver","nameLocation":"2132:13:20","nodeType":"VariableDeclaration","scope":4860,"src":"2072:73:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))"},"typeName":{"id":3580,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3574,"name":"uint16","nodeType":"ElementaryTypeName","src":"2080:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"2072:52:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3579,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3575,"name":"bytes","nodeType":"ElementaryTypeName","src":"2098:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"2090:33:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_$","typeString":"mapping(bytes => struct LZEndpointMock.QueuedPayload[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3577,"nodeType":"UserDefinedTypeName","pathNode":{"id":3576,"name":"QueuedPayload","nameLocations":["2107:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"2107:13:20"},"referencedDeclaration":3617,"src":"2107:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"id":3578,"nodeType":"ArrayTypeName","src":"2107:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"}}}},"visibility":"public"},{"constant":false,"id":3584,"mutability":"mutable","name":"_send_entered_state","nameLocation":"2194:19:20","nodeType":"VariableDeclaration","scope":4860,"src":"2179:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3582,"name":"uint8","nodeType":"ElementaryTypeName","src":"2179:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2216:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":3587,"mutability":"mutable","name":"_receive_entered_state","nameLocation":"2239:22:20","nodeType":"VariableDeclaration","scope":4860,"src":"2224:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3585,"name":"uint8","nodeType":"ElementaryTypeName","src":"2224:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2264:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"canonicalName":"LZEndpointMock.ProtocolFeeConfig","id":3592,"members":[{"constant":false,"id":3589,"mutability":"mutable","name":"zroFee","nameLocation":"2315:6:20","nodeType":"VariableDeclaration","scope":3592,"src":"2310:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint","nodeType":"ElementaryTypeName","src":"2310:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"nativeBP","nameLocation":"2337:8:20","nodeType":"VariableDeclaration","scope":3592,"src":"2332:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint","nodeType":"ElementaryTypeName","src":"2332:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProtocolFeeConfig","nameLocation":"2281:17:20","nodeType":"StructDefinition","scope":4860,"src":"2274:79:20","visibility":"public"},{"canonicalName":"LZEndpointMock.RelayerFeeConfig","id":3603,"members":[{"constant":false,"id":3594,"mutability":"mutable","name":"dstPriceRatio","nameLocation":"2404:13:20","nodeType":"VariableDeclaration","scope":3603,"src":"2396:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3593,"name":"uint128","nodeType":"ElementaryTypeName","src":"2396:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3596,"mutability":"mutable","name":"dstGasPriceInWei","nameLocation":"2445:16:20","nodeType":"VariableDeclaration","scope":3603,"src":"2437:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3595,"name":"uint128","nodeType":"ElementaryTypeName","src":"2437:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"dstNativeAmtCap","nameLocation":"2480:15:20","nodeType":"VariableDeclaration","scope":3603,"src":"2472:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3597,"name":"uint128","nodeType":"ElementaryTypeName","src":"2472:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"baseGas","nameLocation":"2513:7:20","nodeType":"VariableDeclaration","scope":3603,"src":"2506:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3599,"name":"uint64","nodeType":"ElementaryTypeName","src":"2506:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3602,"mutability":"mutable","name":"gasPerByte","nameLocation":"2538:10:20","nodeType":"VariableDeclaration","scope":3603,"src":"2531:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3601,"name":"uint64","nodeType":"ElementaryTypeName","src":"2531:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"RelayerFeeConfig","nameLocation":"2368:16:20","nodeType":"StructDefinition","scope":4860,"src":"2361:195:20","visibility":"public"},{"canonicalName":"LZEndpointMock.StoredPayload","id":3610,"members":[{"constant":false,"id":3605,"mutability":"mutable","name":"payloadLength","nameLocation":"2603:13:20","nodeType":"VariableDeclaration","scope":3610,"src":"2596:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3604,"name":"uint64","nodeType":"ElementaryTypeName","src":"2596:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3607,"mutability":"mutable","name":"dstAddress","nameLocation":"2635:10:20","nodeType":"VariableDeclaration","scope":3610,"src":"2627:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3606,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"payloadHash","nameLocation":"2664:11:20","nodeType":"VariableDeclaration","scope":3610,"src":"2656:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2656:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"StoredPayload","nameLocation":"2571:13:20","nodeType":"StructDefinition","scope":4860,"src":"2564:119:20","visibility":"public"},{"canonicalName":"LZEndpointMock.QueuedPayload","id":3617,"members":[{"constant":false,"id":3612,"mutability":"mutable","name":"dstAddress","nameLocation":"2731:10:20","nodeType":"VariableDeclaration","scope":3617,"src":"2723:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"2723:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"nonce","nameLocation":"2759:5:20","nodeType":"VariableDeclaration","scope":3617,"src":"2752:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3613,"name":"uint64","nodeType":"ElementaryTypeName","src":"2752:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"payload","nameLocation":"2781:7:20","nodeType":"VariableDeclaration","scope":3617,"src":"2775:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3615,"name":"bytes","nodeType":"ElementaryTypeName","src":"2775:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"QueuedPayload","nameLocation":"2698:13:20","nodeType":"StructDefinition","scope":4860,"src":"2691:105:20","visibility":"public"},{"body":{"id":3635,"nodeType":"Block","src":"2832:198:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3620,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"2851:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3621,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"2874:12:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2851:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073656e64207265656e7472616e6379","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2888:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb","typeString":"literal_string \"LayerZeroMock: no send reentrancy\""},"value":"LayerZeroMock: no send reentrancy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb","typeString":"literal_string \"LayerZeroMock: no send reentrancy\""}],"id":3619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2843:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2843:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3625,"nodeType":"ExpressionStatement","src":"2843:81:20"},{"expression":{"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3626,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"2935:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3627,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"2957:8:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2935:30:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3629,"nodeType":"ExpressionStatement","src":"2935:30:20"},{"id":3630,"nodeType":"PlaceholderStatement","src":"2976:1:20"},{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"2988:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3632,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"3010:12:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2988:34:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3634,"nodeType":"ExpressionStatement","src":"2988:34:20"}]},"id":3636,"name":"sendNonReentrant","nameLocation":"2813:16:20","nodeType":"ModifierDefinition","parameters":{"id":3618,"nodeType":"ParameterList","parameters":[],"src":"2829:2:20"},"src":"2804:226:20","virtual":false,"visibility":"internal"},{"body":{"id":3654,"nodeType":"Block","src":"3069:210:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3639,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3088:22:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3640,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"3114:12:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3088:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2072656365697665207265656e7472616e6379","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3128:38:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab","typeString":"literal_string \"LayerZeroMock: no receive reentrancy\""},"value":"LayerZeroMock: no receive reentrancy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab","typeString":"literal_string \"LayerZeroMock: no receive reentrancy\""}],"id":3638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3080:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:87:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3644,"nodeType":"ExpressionStatement","src":"3080:87:20"},{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3645,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3178:22:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3646,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"3203:8:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3178:33:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3648,"nodeType":"ExpressionStatement","src":"3178:33:20"},{"id":3649,"nodeType":"PlaceholderStatement","src":"3222:1:20"},{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3650,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3234:22:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3651,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"3259:12:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3234:37:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3653,"nodeType":"ExpressionStatement","src":"3234:37:20"}]},"id":3655,"name":"receiveNonReentrant","nameLocation":"3047:19:20","nodeType":"ModifierDefinition","parameters":{"id":3637,"nodeType":"ParameterList","parameters":[],"src":"3066:2:20"},"src":"3038:241:20","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"23d2684f396e92a6e2ff2d16f98e6fea00d50cb27a64b531bc0748f730211f98","id":3661,"name":"UaForceResumeReceive","nameLocation":"3293:20:20","nodeType":"EventDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"indexed":false,"mutability":"mutable","name":"chainId","nameLocation":"3321:7:20","nodeType":"VariableDeclaration","scope":3661,"src":"3314:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3656,"name":"uint16","nodeType":"ElementaryTypeName","src":"3314:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3659,"indexed":false,"mutability":"mutable","name":"srcAddress","nameLocation":"3336:10:20","nodeType":"VariableDeclaration","scope":3661,"src":"3330:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3658,"name":"bytes","nodeType":"ElementaryTypeName","src":"3330:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3313:34:20"},"src":"3287:61:20"},{"anonymous":false,"eventSelector":"612434f39581c8e7d99746c9c20c6eb0ce8c0eb99f007c5719d620841370957d","id":3671,"name":"PayloadCleared","nameLocation":"3360:14:20","nodeType":"EventDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"indexed":false,"mutability":"mutable","name":"srcChainId","nameLocation":"3382:10:20","nodeType":"VariableDeclaration","scope":3671,"src":"3375:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3662,"name":"uint16","nodeType":"ElementaryTypeName","src":"3375:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3665,"indexed":false,"mutability":"mutable","name":"srcAddress","nameLocation":"3400:10:20","nodeType":"VariableDeclaration","scope":3671,"src":"3394:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3664,"name":"bytes","nodeType":"ElementaryTypeName","src":"3394:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3667,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3419:5:20","nodeType":"VariableDeclaration","scope":3671,"src":"3412:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3666,"name":"uint64","nodeType":"ElementaryTypeName","src":"3412:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3669,"indexed":false,"mutability":"mutable","name":"dstAddress","nameLocation":"3434:10:20","nodeType":"VariableDeclaration","scope":3671,"src":"3426:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"3426:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3374:71:20"},"src":"3354:92:20"},{"anonymous":false,"eventSelector":"0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db","id":3685,"name":"PayloadStored","nameLocation":"3458:13:20","nodeType":"EventDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"indexed":false,"mutability":"mutable","name":"srcChainId","nameLocation":"3489:10:20","nodeType":"VariableDeclaration","scope":3685,"src":"3482:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3672,"name":"uint16","nodeType":"ElementaryTypeName","src":"3482:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3675,"indexed":false,"mutability":"mutable","name":"srcAddress","nameLocation":"3516:10:20","nodeType":"VariableDeclaration","scope":3685,"src":"3510:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3674,"name":"bytes","nodeType":"ElementaryTypeName","src":"3510:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3677,"indexed":false,"mutability":"mutable","name":"dstAddress","nameLocation":"3545:10:20","nodeType":"VariableDeclaration","scope":3685,"src":"3537:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3676,"name":"address","nodeType":"ElementaryTypeName","src":"3537:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3679,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3573:5:20","nodeType":"VariableDeclaration","scope":3685,"src":"3566:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3678,"name":"uint64","nodeType":"ElementaryTypeName","src":"3566:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3681,"indexed":false,"mutability":"mutable","name":"payload","nameLocation":"3595:7:20","nodeType":"VariableDeclaration","scope":3685,"src":"3589:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3589:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3683,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"3619:6:20","nodeType":"VariableDeclaration","scope":3685,"src":"3613:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3682,"name":"bytes","nodeType":"ElementaryTypeName","src":"3613:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3471:161:20"},"src":"3452:181:20"},{"anonymous":false,"eventSelector":"2c7a964ca3de5ec1d42d9822f9bbd0eb142a59cc9f855e9d93813b773192c7a3","id":3691,"name":"ValueTransferFailed","nameLocation":"3645:19:20","nodeType":"EventDefinition","parameters":{"id":3690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3681:2:20","nodeType":"VariableDeclaration","scope":3691,"src":"3665:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"3665:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3689,"indexed":true,"mutability":"mutable","name":"quantity","nameLocation":"3698:8:20","nodeType":"VariableDeclaration","scope":3691,"src":"3685:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint","nodeType":"ElementaryTypeName","src":"3685:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3664:43:20"},"src":"3639:69:20"},{"anonymous":false,"eventSelector":"e9bded5f24a4168e4f3bf44e00298c993b22376aad8c58c7dda9718a54cbea82","id":3695,"name":"Packet","nameLocation":"3720:6:20","nodeType":"EventDefinition","parameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"indexed":false,"mutability":"mutable","name":"payload","nameLocation":"3733:7:20","nodeType":"VariableDeclaration","scope":3695,"src":"3727:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3692,"name":"bytes","nodeType":"ElementaryTypeName","src":"3727:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3726:15:20"},"src":"3714:28:20"},{"body":{"id":3732,"nodeType":"Block","src":"3779:515:20","statements":[{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3700,"name":"mockChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"3790:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3701,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"3804:8:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3790:22:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":3703,"nodeType":"ExpressionStatement","src":"3790:22:20"},{"expression":{"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3704,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"3849:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653130","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3915:4:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},{"hexValue":"31653130","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3989:4:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},{"hexValue":"31653139","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4025:4:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"value":"1e19"},{"hexValue":"313030","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4053:3:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"31","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3705,"name":"RelayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"3868:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayerFeeConfig_$3603_storage_ptr_$","typeString":"type(struct LZEndpointMock.RelayerFeeConfig storage pointer)"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3900:13:20","3971:16:20","4008:15:20","4044:7:20","4071:10:20"],"names":["dstPriceRatio","dstGasPriceInWei","dstNativeAmtCap","baseGas","gasPerByte"],"nodeType":"FunctionCall","src":"3868:228:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_memory_ptr","typeString":"struct LZEndpointMock.RelayerFeeConfig memory"}},"src":"3849:247:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3713,"nodeType":"ExpressionStatement","src":"3849:247:20"},{"expression":{"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3714,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"4107:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4154:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},{"hexValue":"31303030","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4170:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"id":3715,"name":"ProtocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"4127:17:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProtocolFeeConfig_$3592_storage_ptr_$","typeString":"type(struct LZEndpointMock.ProtocolFeeConfig storage pointer)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4146:6:20","4160:8:20"],"names":["zroFee","nativeBP"],"nodeType":"FunctionCall","src":"4127:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_memory_ptr","typeString":"struct LZEndpointMock.ProtocolFeeConfig memory"}},"src":"4107:69:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":3720,"nodeType":"ExpressionStatement","src":"4107:69:20"},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3721,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"4197:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653136","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4209:4:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"1e16"},"src":"4197:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3724,"nodeType":"ExpressionStatement","src":"4197:16:20"},{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"4224:20:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"313030303030","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4279:6:20","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"}],"expression":{"id":3726,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"4247:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$1627_$","typeString":"type(library LzLib)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4253:25:20","memberName":"buildDefaultAdapterParams","nodeType":"MemberAccess","referencedDeclaration":1471,"src":"4247:31:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4224:62:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3731,"nodeType":"ExpressionStatement","src":"4224:62:20"}]},"id":3733,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"_chainId","nameLocation":"3769:8:20","nodeType":"VariableDeclaration","scope":3733,"src":"3762:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3696,"name":"uint16","nodeType":"ElementaryTypeName","src":"3762:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3761:17:20"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[],"src":"3779:0:20"},"scope":4860,"src":"3750:544:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1232],"body":{"id":3932,"nodeType":"Block","src":"4670:2501:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3752,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"4689:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4695:6:20","memberName":"length","nodeType":"MemberAccess","src":"4689:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3430","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4705:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"src":"4689:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a20696e636f72726563742072656d6f746520616464726573732073697a65","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4709:46:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b","typeString":"literal_string \"LayerZeroMock: incorrect remote address size\""},"value":"LayerZeroMock: incorrect remote address size"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b","typeString":"literal_string \"LayerZeroMock: incorrect remote address size\""}],"id":3751,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4681:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4681:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3758,"nodeType":"ExpressionStatement","src":"4681:75:20"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"dstChainId","nameLocation":"4836:10:20","nodeType":"VariableDeclaration","scope":3932,"src":"4829:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3759,"name":"uint16","nodeType":"ElementaryTypeName","src":"4829:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":3762,"initialValue":{"id":3761,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"4849:8:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"4829:28:20"},{"assignments":[3764],"declarations":[{"constant":false,"id":3764,"mutability":"mutable","name":"adapterParams","nameLocation":"4881:13:20","nodeType":"VariableDeclaration","scope":3932,"src":"4868:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3763,"name":"bytes","nodeType":"ElementaryTypeName","src":"4868:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3772,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3765,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4897:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4912:6:20","memberName":"length","nodeType":"MemberAccess","src":"4897:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4921:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4897:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3770,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"4968:20:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4897:91:20","trueExpression":{"id":3769,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4938:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4868:120:20"},{"assignments":[3774,null],"declarations":[{"constant":false,"id":3774,"mutability":"mutable","name":"nativeFee","nameLocation":"5005:9:20","nodeType":"VariableDeclaration","scope":3932,"src":"5000:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint","nodeType":"ElementaryTypeName","src":"5000:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3788,"initialValue":{"arguments":[{"id":3776,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"5047:10:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":3777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5072:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5076:6:20","memberName":"sender","nodeType":"MemberAccess","src":"5072:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3779,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"5097:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3780,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"5120:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5150:3:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5142:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3781,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:20","typeDescriptions":{}}},"id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5120:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3786,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"5169:13:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3775,"name":"estimateFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"5020:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint16,address,bytes memory,bool,bytes memory) view returns (uint256,uint256)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:173:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4999:194:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5212:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5216:5:20","memberName":"value","nodeType":"MemberAccess","src":"5212:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3792,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"5225:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e617469766520666f722066656573","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5236:43:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a","typeString":"literal_string \"LayerZeroMock: not enough native for fees\""},"value":"LayerZeroMock: not enough native for fees"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a","typeString":"literal_string \"LayerZeroMock: not enough native for fees\""}],"id":3789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5204:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3796,"nodeType":"ExpressionStatement","src":"5204:76:20"},{"assignments":[3798],"declarations":[{"constant":false,"id":3798,"mutability":"mutable","name":"nonce","nameLocation":"5300:5:20","nodeType":"VariableDeclaration","scope":3932,"src":"5293:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3797,"name":"uint64","nodeType":"ElementaryTypeName","src":"5293:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3806,"initialValue":{"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5308:39:20","subExpression":{"baseExpression":{"baseExpression":{"id":3799,"name":"outboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"5310:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"}},"id":3801,"indexExpression":{"id":3800,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"5324:10:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5310:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":3804,"indexExpression":{"expression":{"id":3802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5336:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5340:6:20","memberName":"sender","nodeType":"MemberAccess","src":"5336:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5310:37:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"5293:54:20"},{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"amount","nameLocation":"5406:6:20","nodeType":"VariableDeclaration","scope":3932,"src":"5401:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint","nodeType":"ElementaryTypeName","src":"5401:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3813,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3809,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5415:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5419:5:20","memberName":"value","nodeType":"MemberAccess","src":"5415:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3811,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"5427:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5415:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5401:35:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"5451:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5451:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"5447:166:20","trueBody":{"id":3831,"nodeType":"Block","src":"5463:150:20","statements":[{"assignments":[3818,null],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"success","nameLocation":"5484:7:20","nodeType":"VariableDeclaration","scope":3831,"src":"5479:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3817,"name":"bool","nodeType":"ElementaryTypeName","src":"5479:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3825,"initialValue":{"arguments":[{"hexValue":"","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5532:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3819,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"5497:14:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5512:4:20","memberName":"call","nodeType":"MemberAccess","src":"5497:19:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3821,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"5524:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5497:34:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5497:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5478:57:20"},{"expression":{"arguments":[{"id":3827,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"5558:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206661696c656420746f20726566756e64","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5567:33:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790","typeString":"literal_string \"LayerZeroMock: failed to refund\""},"value":"LayerZeroMock: failed to refund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790","typeString":"literal_string \"LayerZeroMock: failed to refund\""}],"id":3826,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5550:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5550:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"ExpressionStatement","src":"5550:51:20"}]}},{"assignments":[null,3834,3836,3838],"declarations":[null,{"constant":false,"id":3834,"mutability":"mutable","name":"extraGas","nameLocation":"5779:8:20","nodeType":"VariableDeclaration","scope":3932,"src":"5774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint","nodeType":"ElementaryTypeName","src":"5774:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"dstNativeAmt","nameLocation":"5794:12:20","nodeType":"VariableDeclaration","scope":3932,"src":"5789:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint","nodeType":"ElementaryTypeName","src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"dstNativeAddr","nameLocation":"5824:13:20","nodeType":"VariableDeclaration","scope":3932,"src":"5808:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3837,"name":"address","nodeType":"ElementaryTypeName","src":"5808:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":3843,"initialValue":{"arguments":[{"id":3841,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"5881:13:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3839,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"5841:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$1627_$","typeString":"type(library LzLib)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5861:19:20","memberName":"decodeAdapterParams","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"5841:39:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"function (bytes memory) pure returns (uint16,uint256,uint256,address payable)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5841:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint16,uint256,uint256,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"5771:124:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5910:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5925:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5910:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"5906:227:20","trueBody":{"id":3865,"nodeType":"Block","src":"5928:205:20","statements":[{"assignments":[3848,null],"declarations":[{"constant":false,"id":3848,"mutability":"mutable","name":"success","nameLocation":"5949:7:20","nodeType":"VariableDeclaration","scope":3865,"src":"5944:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3847,"name":"bool","nodeType":"ElementaryTypeName","src":"5944:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3855,"initialValue":{"arguments":[{"hexValue":"","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6002:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3849,"name":"dstNativeAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"5962:13:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5976:4:20","memberName":"call","nodeType":"MemberAccess","src":"5962:18:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3851,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5988:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5962:39:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5962:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5943:62:20"},{"condition":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6024:8:20","subExpression":{"id":3856,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"6025:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3864,"nodeType":"IfStatement","src":"6020:102:20","trueBody":{"id":3863,"nodeType":"Block","src":"6034:88:20","statements":[{"eventCall":{"arguments":[{"id":3859,"name":"dstNativeAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"6078:13:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3860,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"6093:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3858,"name":"ValueTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"6058:19:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6058:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3862,"nodeType":"EmitStatement","src":"6053:53:20"}]}}]}},{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"dstAddr","nameLocation":"6186:7:20","nodeType":"VariableDeclaration","scope":3932,"src":"6178:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3867,"name":"address","nodeType":"ElementaryTypeName","src":"6178:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3869,"nodeType":"VariableDeclarationStatement","src":"6178:15:20"},{"AST":{"nodeType":"YulBlock","src":"6213:58:20","statements":[{"nodeType":"YulAssignment","src":"6228:32:20","value":{"arguments":[{"arguments":[{"name":"_path","nodeType":"YulIdentifier","src":"6249:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6256:2:20","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6245:3:20"},"nodeType":"YulFunctionCall","src":"6245:14:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6239:5:20"},"nodeType":"YulFunctionCall","src":"6239:21:20"},"variableNames":[{"name":"dstAddr","nodeType":"YulIdentifier","src":"6228:7:20"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":3737,"isOffset":false,"isSlot":false,"src":"6249:5:20","valueSize":1},{"declaration":3868,"isOffset":false,"isSlot":false,"src":"6228:7:20","valueSize":1}],"id":3870,"nodeType":"InlineAssembly","src":"6204:67:20"},{"assignments":[3872],"declarations":[{"constant":false,"id":3872,"mutability":"mutable","name":"payload","nameLocation":"6294:7:20","nodeType":"VariableDeclaration","scope":3932,"src":"6281:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3871,"name":"bytes","nodeType":"ElementaryTypeName","src":"6281:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3874,"initialValue":{"id":3873,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"6304:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"6281:31:20"},{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"encodedPayload","nameLocation":"6336:14:20","nodeType":"VariableDeclaration","scope":3932,"src":"6323:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3875,"name":"bytes","nodeType":"ElementaryTypeName","src":"6323:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3887,"initialValue":{"arguments":[{"id":3879,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6384:5:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3880,"name":"mockChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"6404:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":3881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6430:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6434:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6430:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3883,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"6455:10:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3884,"name":"dstAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"6480:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3885,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6502:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3877,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6353:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6357:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"6353:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6353:167:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6323:197:20"},{"eventCall":{"arguments":[{"id":3889,"name":"encodedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"6543:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3888,"name":"Packet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"6536:6:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3891,"nodeType":"EmitStatement","src":"6531:27:20"},{"condition":{"id":3892,"name":"callReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"6575:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3931,"nodeType":"IfStatement","src":"6571:593:20","trueBody":{"id":3930,"nodeType":"Block","src":"6588:576:20","statements":[{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"lzEndpoint","nameLocation":"6611:10:20","nodeType":"VariableDeclaration","scope":3930,"src":"6603:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3893,"name":"address","nodeType":"ElementaryTypeName","src":"6603:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3898,"initialValue":{"baseExpression":{"id":3895,"name":"lzEndpointLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"6624:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3897,"indexExpression":{"id":3896,"name":"dstAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"6641:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6624:25:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6603:46:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6690:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6712:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6704:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3901,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:20","typeDescriptions":{}}},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6704:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6690:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c617965725a65726f20456e64706f696e74206e6f7420666f756e64","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6733:57:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df","typeString":"literal_string \"LayerZeroMock: destination LayerZero Endpoint not found\""},"value":"LayerZeroMock: destination LayerZero Endpoint not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df","typeString":"literal_string \"LayerZeroMock: destination LayerZero Endpoint not found\""}],"id":3899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6664:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:141:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3908,"nodeType":"ExpressionStatement","src":"6664:141:20"},{"assignments":[3910],"declarations":[{"constant":false,"id":3910,"mutability":"mutable","name":"srcUaAddress","nameLocation":"6835:12:20","nodeType":"VariableDeclaration","scope":3930,"src":"6822:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3909,"name":"bytes","nodeType":"ElementaryTypeName","src":"6822:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3917,"initialValue":{"arguments":[{"expression":{"id":3913,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6867:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6871:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6867:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3915,"name":"dstAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"6879:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3911,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6850:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6854:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"6850:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6850:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6822:65:20"},{"expression":{"arguments":[{"id":3922,"name":"mockChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"6992:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3923,"name":"srcUaAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7022:12:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3924,"name":"dstAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"7053:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3925,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"7079:5:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3926,"name":"extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"7103:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3927,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7130:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3919,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6947:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3918,"name":"LZEndpointMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"6932:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LZEndpointMock_$4860_$","typeString":"type(contract LZEndpointMock)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6932:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LZEndpointMock_$4860","typeString":"contract LZEndpointMock"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6959:14:20","memberName":"receivePayload","nodeType":"MemberAccess","referencedDeclaration":4140,"src":"6932:41:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,address,uint64,uint256,bytes memory) external"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6932:220:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3929,"nodeType":"ExpressionStatement","src":"6932:220:20"}]}}]},"functionSelector":"c5803100","id":3933,"implemented":true,"kind":"function","modifiers":[{"id":3749,"kind":"modifierInvocation","modifierName":{"id":3748,"name":"sendNonReentrant","nameLocations":["4653:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":3636,"src":"4653:16:20"},"nodeType":"ModifierInvocation","src":"4653:16:20"}],"name":"send","nameLocation":"4410:4:20","nodeType":"FunctionDefinition","overrides":{"id":3747,"nodeType":"OverrideSpecifier","overrides":[],"src":"4644:8:20"},"parameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"_chainId","nameLocation":"4432:8:20","nodeType":"VariableDeclaration","scope":3933,"src":"4425:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3734,"name":"uint16","nodeType":"ElementaryTypeName","src":"4425:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"_path","nameLocation":"4464:5:20","nodeType":"VariableDeclaration","scope":3933,"src":"4451:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3736,"name":"bytes","nodeType":"ElementaryTypeName","src":"4451:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"_payload","nameLocation":"4495:8:20","nodeType":"VariableDeclaration","scope":3933,"src":"4480:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3738,"name":"bytes","nodeType":"ElementaryTypeName","src":"4480:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"_refundAddress","nameLocation":"4530:14:20","nodeType":"VariableDeclaration","scope":3933,"src":"4514:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3740,"name":"address","nodeType":"ElementaryTypeName","src":"4514:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"4563:18:20","nodeType":"VariableDeclaration","scope":3933,"src":"4555:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3742,"name":"address","nodeType":"ElementaryTypeName","src":"4555:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"_adapterParams","nameLocation":"4605:14:20","nodeType":"VariableDeclaration","scope":3933,"src":"4592:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3744,"name":"bytes","nodeType":"ElementaryTypeName","src":"4592:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4414:212:20"},"returnParameters":{"id":3750,"nodeType":"ParameterList","parameters":[],"src":"4670:0:20"},"scope":4860,"src":"4401:2770:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1247],"body":{"id":4139,"nodeType":"Block","src":"7421:2415:20","statements":[{"assignments":[3953],"declarations":[{"constant":false,"id":3953,"mutability":"mutable","name":"sp","nameLocation":"7454:2:20","nodeType":"VariableDeclaration","scope":4139,"src":"7432:24:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":3952,"nodeType":"UserDefinedTypeName","pathNode":{"id":3951,"name":"StoredPayload","nameLocations":["7432:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"7432:13:20"},"referencedDeclaration":3610,"src":"7432:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":3959,"initialValue":{"baseExpression":{"baseExpression":{"id":3954,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"7459:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":3956,"indexExpression":{"id":3955,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"7473:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7459:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":3958,"indexExpression":{"id":3957,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"7486:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7459:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7432:60:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"7578:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7588:34:20","subExpression":{"baseExpression":{"baseExpression":{"id":3962,"name":"inboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"7590:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes memory => uint64))"}},"id":3964,"indexExpression":{"id":3963,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"7603:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7590:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes memory => uint64)"}},"id":3966,"indexExpression":{"id":3965,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"7616:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7590:32:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7578:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a2077726f6e67206e6f6e6365","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7624:28:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac","typeString":"literal_string \"LayerZeroMock: wrong nonce\""},"value":"LayerZeroMock: wrong nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac","typeString":"literal_string \"LayerZeroMock: wrong nonce\""}],"id":3960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7570:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7570:83:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3971,"nodeType":"ExpressionStatement","src":"7570:83:20"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3972,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"7794:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":3973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7797:11:20","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"7794:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7820:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7812:7:20","typeDescriptions":{}}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7812:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7794:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":4050,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"8668:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4136,"nodeType":"Block","src":"9098:731:20","statements":[{"clauses":[{"block":{"id":4097,"nodeType":"Block","src":"9346:2:20","statements":[]},"errorName":"","id":4098,"nodeType":"TryCatchClause","src":"9346:2:20"},{"block":{"id":4133,"nodeType":"Block","src":"9377:441:20","statements":[{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4102,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"9396:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":4105,"indexExpression":{"id":4103,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"9410:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9396:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":4106,"indexExpression":{"id":4104,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"9423:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9396:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":4110,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"9475:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9484:6:20","memberName":"length","nodeType":"MemberAccess","src":"9475:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9468:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4108,"name":"uint64","nodeType":"ElementaryTypeName","src":"9468:6:20","typeDescriptions":{}}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9468:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4113,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"9514:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4115,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"9558:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4114,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9548:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9548:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4107,"name":"StoredPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"9432:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StoredPayload_$3610_storage_ptr_$","typeString":"type(struct LZEndpointMock.StoredPayload storage pointer)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9432:154:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_memory_ptr","typeString":"struct LZEndpointMock.StoredPayload memory"}},"src":"9396:190:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"id":4119,"nodeType":"ExpressionStatement","src":"9396:190:20"},{"eventCall":{"arguments":[{"id":4121,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"9624:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4122,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"9637:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4123,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"9644:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4124,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"9657:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4125,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"9665:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4126,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"9675:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4120,"name":"PayloadStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"9610:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,address,uint64,bytes memory,bytes memory)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9610:72:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4128,"nodeType":"EmitStatement","src":"9605:77:20"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4129,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"9780:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9797:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9780:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"ExpressionStatement","src":"9780:22:20"}]},"errorName":"","id":4134,"nodeType":"TryCatchClause","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"reason","nameLocation":"9369:6:20","nodeType":"VariableDeclaration","scope":4134,"src":"9356:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4099,"name":"bytes","nodeType":"ElementaryTypeName","src":"9356:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9355:21:20"},"src":"9349:469:20"}],"externalCall":{"arguments":[{"id":4092,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"9214:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4093,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"9248:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4094,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"9276:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4095,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"9305:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":4087,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"9153:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4086,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"9134:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroReceiver_$1371_$","typeString":"type(contract ILayerZeroReceiver)"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9134:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroReceiver_$1371","typeString":"contract ILayerZeroReceiver"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9166:9:20","memberName":"lzReceive","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"9134:41:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"id":4090,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9181:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9134:57:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$gas","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9134:198:20","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4135,"nodeType":"TryStatement","src":"9113:705:20"}]},"id":4137,"nodeType":"IfStatement","src":"8664:1165:20","trueBody":{"id":4085,"nodeType":"Block","src":"8684:408:20","statements":[{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4051,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"8699:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":4054,"indexExpression":{"id":4052,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"8713:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8699:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":4055,"indexExpression":{"id":4053,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"8726:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8699:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":4059,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"8774:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8783:6:20","memberName":"length","nodeType":"MemberAccess","src":"8774:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8767:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4057,"name":"uint64","nodeType":"ElementaryTypeName","src":"8767:6:20","typeDescriptions":{}}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8767:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4062,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"8809:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4064,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"8849:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4063,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8839:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8839:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4056,"name":"StoredPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"8735:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StoredPayload_$3610_storage_ptr_$","typeString":"type(struct LZEndpointMock.StoredPayload storage pointer)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8735:138:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_memory_ptr","typeString":"struct LZEndpointMock.StoredPayload memory"}},"src":"8699:174:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"id":4068,"nodeType":"ExpressionStatement","src":"8699:174:20"},{"eventCall":{"arguments":[{"id":4070,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"8907:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4071,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"8920:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4072,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"8927:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4073,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"8940:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4074,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"8948:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"hexValue":"","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8964:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8958:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4075,"name":"bytes","nodeType":"ElementaryTypeName","src":"8958:5:20","typeDescriptions":{}}},"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:9:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4069,"name":"PayloadStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"8893:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,address,uint64,bytes memory,bytes memory)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8893:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4080,"nodeType":"EmitStatement","src":"8888:80:20"},{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4081,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"9058:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9075:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9058:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"ExpressionStatement","src":"9058:22:20"}]}},"id":4138,"nodeType":"IfStatement","src":"7790:2039:20","trueBody":{"id":4049,"nodeType":"Block","src":"7824:834:20","statements":[{"assignments":[3983],"declarations":[{"constant":false,"id":3983,"mutability":"mutable","name":"msgs","nameLocation":"7863:4:20","nodeType":"VariableDeclaration","scope":4049,"src":"7839:28:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"},"typeName":{"baseType":{"id":3981,"nodeType":"UserDefinedTypeName","pathNode":{"id":3980,"name":"QueuedPayload","nameLocations":["7839:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"7839:13:20"},"referencedDeclaration":3617,"src":"7839:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"id":3982,"nodeType":"ArrayTypeName","src":"7839:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"}},"visibility":"internal"}],"id":3989,"initialValue":{"baseExpression":{"baseExpression":{"id":3984,"name":"msgsToDeliver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"7870:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref))"}},"id":3986,"indexExpression":{"id":3985,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"7884:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7870:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref)"}},"id":3988,"indexExpression":{"id":3987,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"7897:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7870:33:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7839:64:20"},{"assignments":[3992],"declarations":[{"constant":false,"id":3992,"mutability":"mutable","name":"newMsg","nameLocation":"7939:6:20","nodeType":"VariableDeclaration","scope":4049,"src":"7918:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload"},"typeName":{"id":3991,"nodeType":"UserDefinedTypeName","pathNode":{"id":3990,"name":"QueuedPayload","nameLocations":["7918:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"7918:13:20"},"referencedDeclaration":3617,"src":"7918:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"visibility":"internal"}],"id":3998,"initialValue":{"arguments":[{"id":3994,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"7962:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3995,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"7975:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3996,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"7983:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3993,"name":"QueuedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"7948:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_QueuedPayload_$3617_storage_ptr_$","typeString":"type(struct LZEndpointMock.QueuedPayload storage pointer)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7948:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"nodeType":"VariableDeclarationStatement","src":"7918:74:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3999,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8202:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8207:6:20","memberName":"length","nodeType":"MemberAccess","src":"8202:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8216:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8202:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4047,"nodeType":"Block","src":"8595:52:20","statements":[{"expression":{"arguments":[{"id":4044,"name":"newMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"8624:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}],"expression":{"id":4041,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8614:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8619:4:20","memberName":"push","nodeType":"MemberAccess","src":"8614:9:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr_$_t_struct$_QueuedPayload_$3617_storage_$returns$__$attached_to$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr_$","typeString":"function (struct LZEndpointMock.QueuedPayload storage ref[] storage pointer,struct LZEndpointMock.QueuedPayload storage ref)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4046,"nodeType":"ExpressionStatement","src":"8614:17:20"}]},"id":4048,"nodeType":"IfStatement","src":"8198:449:20","trueBody":{"id":4040,"nodeType":"Block","src":"8219:370:20","statements":[{"expression":{"arguments":[{"id":4006,"name":"newMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"8285:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}],"expression":{"id":4003,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8275:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8280:4:20","memberName":"push","nodeType":"MemberAccess","src":"8275:9:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr_$_t_struct$_QueuedPayload_$3617_storage_$returns$__$attached_to$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr_$","typeString":"function (struct LZEndpointMock.QueuedPayload storage ref[] storage pointer,struct LZEndpointMock.QueuedPayload storage ref)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8275:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4008,"nodeType":"ExpressionStatement","src":"8275:17:20"},{"body":{"id":4032,"nodeType":"Block","src":"8411:64:20","statements":[{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4022,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8434:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4026,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"8439:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8443:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8439:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8434:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4027,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8448:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4029,"indexExpression":{"id":4028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"8453:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8448:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"src":"8434:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"id":4031,"nodeType":"ExpressionStatement","src":"8434:21:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"8385:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4014,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8389:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8394:6:20","memberName":"length","nodeType":"MemberAccess","src":"8389:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8403:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8389:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8385:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4033,"initializationExpression":{"assignments":[4010],"declarations":[{"constant":false,"id":4010,"mutability":"mutable","name":"i","nameLocation":"8378:1:20","nodeType":"VariableDeclaration","scope":4033,"src":"8373:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint","nodeType":"ElementaryTypeName","src":"8373:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4012,"initialValue":{"hexValue":"30","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8382:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8373:10:20"},"loopExpression":{"expression":{"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8406:3:20","subExpression":{"id":4019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"8406:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4021,"nodeType":"ExpressionStatement","src":"8406:3:20"},"nodeType":"ForStatement","src":"8368:107:20"},{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4034,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8557:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4036,"indexExpression":{"hexValue":"30","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8562:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4037,"name":"newMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"8567:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"src":"8557:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"id":4039,"nodeType":"ExpressionStatement","src":"8557:16:20"}]}}]}}]},"functionSelector":"c2fa4813","id":4140,"implemented":true,"kind":"function","modifiers":[{"id":3949,"kind":"modifierInvocation","modifierName":{"id":3948,"name":"receiveNonReentrant","nameLocations":["7401:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":3655,"src":"7401:19:20"},"nodeType":"ModifierInvocation","src":"7401:19:20"}],"name":"receivePayload","nameLocation":"7188:14:20","nodeType":"FunctionDefinition","overrides":{"id":3947,"nodeType":"OverrideSpecifier","overrides":[],"src":"7392:8:20"},"parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"_srcChainId","nameLocation":"7220:11:20","nodeType":"VariableDeclaration","scope":4140,"src":"7213:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3934,"name":"uint16","nodeType":"ElementaryTypeName","src":"7213:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"_path","nameLocation":"7257:5:20","nodeType":"VariableDeclaration","scope":4140,"src":"7242:20:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3936,"name":"bytes","nodeType":"ElementaryTypeName","src":"7242:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"_dstAddress","nameLocation":"7281:11:20","nodeType":"VariableDeclaration","scope":4140,"src":"7273:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3938,"name":"address","nodeType":"ElementaryTypeName","src":"7273:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"_nonce","nameLocation":"7310:6:20","nodeType":"VariableDeclaration","scope":4140,"src":"7303:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3940,"name":"uint64","nodeType":"ElementaryTypeName","src":"7303:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"_gasLimit","nameLocation":"7332:9:20","nodeType":"VariableDeclaration","scope":4140,"src":"7327:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint","nodeType":"ElementaryTypeName","src":"7327:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"_payload","nameLocation":"7367:8:20","nodeType":"VariableDeclaration","scope":4140,"src":"7352:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3944,"name":"bytes","nodeType":"ElementaryTypeName","src":"7352:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7202:180:20"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[],"src":"7421:0:20"},"scope":4860,"src":"7179:2657:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1256],"body":{"id":4156,"nodeType":"Block","src":"9989:55:20","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4150,"name":"inboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"10007:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes memory => uint64))"}},"id":4152,"indexExpression":{"id":4151,"name":"_chainID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"10020:8:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10007:22:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes memory => uint64)"}},"id":4154,"indexExpression":{"id":4153,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"10030:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10007:29:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4149,"id":4155,"nodeType":"Return","src":"10000:36:20"}]},"functionSelector":"fdc07c70","id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"9853:15:20","nodeType":"FunctionDefinition","overrides":{"id":4146,"nodeType":"OverrideSpecifier","overrides":[],"src":"9949:8:20"},"parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"_chainID","nameLocation":"9876:8:20","nodeType":"VariableDeclaration","scope":4157,"src":"9869:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4141,"name":"uint16","nodeType":"ElementaryTypeName","src":"9869:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"_path","nameLocation":"9901:5:20","nodeType":"VariableDeclaration","scope":4157,"src":"9886:20:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4143,"name":"bytes","nodeType":"ElementaryTypeName","src":"9886:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9868:39:20"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"9976:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4147,"name":"uint64","nodeType":"ElementaryTypeName","src":"9976:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9975:8:20"},"scope":4860,"src":"9844:200:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1265],"body":{"id":4173,"nodeType":"Block","src":"10197:62:20","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4167,"name":"outboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"10215:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"}},"id":4169,"indexExpression":{"id":4168,"name":"_chainID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"10229:8:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10215:23:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":4171,"indexExpression":{"id":4170,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"10239:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10215:36:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4166,"id":4172,"nodeType":"Return","src":"10208:43:20"}]},"functionSelector":"7a145748","id":4174,"implemented":true,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"10061:16:20","nodeType":"FunctionDefinition","overrides":{"id":4163,"nodeType":"OverrideSpecifier","overrides":[],"src":"10157:8:20"},"parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"_chainID","nameLocation":"10085:8:20","nodeType":"VariableDeclaration","scope":4174,"src":"10078:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4158,"name":"uint16","nodeType":"ElementaryTypeName","src":"10078:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"_srcAddress","nameLocation":"10103:11:20","nodeType":"VariableDeclaration","scope":4174,"src":"10095:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4160,"name":"address","nodeType":"ElementaryTypeName","src":"10095:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10077:38:20"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4174,"src":"10184:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4164,"name":"uint64","nodeType":"ElementaryTypeName","src":"10184:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"10183:8:20"},"scope":4860,"src":"10052:207:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1282],"body":{"id":4237,"nodeType":"Block","src":"10505:621:20","statements":[{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"adapterParams","nameLocation":"10529:13:20","nodeType":"VariableDeclaration","scope":4237,"src":"10516:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4191,"name":"bytes","nodeType":"ElementaryTypeName","src":"10516:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4200,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4193,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"10545:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10560:6:20","memberName":"length","nodeType":"MemberAccess","src":"10545:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10569:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10545:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4198,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"10616:20:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10545:91:20","trueExpression":{"id":4197,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"10586:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10516:120:20"},{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"relayerFee","nameLocation":"10678:10:20","nodeType":"VariableDeclaration","scope":4237,"src":"10673:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint","nodeType":"ElementaryTypeName","src":"10673:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4211,"initialValue":{"arguments":[{"id":4204,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"10720:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"31","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10746:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":4206,"name":"_userApplication","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"10762:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4207,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"10793:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10802:6:20","memberName":"length","nodeType":"MemberAccess","src":"10793:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4209,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"10823:13:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4203,"name":"_getRelayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"10691:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint16,uint16,address,uint256,bytes memory) view returns (uint256)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10691:156:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10673:174:20"},{"assignments":[4213],"declarations":[{"constant":false,"id":4213,"mutability":"mutable","name":"protocolFee","nameLocation":"10891:11:20","nodeType":"VariableDeclaration","scope":4237,"src":"10886:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint","nodeType":"ElementaryTypeName","src":"10886:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4219,"initialValue":{"arguments":[{"id":4215,"name":"_payInZRO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"10922:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4216,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"10933:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4217,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"10945:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4214,"name":"_getProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"10905:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) view returns (uint256)"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10905:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10886:69:20"},{"expression":{"condition":{"id":4220,"name":"_payInZRO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"10966:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4224,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11001:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4225,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"11013:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11001:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10966:58:20","trueExpression":{"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4221,"name":"zroFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"10978:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4222,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"10987:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10978:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4228,"nodeType":"ExpressionStatement","src":"10966:58:20"},{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4229,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11072:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11084:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4231,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"11096:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11084:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4233,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"11109:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11084:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11072:46:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4236,"nodeType":"ExpressionStatement","src":"11072:46:20"}]},"functionSelector":"40a7bb10","id":4238,"implemented":true,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"10276:12:20","nodeType":"FunctionDefinition","parameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"_dstChainId","nameLocation":"10306:11:20","nodeType":"VariableDeclaration","scope":4238,"src":"10299:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4175,"name":"uint16","nodeType":"ElementaryTypeName","src":"10299:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"_userApplication","nameLocation":"10336:16:20","nodeType":"VariableDeclaration","scope":4238,"src":"10328:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4177,"name":"address","nodeType":"ElementaryTypeName","src":"10328:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"_payload","nameLocation":"10376:8:20","nodeType":"VariableDeclaration","scope":4238,"src":"10363:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4179,"name":"bytes","nodeType":"ElementaryTypeName","src":"10363:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"_payInZRO","nameLocation":"10400:9:20","nodeType":"VariableDeclaration","scope":4238,"src":"10395:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4181,"name":"bool","nodeType":"ElementaryTypeName","src":"10395:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4184,"mutability":"mutable","name":"_adapterParams","nameLocation":"10433:14:20","nodeType":"VariableDeclaration","scope":4238,"src":"10420:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4183,"name":"bytes","nodeType":"ElementaryTypeName","src":"10420:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10288:166:20"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"nativeFee","nameLocation":"10481:9:20","nodeType":"VariableDeclaration","scope":4238,"src":"10476:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint","nodeType":"ElementaryTypeName","src":"10476:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"zroFee","nameLocation":"10497:6:20","nodeType":"VariableDeclaration","scope":4238,"src":"10492:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint","nodeType":"ElementaryTypeName","src":"10492:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10475:29:20"},"scope":4860,"src":"10267:859:20","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1287],"body":{"id":4246,"nodeType":"Block","src":"11196:37:20","statements":[{"expression":{"id":4244,"name":"mockChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"11214:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4243,"id":4245,"nodeType":"Return","src":"11207:18:20"}]},"functionSelector":"3408e470","id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"11143:10:20","nodeType":"FunctionDefinition","overrides":{"id":4240,"nodeType":"OverrideSpecifier","overrides":[],"src":"11170:8:20"},"parameters":{"id":4239,"nodeType":"ParameterList","parameters":[],"src":"11153:2:20"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"11188:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4241,"name":"uint16","nodeType":"ElementaryTypeName","src":"11188:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"11187:8:20"},"scope":4860,"src":"11134:99:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1296],"body":{"id":4347,"nodeType":"Block","src":"11382:738:20","statements":[{"assignments":[4259],"declarations":[{"constant":false,"id":4259,"mutability":"mutable","name":"sp","nameLocation":"11415:2:20","nodeType":"VariableDeclaration","scope":4347,"src":"11393:24:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":4258,"nodeType":"UserDefinedTypeName","pathNode":{"id":4257,"name":"StoredPayload","nameLocations":["11393:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"11393:13:20"},"referencedDeclaration":3610,"src":"11393:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":4265,"initialValue":{"baseExpression":{"baseExpression":{"id":4260,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"11420:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":4262,"indexExpression":{"id":4261,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11434:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11420:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":4264,"indexExpression":{"id":4263,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"11447:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11420:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11393:60:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4267,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11472:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11475:11:20","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"11472:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11498:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11490:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11490:7:20","typeDescriptions":{}}},"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11490:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11472:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f6164","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11502:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""},"value":"LayerZeroMock: no stored payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""}],"id":4266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11464:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11464:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4276,"nodeType":"ExpressionStatement","src":"11464:73:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4278,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"11570:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11579:6:20","memberName":"length","nodeType":"MemberAccess","src":"11570:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4280,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11589:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11592:13:20","memberName":"payloadLength","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"11589:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"11570:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4284,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"11619:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4283,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11609:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11609:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4286,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11632:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11635:11:20","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"11632:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11609:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11570:76:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c6964207061796c6f6164","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11661:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe","typeString":"literal_string \"LayerZeroMock: invalid payload\""},"value":"LayerZeroMock: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe","typeString":"literal_string \"LayerZeroMock: invalid payload\""}],"id":4277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11548:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11548:156:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4292,"nodeType":"ExpressionStatement","src":"11548:156:20"},{"assignments":[4294],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"dstAddress","nameLocation":"11725:10:20","nodeType":"VariableDeclaration","scope":4347,"src":"11717:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"11717:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4297,"initialValue":{"expression":{"id":4295,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11738:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11741:10:20","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"11738:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11717:34:20"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4298,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11798:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11801:13:20","memberName":"payloadLength","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"11798:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11817:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11798:20:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4303,"nodeType":"ExpressionStatement","src":"11798:20:20"},{"expression":{"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4304,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11829:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11832:10:20","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"11829:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11845:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4307,"name":"address","nodeType":"ElementaryTypeName","src":"11845:7:20","typeDescriptions":{}}},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11845:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11829:26:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4312,"nodeType":"ExpressionStatement","src":"11829:26:20"},{"expression":{"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4313,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11866:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11869:11:20","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"11866:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11883:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11883:7:20","typeDescriptions":{}}},"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11883:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11866:27:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4321,"nodeType":"ExpressionStatement","src":"11866:27:20"},{"assignments":[4323],"declarations":[{"constant":false,"id":4323,"mutability":"mutable","name":"nonce","nameLocation":"11913:5:20","nodeType":"VariableDeclaration","scope":4347,"src":"11906:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4322,"name":"uint64","nodeType":"ElementaryTypeName","src":"11906:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4329,"initialValue":{"baseExpression":{"baseExpression":{"id":4324,"name":"inboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"11921:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes memory => uint64))"}},"id":4326,"indexExpression":{"id":4325,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11934:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11921:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes memory => uint64)"}},"id":4328,"indexExpression":{"id":4327,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"11947:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11921:32:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"11906:47:20"},{"expression":{"arguments":[{"id":4334,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"12007:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4335,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"12020:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4336,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"12027:5:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4337,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"12034:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":4331,"name":"dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"11985:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4330,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"11966:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroReceiver_$1371_$","typeString":"type(contract ILayerZeroReceiver)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroReceiver_$1371","typeString":"contract ILayerZeroReceiver"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11997:9:20","memberName":"lzReceive","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"11966:40:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:77:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4339,"nodeType":"ExpressionStatement","src":"11966:77:20"},{"eventCall":{"arguments":[{"id":4341,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"12074:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4342,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"12087:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":4343,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"12094:5:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4344,"name":"dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"12101:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4340,"name":"PayloadCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"12059:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint16,bytes memory,uint64,address)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12059:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4346,"nodeType":"EmitStatement","src":"12054:58:20"}]},"functionSelector":"aaff5f16","id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"11250:12:20","nodeType":"FunctionDefinition","overrides":{"id":4255,"nodeType":"OverrideSpecifier","overrides":[],"src":"11373:8:20"},"parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"_srcChainId","nameLocation":"11280:11:20","nodeType":"VariableDeclaration","scope":4348,"src":"11273:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4248,"name":"uint16","nodeType":"ElementaryTypeName","src":"11273:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"_path","nameLocation":"11317:5:20","nodeType":"VariableDeclaration","scope":4348,"src":"11302:20:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4250,"name":"bytes","nodeType":"ElementaryTypeName","src":"11302:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"_payload","nameLocation":"11348:8:20","nodeType":"VariableDeclaration","scope":4348,"src":"11333:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4252,"name":"bytes","nodeType":"ElementaryTypeName","src":"11333:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11262:101:20"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[],"src":"11382:0:20"},"scope":4860,"src":"11241:879:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1305],"body":{"id":4375,"nodeType":"Block","src":"12275:125:20","statements":[{"assignments":[4360],"declarations":[{"constant":false,"id":4360,"mutability":"mutable","name":"sp","nameLocation":"12308:2:20","nodeType":"VariableDeclaration","scope":4375,"src":"12286:24:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":4359,"nodeType":"UserDefinedTypeName","pathNode":{"id":4358,"name":"StoredPayload","nameLocations":["12286:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"12286:13:20"},"referencedDeclaration":3610,"src":"12286:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":4366,"initialValue":{"baseExpression":{"baseExpression":{"id":4361,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"12313:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":4363,"indexExpression":{"id":4362,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"12327:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12313:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":4365,"indexExpression":{"id":4364,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"12340:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12313:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12286:60:20"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4367,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"12364:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12367:11:20","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"12364:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12390:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12382:7:20","typeDescriptions":{}}},"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12364:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4357,"id":4374,"nodeType":"Return","src":"12357:35:20"}]},"functionSelector":"0eaf6ea6","id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"12137:16:20","nodeType":"FunctionDefinition","overrides":{"id":4354,"nodeType":"OverrideSpecifier","overrides":[],"src":"12237:8:20"},"parameters":{"id":4353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"_srcChainId","nameLocation":"12161:11:20","nodeType":"VariableDeclaration","scope":4376,"src":"12154:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4349,"name":"uint16","nodeType":"ElementaryTypeName","src":"12154:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4352,"mutability":"mutable","name":"_path","nameLocation":"12189:5:20","nodeType":"VariableDeclaration","scope":4376,"src":"12174:20:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4351,"name":"bytes","nodeType":"ElementaryTypeName","src":"12174:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12153:42:20"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4376,"src":"12264:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4355,"name":"bool","nodeType":"ElementaryTypeName","src":"12264:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12263:6:20"},"scope":4860,"src":"12128:272:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1312],"body":{"id":4389,"nodeType":"Block","src":"12489:39:20","statements":[{"expression":{"arguments":[{"id":4386,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12515:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_LZEndpointMock_$4860","typeString":"contract LZEndpointMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LZEndpointMock_$4860","typeString":"contract LZEndpointMock"}],"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12507:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4384,"name":"address","nodeType":"ElementaryTypeName","src":"12507:7:20","typeDescriptions":{}}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12507:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4383,"id":4388,"nodeType":"Return","src":"12500:20:20"}]},"functionSelector":"9c729da1","id":4390,"implemented":true,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"12417:21:20","nodeType":"FunctionDefinition","overrides":{"id":4380,"nodeType":"OverrideSpecifier","overrides":[],"src":"12462:8:20"},"parameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4390,"src":"12439:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4377,"name":"address","nodeType":"ElementaryTypeName","src":"12439:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12438:9:20"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4390,"src":"12480:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4381,"name":"address","nodeType":"ElementaryTypeName","src":"12480:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12479:9:20"},"scope":4860,"src":"12408:120:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1319],"body":{"id":4403,"nodeType":"Block","src":"12620:39:20","statements":[{"expression":{"arguments":[{"id":4400,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12646:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_LZEndpointMock_$4860","typeString":"contract LZEndpointMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LZEndpointMock_$4860","typeString":"contract LZEndpointMock"}],"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12638:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4398,"name":"address","nodeType":"ElementaryTypeName","src":"12638:7:20","typeDescriptions":{}}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12638:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4397,"id":4402,"nodeType":"Return","src":"12631:20:20"}]},"functionSelector":"71ba2fd6","id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"12545:24:20","nodeType":"FunctionDefinition","overrides":{"id":4394,"nodeType":"OverrideSpecifier","overrides":[],"src":"12593:8:20"},"parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4404,"src":"12570:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4391,"name":"address","nodeType":"ElementaryTypeName","src":"12570:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12569:9:20"},"returnParameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4404,"src":"12611:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4395,"name":"address","nodeType":"ElementaryTypeName","src":"12611:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12610:9:20"},"scope":4860,"src":"12536:123:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1324],"body":{"id":4414,"nodeType":"Block","src":"12733:57:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"12751:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4411,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"12774:8:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12751:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4409,"id":4413,"nodeType":"Return","src":"12744:38:20"}]},"functionSelector":"e97a448a","id":4415,"implemented":true,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"12676:16:20","nodeType":"FunctionDefinition","overrides":{"id":4406,"nodeType":"OverrideSpecifier","overrides":[],"src":"12709:8:20"},"parameters":{"id":4405,"nodeType":"ParameterList","parameters":[],"src":"12692:2:20"},"returnParameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4415,"src":"12727:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4407,"name":"bool","nodeType":"ElementaryTypeName","src":"12727:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12726:6:20"},"scope":4860,"src":"12667:123:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1329],"body":{"id":4425,"nodeType":"Block","src":"12866:60:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"12884:22:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4422,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"12910:8:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12884:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4420,"id":4424,"nodeType":"Return","src":"12877:41:20"}]},"functionSelector":"ca066b35","id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"12807:18:20","nodeType":"FunctionDefinition","overrides":{"id":4417,"nodeType":"OverrideSpecifier","overrides":[],"src":"12842:8:20"},"parameters":{"id":4416,"nodeType":"ParameterList","parameters":[],"src":"12825:2:20"},"returnParameters":{"id":4420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4426,"src":"12860:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4418,"name":"bool","nodeType":"ElementaryTypeName","src":"12860:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12859:6:20"},"scope":4860,"src":"12798:128:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1342],"body":{"id":4442,"nodeType":"Block","src":"13123:28:20","statements":[{"expression":{"hexValue":"","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13141:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":4439,"id":4441,"nodeType":"Return","src":"13134:9:20"}]},"functionSelector":"f5ecbdbc","id":4443,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"12943:9:20","nodeType":"FunctionDefinition","overrides":{"id":4436,"nodeType":"OverrideSpecifier","overrides":[],"src":"13091:8:20"},"parameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"12963:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4427,"name":"uint16","nodeType":"ElementaryTypeName","src":"12963:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"12993:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4429,"name":"uint16","nodeType":"ElementaryTypeName","src":"12993:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"13023:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4431,"name":"address","nodeType":"ElementaryTypeName","src":"13023:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"13049:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint","nodeType":"ElementaryTypeName","src":"13049:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12952:124:20"},"returnParameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"13109:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4437,"name":"bytes","nodeType":"ElementaryTypeName","src":"13109:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13108:14:20"},"scope":4860,"src":"12934:217:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1349],"body":{"id":4453,"nodeType":"Block","src":"13269:27:20","statements":[{"expression":{"hexValue":"31","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13287:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":4450,"id":4452,"nodeType":"Return","src":"13280:8:20"}]},"functionSelector":"096568f6","id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"13168:14:20","nodeType":"FunctionDefinition","overrides":{"id":4447,"nodeType":"OverrideSpecifier","overrides":[],"src":"13243:8:20"},"parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"13193:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4444,"name":"address","nodeType":"ElementaryTypeName","src":"13193:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13182:46:20"},"returnParameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"13261:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4448,"name":"uint16","nodeType":"ElementaryTypeName","src":"13261:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13260:8:20"},"scope":4860,"src":"13159:137:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1356],"body":{"id":4464,"nodeType":"Block","src":"13417:27:20","statements":[{"expression":{"hexValue":"31","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13435:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":4461,"id":4463,"nodeType":"Return","src":"13428:8:20"}]},"functionSelector":"da1a7c9a","id":4465,"implemented":true,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"13313:17:20","nodeType":"FunctionDefinition","overrides":{"id":4458,"nodeType":"OverrideSpecifier","overrides":[],"src":"13391:8:20"},"parameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4465,"src":"13341:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"13341:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13330:46:20"},"returnParameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4465,"src":"13409:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4459,"name":"uint16","nodeType":"ElementaryTypeName","src":"13409:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13408:8:20"},"scope":4860,"src":"13304:140:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1384],"body":{"id":4477,"nodeType":"Block","src":"13622:2:20","statements":[]},"functionSelector":"cbed8b9c","id":4478,"implemented":true,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"13461:9:20","nodeType":"FunctionDefinition","overrides":{"id":4475,"nodeType":"OverrideSpecifier","overrides":[],"src":"13613:8:20"},"parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4478,"src":"13481:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4466,"name":"uint16","nodeType":"ElementaryTypeName","src":"13481:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4478,"src":"13511:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4468,"name":"uint16","nodeType":"ElementaryTypeName","src":"13511:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4478,"src":"13541:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4470,"name":"uint","nodeType":"ElementaryTypeName","src":"13541:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4478,"src":"13572:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4472,"name":"bytes","nodeType":"ElementaryTypeName","src":"13572:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13470:133:20"},"returnParameters":{"id":4476,"nodeType":"ParameterList","parameters":[],"src":"13622:0:20"},"scope":4860,"src":"13452:172:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1389],"body":{"id":4484,"nodeType":"Block","src":"13710:2:20","statements":[]},"functionSelector":"07e0db17","id":4485,"implemented":true,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"13641:14:20","nodeType":"FunctionDefinition","overrides":{"id":4482,"nodeType":"OverrideSpecifier","overrides":[],"src":"13701:8:20"},"parameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4485,"src":"13666:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4479,"name":"uint16","nodeType":"ElementaryTypeName","src":"13666:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13655:36:20"},"returnParameters":{"id":4483,"nodeType":"ParameterList","parameters":[],"src":"13710:0:20"},"scope":4860,"src":"13632:80:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1394],"body":{"id":4491,"nodeType":"Block","src":"13801:2:20","statements":[]},"functionSelector":"10ddb137","id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"13729:17:20","nodeType":"FunctionDefinition","overrides":{"id":4489,"nodeType":"OverrideSpecifier","overrides":[],"src":"13792:8:20"},"parameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4492,"src":"13757:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4486,"name":"uint16","nodeType":"ElementaryTypeName","src":"13757:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13746:36:20"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[],"src":"13801:0:20"},"scope":4860,"src":"13720:83:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1401],"body":{"id":4563,"nodeType":"Block","src":"13899:647:20","statements":[{"assignments":[4502],"declarations":[{"constant":false,"id":4502,"mutability":"mutable","name":"sp","nameLocation":"13932:2:20","nodeType":"VariableDeclaration","scope":4563,"src":"13910:24:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":4501,"nodeType":"UserDefinedTypeName","pathNode":{"id":4500,"name":"StoredPayload","nameLocations":["13910:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"13910:13:20"},"referencedDeclaration":3610,"src":"13910:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":4508,"initialValue":{"baseExpression":{"baseExpression":{"id":4503,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"13937:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":4505,"indexExpression":{"id":4504,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"13951:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13937:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$3610_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":4507,"indexExpression":{"id":4506,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"13964:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13937:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13910:60:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4510,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"14068:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14071:11:20","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"14068:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14094:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14086:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14086:7:20","typeDescriptions":{}}},"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14086:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14068:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f6164","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14098:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""},"value":"LayerZeroMock: no stored payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""}],"id":4509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14060:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14060:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4519,"nodeType":"ExpressionStatement","src":"14060:73:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4521,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"14152:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14155:10:20","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"14152:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14169:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14173:6:20","memberName":"sender","nodeType":"MemberAccess","src":"14169:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14152:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c69642063616c6c6572","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14181:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b","typeString":"literal_string \"LayerZeroMock: invalid caller\""},"value":"LayerZeroMock: invalid caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b","typeString":"literal_string \"LayerZeroMock: invalid caller\""}],"id":4520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14144:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14144:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4528,"nodeType":"ExpressionStatement","src":"14144:69:20"},{"expression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4529,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"14262:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14265:13:20","memberName":"payloadLength","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"14262:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14281:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14262:20:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4534,"nodeType":"ExpressionStatement","src":"14262:20:20"},{"expression":{"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4535,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"14293:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14296:10:20","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"14293:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14317:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14309:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4538,"name":"address","nodeType":"ElementaryTypeName","src":"14309:7:20","typeDescriptions":{}}},"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14309:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14293:26:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4543,"nodeType":"ExpressionStatement","src":"14293:26:20"},{"expression":{"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4544,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"14330:2:20","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$3610_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":4546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14333:11:20","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"14330:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14355:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14347:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14347:7:20","typeDescriptions":{}}},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14347:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14330:27:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4552,"nodeType":"ExpressionStatement","src":"14330:27:20"},{"eventCall":{"arguments":[{"id":4554,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"14396:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4555,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"14409:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4553,"name":"UaForceResumeReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"14375:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14375:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4557,"nodeType":"EmitStatement","src":"14370:45:20"},{"expression":{"arguments":[{"id":4559,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"14519:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4560,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"14532:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4558,"name":"_clearMsgQue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"14506:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (uint16,bytes calldata)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14506:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4562,"nodeType":"ExpressionStatement","src":"14506:32:20"}]},"functionSelector":"42d65a8d","id":4564,"implemented":true,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"13820:18:20","nodeType":"FunctionDefinition","overrides":{"id":4498,"nodeType":"OverrideSpecifier","overrides":[],"src":"13890:8:20"},"parameters":{"id":4497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"_srcChainId","nameLocation":"13846:11:20","nodeType":"VariableDeclaration","scope":4564,"src":"13839:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4493,"name":"uint16","nodeType":"ElementaryTypeName","src":"13839:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4496,"mutability":"mutable","name":"_path","nameLocation":"13874:5:20","nodeType":"VariableDeclaration","scope":4564,"src":"13859:20:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4495,"name":"bytes","nodeType":"ElementaryTypeName","src":"13859:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13838:42:20"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[],"src":"13899:0:20"},"scope":4860,"src":"13811:735:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4571,"nodeType":"Block","src":"14778:40:20","statements":[{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"14789:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14806:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14789:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"ExpressionStatement","src":"14789:21:20"}]},"functionSelector":"d23104f1","id":4572,"implemented":true,"kind":"function","modifiers":[],"name":"blockNextMsg","nameLocation":"14754:12:20","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[],"src":"14766:2:20"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[],"src":"14778:0:20"},"scope":4860,"src":"14745:73:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4585,"nodeType":"Block","src":"14904:62:20","statements":[{"expression":{"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4579,"name":"lzEndpointLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"14915:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4581,"indexExpression":{"id":4580,"name":"destAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"14932:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14915:26:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4582,"name":"lzEndpointAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"14944:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14915:43:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4584,"nodeType":"ExpressionStatement","src":"14915:43:20"}]},"functionSelector":"c08f15a1","id":4586,"implemented":true,"kind":"function","modifiers":[],"name":"setDestLzEndpoint","nameLocation":"14835:17:20","nodeType":"FunctionDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"destAddr","nameLocation":"14861:8:20","nodeType":"VariableDeclaration","scope":4586,"src":"14853:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4573,"name":"address","nodeType":"ElementaryTypeName","src":"14853:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4576,"mutability":"mutable","name":"lzEndpointAddr","nameLocation":"14879:14:20","nodeType":"VariableDeclaration","scope":4586,"src":"14871:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4575,"name":"address","nodeType":"ElementaryTypeName","src":"14871:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14852:42:20"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[],"src":"14904:0:20"},"scope":4860,"src":"14826:140:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4595,"nodeType":"Block","src":"15026:45:20","statements":[{"expression":{"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"callReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"15037:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4592,"name":"_callReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"15051:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15037:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"ExpressionStatement","src":"15037:26:20"}]},"functionSelector":"b2304574","id":4596,"implemented":true,"kind":"function","modifiers":[],"name":"setCallReceive","nameLocation":"14983:14:20","nodeType":"FunctionDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"_callReceive","nameLocation":"15003:12:20","nodeType":"VariableDeclaration","scope":4596,"src":"14998:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4587,"name":"bool","nodeType":"ElementaryTypeName","src":"14998:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14997:19:20"},"returnParameters":{"id":4590,"nodeType":"ParameterList","parameters":[],"src":"15026:0:20"},"scope":4860,"src":"14974:97:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4639,"nodeType":"Block","src":"15279:290:20","statements":[{"expression":{"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4609,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"15290:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15307:13:20","memberName":"dstPriceRatio","nodeType":"MemberAccess","referencedDeclaration":3594,"src":"15290:30:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4612,"name":"_dstPriceRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"15323:14:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15290:47:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4614,"nodeType":"ExpressionStatement","src":"15290:47:20"},{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4615,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"15348:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15365:16:20","memberName":"dstGasPriceInWei","nodeType":"MemberAccess","referencedDeclaration":3596,"src":"15348:33:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4618,"name":"_dstGasPriceInWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"15384:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15348:53:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4620,"nodeType":"ExpressionStatement","src":"15348:53:20"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4621,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"15412:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15429:15:20","memberName":"dstNativeAmtCap","nodeType":"MemberAccess","referencedDeclaration":3598,"src":"15412:32:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4624,"name":"_dstNativeAmtCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"15447:16:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15412:51:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4626,"nodeType":"ExpressionStatement","src":"15412:51:20"},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4627,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"15474:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15491:7:20","memberName":"baseGas","nodeType":"MemberAccess","referencedDeclaration":3600,"src":"15474:24:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4630,"name":"_baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"15501:8:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"15474:35:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4632,"nodeType":"ExpressionStatement","src":"15474:35:20"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4633,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"15520:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15537:10:20","memberName":"gasPerByte","nodeType":"MemberAccess","referencedDeclaration":3602,"src":"15520:27:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4636,"name":"_gasPerByte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"15550:11:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"15520:41:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4638,"nodeType":"ExpressionStatement","src":"15520:41:20"}]},"functionSelector":"2c365e25","id":4640,"implemented":true,"kind":"function","modifiers":[],"name":"setRelayerPrice","nameLocation":"15088:15:20","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"_dstPriceRatio","nameLocation":"15122:14:20","nodeType":"VariableDeclaration","scope":4640,"src":"15114:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4597,"name":"uint128","nodeType":"ElementaryTypeName","src":"15114:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"_dstGasPriceInWei","nameLocation":"15155:17:20","nodeType":"VariableDeclaration","scope":4640,"src":"15147:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4599,"name":"uint128","nodeType":"ElementaryTypeName","src":"15147:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"_dstNativeAmtCap","nameLocation":"15191:16:20","nodeType":"VariableDeclaration","scope":4640,"src":"15183:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4601,"name":"uint128","nodeType":"ElementaryTypeName","src":"15183:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"_baseGas","nameLocation":"15225:8:20","nodeType":"VariableDeclaration","scope":4640,"src":"15218:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4603,"name":"uint64","nodeType":"ElementaryTypeName","src":"15218:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"_gasPerByte","nameLocation":"15251:11:20","nodeType":"VariableDeclaration","scope":4640,"src":"15244:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4605,"name":"uint64","nodeType":"ElementaryTypeName","src":"15244:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15103:166:20"},"returnParameters":{"id":4608,"nodeType":"ParameterList","parameters":[],"src":"15279:0:20"},"scope":4860,"src":"15079:490:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4659,"nodeType":"Block","src":"15640:102:20","statements":[{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4647,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"15651:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":4649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15669:6:20","memberName":"zroFee","nodeType":"MemberAccess","referencedDeclaration":3589,"src":"15651:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4650,"name":"_zroFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"15678:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15651:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4652,"nodeType":"ExpressionStatement","src":"15651:34:20"},{"expression":{"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4653,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"15696:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":4655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15714:8:20","memberName":"nativeBP","nodeType":"MemberAccess","referencedDeclaration":3591,"src":"15696:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4656,"name":"_nativeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"15725:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15696:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4658,"nodeType":"ExpressionStatement","src":"15696:38:20"}]},"functionSelector":"240de277","id":4660,"implemented":true,"kind":"function","modifiers":[],"name":"setProtocolFee","nameLocation":"15586:14:20","nodeType":"FunctionDefinition","parameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"_zroFee","nameLocation":"15606:7:20","nodeType":"VariableDeclaration","scope":4660,"src":"15601:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint","nodeType":"ElementaryTypeName","src":"15601:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4644,"mutability":"mutable","name":"_nativeBP","nameLocation":"15620:9:20","nodeType":"VariableDeclaration","scope":4660,"src":"15615:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint","nodeType":"ElementaryTypeName","src":"15615:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15600:30:20"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[],"src":"15640:0:20"},"scope":4860,"src":"15577:165:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4669,"nodeType":"Block","src":"15798:41:20","statements":[{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"15809:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4666,"name":"_oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"15821:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15809:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"15809:22:20"}]},"functionSelector":"b6d9ef60","id":4670,"implemented":true,"kind":"function","modifiers":[],"name":"setOracleFee","nameLocation":"15759:12:20","nodeType":"FunctionDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"_oracleFee","nameLocation":"15777:10:20","nodeType":"VariableDeclaration","scope":4670,"src":"15772:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint","nodeType":"ElementaryTypeName","src":"15772:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15771:17:20"},"returnParameters":{"id":4664,"nodeType":"ParameterList","parameters":[],"src":"15798:0:20"},"scope":4860,"src":"15750:89:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4679,"nodeType":"Block","src":"15918:56:20","statements":[{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"15929:20:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4676,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"15952:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15929:37:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4678,"nodeType":"ExpressionStatement","src":"15929:37:20"}]},"functionSelector":"fbba623b","id":4680,"implemented":true,"kind":"function","modifiers":[],"name":"setDefaultAdapterParams","nameLocation":"15856:23:20","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"_adapterParams","nameLocation":"15893:14:20","nodeType":"VariableDeclaration","scope":4680,"src":"15880:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4671,"name":"bytes","nodeType":"ElementaryTypeName","src":"15880:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15879:29:20"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[],"src":"15918:0:20"},"scope":4860,"src":"15847:127:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4732,"nodeType":"Block","src":"16236:517:20","statements":[{"assignments":[4691],"declarations":[{"constant":false,"id":4691,"mutability":"mutable","name":"msgs","nameLocation":"16271:4:20","nodeType":"VariableDeclaration","scope":4732,"src":"16247:28:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"},"typeName":{"baseType":{"id":4689,"nodeType":"UserDefinedTypeName","pathNode":{"id":4688,"name":"QueuedPayload","nameLocations":["16247:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"16247:13:20"},"referencedDeclaration":3617,"src":"16247:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"id":4690,"nodeType":"ArrayTypeName","src":"16247:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"}},"visibility":"internal"}],"id":4697,"initialValue":{"baseExpression":{"baseExpression":{"id":4692,"name":"msgsToDeliver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"16278:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref))"}},"id":4694,"indexExpression":{"id":4693,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16292:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16278:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref)"}},"id":4696,"indexExpression":{"id":4695,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"16305:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16278:33:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16247:64:20"},{"body":{"id":4730,"nodeType":"Block","src":"16444:302:20","statements":[{"assignments":[4704],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"payload","nameLocation":"16480:7:20","nodeType":"VariableDeclaration","scope":4730,"src":"16459:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload"},"typeName":{"id":4703,"nodeType":"UserDefinedTypeName","pathNode":{"id":4702,"name":"QueuedPayload","nameLocations":["16459:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"16459:13:20"},"referencedDeclaration":3617,"src":"16459:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"visibility":"internal"}],"id":4711,"initialValue":{"baseExpression":{"id":4705,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"16490:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4710,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4706,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"16495:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16500:6:20","memberName":"length","nodeType":"MemberAccess","src":"16495:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16509:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16495:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16490:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16459:52:20"},{"expression":{"arguments":[{"id":4717,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"16593:11:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4718,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"16623:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":4719,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"16647:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"id":4720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16655:5:20","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3614,"src":"16647:13:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":4721,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"16679:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"id":4722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16687:7:20","memberName":"payload","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"16679:15:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"expression":{"id":4713,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"16545:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$3617_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"id":4714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16553:10:20","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"16545:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4712,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"16526:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroReceiver_$1371_$","typeString":"type(contract ILayerZeroReceiver)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16526:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroReceiver_$1371","typeString":"contract ILayerZeroReceiver"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16565:9:20","memberName":"lzReceive","nodeType":"MemberAccess","referencedDeclaration":1370,"src":"16526:48:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16526:183:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4724,"nodeType":"ExpressionStatement","src":"16526:183:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4725,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"16724:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16729:3:20","memberName":"pop","nodeType":"MemberAccess","src":"16724:8:20","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr_$","typeString":"function (struct LZEndpointMock.QueuedPayload storage ref[] storage pointer)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16724:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4729,"nodeType":"ExpressionStatement","src":"16724:10:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4698,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"16427:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$3617_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16432:6:20","memberName":"length","nodeType":"MemberAccess","src":"16427:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16441:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16427:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"nodeType":"WhileStatement","src":"16420:326:20"}]},"id":4733,"implemented":true,"kind":"function","modifiers":[],"name":"_clearMsgQue","nameLocation":"16172:12:20","nodeType":"FunctionDefinition","parameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"_srcChainId","nameLocation":"16192:11:20","nodeType":"VariableDeclaration","scope":4733,"src":"16185:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4681,"name":"uint16","nodeType":"ElementaryTypeName","src":"16185:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"_path","nameLocation":"16220:5:20","nodeType":"VariableDeclaration","scope":4733,"src":"16205:20:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4683,"name":"bytes","nodeType":"ElementaryTypeName","src":"16205:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16184:42:20"},"returnParameters":{"id":4686,"nodeType":"ParameterList","parameters":[],"src":"16236:0:20"},"scope":4860,"src":"16163:590:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4762,"nodeType":"Block","src":"16901:196:20","statements":[{"condition":{"id":4744,"name":"_payInZro","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"16916:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4760,"nodeType":"Block","src":"16991:99:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"_relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"17015:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4750,"name":"_oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"17029:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17015:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17014:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4753,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"17043:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":4754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17061:8:20","memberName":"nativeBP","nodeType":"MemberAccess","referencedDeclaration":3591,"src":"17043:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17014:55:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17013:57:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17073:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"17013:65:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4743,"id":4759,"nodeType":"Return","src":"17006:72:20"}]},"id":4761,"nodeType":"IfStatement","src":"16912:178:20","trueBody":{"id":4748,"nodeType":"Block","src":"16927:58:20","statements":[{"expression":{"expression":{"id":4745,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"16949:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$3592_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":4746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16967:6:20","memberName":"zroFee","nodeType":"MemberAccess","referencedDeclaration":3589,"src":"16949:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4743,"id":4747,"nodeType":"Return","src":"16942:31:20"}]}}]},"id":4763,"implemented":true,"kind":"function","modifiers":[],"name":"_getProtocolFees","nameLocation":"16770:16:20","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4735,"mutability":"mutable","name":"_payInZro","nameLocation":"16802:9:20","nodeType":"VariableDeclaration","scope":4763,"src":"16797:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4734,"name":"bool","nodeType":"ElementaryTypeName","src":"16797:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4737,"mutability":"mutable","name":"_relayerFee","nameLocation":"16827:11:20","nodeType":"VariableDeclaration","scope":4763,"src":"16822:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint","nodeType":"ElementaryTypeName","src":"16822:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4739,"mutability":"mutable","name":"_oracleFee","nameLocation":"16854:10:20","nodeType":"VariableDeclaration","scope":4763,"src":"16849:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4738,"name":"uint","nodeType":"ElementaryTypeName","src":"16849:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16786:85:20"},"returnParameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"16895:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint","nodeType":"ElementaryTypeName","src":"16895:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16894:6:20"},"scope":4860,"src":"16761:336:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4858,"nodeType":"Block","src":"17349:1215:20","statements":[{"assignments":[4779,4781,4783,null],"declarations":[{"constant":false,"id":4779,"mutability":"mutable","name":"txType","nameLocation":"17368:6:20","nodeType":"VariableDeclaration","scope":4858,"src":"17361:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4778,"name":"uint16","nodeType":"ElementaryTypeName","src":"17361:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4781,"mutability":"mutable","name":"extraGas","nameLocation":"17381:8:20","nodeType":"VariableDeclaration","scope":4858,"src":"17376:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint","nodeType":"ElementaryTypeName","src":"17376:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4783,"mutability":"mutable","name":"dstNativeAmt","nameLocation":"17396:12:20","nodeType":"VariableDeclaration","scope":4858,"src":"17391:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint","nodeType":"ElementaryTypeName","src":"17391:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":4788,"initialValue":{"arguments":[{"id":4786,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"17454:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4784,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"17414:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$1627_$","typeString":"type(library LzLib)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17420:19:20","memberName":"decodeAdapterParams","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"17414:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"function (bytes memory) pure returns (uint16,uint256,uint256,address payable)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17414:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint16,uint256,uint256,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"17360:119:20"},{"assignments":[4790],"declarations":[{"constant":false,"id":4790,"mutability":"mutable","name":"totalRemoteToken","nameLocation":"17495:16:20","nodeType":"VariableDeclaration","scope":4858,"src":"17490:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint","nodeType":"ElementaryTypeName","src":"17490:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4791,"nodeType":"VariableDeclarationStatement","src":"17490:21:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"17573:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17583:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17573:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4808,"nodeType":"IfStatement","src":"17569:239:20","trueBody":{"id":4807,"nodeType":"Block","src":"17586:222:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4796,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"17627:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17644:15:20","memberName":"dstNativeAmtCap","nodeType":"MemberAccess","referencedDeclaration":3598,"src":"17627:32:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4798,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"17663:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17627:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206473744e6174697665416d7420746f6f206c6172676520","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17694:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206","typeString":"literal_string \"LayerZeroMock: dstNativeAmt too large \""},"value":"LayerZeroMock: dstNativeAmt too large "}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206","typeString":"literal_string \"LayerZeroMock: dstNativeAmt too large \""}],"id":4795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17601:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17601:148:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4802,"nodeType":"ExpressionStatement","src":"17601:148:20"},{"expression":{"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"totalRemoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"17764:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4804,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"17784:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17764:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4806,"nodeType":"ExpressionStatement","src":"17764:32:20"}]}},{"assignments":[4810],"declarations":[{"constant":false,"id":4810,"mutability":"mutable","name":"remoteGasTotal","nameLocation":"17892:14:20","nodeType":"VariableDeclaration","scope":4858,"src":"17887:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint","nodeType":"ElementaryTypeName","src":"17887:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4819,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4811,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"17909:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17926:16:20","memberName":"dstGasPriceInWei","nodeType":"MemberAccess","referencedDeclaration":3596,"src":"17909:33:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4813,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"17959:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17976:7:20","memberName":"baseGas","nodeType":"MemberAccess","referencedDeclaration":3600,"src":"17959:24:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4815,"name":"extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"17986:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17959:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17958:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17909:86:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17887:108:20"},{"expression":{"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4820,"name":"totalRemoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"18006:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4821,"name":"remoteGasTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"18026:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18006:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4823,"nodeType":"ExpressionStatement","src":"18006:34:20"},{"assignments":[4825],"declarations":[{"constant":false,"id":4825,"mutability":"mutable","name":"basePrice","nameLocation":"18177:9:20","nodeType":"VariableDeclaration","scope":4858,"src":"18172:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint","nodeType":"ElementaryTypeName","src":"18172:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4835,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"totalRemoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"18190:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4827,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"18209:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18226:13:20","memberName":"dstPriceRatio","nodeType":"MemberAccess","referencedDeclaration":3594,"src":"18209:30:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"18190:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18189:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":4833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18243:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18247:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"18243:6:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"src":"18189:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18172:77:20"},{"assignments":[4837],"declarations":[{"constant":false,"id":4837,"mutability":"mutable","name":"pricePerByte","nameLocation":"18349:12:20","nodeType":"VariableDeclaration","scope":4858,"src":"18344:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint","nodeType":"ElementaryTypeName","src":"18344:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4851,"initialValue":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4838,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"18365:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18382:16:20","memberName":"dstGasPriceInWei","nodeType":"MemberAccess","referencedDeclaration":3596,"src":"18365:33:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4840,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"18414:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18431:10:20","memberName":"gasPerByte","nodeType":"MemberAccess","referencedDeclaration":3602,"src":"18414:27:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"18365:76:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4843,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"18457:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$3603_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":4844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18474:13:20","memberName":"dstPriceRatio","nodeType":"MemberAccess","referencedDeclaration":3594,"src":"18457:30:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"18365:122:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":4846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18364:124:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18491:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18495:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"18491:6:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"src":"18364:133:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"18344:153:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"18517:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"_payloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"18529:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4854,"name":"pricePerByte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"18544:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18529:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18517:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4777,"id":4857,"nodeType":"Return","src":"18510:46:20"}]},"id":4859,"implemented":true,"kind":"function","modifiers":[],"name":"_getRelayerFee","nameLocation":"17114:14:20","nodeType":"FunctionDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4859,"src":"17139:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4764,"name":"uint16","nodeType":"ElementaryTypeName","src":"17139:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4859,"src":"17174:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4766,"name":"uint16","nodeType":"ElementaryTypeName","src":"17174:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4859,"src":"17216:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4768,"name":"address","nodeType":"ElementaryTypeName","src":"17216:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4771,"mutability":"mutable","name":"_payloadSize","nameLocation":"17262:12:20","nodeType":"VariableDeclaration","scope":4859,"src":"17257:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint","nodeType":"ElementaryTypeName","src":"17257:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4773,"mutability":"mutable","name":"_adapterParams","nameLocation":"17298:14:20","nodeType":"VariableDeclaration","scope":4859,"src":"17285:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4772,"name":"bytes","nodeType":"ElementaryTypeName","src":"17285:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17128:191:20"},"returnParameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4859,"src":"17343:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint","nodeType":"ElementaryTypeName","src":"17343:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17342:6:20"},"scope":4860,"src":"17105:1459:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4861,"src":"948:17619:20","usedErrors":[],"usedEvents":[3661,3671,3685,3691,3695]}],"src":"40:18529:20"},"id":20},"contracts/mocks/Token.sol":{"ast":{"absolutePath":"contracts/mocks/Token.sol","exportedSymbols":{"Context":[3259],"ERC20":[2392],"IERC20":[2470],"IERC20Metadata":[2495],"Token":[4918]},"id":4919,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":4862,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"40:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4863,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4919,"sourceUnit":2393,"src":"68:55:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4864,"name":"ERC20","nameLocations":["145:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":2392,"src":"145:5:21"},"id":4865,"nodeType":"InheritanceSpecifier","src":"145:5:21"}],"canonicalName":"Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4918,"linearizedBaseContracts":[4918,2392,2495,2470,3259],"name":"Token","nameLocation":"136:5:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4867,"mutability":"mutable","name":"DECIMALS","nameLocation":"164:8:21","nodeType":"VariableDeclaration","scope":4918,"src":"158:14:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4866,"name":"uint8","nodeType":"ElementaryTypeName","src":"158:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"body":{"id":4894,"nodeType":"Block","src":"310:89:21","statements":[{"expression":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4880,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"321:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4881,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"332:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"321:20:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4883,"nodeType":"ExpressionStatement","src":"321:20:21"},{"expression":{"arguments":[{"expression":{"id":4885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"358:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"362:6:21","memberName":"sender","nodeType":"MemberAccess","src":"358:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"370:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"378:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4889,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"382:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"378:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"370:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4884,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"352:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"352:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4893,"nodeType":"ExpressionStatement","src":"352:39:21"}]},"id":4895,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4876,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"294:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4877,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"301:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4878,"kind":"baseConstructorSpecifier","modifierName":{"id":4875,"name":"ERC20","nameLocations":["288:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":2392,"src":"288:5:21"},"nodeType":"ModifierInvocation","src":"288:21:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"_name","nameLocation":"217:5:21","nodeType":"VariableDeclaration","scope":4895,"src":"203:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4868,"name":"string","nodeType":"ElementaryTypeName","src":"203:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"_symbol","nameLocation":"247:7:21","nodeType":"VariableDeclaration","scope":4895,"src":"233:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4870,"name":"string","nodeType":"ElementaryTypeName","src":"233:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"_decimals","nameLocation":"271:9:21","nodeType":"VariableDeclaration","scope":4895,"src":"265:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4872,"name":"uint8","nodeType":"ElementaryTypeName","src":"265:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"192:95:21"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[],"src":"310:0:21"},"scope":4918,"src":"181:218:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4907,"nodeType":"Block","src":"460:43:21","statements":[{"expression":{"arguments":[{"id":4903,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"477:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4904,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"487:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4902,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"471:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"471:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4906,"nodeType":"ExpressionStatement","src":"471:24:21"}]},"functionSelector":"40c10f19","id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"416:4:21","nodeType":"FunctionDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"_account","nameLocation":"429:8:21","nodeType":"VariableDeclaration","scope":4908,"src":"421:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4896,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"_amount","nameLocation":"444:7:21","nodeType":"VariableDeclaration","scope":4908,"src":"439:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint","nodeType":"ElementaryTypeName","src":"439:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"420:32:21"},"returnParameters":{"id":4901,"nodeType":"ParameterList","parameters":[],"src":"460:0:21"},"scope":4918,"src":"407:96:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1880],"body":{"id":4916,"nodeType":"Block","src":"568:34:21","statements":[{"expression":{"id":4914,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"586:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4913,"id":4915,"nodeType":"Return","src":"579:15:21"}]},"functionSelector":"313ce567","id":4917,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"520:8:21","nodeType":"FunctionDefinition","overrides":{"id":4910,"nodeType":"OverrideSpecifier","overrides":[],"src":"543:8:21"},"parameters":{"id":4909,"nodeType":"ParameterList","parameters":[],"src":"528:2:21"},"returnParameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4917,"src":"561:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4911,"name":"uint8","nodeType":"ElementaryTypeName","src":"561:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"560:7:21"},"scope":4918,"src":"511:91:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4919,"src":"127:478:21","usedErrors":[],"usedEvents":[2404,2413]}],"src":"40:567:21"},"id":21},"contracts/mocks/WETH.sol":{"ast":{"absolutePath":"contracts/mocks/WETH.sol","exportedSymbols":{"WETH":[5167]},"id":5168,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":4920,"literals":["solidity",">=","0.4",".22"],"nodeType":"PragmaDirective","src":"40:25:22"},{"abstract":false,"baseContracts":[],"canonicalName":"WETH","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5167,"linearizedBaseContracts":[5167],"name":"WETH","nameLocation":"78:4:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":4923,"mutability":"mutable","name":"name","nameLocation":"104:4:22","nodeType":"VariableDeclaration","scope":5167,"src":"90:36:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4921,"name":"string","nodeType":"ElementaryTypeName","src":"90:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"57726170706564204574686572","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"111:15:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3","typeString":"literal_string \"Wrapped Ether\""},"value":"Wrapped Ether"},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":4926,"mutability":"mutable","name":"symbol","nameLocation":"147:6:22","nodeType":"VariableDeclaration","scope":5167,"src":"133:29:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4924,"name":"string","nodeType":"ElementaryTypeName","src":"133:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"57455448","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"156:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","typeString":"literal_string \"WETH\""},"value":"WETH"},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":4929,"mutability":"mutable","name":"decimals","nameLocation":"182:8:22","nodeType":"VariableDeclaration","scope":5167,"src":"169:26:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4927,"name":"uint8","nodeType":"ElementaryTypeName","src":"169:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193:2:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":4937,"name":"Approval","nameLocation":"210:8:22","nodeType":"EventDefinition","parameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"235:3:22","nodeType":"VariableDeclaration","scope":4937,"src":"219:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4930,"name":"address","nodeType":"ElementaryTypeName","src":"219:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4933,"indexed":true,"mutability":"mutable","name":"guy","nameLocation":"256:3:22","nodeType":"VariableDeclaration","scope":4937,"src":"240:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4932,"name":"address","nodeType":"ElementaryTypeName","src":"240:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4935,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"266:3:22","nodeType":"VariableDeclaration","scope":4937,"src":"261:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint","nodeType":"ElementaryTypeName","src":"261:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"218:52:22"},"src":"204:67:22"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":4945,"name":"Transfer","nameLocation":"283:8:22","nodeType":"EventDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"308:3:22","nodeType":"VariableDeclaration","scope":4945,"src":"292:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4938,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4941,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"329:3:22","nodeType":"VariableDeclaration","scope":4945,"src":"313:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4940,"name":"address","nodeType":"ElementaryTypeName","src":"313:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4943,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"339:3:22","nodeType":"VariableDeclaration","scope":4945,"src":"334:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint","nodeType":"ElementaryTypeName","src":"334:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"291:52:22"},"src":"277:67:22"},{"anonymous":false,"eventSelector":"e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c","id":4951,"name":"Deposit","nameLocation":"356:7:22","nodeType":"EventDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"indexed":true,"mutability":"mutable","name":"dst","nameLocation":"380:3:22","nodeType":"VariableDeclaration","scope":4951,"src":"364:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4946,"name":"address","nodeType":"ElementaryTypeName","src":"364:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4949,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"390:3:22","nodeType":"VariableDeclaration","scope":4951,"src":"385:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint","nodeType":"ElementaryTypeName","src":"385:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"363:31:22"},"src":"350:45:22"},{"anonymous":false,"eventSelector":"7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65","id":4957,"name":"Withdrawal","nameLocation":"407:10:22","nodeType":"EventDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"indexed":true,"mutability":"mutable","name":"src","nameLocation":"434:3:22","nodeType":"VariableDeclaration","scope":4957,"src":"418:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4952,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4955,"indexed":false,"mutability":"mutable","name":"wad","nameLocation":"444:3:22","nodeType":"VariableDeclaration","scope":4957,"src":"439:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint","nodeType":"ElementaryTypeName","src":"439:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"417:31:22"},"src":"401:48:22"},{"constant":false,"functionSelector":"70a08231","id":4961,"mutability":"mutable","name":"balanceOf","nameLocation":"489:9:22","nodeType":"VariableDeclaration","scope":5167,"src":"457:41:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4960,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"465:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"457:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4959,"name":"uint","nodeType":"ElementaryTypeName","src":"476:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":4967,"mutability":"mutable","name":"allowance","nameLocation":"557:9:22","nodeType":"VariableDeclaration","scope":5167,"src":"505:61:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":4966,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4962,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"505:44:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4965,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4963,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"524:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4964,"name":"uint","nodeType":"ElementaryTypeName","src":"543:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":4973,"nodeType":"Block","src":"602:28:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4970,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"613:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:9:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4972,"nodeType":"ExpressionStatement","src":"613:9:22"}]},"id":4974,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4968,"nodeType":"ParameterList","parameters":[],"src":"582:2:22"},"returnParameters":{"id":4969,"nodeType":"ParameterList","parameters":[],"src":"602:0:22"},"scope":5167,"src":"575:55:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4992,"nodeType":"Block","src":"672:99:22","statements":[{"expression":{"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4977,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"683:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4980,"indexExpression":{"expression":{"id":4978,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"693:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"697:6:22","memberName":"sender","nodeType":"MemberAccess","src":"693:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"683:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"708:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"712:5:22","memberName":"value","nodeType":"MemberAccess","src":"708:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:34:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4984,"nodeType":"ExpressionStatement","src":"683:34:22"},{"eventCall":{"arguments":[{"expression":{"id":4986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"741:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"745:6:22","memberName":"sender","nodeType":"MemberAccess","src":"741:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4988,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"753:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"757:5:22","memberName":"value","nodeType":"MemberAccess","src":"753:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4985,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"733:7:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"733:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4991,"nodeType":"EmitStatement","src":"728:35:22"}]},"functionSelector":"d0e30db0","id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"647:7:22","nodeType":"FunctionDefinition","parameters":{"id":4975,"nodeType":"ParameterList","parameters":[],"src":"654:2:22"},"returnParameters":{"id":4976,"nodeType":"ParameterList","parameters":[],"src":"672:0:22"},"scope":5167,"src":"638:133:22","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":5029,"nodeType":"Block","src":"814:182:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4999,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"833:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5002,"indexExpression":{"expression":{"id":5000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"843:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"847:6:22","memberName":"sender","nodeType":"MemberAccess","src":"843:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"833:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5003,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"858:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"833:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"825:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"825:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5006,"nodeType":"ExpressionStatement","src":"825:37:22"},{"expression":{"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5007,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"873:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5010,"indexExpression":{"expression":{"id":5008,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"883:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"887:6:22","memberName":"sender","nodeType":"MemberAccess","src":"883:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"873:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5011,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"898:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"873:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5013,"nodeType":"ExpressionStatement","src":"873:28:22"},{"expression":{"arguments":[{"id":5020,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"941:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"920:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"924:6:22","memberName":"sender","nodeType":"MemberAccess","src":"920:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"912:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5014,"name":"address","nodeType":"ElementaryTypeName","src":"912:8:22","stateMutability":"payable","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"932:8:22","memberName":"transfer","nodeType":"MemberAccess","src":"912:28:22","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5022,"nodeType":"ExpressionStatement","src":"912:33:22"},{"eventCall":{"arguments":[{"expression":{"id":5024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"972:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"976:6:22","memberName":"sender","nodeType":"MemberAccess","src":"972:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5026,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"984:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5023,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"961:10:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"961:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5028,"nodeType":"EmitStatement","src":"956:32:22"}]},"functionSelector":"2e1a7d4d","id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"788:8:22","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"wad","nameLocation":"802:3:22","nodeType":"VariableDeclaration","scope":5030,"src":"797:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint","nodeType":"ElementaryTypeName","src":"797:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"796:10:22"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[],"src":"814:0:22"},"scope":5167,"src":"779:217:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5041,"nodeType":"Block","src":"1054:47:22","statements":[{"expression":{"expression":{"arguments":[{"id":5037,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1080:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_WETH_$5167","typeString":"contract WETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH_$5167","typeString":"contract WETH"}],"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1072:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5035,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:22","typeDescriptions":{}}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1072:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1086:7:22","memberName":"balance","nodeType":"MemberAccess","src":"1072:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5034,"id":5040,"nodeType":"Return","src":"1065:28:22"}]},"functionSelector":"18160ddd","id":5042,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1013:11:22","nodeType":"FunctionDefinition","parameters":{"id":5031,"nodeType":"ParameterList","parameters":[],"src":"1024:2:22"},"returnParameters":{"id":5034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5042,"src":"1048:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5032,"name":"uint","nodeType":"ElementaryTypeName","src":"1048:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1047:6:22"},"scope":5167,"src":"1004:97:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5069,"nodeType":"Block","src":"1171:119:22","statements":[{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5051,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"1182:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5055,"indexExpression":{"expression":{"id":5052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1192:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1196:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1192:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1182:21:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5056,"indexExpression":{"id":5054,"name":"guy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1204:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1182:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5057,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"1211:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1182:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5059,"nodeType":"ExpressionStatement","src":"1182:32:22"},{"eventCall":{"arguments":[{"expression":{"id":5061,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1239:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1243:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1239:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5063,"name":"guy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1251:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5064,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"1256:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5060,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"1230:8:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5066,"nodeType":"EmitStatement","src":"1225:35:22"},{"expression":{"hexValue":"74727565","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1278:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5050,"id":5068,"nodeType":"Return","src":"1271:11:22"}]},"functionSelector":"095ea7b3","id":5070,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1118:7:22","nodeType":"FunctionDefinition","parameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"guy","nameLocation":"1134:3:22","nodeType":"VariableDeclaration","scope":5070,"src":"1126:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5043,"name":"address","nodeType":"ElementaryTypeName","src":"1126:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5046,"mutability":"mutable","name":"wad","nameLocation":"1144:3:22","nodeType":"VariableDeclaration","scope":5070,"src":"1139:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint","nodeType":"ElementaryTypeName","src":"1139:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1125:23:22"},"returnParameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5070,"src":"1165:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5048,"name":"bool","nodeType":"ElementaryTypeName","src":"1165:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1164:6:22"},"scope":5167,"src":"1109:181:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5086,"nodeType":"Block","src":"1361:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1392:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1392:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5082,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"1404:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5083,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"1409:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5079,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"1379:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1379:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5078,"id":5085,"nodeType":"Return","src":"1372:41:22"}]},"functionSelector":"a9059cbb","id":5087,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1307:8:22","nodeType":"FunctionDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"dst","nameLocation":"1324:3:22","nodeType":"VariableDeclaration","scope":5087,"src":"1316:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5071,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5074,"mutability":"mutable","name":"wad","nameLocation":"1334:3:22","nodeType":"VariableDeclaration","scope":5087,"src":"1329:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint","nodeType":"ElementaryTypeName","src":"1329:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1315:23:22"},"returnParameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5087,"src":"1355:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5076,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1354:6:22"},"scope":5167,"src":"1298:123:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5165,"nodeType":"Block","src":"1543:380:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5099,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"1562:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5101,"indexExpression":{"id":5100,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"1572:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1562:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5102,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1580:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1562:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1554:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5105,"nodeType":"ExpressionStatement","src":"1554:30:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5106,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"1601:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1608:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1608:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1601:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5110,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"1622:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5112,"indexExpression":{"id":5111,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"1632:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1622:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5115,"indexExpression":{"expression":{"id":5113,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1637:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1641:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1637:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1622:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1657:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5117,"name":"uint","nodeType":"ElementaryTypeName","src":"1657:4:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1652:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1652:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1663:3:22","memberName":"max","nodeType":"MemberAccess","src":"1652:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1622:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1601:65:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5144,"nodeType":"IfStatement","src":"1597:188:22","trueBody":{"id":5143,"nodeType":"Block","src":"1668:117:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5124,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"1691:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5126,"indexExpression":{"id":5125,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"1701:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1691:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5129,"indexExpression":{"expression":{"id":5127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1706:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1706:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1691:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5130,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1721:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1691:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1683:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5133,"nodeType":"ExpressionStatement","src":"1683:42:22"},{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5134,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"1740:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5138,"indexExpression":{"id":5135,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"1750:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1740:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5139,"indexExpression":{"expression":{"id":5136,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1755:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1759:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1755:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1740:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5140,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1770:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1740:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5142,"nodeType":"ExpressionStatement","src":"1740:33:22"}]}},{"expression":{"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5145,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"1797:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5147,"indexExpression":{"id":5146,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"1807:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1797:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5148,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1815:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1797:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5150,"nodeType":"ExpressionStatement","src":"1797:21:22"},{"expression":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5151,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"1829:9:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5153,"indexExpression":{"id":5152,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"1839:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1829:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5154,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1847:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1829:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5156,"nodeType":"ExpressionStatement","src":"1829:21:22"},{"eventCall":{"arguments":[{"id":5158,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"1877:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5159,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"1882:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5160,"name":"wad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1887:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5157,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"1868:8:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1868:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"EmitStatement","src":"1863:28:22"},{"expression":{"hexValue":"74727565","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1911:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5097,"id":5164,"nodeType":"Return","src":"1904:11:22"}]},"functionSelector":"23b872dd","id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1438:12:22","nodeType":"FunctionDefinition","parameters":{"id":5094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"src","nameLocation":"1469:3:22","nodeType":"VariableDeclaration","scope":5166,"src":"1461:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5088,"name":"address","nodeType":"ElementaryTypeName","src":"1461:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5091,"mutability":"mutable","name":"dst","nameLocation":"1491:3:22","nodeType":"VariableDeclaration","scope":5166,"src":"1483:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5090,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5093,"mutability":"mutable","name":"wad","nameLocation":"1510:3:22","nodeType":"VariableDeclaration","scope":5166,"src":"1505:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5092,"name":"uint","nodeType":"ElementaryTypeName","src":"1505:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1450:70:22"},"returnParameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5166,"src":"1537:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5095,"name":"bool","nodeType":"ElementaryTypeName","src":"1537:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1536:6:22"},"scope":5167,"src":"1429:494:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5168,"src":"69:1857:22","usedErrors":[],"usedEvents":[4937,4945,4951,4957]}],"src":"40:1888:22"},"id":22}},"contracts":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"BytesLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056c201d6e7c64f58cb892cff748f9c882ccbe4ae7a340084608d8b9b383247a664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xC2 ADD 0xD6 0xE7 0xC6 0x4F PC 0xCB DUP10 0x2C SELFDESTRUCT PUSH21 0x8F9C882CCBE4AE7A340084608D8B9B383247A66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"369:18622:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:18622:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056c201d6e7c64f58cb892cff748f9c882ccbe4ae7a340084608d8b9b383247a664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xC2 ADD 0xD6 0xE7 0xC6 0x4F PC 0xCB DUP10 0x2C SELFDESTRUCT PUSH21 0x8F9C882CCBE4AE7A340084608D8B9B383247A66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"369:18622:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"concat(bytes memory,bytes memory)":"infinite","concatStorage(bytes storage pointer,bytes memory)":"infinite","equal(bytes memory,bytes memory)":"infinite","equalStorage(bytes storage pointer,bytes memory)":"infinite","slice(bytes memory,uint256,uint256)":"infinite","toAddress(bytes memory,uint256)":"infinite","toBytes32(bytes memory,uint256)":"infinite","toUint128(bytes memory,uint256)":"infinite","toUint16(bytes memory,uint256)":"infinite","toUint256(bytes memory,uint256)":"infinite","toUint32(bytes memory,uint256)":"infinite","toUint64(bytes memory,uint256)":"infinite","toUint8(bytes memory,uint256)":"infinite","toUint96(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"ExcessivelySafeCall":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e0ab3faf0df83634bd2d1284c4ecb7378fe5071efb30d7e49968525146f6c3b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXP 0xB3 STATICCALL CREATE 0xDF DUP4 PUSH4 0x4BD2D128 0x4C 0x4E 0xCB PUSH20 0x78FE5071EFB30D7E49968525146F6C3B64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"72:5387:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:5387:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e0ab3faf0df83634bd2d1284c4ecb7378fe5071efb30d7e49968525146f6c3b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXP 0xB3 STATICCALL CREATE 0xDF DUP4 PUSH4 0x4BD2D128 0x4C 0x4E 0xCB PUSH20 0x78FE5071EFB30D7E49968525146F6C3B64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"72:5387:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"excessivelySafeCall(address,uint256,uint16,bytes memory)":"infinite","excessivelySafeStaticCall(address,uint256,uint16,bytes memory)":"infinite","swapSelector(bytes4,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"LzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":\"LzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"NonblockingLzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":\"NonblockingLzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\n            gasleft(),\\n            150,\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\n        );\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload,\\n        bytes memory _reason\\n    ) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function retryMessage(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x612ff1f2a158b7e64e873885b5ff08afa348998fd9005f384d555d643ba7968d\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":997,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ILayerZeroEndpoint":{"abi":[{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParam","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_destination","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParam\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":\"ILayerZeroEndpoint\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzReceive(uint16,bytes,uint64,bytes)":"001d3567"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ILayerZeroUserApplicationConfig":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"forceResumeReceive(uint16,bytes)":"42d65a8d","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":\"ILayerZeroUserApplicationConfig\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol":{"LzLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e82702f565c76f6bd27c95d14289994a9203e504218ed691b33365dfaf36e864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE82702F565C76F6BD27C95D14289994A9203E504218ED691B3 CALLER PUSH6 0xDFAF36E86473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"98:3167:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;98:3167:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122078e82702f565c76f6bd27c95d14289994a9203e504218ed691b33365dfaf36e864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xE82702F565C76F6BD27C95D14289994A9203E504218ED691B3 CALLER PUSH6 0xDFAF36E86473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"98:3167:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"addressToBytes32(address)":"infinite","buildAdapterParams(struct LzLib.AirdropParams memory,uint256)":"infinite","buildAirdropAdapterParams(uint256,struct LzLib.AirdropParams memory)":"infinite","buildDefaultAdapterParams(uint256)":"infinite","bytes32ToAddress(bytes32)":"infinite","decodeAdapterParams(bytes memory)":"infinite","getGasLimit(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":\"LzLib\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1751,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1850":{"entryPoint":null,"id":1850,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:23"},"nodeType":"YulFunctionCall","src":"66:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:23"},"nodeType":"YulFunctionCall","src":"56:31:23"},"nodeType":"YulExpressionStatement","src":"56:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:23"},"nodeType":"YulFunctionCall","src":"96:15:23"},"nodeType":"YulExpressionStatement","src":"96:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:23"},"nodeType":"YulFunctionCall","src":"120:15:23"},"nodeType":"YulExpressionStatement","src":"120:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:23"},{"body":{"nodeType":"YulBlock","src":"210:776:23","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:23"},"nodeType":"YulFunctionCall","src":"261:12:23"},"nodeType":"YulExpressionStatement","src":"261:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:23"},"nodeType":"YulFunctionCall","src":"234:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:23"},"nodeType":"YulFunctionCall","src":"230:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:23"},"nodeType":"YulFunctionCall","src":"223:35:23"},"nodeType":"YulIf","src":"220:55:23"},{"nodeType":"YulVariableDeclaration","src":"284:23:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:23"},"nodeType":"YulFunctionCall","src":"294:13:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:23"},"nodeType":"YulFunctionCall","src":"330:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:23"},"nodeType":"YulFunctionCall","src":"326:18:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:23"},"nodeType":"YulFunctionCall","src":"369:18:23"},"nodeType":"YulExpressionStatement","src":"369:18:23"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:23"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:23"},"nodeType":"YulFunctionCall","src":"356:10:23"},"nodeType":"YulIf","src":"353:36:23"},{"nodeType":"YulVariableDeclaration","src":"398:17:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:23"},"nodeType":"YulFunctionCall","src":"408:7:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:23"},"nodeType":"YulFunctionCall","src":"438:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:23"},"nodeType":"YulFunctionCall","src":"498:13:23"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:23"},"nodeType":"YulFunctionCall","src":"494:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:23","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:23"},"nodeType":"YulFunctionCall","src":"490:31:23"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:23"},"nodeType":"YulFunctionCall","src":"486:40:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:23"},"nodeType":"YulFunctionCall","src":"474:53:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:23"},"nodeType":"YulFunctionCall","src":"588:18:23"},"nodeType":"YulExpressionStatement","src":"588:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:23"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:23"},"nodeType":"YulFunctionCall","src":"542:18:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:23"},"nodeType":"YulFunctionCall","src":"562:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:23"},"nodeType":"YulFunctionCall","src":"539:46:23"},"nodeType":"YulIf","src":"536:72:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:23"},"nodeType":"YulFunctionCall","src":"617:22:23"},"nodeType":"YulExpressionStatement","src":"617:22:23"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:23"},"nodeType":"YulFunctionCall","src":"648:18:23"},"nodeType":"YulExpressionStatement","src":"648:18:23"},{"nodeType":"YulVariableDeclaration","src":"675:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:23","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:23"},"nodeType":"YulFunctionCall","src":"737:12:23"},"nodeType":"YulExpressionStatement","src":"737:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:23"},"nodeType":"YulFunctionCall","src":"708:15:23"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:23"},"nodeType":"YulFunctionCall","src":"704:24:23"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:23"},"nodeType":"YulFunctionCall","src":"701:33:23"},"nodeType":"YulIf","src":"698:53:23"},{"nodeType":"YulVariableDeclaration","src":"760:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:23"},"nodeType":"YulFunctionCall","src":"850:14:23"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:23"},"nodeType":"YulFunctionCall","src":"846:23:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:23"},"nodeType":"YulFunctionCall","src":"881:14:23"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:23"},"nodeType":"YulFunctionCall","src":"877:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:23"},"nodeType":"YulFunctionCall","src":"871:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:23"},"nodeType":"YulFunctionCall","src":"839:63:23"},"nodeType":"YulExpressionStatement","src":"839:63:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:23"},"nodeType":"YulFunctionCall","src":"787:9:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:23","statements":[{"nodeType":"YulAssignment","src":"799:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:23"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:23"},"nodeType":"YulFunctionCall","src":"804:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:23","statements":[]},"src":"779:133:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:23"},"nodeType":"YulFunctionCall","src":"932:15:23"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:23"},"nodeType":"YulFunctionCall","src":"928:24:23"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:23"},"nodeType":"YulFunctionCall","src":"921:35:23"},"nodeType":"YulExpressionStatement","src":"921:35:23"},{"nodeType":"YulAssignment","src":"965:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:23"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:23","type":""}],"src":"146:840:23"},{"body":{"nodeType":"YulBlock","src":"1109:444:23","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:23"},"nodeType":"YulFunctionCall","src":"1157:12:23"},"nodeType":"YulExpressionStatement","src":"1157:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:23"},"nodeType":"YulFunctionCall","src":"1126:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:23"},"nodeType":"YulFunctionCall","src":"1122:32:23"},"nodeType":"YulIf","src":"1119:52:23"},{"nodeType":"YulVariableDeclaration","src":"1180:30:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:23"},"nodeType":"YulFunctionCall","src":"1194:16:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:23"},"nodeType":"YulFunctionCall","src":"1233:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:23"},"nodeType":"YulFunctionCall","src":"1229:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:23"},"nodeType":"YulFunctionCall","src":"1276:12:23"},"nodeType":"YulExpressionStatement","src":"1276:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:23"},"nodeType":"YulFunctionCall","src":"1259:14:23"},"nodeType":"YulIf","src":"1256:34:23"},{"nodeType":"YulAssignment","src":"1299:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:23"},"nodeType":"YulFunctionCall","src":"1338:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:23"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:23"},"nodeType":"YulFunctionCall","src":"1309:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:23"},"nodeType":"YulFunctionCall","src":"1401:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:23"},"nodeType":"YulFunctionCall","src":"1395:25:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:23"},"nodeType":"YulFunctionCall","src":"1451:12:23"},"nodeType":"YulExpressionStatement","src":"1451:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:23"},"nodeType":"YulFunctionCall","src":"1432:16:23"},"nodeType":"YulIf","src":"1429:36:23"},{"nodeType":"YulAssignment","src":"1474:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:23"},"nodeType":"YulFunctionCall","src":"1513:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:23"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:23"},"nodeType":"YulFunctionCall","src":"1484:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:23","type":""}],"src":"991:562:23"},{"body":{"nodeType":"YulBlock","src":"1613:325:23","statements":[{"nodeType":"YulAssignment","src":"1623:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:23"},"nodeType":"YulFunctionCall","src":"1633:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:23"},"nodeType":"YulFunctionCall","src":"1680:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:23","statements":[{"nodeType":"YulAssignment","src":"1733:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:23"},"nodeType":"YulFunctionCall","src":"1743:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:23"},"nodeType":"YulFunctionCall","src":"1704:26:23"},"nodeType":"YulIf","src":"1701:61:23"},{"body":{"nodeType":"YulBlock","src":"1821:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:23"},"nodeType":"YulFunctionCall","src":"1845:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:23"},"nodeType":"YulFunctionCall","src":"1835:31:23"},"nodeType":"YulExpressionStatement","src":"1835:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:23"},"nodeType":"YulFunctionCall","src":"1879:15:23"},"nodeType":"YulExpressionStatement","src":"1879:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:23"},"nodeType":"YulFunctionCall","src":"1907:15:23"},"nodeType":"YulExpressionStatement","src":"1907:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:23"},"nodeType":"YulFunctionCall","src":"1797:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:23"},"nodeType":"YulFunctionCall","src":"1774:38:23"},"nodeType":"YulIf","src":"1771:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:23","type":""}],"src":"1558:380:23"},{"body":{"nodeType":"YulBlock","src":"1999:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:23"},"nodeType":"YulFunctionCall","src":"2009:14:23"},"nodeType":"YulExpressionStatement","src":"2009:14:23"},{"nodeType":"YulAssignment","src":"2032:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:23"},"nodeType":"YulFunctionCall","src":"2040:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:23"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:23","type":""}],"src":"1943:121:23"},{"body":{"nodeType":"YulBlock","src":"2150:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:23"},"nodeType":"YulFunctionCall","src":"2221:17:23"},"nodeType":"YulExpressionStatement","src":"2221:17:23"},{"nodeType":"YulVariableDeclaration","src":"2251:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:23"},"nodeType":"YulFunctionCall","src":"2263:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:23"},"nodeType":"YulFunctionCall","src":"2331:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:23"},"nodeType":"YulFunctionCall","src":"2324:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:23"},"nodeType":"YulFunctionCall","src":"2314:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:23","statements":[{"nodeType":"YulAssignment","src":"2391:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:23"},"nodeType":"YulFunctionCall","src":"2368:20:23"},"nodeType":"YulIf","src":"2365:47:23"},{"nodeType":"YulVariableDeclaration","src":"2425:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:23"},"nodeType":"YulFunctionCall","src":"2452:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:23"},"nodeType":"YulFunctionCall","src":"2445:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:23"},"nodeType":"YulFunctionCall","src":"2435:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:23"},"nodeType":"YulFunctionCall","src":"2579:17:23"},"nodeType":"YulExpressionStatement","src":"2579:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:23"},"nodeType":"YulFunctionCall","src":"2524:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:23","statements":[{"nodeType":"YulAssignment","src":"2540:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:23"},"nodeType":"YulFunctionCall","src":"2549:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:23","statements":[]},"src":"2516:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:23"},"nodeType":"YulFunctionCall","src":"2163:11:23"},"nodeType":"YulIf","src":"2160:448:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:23","type":""}],"src":"2069:545:23"},{"body":{"nodeType":"YulBlock","src":"2704:81:23","statements":[{"nodeType":"YulAssignment","src":"2714:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:23"},"nodeType":"YulFunctionCall","src":"2743:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:23"},"nodeType":"YulFunctionCall","src":"2756:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:23"},"nodeType":"YulFunctionCall","src":"2739:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:23"},"nodeType":"YulFunctionCall","src":"2735:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:23"},"nodeType":"YulFunctionCall","src":"2725:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:23"},"nodeType":"YulFunctionCall","src":"2767:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:23"},"nodeType":"YulFunctionCall","src":"2722:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:23","type":""}],"src":"2619:166:23"},{"body":{"nodeType":"YulBlock","src":"2886:1256:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:23"},"nodeType":"YulFunctionCall","src":"2910:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:23"},"nodeType":"YulFunctionCall","src":"2965:18:23"},"nodeType":"YulExpressionStatement","src":"2965:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:23"},"nodeType":"YulFunctionCall","src":"2947:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:23"},"nodeType":"YulFunctionCall","src":"2943:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:23"},"nodeType":"YulFunctionCall","src":"2932:30:23"},"nodeType":"YulIf","src":"2929:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:23"},"nodeType":"YulFunctionCall","src":"3070:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:23"},"nodeType":"YulFunctionCall","src":"3044:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:23"},"nodeType":"YulFunctionCall","src":"2994:97:23"},"nodeType":"YulExpressionStatement","src":"2994:97:23"},{"nodeType":"YulVariableDeclaration","src":"3100:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:23","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:23"},"nodeType":"YulFunctionCall","src":"3270:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:23"},"nodeType":"YulFunctionCall","src":"3258:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:23"},"nodeType":"YulFunctionCall","src":"3305:35:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:23"},"nodeType":"YulFunctionCall","src":"3479:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:23"},"nodeType":"YulFunctionCall","src":"3473:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:23"},"nodeType":"YulFunctionCall","src":"3458:42:23"},"nodeType":"YulExpressionStatement","src":"3458:42:23"},{"nodeType":"YulAssignment","src":"3517:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:23"},"nodeType":"YulFunctionCall","src":"3527:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:23"}]},{"nodeType":"YulAssignment","src":"3558:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:23"},"nodeType":"YulFunctionCall","src":"3571:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:23"},"nodeType":"YulFunctionCall","src":"3384:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:23","statements":[{"nodeType":"YulAssignment","src":"3401:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:23"},"nodeType":"YulFunctionCall","src":"3406:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:23","statements":[]},"src":"3376:236:23"},{"body":{"nodeType":"YulBlock","src":"3660:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:23"},"nodeType":"YulFunctionCall","src":"3701:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:23"},"nodeType":"YulFunctionCall","src":"3695:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:23"},"nodeType":"YulFunctionCall","src":"3780:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:23"},"nodeType":"YulFunctionCall","src":"3776:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:23"},"nodeType":"YulFunctionCall","src":"3802:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:23"},"nodeType":"YulFunctionCall","src":"3772:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:23"},"nodeType":"YulFunctionCall","src":"3768:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:23"},"nodeType":"YulFunctionCall","src":"3753:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:23"},"nodeType":"YulFunctionCall","src":"3738:74:23"},"nodeType":"YulExpressionStatement","src":"3738:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:23"},"nodeType":"YulFunctionCall","src":"3628:19:23"},"nodeType":"YulIf","src":"3625:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:23"},"nodeType":"YulFunctionCall","src":"3856:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:23"},"nodeType":"YulFunctionCall","src":"3852:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:23"},"nodeType":"YulFunctionCall","src":"3839:36:23"},"nodeType":"YulExpressionStatement","src":"3839:36:23"}]},"nodeType":"YulCase","src":"3222:663:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:23","statements":[{"nodeType":"YulAssignment","src":"3983:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:23"},"nodeType":"YulFunctionCall","src":"3998:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:23"},"nodeType":"YulFunctionCall","src":"3992:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:23"},"nodeType":"YulIf","src":"3943:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:23"},"nodeType":"YulFunctionCall","src":"4058:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:23"},"nodeType":"YulFunctionCall","src":"4045:81:23"},"nodeType":"YulExpressionStatement","src":"4045:81:23"}]},"nodeType":"YulCase","src":"3894:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:23"},"nodeType":"YulFunctionCall","src":"3199:14:23"},"nodeType":"YulSwitch","src":"3192:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:23","type":""}],"src":"2790:1352:23"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b3638038062000b3683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61084280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b3919061068c565b60405180910390f35b6100cf6100ca3660046106f6565b610222565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610720565b61023c565b604051601281526020016100b3565b6100cf6101213660046106f6565b610260565b6100e361013436600461075c565b6001600160a01b031660009081526020819052604090205490565b6100a6610282565b6100cf6101653660046106f6565b610291565b6100cf6101783660046106f6565b610311565b6100e361018b36600461077e565b61031f565b60606003805461019f906107b1565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107b1565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b60003361023081858561034a565b60019150505b92915050565b60003361024a85828561046e565b6102558585856104e8565b506001949350505050565b600033610230818585610273838361031f565b61027d91906107eb565b61034a565b60606004805461019f906107b1565b6000338161029f828661031f565b9050838110156103045760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610255828686840361034a565b6000336102308185856104e8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ac5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fb565b6001600160a01b03821661040d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061047a848461031f565b905060001981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102fb565b6104e2848484840361034a565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fb565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fb565b6001600160a01b038316600090815260208190526040902054818110156106265760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fb565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b600060208083528351808285015260005b818110156106b95785810183015185820160400152820161069d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106f157600080fd5b919050565b6000806040838503121561070957600080fd5b610712836106da565b946020939093013593505050565b60008060006060848603121561073557600080fd5b61073e846106da565b925061074c602085016106da565b9150604084013590509250925092565b60006020828403121561076e57600080fd5b610777826106da565b9392505050565b6000806040838503121561079157600080fd5b61079a836106da565b91506107a8602084016106da565b90509250929050565b600181811c908216806107c557607f821691505b6020821081036107e557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ac55939664d321c34259d13d80c588fe0f559f9655aed67e8c388f1e26d9e39764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB36 CODESIZE SUB DUP1 PUSH3 0xB36 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x842 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x282 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP6 DUP3 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH2 0x255 DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x273 DUP4 DUP4 PUSH2 0x31F JUMP JUMPDEST PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29F DUP3 DUP7 PUSH2 0x31F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x255 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A DUP5 DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x712 DUP4 PUSH2 0x6DA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73E DUP5 PUSH2 0x6DA JUMP JUMPDEST SWAP3 POP PUSH2 0x74C PUSH1 0x20 DUP6 ADD PUSH2 0x6DA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x777 DUP3 PUSH2 0x6DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79A DUP4 PUSH2 0x6DA JUMP JUMPDEST SWAP2 POP PUSH2 0x7A8 PUSH1 0x20 DUP5 ADD PUSH2 0x6DA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7C5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x236 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC SSTORE SWAP4 SWAP7 PUSH5 0xD321C34259 0xD1 RETURNDATASIZE DUP1 0xC5 DUP9 INVALID 0xF SSTORE SWAP16 SWAP7 SSTORE 0xAE 0xD6 PUSH31 0x8C388F1E26D9E39764736F6C63430008140033000000000000000000000000 ","sourceMap":"1532:11312:10:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:10;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:23:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:23;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:23;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:23;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:23;;;3992:26;3943:89;-1:-1:-1;;2747:1:23;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:23;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:23;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:23;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:23:o;:::-;1532:11312:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2391":{"entryPoint":null,"id":2391,"parameterSlots":3,"returnSlots":0},"@_approve_2326":{"entryPoint":842,"id":2326,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2380":{"entryPoint":null,"id":2380,"parameterSlots":3,"returnSlots":0},"@_msgSender_3249":{"entryPoint":null,"id":3249,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2369":{"entryPoint":1134,"id":2369,"parameterSlots":3,"returnSlots":0},"@_transfer_2152":{"entryPoint":1256,"id":2152,"parameterSlots":3,"returnSlots":0},"@allowance_1947":{"entryPoint":799,"id":1947,"parameterSlots":2,"returnSlots":1},"@approve_1972":{"entryPoint":546,"id":1972,"parameterSlots":2,"returnSlots":1},"@balanceOf_1904":{"entryPoint":null,"id":1904,"parameterSlots":1,"returnSlots":1},"@decimals_1880":{"entryPoint":null,"id":1880,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2075":{"entryPoint":657,"id":2075,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2034":{"entryPoint":608,"id":2034,"parameterSlots":2,"returnSlots":1},"@name_1860":{"entryPoint":400,"id":1860,"parameterSlots":0,"returnSlots":1},"@symbol_1870":{"entryPoint":642,"id":1870,"parameterSlots":0,"returnSlots":1},"@totalSupply_1890":{"entryPoint":null,"id":1890,"parameterSlots":0,"returnSlots":1},"@transferFrom_2005":{"entryPoint":572,"id":2005,"parameterSlots":3,"returnSlots":1},"@transfer_1929":{"entryPoint":785,"id":1929,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1918,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1824,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1782,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2027,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1969,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:23","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:23"},"nodeType":"YulFunctionCall","src":"166:21:23"},"nodeType":"YulExpressionStatement","src":"166:21:23"},{"nodeType":"YulVariableDeclaration","src":"196:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:23"},"nodeType":"YulFunctionCall","src":"210:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:23"},"nodeType":"YulFunctionCall","src":"239:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:23"},"nodeType":"YulFunctionCall","src":"232:34:23"},"nodeType":"YulExpressionStatement","src":"232:34:23"},{"nodeType":"YulVariableDeclaration","src":"275:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:23"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:23"},"nodeType":"YulFunctionCall","src":"369:17:23"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:23"},"nodeType":"YulFunctionCall","src":"365:26:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:23"},"nodeType":"YulFunctionCall","src":"403:14:23"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:23"},"nodeType":"YulFunctionCall","src":"399:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:23"},"nodeType":"YulFunctionCall","src":"393:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:23"},"nodeType":"YulFunctionCall","src":"358:66:23"},"nodeType":"YulExpressionStatement","src":"358:66:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:23"},"nodeType":"YulFunctionCall","src":"302:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:23","statements":[{"nodeType":"YulAssignment","src":"318:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:23"},"nodeType":"YulFunctionCall","src":"323:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:23","statements":[]},"src":"294:140:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:23"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:23"},"nodeType":"YulFunctionCall","src":"454:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:23"},"nodeType":"YulFunctionCall","src":"450:31:23"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:23"},"nodeType":"YulFunctionCall","src":"443:42:23"},"nodeType":"YulExpressionStatement","src":"443:42:23"},{"nodeType":"YulAssignment","src":"494:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:23"},"nodeType":"YulFunctionCall","src":"525:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:23"},"nodeType":"YulFunctionCall","src":"542:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:23"},"nodeType":"YulFunctionCall","src":"521:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:23"},"nodeType":"YulFunctionCall","src":"506:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:23"},"nodeType":"YulFunctionCall","src":"502:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:23","type":""}],"src":"14:548:23"},{"body":{"nodeType":"YulBlock","src":"616:124:23","statements":[{"nodeType":"YulAssignment","src":"626:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:23"},"nodeType":"YulFunctionCall","src":"635:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:23"}]},{"body":{"nodeType":"YulBlock","src":"718:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:23"},"nodeType":"YulFunctionCall","src":"720:12:23"},"nodeType":"YulExpressionStatement","src":"720:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:23"},"nodeType":"YulFunctionCall","src":"699:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:23"},"nodeType":"YulFunctionCall","src":"695:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:23"},"nodeType":"YulFunctionCall","src":"684:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:23"},"nodeType":"YulFunctionCall","src":"674:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:23"},"nodeType":"YulFunctionCall","src":"667:50:23"},"nodeType":"YulIf","src":"664:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:23","type":""}],"src":"567:173:23"},{"body":{"nodeType":"YulBlock","src":"832:167:23","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:23"},"nodeType":"YulFunctionCall","src":"880:12:23"},"nodeType":"YulExpressionStatement","src":"880:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:23"},"nodeType":"YulFunctionCall","src":"849:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:23"},"nodeType":"YulFunctionCall","src":"845:32:23"},"nodeType":"YulIf","src":"842:52:23"},{"nodeType":"YulAssignment","src":"903:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:23"},"nodeType":"YulFunctionCall","src":"913:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:23"}]},{"nodeType":"YulAssignment","src":"951:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:23"},"nodeType":"YulFunctionCall","src":"974:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:23"},"nodeType":"YulFunctionCall","src":"961:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:23","type":""}],"src":"745:254:23"},{"body":{"nodeType":"YulBlock","src":"1099:92:23","statements":[{"nodeType":"YulAssignment","src":"1109:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:23"},"nodeType":"YulFunctionCall","src":"1117:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:23"},"nodeType":"YulFunctionCall","src":"1169:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:23"},"nodeType":"YulFunctionCall","src":"1162:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:23"},"nodeType":"YulFunctionCall","src":"1144:41:23"},"nodeType":"YulExpressionStatement","src":"1144:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:23","type":""}],"src":"1004:187:23"},{"body":{"nodeType":"YulBlock","src":"1297:76:23","statements":[{"nodeType":"YulAssignment","src":"1307:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:23"},"nodeType":"YulFunctionCall","src":"1315:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:23"},"nodeType":"YulFunctionCall","src":"1342:25:23"},"nodeType":"YulExpressionStatement","src":"1342:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:23","type":""}],"src":"1196:177:23"},{"body":{"nodeType":"YulBlock","src":"1482:224:23","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:23"},"nodeType":"YulFunctionCall","src":"1530:12:23"},"nodeType":"YulExpressionStatement","src":"1530:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:23"},"nodeType":"YulFunctionCall","src":"1499:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:23"},"nodeType":"YulFunctionCall","src":"1495:32:23"},"nodeType":"YulIf","src":"1492:52:23"},{"nodeType":"YulAssignment","src":"1553:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:23"},"nodeType":"YulFunctionCall","src":"1563:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:23"}]},{"nodeType":"YulAssignment","src":"1601:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:23"},"nodeType":"YulFunctionCall","src":"1630:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:23"},"nodeType":"YulFunctionCall","src":"1611:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:23"}]},{"nodeType":"YulAssignment","src":"1658:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:23"},"nodeType":"YulFunctionCall","src":"1681:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:23"},"nodeType":"YulFunctionCall","src":"1668:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:23","type":""}],"src":"1378:328:23"},{"body":{"nodeType":"YulBlock","src":"1808:87:23","statements":[{"nodeType":"YulAssignment","src":"1818:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:23"},"nodeType":"YulFunctionCall","src":"1826:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:23"},"nodeType":"YulFunctionCall","src":"1871:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:23"},"nodeType":"YulFunctionCall","src":"1853:36:23"},"nodeType":"YulExpressionStatement","src":"1853:36:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:23","type":""}],"src":"1711:184:23"},{"body":{"nodeType":"YulBlock","src":"1970:116:23","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:23"},"nodeType":"YulFunctionCall","src":"2018:12:23"},"nodeType":"YulExpressionStatement","src":"2018:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:23"},"nodeType":"YulFunctionCall","src":"1987:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:23"},"nodeType":"YulFunctionCall","src":"1983:32:23"},"nodeType":"YulIf","src":"1980:52:23"},{"nodeType":"YulAssignment","src":"2041:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:23"},"nodeType":"YulFunctionCall","src":"2051:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:23","type":""}],"src":"1900:186:23"},{"body":{"nodeType":"YulBlock","src":"2178:173:23","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:23"},"nodeType":"YulFunctionCall","src":"2226:12:23"},"nodeType":"YulExpressionStatement","src":"2226:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:23"},"nodeType":"YulFunctionCall","src":"2195:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:23"},"nodeType":"YulFunctionCall","src":"2191:32:23"},"nodeType":"YulIf","src":"2188:52:23"},{"nodeType":"YulAssignment","src":"2249:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:23"},"nodeType":"YulFunctionCall","src":"2259:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:23"}]},{"nodeType":"YulAssignment","src":"2297:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:23"},"nodeType":"YulFunctionCall","src":"2326:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:23"},"nodeType":"YulFunctionCall","src":"2307:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:23","type":""}],"src":"2091:260:23"},{"body":{"nodeType":"YulBlock","src":"2411:325:23","statements":[{"nodeType":"YulAssignment","src":"2421:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:23"},"nodeType":"YulFunctionCall","src":"2431:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:23"},"nodeType":"YulFunctionCall","src":"2478:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:23","statements":[{"nodeType":"YulAssignment","src":"2531:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:23"},"nodeType":"YulFunctionCall","src":"2541:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:23"},"nodeType":"YulFunctionCall","src":"2502:26:23"},"nodeType":"YulIf","src":"2499:61:23"},{"body":{"nodeType":"YulBlock","src":"2619:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:23"},"nodeType":"YulFunctionCall","src":"2643:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:23"},"nodeType":"YulFunctionCall","src":"2633:31:23"},"nodeType":"YulExpressionStatement","src":"2633:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:23"},"nodeType":"YulFunctionCall","src":"2677:15:23"},"nodeType":"YulExpressionStatement","src":"2677:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:23"},"nodeType":"YulFunctionCall","src":"2705:15:23"},"nodeType":"YulExpressionStatement","src":"2705:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:23"},"nodeType":"YulFunctionCall","src":"2595:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:23"},"nodeType":"YulFunctionCall","src":"2572:38:23"},"nodeType":"YulIf","src":"2569:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:23","type":""}],"src":"2356:380:23"},{"body":{"nodeType":"YulBlock","src":"2789:174:23","statements":[{"nodeType":"YulAssignment","src":"2799:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:23"},"nodeType":"YulFunctionCall","src":"2806:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:23"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:23"},"nodeType":"YulFunctionCall","src":"2870:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:23"},"nodeType":"YulFunctionCall","src":"2860:31:23"},"nodeType":"YulExpressionStatement","src":"2860:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:23"},"nodeType":"YulFunctionCall","src":"2904:15:23"},"nodeType":"YulExpressionStatement","src":"2904:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:23"},"nodeType":"YulFunctionCall","src":"2932:15:23"},"nodeType":"YulExpressionStatement","src":"2932:15:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:23"},"nodeType":"YulFunctionCall","src":"2827:10:23"},"nodeType":"YulIf","src":"2824:133:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:23","type":""}],"src":"2741:222:23"},{"body":{"nodeType":"YulBlock","src":"3142:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:23"},"nodeType":"YulFunctionCall","src":"3152:21:23"},"nodeType":"YulExpressionStatement","src":"3152:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:23"},"nodeType":"YulFunctionCall","src":"3189:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:23"},"nodeType":"YulFunctionCall","src":"3182:30:23"},"nodeType":"YulExpressionStatement","src":"3182:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:23"},"nodeType":"YulFunctionCall","src":"3228:18:23"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:23","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:23"},"nodeType":"YulFunctionCall","src":"3221:62:23"},"nodeType":"YulExpressionStatement","src":"3221:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:23"},"nodeType":"YulFunctionCall","src":"3299:18:23"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:23","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:23"},"nodeType":"YulFunctionCall","src":"3292:35:23"},"nodeType":"YulExpressionStatement","src":"3292:35:23"},{"nodeType":"YulAssignment","src":"3336:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:23"},"nodeType":"YulFunctionCall","src":"3344:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:23","type":""}],"src":"2968:401:23"},{"body":{"nodeType":"YulBlock","src":"3548:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:23"},"nodeType":"YulFunctionCall","src":"3558:21:23"},"nodeType":"YulExpressionStatement","src":"3558:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:23"},"nodeType":"YulFunctionCall","src":"3595:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:23"},"nodeType":"YulFunctionCall","src":"3588:30:23"},"nodeType":"YulExpressionStatement","src":"3588:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:23"},"nodeType":"YulFunctionCall","src":"3634:18:23"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:23","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:23"},"nodeType":"YulFunctionCall","src":"3627:62:23"},"nodeType":"YulExpressionStatement","src":"3627:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:23"},"nodeType":"YulFunctionCall","src":"3705:18:23"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:23","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:23"},"nodeType":"YulFunctionCall","src":"3698:34:23"},"nodeType":"YulExpressionStatement","src":"3698:34:23"},{"nodeType":"YulAssignment","src":"3741:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:23"},"nodeType":"YulFunctionCall","src":"3749:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:23","type":""}],"src":"3374:400:23"},{"body":{"nodeType":"YulBlock","src":"3953:224:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:23"},"nodeType":"YulFunctionCall","src":"3963:21:23"},"nodeType":"YulExpressionStatement","src":"3963:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:23"},"nodeType":"YulFunctionCall","src":"4000:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:23","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:23"},"nodeType":"YulFunctionCall","src":"3993:30:23"},"nodeType":"YulExpressionStatement","src":"3993:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:23"},"nodeType":"YulFunctionCall","src":"4039:18:23"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:23","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:23"},"nodeType":"YulFunctionCall","src":"4032:62:23"},"nodeType":"YulExpressionStatement","src":"4032:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:23"},"nodeType":"YulFunctionCall","src":"4110:18:23"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:23","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:23"},"nodeType":"YulFunctionCall","src":"4103:32:23"},"nodeType":"YulExpressionStatement","src":"4103:32:23"},{"nodeType":"YulAssignment","src":"4144:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:23"},"nodeType":"YulFunctionCall","src":"4152:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:23","type":""}],"src":"3779:398:23"},{"body":{"nodeType":"YulBlock","src":"4356:179:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:23"},"nodeType":"YulFunctionCall","src":"4366:21:23"},"nodeType":"YulExpressionStatement","src":"4366:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:23"},"nodeType":"YulFunctionCall","src":"4403:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:23","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:23"},"nodeType":"YulFunctionCall","src":"4396:30:23"},"nodeType":"YulExpressionStatement","src":"4396:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:23"},"nodeType":"YulFunctionCall","src":"4442:18:23"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:23","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:23"},"nodeType":"YulFunctionCall","src":"4435:59:23"},"nodeType":"YulExpressionStatement","src":"4435:59:23"},{"nodeType":"YulAssignment","src":"4503:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:23"},"nodeType":"YulFunctionCall","src":"4511:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:23","type":""}],"src":"4182:353:23"},{"body":{"nodeType":"YulBlock","src":"4714:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:23"},"nodeType":"YulFunctionCall","src":"4724:21:23"},"nodeType":"YulExpressionStatement","src":"4724:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:23"},"nodeType":"YulFunctionCall","src":"4761:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:23"},"nodeType":"YulFunctionCall","src":"4754:30:23"},"nodeType":"YulExpressionStatement","src":"4754:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:23"},"nodeType":"YulFunctionCall","src":"4800:18:23"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:23","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:23"},"nodeType":"YulFunctionCall","src":"4793:62:23"},"nodeType":"YulExpressionStatement","src":"4793:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:23"},"nodeType":"YulFunctionCall","src":"4871:18:23"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:23","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:23"},"nodeType":"YulFunctionCall","src":"4864:35:23"},"nodeType":"YulExpressionStatement","src":"4864:35:23"},{"nodeType":"YulAssignment","src":"4908:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:23"},"nodeType":"YulFunctionCall","src":"4916:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:23","type":""}],"src":"4540:401:23"},{"body":{"nodeType":"YulBlock","src":"5120:225:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:23"},"nodeType":"YulFunctionCall","src":"5130:21:23"},"nodeType":"YulExpressionStatement","src":"5130:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:23"},"nodeType":"YulFunctionCall","src":"5167:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:23","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:23"},"nodeType":"YulFunctionCall","src":"5160:30:23"},"nodeType":"YulExpressionStatement","src":"5160:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:23"},"nodeType":"YulFunctionCall","src":"5206:18:23"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:23","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:23"},"nodeType":"YulFunctionCall","src":"5199:62:23"},"nodeType":"YulExpressionStatement","src":"5199:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:23"},"nodeType":"YulFunctionCall","src":"5277:18:23"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:23","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:23"},"nodeType":"YulFunctionCall","src":"5270:33:23"},"nodeType":"YulExpressionStatement","src":"5270:33:23"},{"nodeType":"YulAssignment","src":"5312:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:23"},"nodeType":"YulFunctionCall","src":"5320:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:23","type":""}],"src":"4946:399:23"},{"body":{"nodeType":"YulBlock","src":"5524:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:23"},"nodeType":"YulFunctionCall","src":"5534:21:23"},"nodeType":"YulExpressionStatement","src":"5534:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:23"},"nodeType":"YulFunctionCall","src":"5571:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:23"},"nodeType":"YulFunctionCall","src":"5564:30:23"},"nodeType":"YulExpressionStatement","src":"5564:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:23"},"nodeType":"YulFunctionCall","src":"5610:18:23"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:23","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:23"},"nodeType":"YulFunctionCall","src":"5603:62:23"},"nodeType":"YulExpressionStatement","src":"5603:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:23"},"nodeType":"YulFunctionCall","src":"5681:18:23"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:23","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:23"},"nodeType":"YulFunctionCall","src":"5674:36:23"},"nodeType":"YulExpressionStatement","src":"5674:36:23"},{"nodeType":"YulAssignment","src":"5719:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:23"},"nodeType":"YulFunctionCall","src":"5727:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:23","type":""}],"src":"5350:402:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b3146100bc57806318160ddd146100df57806323b872dd146100f1578063313ce56714610104578063395093511461011357806370a082311461012657806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d575b600080fd5b6100a6610190565b6040516100b3919061068c565b60405180910390f35b6100cf6100ca3660046106f6565b610222565b60405190151581526020016100b3565b6002545b6040519081526020016100b3565b6100cf6100ff366004610720565b61023c565b604051601281526020016100b3565b6100cf6101213660046106f6565b610260565b6100e361013436600461075c565b6001600160a01b031660009081526020819052604090205490565b6100a6610282565b6100cf6101653660046106f6565b610291565b6100cf6101783660046106f6565b610311565b6100e361018b36600461077e565b61031f565b60606003805461019f906107b1565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb906107b1565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b60003361023081858561034a565b60019150505b92915050565b60003361024a85828561046e565b6102558585856104e8565b506001949350505050565b600033610230818585610273838361031f565b61027d91906107eb565b61034a565b60606004805461019f906107b1565b6000338161029f828661031f565b9050838110156103045760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610255828686840361034a565b6000336102308185856104e8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ac5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fb565b6001600160a01b03821661040d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061047a848461031f565b905060001981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102fb565b6104e2848484840361034a565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fb565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fb565b6001600160a01b038316600090815260208190526040902054818110156106265760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fb565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b600060208083528351808285015260005b818110156106b95785810183015185820160400152820161069d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106f157600080fd5b919050565b6000806040838503121561070957600080fd5b610712836106da565b946020939093013593505050565b60008060006060848603121561073557600080fd5b61073e846106da565b925061074c602085016106da565b9150604084013590509250925092565b60006020828403121561076e57600080fd5b610777826106da565b9392505050565b6000806040838503121561079157600080fd5b61079a836106da565b91506107a8602084016106da565b90509250929050565b600181811c908216806107c557607f821691505b6020821081036107e557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ac55939664d321c34259d13d80c588fe0f559f9655aed67e8c388f1e26d9e39764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x99 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0xCA CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA6 PUSH2 0x282 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x7B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP6 DUP3 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH2 0x255 DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x273 DUP4 DUP4 PUSH2 0x31F JUMP JUMPDEST PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x29F DUP3 DUP7 PUSH2 0x31F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x255 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x230 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A DUP5 DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x712 DUP4 PUSH2 0x6DA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73E DUP5 PUSH2 0x6DA JUMP JUMPDEST SWAP3 POP PUSH2 0x74C PUSH1 0x20 DUP6 ADD PUSH2 0x6DA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x777 DUP3 PUSH2 0x6DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79A DUP4 PUSH2 0x6DA JUMP JUMPDEST SWAP2 POP PUSH2 0x7A8 PUSH1 0x20 DUP5 ADD PUSH2 0x6DA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7C5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x236 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC SSTORE SWAP4 SWAP7 PUSH5 0xD321C34259 0xD1 RETURNDATASIZE DUP1 0xC5 DUP9 INVALID 0xF SSTORE SWAP16 SWAP7 SSTORE 0xAE 0xD6 PUSH31 0x8C388F1E26D9E39764736F6C63430008140033000000000000000000000000 ","sourceMap":"1532:11312:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:23;;1162:22;1144:41;;1132:2;1117:18;4444:197:10;1004:187:23;3255:106:10;3342:12;;3255:106;;;1342:25:23;;;1330:2;1315:18;3255:106:10;1196:177:23;5203:256:10;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:23;;1841:2;1826:18;3104:91:10;1711:184:23;5854:234:10;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:10;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:16;4581:32:10;719:10:16;4597:7:10;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:16;5356:38:10;5372:4;719:10:16;5387:6:10;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:10;;5203:256;-1:-1:-1;;;;5203:256:10:o;5854:234::-;5942:4;719:10:16;5996:64:10;719:10:16;6012:7:10;6049:10;6021:25;719:10:16;6012:7:10;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:16;6668:4:10;6749:25;719:10:16;6766:7:10;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:10;;3170:2:23;6784:85:10;;;3152:21:23;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:23;;;3292:35;3344:19;;6784:85:10;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:16;3873:28:10;719:10:16;3890:2:10;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:10;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:10;;10550:68;;;;-1:-1:-1;;;10550:68:10;;3576:2:23;10550:68:10;;;3558:21:23;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:23;;;3698:34;3749:19;;10550:68:10;3374:400:23;10550:68:10;-1:-1:-1;;;;;10636:21:10;;10628:68;;;;-1:-1:-1;;;10628:68:10;;3981:2:23;10628:68:10;;;3963:21:23;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:23;;;4103:32;4152:19;;10628:68:10;3779:398:23;10628:68:10;-1:-1:-1;;;;;10707:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:23;;;10758:32:10;;1315:18:23;10758:32:10;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:10;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:10;;4384:2:23;11297:68:10;;;4366:21:23;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:10;4182:353:23;11297:68:10;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:10;;7544:68;;;;-1:-1:-1;;;7544:68:10;;4742:2:23;7544:68:10;;;4724:21:23;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:23;;;4864:35;4916:19;;7544:68:10;4540:401:23;7544:68:10;-1:-1:-1;;;;;7630:16:10;;7622:64;;;;-1:-1:-1;;;7622:64:10;;5148:2:23;7622:64:10;;;5130:21:23;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:23;;;5270:33;5320:19;;7622:64:10;4946:399:23;7622:64:10;-1:-1:-1;;;;;7768:15:10;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:10;;5552:2:23;7793:72:10;;;5534:21:23;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:23;;;5674:36;5727:19;;7793:72:10;5350:402:23;7793:72:10;-1:-1:-1;;;;;7899:15:10;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:23;;;8114:13:10;;8163:26;;1315:18:23;8163:26:10;;;;;;;8200:37;12073:91;14:548:23;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:23;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:23:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:23:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"422800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24605","balanceOf(address)":"2650","decimals()":"243","decreaseAllowance(address,uint256)":"27104","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2303","transfer(address,uint256)":"51226","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1821,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1827,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1829,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1831,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1833,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038c0b6f426ad360ad17ba01a131f2653226b348a1bcbe0106907356605e6184364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC0 0xB6 DELEGATECALL 0x26 0xAD CALLDATASIZE EXP 0xD1 PUSH28 0xA01A131F2653226B348A1BCBE0106907356605E6184364736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;701:6234:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038c0b6f426ad360ad17ba01a131f2653226b348a1bcbe0106907356605e6184364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC0 0xB6 DELEGATECALL 0x26 0xAD CALLDATASIZE EXP 0xD1 PUSH28 0xA01A131F2653226B348A1BCBE0106907356605E6184364736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"701:6234:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8dc5795c4f0c5581bf254d9fd5966a8fbb0e9c979dc61c6c46e0ef31a77e25564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xDC JUMPI SWAP6 0xC4 CREATE 0xC5 PC SHL CALLCODE SLOAD 0xD9 REVERT MSIZE PUSH7 0xA8FBB0E9C979DC PUSH2 0xC6C4 PUSH15 0xEF31A77E25564736F6C6343000814 STOP CALLER ","sourceMap":"194:9169:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8dc5795c4f0c5581bf254d9fd5966a8fbb0e9c979dc61c6c46e0ef31a77e25564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xDC JUMPI SWAP6 0xC4 CREATE 0xC5 PC SHL CALLCODE SLOAD 0xD9 REVERT MSIZE PUSH7 0xA8FBB0E9C979DC PUSH2 0xC6C4 PUSH15 0xEF31A77E25564736F6C6343000814 STOP CALLER ","sourceMap":"194:9169:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZeroTest.sol":{"LayerZeroTest":{"abi":[{"inputs":[{"internalType":"address","name":"_lzEndpoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"data","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_message","type":"string"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_otherContract","type":"address"}],"name":"trustAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1651":{"entryPoint":null,"id":1651,"parameterSlots":0,"returnSlots":0},"@_3294":{"entryPoint":null,"id":3294,"parameterSlots":1,"returnSlots":0},"@_503":{"entryPoint":null,"id":503,"parameterSlots":1,"returnSlots":0},"@_989":{"entryPoint":null,"id":989,"parameterSlots":1,"returnSlots":0},"@_msgSender_3249":{"entryPoint":null,"id":3249,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1739":{"entryPoint":245,"id":1739,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":694,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":407,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":490,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":347,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":325,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3027:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:23"},"nodeType":"YulFunctionCall","src":"66:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:23"},"nodeType":"YulFunctionCall","src":"56:31:23"},"nodeType":"YulExpressionStatement","src":"56:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:23"},"nodeType":"YulFunctionCall","src":"96:15:23"},"nodeType":"YulExpressionStatement","src":"96:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:23"},"nodeType":"YulFunctionCall","src":"120:15:23"},"nodeType":"YulExpressionStatement","src":"120:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:23"},{"body":{"nodeType":"YulBlock","src":"201:325:23","statements":[{"nodeType":"YulAssignment","src":"211:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:23"},"nodeType":"YulFunctionCall","src":"221:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:23"},"nodeType":"YulFunctionCall","src":"268:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:23","statements":[{"nodeType":"YulAssignment","src":"321:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:23"},"nodeType":"YulFunctionCall","src":"331:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:23"},"nodeType":"YulFunctionCall","src":"292:26:23"},"nodeType":"YulIf","src":"289:61:23"},{"body":{"nodeType":"YulBlock","src":"409:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:23"},"nodeType":"YulFunctionCall","src":"433:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:23"},"nodeType":"YulFunctionCall","src":"423:31:23"},"nodeType":"YulExpressionStatement","src":"423:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:23"},"nodeType":"YulFunctionCall","src":"467:15:23"},"nodeType":"YulExpressionStatement","src":"467:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:23"},"nodeType":"YulFunctionCall","src":"495:15:23"},"nodeType":"YulExpressionStatement","src":"495:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:23"},"nodeType":"YulFunctionCall","src":"385:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:23"},"nodeType":"YulFunctionCall","src":"362:38:23"},"nodeType":"YulIf","src":"359:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:23","type":""}],"src":"146:380:23"},{"body":{"nodeType":"YulBlock","src":"587:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:23"},"nodeType":"YulFunctionCall","src":"597:14:23"},"nodeType":"YulExpressionStatement","src":"597:14:23"},{"nodeType":"YulAssignment","src":"620:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:23"},"nodeType":"YulFunctionCall","src":"628:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:23"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:23","type":""}],"src":"531:121:23"},{"body":{"nodeType":"YulBlock","src":"738:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:23"},"nodeType":"YulFunctionCall","src":"809:17:23"},"nodeType":"YulExpressionStatement","src":"809:17:23"},{"nodeType":"YulVariableDeclaration","src":"839:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:23"},"nodeType":"YulFunctionCall","src":"851:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:23"},"nodeType":"YulFunctionCall","src":"919:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:23"},"nodeType":"YulFunctionCall","src":"912:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:23"},"nodeType":"YulFunctionCall","src":"902:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:23","statements":[{"nodeType":"YulAssignment","src":"979:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:23"},"nodeType":"YulFunctionCall","src":"956:20:23"},"nodeType":"YulIf","src":"953:47:23"},{"nodeType":"YulVariableDeclaration","src":"1013:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:23"},"nodeType":"YulFunctionCall","src":"1040:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:23"},"nodeType":"YulFunctionCall","src":"1033:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:23"},"nodeType":"YulFunctionCall","src":"1023:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:23"},"nodeType":"YulFunctionCall","src":"1167:17:23"},"nodeType":"YulExpressionStatement","src":"1167:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:23"},"nodeType":"YulFunctionCall","src":"1112:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:23","statements":[{"nodeType":"YulAssignment","src":"1128:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:23"},"nodeType":"YulFunctionCall","src":"1137:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:23","statements":[]},"src":"1104:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:23"},"nodeType":"YulFunctionCall","src":"751:11:23"},"nodeType":"YulIf","src":"748:448:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:23","type":""}],"src":"657:545:23"},{"body":{"nodeType":"YulBlock","src":"1292:81:23","statements":[{"nodeType":"YulAssignment","src":"1302:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:23"},"nodeType":"YulFunctionCall","src":"1331:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:23"},"nodeType":"YulFunctionCall","src":"1344:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:23"},"nodeType":"YulFunctionCall","src":"1327:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:23"},"nodeType":"YulFunctionCall","src":"1323:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:23"},"nodeType":"YulFunctionCall","src":"1313:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:23"},"nodeType":"YulFunctionCall","src":"1355:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:23"},"nodeType":"YulFunctionCall","src":"1310:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:23","type":""}],"src":"1207:166:23"},{"body":{"nodeType":"YulBlock","src":"1474:1256:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:23"},"nodeType":"YulFunctionCall","src":"1498:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:23"},"nodeType":"YulFunctionCall","src":"1553:18:23"},"nodeType":"YulExpressionStatement","src":"1553:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:23"},"nodeType":"YulFunctionCall","src":"1535:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:23"},"nodeType":"YulFunctionCall","src":"1531:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:23"},"nodeType":"YulFunctionCall","src":"1520:30:23"},"nodeType":"YulIf","src":"1517:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:23"},"nodeType":"YulFunctionCall","src":"1658:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:23"},"nodeType":"YulFunctionCall","src":"1632:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:23"},"nodeType":"YulFunctionCall","src":"1582:97:23"},"nodeType":"YulExpressionStatement","src":"1582:97:23"},{"nodeType":"YulVariableDeclaration","src":"1688:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:23","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:23"},"nodeType":"YulFunctionCall","src":"1858:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:23"},"nodeType":"YulFunctionCall","src":"1846:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:23"},"nodeType":"YulFunctionCall","src":"1893:35:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:23"},"nodeType":"YulFunctionCall","src":"2067:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:23"},"nodeType":"YulFunctionCall","src":"2061:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:23"},"nodeType":"YulFunctionCall","src":"2046:42:23"},"nodeType":"YulExpressionStatement","src":"2046:42:23"},{"nodeType":"YulAssignment","src":"2105:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:23"},"nodeType":"YulFunctionCall","src":"2115:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:23"}]},{"nodeType":"YulAssignment","src":"2146:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:23"},"nodeType":"YulFunctionCall","src":"2159:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:23"},"nodeType":"YulFunctionCall","src":"1972:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:23","statements":[{"nodeType":"YulAssignment","src":"1989:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:23"},"nodeType":"YulFunctionCall","src":"1994:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:23","statements":[]},"src":"1964:236:23"},{"body":{"nodeType":"YulBlock","src":"2248:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:23"},"nodeType":"YulFunctionCall","src":"2289:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:23"},"nodeType":"YulFunctionCall","src":"2283:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:23"},"nodeType":"YulFunctionCall","src":"2368:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:23"},"nodeType":"YulFunctionCall","src":"2364:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:23"},"nodeType":"YulFunctionCall","src":"2390:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:23"},"nodeType":"YulFunctionCall","src":"2360:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:23"},"nodeType":"YulFunctionCall","src":"2356:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:23"},"nodeType":"YulFunctionCall","src":"2341:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:23"},"nodeType":"YulFunctionCall","src":"2326:74:23"},"nodeType":"YulExpressionStatement","src":"2326:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:23"},"nodeType":"YulFunctionCall","src":"2216:19:23"},"nodeType":"YulIf","src":"2213:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:23"},"nodeType":"YulFunctionCall","src":"2444:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:23"},"nodeType":"YulFunctionCall","src":"2440:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:23"},"nodeType":"YulFunctionCall","src":"2427:36:23"},"nodeType":"YulExpressionStatement","src":"2427:36:23"}]},"nodeType":"YulCase","src":"1810:663:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:23","statements":[{"nodeType":"YulAssignment","src":"2571:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:23"},"nodeType":"YulFunctionCall","src":"2586:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:23"},"nodeType":"YulFunctionCall","src":"2580:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:23"},"nodeType":"YulIf","src":"2531:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:23"},"nodeType":"YulFunctionCall","src":"2646:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:23"},"nodeType":"YulFunctionCall","src":"2633:81:23"},"nodeType":"YulExpressionStatement","src":"2633:81:23"}]},"nodeType":"YulCase","src":"2482:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:23"},"nodeType":"YulFunctionCall","src":"1787:14:23"},"nodeType":"YulSwitch","src":"1780:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:23","type":""}],"src":"1378:1352:23"},{"body":{"nodeType":"YulBlock","src":"2816:209:23","statements":[{"body":{"nodeType":"YulBlock","src":"2862:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2871:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2874:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2864:6:23"},"nodeType":"YulFunctionCall","src":"2864:12:23"},"nodeType":"YulExpressionStatement","src":"2864:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2837:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2846:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2833:3:23"},"nodeType":"YulFunctionCall","src":"2833:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2858:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2829:3:23"},"nodeType":"YulFunctionCall","src":"2829:32:23"},"nodeType":"YulIf","src":"2826:52:23"},{"nodeType":"YulVariableDeclaration","src":"2887:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2906:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2900:5:23"},"nodeType":"YulFunctionCall","src":"2900:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2891:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2979:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2988:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2991:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2981:6:23"},"nodeType":"YulFunctionCall","src":"2981:12:23"},"nodeType":"YulExpressionStatement","src":"2981:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2938:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2949:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2964:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2969:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2960:3:23"},"nodeType":"YulFunctionCall","src":"2960:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"2973:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2956:3:23"},"nodeType":"YulFunctionCall","src":"2956:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2945:3:23"},"nodeType":"YulFunctionCall","src":"2945:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2935:2:23"},"nodeType":"YulFunctionCall","src":"2935:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2928:6:23"},"nodeType":"YulFunctionCall","src":"2928:50:23"},"nodeType":"YulIf","src":"2925:70:23"},{"nodeType":"YulAssignment","src":"3004:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"3014:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3004:6:23"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2782:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2793:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2805:6:23","type":""}],"src":"2735:290:23"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e0604052601460a09081527f4e6f7468696e672072656365697665642079657400000000000000000000000060c0526006906200003e9082620001ea565b503480156200004c57600080fd5b5060405162002536380380620025368339810160408190526200006f91620002b6565b80806200007c33620000f5565b6001600160a01b039081166080528216736fcb97553d41516cb228ac03fdc8b9a0a9df04a1039050620000b9576007805461ffff19166127801790555b6001600160a01b038116737dcad72640f835b0fa36efd3d6d3ec902c7e5acf03620000ee576007805461ffff19166127761790555b50620002e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017057607f821691505b6020821081036200019157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e557600081815260208120601f850160051c81016020861015620001c05750805b601f850160051c820191505b81811015620001e157828155600101620001cc565b5050505b505050565b81516001600160401b0381111562000206576200020662000145565b6200021e816200021784546200015b565b8462000197565b602080601f8311600181146200025657600084156200023d5750858301515b600019600386901b1c1916600185901b178555620001e1565b600085815260208120601f198616915b82811015620002875788860151825594840194600190910190840162000266565b5085821015620002a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620002c957600080fd5b81516001600160a01b0381168114620002e157600080fd5b9392505050565b6080516122016200033560003960008181610422015281816105300152818161077f015281816108270152818161094a01528181610e100152818161120a015261148b01526122016000f3fe6080604052600436106101465760003560e01c80621d35671461014b57806307e0db171461016d5780630df374831461018d57806310ddb137146101ad5780633d8b38f6146101cd5780633f1f4fa41461020257806342d65a8d1461023d5780635b8c41e61461025d5780635cdf1649146102ac57806366792ba1146102cc57806366ad5c8a146102df578063715018a6146102ff57806373d4a13a146103145780637533d788146103365780638cfd8f5c146103565780638da5cb5b1461038e578063950c8a74146103b05780639f38369a146103d0578063a6c3d165146103f0578063b353aaa714610410578063baf3292d14610444578063c446183414610464578063cbed8b9c1461047a578063d1deba1f1461049a578063df2a5b3b146104ad578063eb8d72b7146104cd578063f2fde38b146104ed578063f5ecbdbc1461050d575b600080fd5b34801561015757600080fd5b5061016b610166366004611898565b61052d565b005b34801561017957600080fd5b5061016b61018836600461192b565b61075e565b34801561019957600080fd5b5061016b6101a8366004611946565b6107e7565b3480156101b957600080fd5b5061016b6101c836600461192b565b610806565b3480156101d957600080fd5b506101ed6101e8366004611970565b61085e565b60405190151581526020015b60405180910390f35b34801561020e57600080fd5b5061022f61021d36600461192b565b60036020526000908152604090205481565b6040519081526020016101f9565b34801561024957600080fd5b5061016b610258366004611970565b61092b565b34801561026957600080fd5b5061022f610278366004611a6d565b6005602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b3480156102b857600080fd5b5061016b6102c7366004611af5565b6109b1565b61016b6102da366004611b10565b610a0e565b3480156102eb57600080fd5b5061016b6102fa366004611898565b610a55565b34801561030b57600080fd5b5061016b610b31565b34801561032057600080fd5b50610329610b45565b6040516101f99190611bb0565b34801561034257600080fd5b5061032961035136600461192b565b610bd3565b34801561036257600080fd5b5061022f610371366004611bc3565b600260209081526000928352604080842090915290825290205481565b34801561039a57600080fd5b506103a3610bec565b6040516101f99190611bf6565b3480156103bc57600080fd5b506004546103a3906001600160a01b031681565b3480156103dc57600080fd5b506103296103eb36600461192b565b610bfb565b3480156103fc57600080fd5b5061016b61040b366004611970565b610d0a565b34801561041c57600080fd5b506103a37f000000000000000000000000000000000000000000000000000000000000000081565b34801561045057600080fd5b5061016b61045f366004611af5565b610d93565b34801561047057600080fd5b5061022f61271081565b34801561048657600080fd5b5061016b610495366004611c0a565b610df1565b61016b6104a8366004611898565b610e86565b3480156104b957600080fd5b5061016b6104c8366004611c78565b61109c565b3480156104d957600080fd5b5061016b6104e8366004611970565b611106565b3480156104f957600080fd5b5061016b610508366004611af5565b611160565b34801561051957600080fd5b50610329610528366004611cb4565b6111d9565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146105aa5760405162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572000060448201526064015b60405180910390fd5b61ffff8616600090815260016020526040812080546105c890611cff565b80601f01602080910402602001604051908101604052809291908181526020018280546105f490611cff565b80156106415780601f1061061657610100808354040283529160200191610641565b820191906000526020600020905b81548152906001019060200180831161062457829003601f168201915b5050505050905080518686905014801561065c575060008151115b801561068457508051602082012060405161067a9088908890611d39565b6040518091039020145b6106df5760405162461bcd60e51b815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6044820152651b9d1c9858dd60d21b60648201526084016105a1565b6107558787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061128a92505050565b50505050505050565b610766611303565b6040516307e0db1760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307e0db17906024015b600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b5050505050565b6107ef611303565b61ffff909116600090815260036020526040902055565b61080e611303565b6040516310ddb13760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906310ddb137906024016107b2565b61ffff83166000908152600160205260408120805482919061087f90611cff565b80601f01602080910402602001604051908101604052809291908181526020018280546108ab90611cff565b80156108f85780601f106108cd576101008083540402835291602001916108f8565b820191906000526020600020905b8154815290600101906020018083116108db57829003601f168201915b50505050509050838360405161090f929190611d39565b60405180910390208180519060200120149150505b9392505050565b610933611303565b6040516342d65a8d60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d9061098390869086908690600401611d72565b600060405180830381600087803b15801561099d57600080fd5b505af1158015610755573d6000803e3d6000fd5b6109b9611303565b6040516001600160601b0319606083811b8216602084015230901b16603482015260480160408051601f1981840301815291815260075461ffff16600090815260016020522090610a0a9082611deb565b5050565b600081604051602001610a219190611bb0565b60408051601f19818403018152600754602084019092526000808452909350610a0a9261ffff909216918491339134611362565b333014610ab35760405162461bcd60e51b815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d7573742062656044820152650204c7a4170760d41b60648201526084016105a1565b610b298686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061150792505050565b505050505050565b610b39611303565b610b436000611528565b565b60068054610b5290611cff565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7e90611cff565b8015610bcb5780601f10610ba057610100808354040283529160200191610bcb565b820191906000526020600020905b815481529060010190602001808311610bae57829003601f168201915b505050505081565b60016020526000908152604090208054610b5290611cff565b6000546001600160a01b031690565b61ffff8116600090815260016020526040812080546060929190610c1e90611cff565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4a90611cff565b8015610c975780601f10610c6c57610100808354040283529160200191610c97565b820191906000526020600020905b815481529060010190602001808311610c7a57829003601f168201915b505050505090508051600003610cef5760405162461bcd60e51b815260206004820152601d60248201527f4c7a4170703a206e6f20747275737465642070617468207265636f726400000060448201526064016105a1565b610924600060148351610d029190611eba565b839190611578565b610d12611303565b818130604051602001610d2793929190611ed3565b60408051601f1981840301815291815261ffff8516600090815260016020522090610d529082611deb565b507f8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce838383604051610d8693929190611d72565b60405180910390a1505050565b610d9b611303565b600480546001600160a01b0319166001600160a01b0383161790556040517f5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b90610de6908390611bf6565b60405180910390a150565b610df9611303565b6040516332fb62e760e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c90610e4d9088908890889088908890600401611ef4565b600060405180830381600087803b158015610e6757600080fd5b505af1158015610e7b573d6000803e3d6000fd5b505050505050505050565b61ffff86166000908152600560205260408082209051610ea99088908890611d39565b90815260408051602092819003830190206001600160401b03871660009081529252902054905080610f295760405162461bcd60e51b815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201526261676560e81b60648201526084016105a1565b808383604051610f3a929190611d39565b604051809103902014610f995760405162461bcd60e51b815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f616044820152601960fa1b60648201526084016105a1565b61ffff87166000908152600560205260408082209051610fbc9089908990611d39565b90815260408051602092819003830181206001600160401b038916600090815290845282902093909355601f88018290048202830182019052868252611054918991899089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061150792505050565b7fc264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5878787878560405161108b959493929190611f2d565b60405180910390a150505050505050565b6110a4611303565b61ffff83811660008181526002602090815260408083209487168084529482529182902085905581519283528201929092529081018290527f9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac090606001610d86565b61110e611303565b61ffff8316600090815260016020526040902061112c828483611f68565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab838383604051610d8693929190611d72565b611168611303565b6001600160a01b0381166111cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a1565b6111d681611528565b50565b604051633d7b2f6f60e21b815261ffff808616600483015284166024820152306044820152606481018290526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f5ecbdbc90608401600060405180830381865afa158015611259573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112819190810190612051565b95945050505050565b6000806112ed5a60966366ad5c8a60e01b898989896040516024016112b29493929190612099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915230929190611685565b9150915081610b2957610b29868686868561170f565b3361130c610bec565b6001600160a01b031614610b435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b61ffff86166000908152600160205260408120805461138090611cff565b80601f01602080910402602001604051908101604052809291908181526020018280546113ac90611cff565b80156113f95780601f106113ce576101008083540402835291602001916113f9565b820191906000526020600020905b8154815290600101906020018083116113dc57829003601f168201915b50505050509050805160000361146a5760405162461bcd60e51b815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201526f61207472757374656420736f7572636560801b60648201526084016105a1565b6114758787516117ac565b60405162c5803160e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c58031009084906114cc908b9086908c908c908c908c906004016120d7565b6000604051808303818588803b1580156114e557600080fd5b505af11580156114f9573d6000803e3d6000fd5b505050505050505050505050565b8080602001905181019061151b9190612051565b6006906107e09082611deb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60608161158681601f61213e565b10156115c55760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016105a1565b6115cf828461213e565b845110156116135760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016105a1565b606082158015611632576040519150600082526020820160405261167c565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561166b578051835260209283019201611653565b5050858452601f01601f1916604052505b50949350505050565b6000606060008060008661ffff166001600160401b038111156116aa576116aa6119c2565b6040519080825280601f01601f1916602001820160405280156116d4576020820181803683370190505b50905060008087516020890160008d8df191503d9250868311156116f6578692505b828152826000602083013e909890975095505050505050565b8180519060200120600560008761ffff1661ffff168152602001908152602001600020856040516117409190612151565b9081526040805191829003602090810183206001600160401b0388166000908152915220919091557fe183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c9061179d908790879087908790879061216d565b60405180910390a15050505050565b61ffff8216600090815260036020526040812054908190036117cd57506127105b8082111561181d5760405162461bcd60e51b815260206004820181905260248201527f4c7a4170703a207061796c6f61642073697a6520697320746f6f206c6172676560448201526064016105a1565b505050565b803561ffff8116811461183457600080fd5b919050565b60008083601f84011261184b57600080fd5b5081356001600160401b0381111561186257600080fd5b60208301915083602082850101111561187a57600080fd5b9250929050565b80356001600160401b038116811461183457600080fd5b600080600080600080608087890312156118b157600080fd5b6118ba87611822565b955060208701356001600160401b03808211156118d657600080fd5b6118e28a838b01611839565b90975095508591506118f660408a01611881565b9450606089013591508082111561190c57600080fd5b5061191989828a01611839565b979a9699509497509295939492505050565b60006020828403121561193d57600080fd5b61092482611822565b6000806040838503121561195957600080fd5b61196283611822565b946020939093013593505050565b60008060006040848603121561198557600080fd5b61198e84611822565b925060208401356001600160401b038111156119a957600080fd5b6119b586828701611839565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611a0057611a006119c2565b604052919050565b60006001600160401b03821115611a2157611a216119c2565b50601f01601f191660200190565b6000611a42611a3d84611a08565b6119d8565b9050828152838383011115611a5657600080fd5b828260208301376000602084830101529392505050565b600080600060608486031215611a8257600080fd5b611a8b84611822565b925060208401356001600160401b03811115611aa657600080fd5b8401601f81018613611ab757600080fd5b611ac686823560208401611a2f565b925050611ad560408501611881565b90509250925092565b80356001600160a01b038116811461183457600080fd5b600060208284031215611b0757600080fd5b61092482611ade565b600060208284031215611b2257600080fd5b81356001600160401b03811115611b3857600080fd5b8201601f81018413611b4957600080fd5b611b5884823560208401611a2f565b949350505050565b60005b83811015611b7b578181015183820152602001611b63565b50506000910152565b60008151808452611b9c816020860160208601611b60565b601f01601f19169290920160200192915050565b6020815260006109246020830184611b84565b60008060408385031215611bd657600080fd5b611bdf83611822565b9150611bed60208401611822565b90509250929050565b6001600160a01b0391909116815260200190565b600080600080600060808688031215611c2257600080fd5b611c2b86611822565b9450611c3960208701611822565b93506040860135925060608601356001600160401b03811115611c5b57600080fd5b611c6788828901611839565b969995985093965092949392505050565b600080600060608486031215611c8d57600080fd5b611c9684611822565b9250611ca460208501611822565b9150604084013590509250925092565b60008060008060808587031215611cca57600080fd5b611cd385611822565b9350611ce160208601611822565b9250611cef60408601611ade565b9396929550929360600135925050565b600181811c90821680611d1357607f821691505b602082108103611d3357634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61ffff84168152604060208201526000611281604083018486611d49565b601f82111561181d57600081815260208120601f850160051c81016020861015611db75750805b601f850160051c820191505b81811015610b2957828155600101611dc3565b600019600383901b1c191660019190911b1790565b81516001600160401b03811115611e0457611e046119c2565b611e1881611e128454611cff565b84611d90565b602080601f831160018114611e475760008415611e355750858301515b611e3f8582611dd6565b865550610b29565b600085815260208120601f198616915b82811015611e7657888601518255948401946001909101908401611e57565b5085821015611e945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115611ecd57611ecd611ea4565b92915050565b8284823760609190911b6001600160601b0319169101908152601401919050565b600061ffff808816835280871660208401525084604083015260806060830152611f22608083018486611d49565b979650505050505050565b61ffff86168152608060208201526000611f4b608083018688611d49565b6001600160401b0394909416604083015250606001529392505050565b6001600160401b03831115611f7f57611f7f6119c2565b611f9383611f8d8354611cff565b83611d90565b6000601f841160018114611fc15760008515611faf5750838201355b611fb98682611dd6565b8455506107e0565b600083815260209020601f19861690835b82811015611ff25786850135825560209485019460019092019101611fd2565b508682101561200f5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b600061202f611a3d84611a08565b905082815283838301111561204357600080fd5b610924836020830184611b60565b60006020828403121561206357600080fd5b81516001600160401b0381111561207957600080fd5b8201601f8101841361208a57600080fd5b611b5884825160208401612021565b61ffff851681526080602082015260006120b66080830186611b84565b6001600160401b03851660408401528281036060840152611f228185611b84565b61ffff8716815260c0602082015260006120f460c0830188611b84565b82810360408401526121068188611b84565b6001600160a01b0387811660608601528616608085015283810360a085015290506121318185611b84565b9998505050505050505050565b80820180821115611ecd57611ecd611ea4565b60008251612163818460208701611b60565b9190910192915050565b61ffff8616815260a06020820152600061218a60a0830187611b84565b6001600160401b038616604084015282810360608401526121ab8186611b84565b905082810360808401526121bf8185611b84565b9897505050505050505056fea2646970667358221220fb337d3f3212fe145603f0e641ee588d5a8e28d3d51f69d9038937da086e7f1064736f6c63430008140033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x14 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH32 0x4E6F7468696E6720726563656976656420796574000000000000000000000000 PUSH1 0xC0 MSTORE PUSH1 0x6 SWAP1 PUSH3 0x3E SWAP1 DUP3 PUSH3 0x1EA JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2536 CODESIZE SUB DUP1 PUSH3 0x2536 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x6F SWAP2 PUSH3 0x2B6 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x7C CALLER PUSH3 0xF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE DUP3 AND PUSH20 0x6FCB97553D41516CB228AC03FDC8B9A0A9DF04A1 SUB SWAP1 POP PUSH3 0xB9 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x2780 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH20 0x7DCAD72640F835B0FA36EFD3D6D3EC902C7E5ACF SUB PUSH3 0xEE JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x2776 OR SWAP1 SSTORE JUMPDEST POP PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x170 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x191 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1E5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1C0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1E1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1CC JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x206 JUMPI PUSH3 0x206 PUSH3 0x145 JUMP JUMPDEST PUSH3 0x21E DUP2 PUSH3 0x217 DUP5 SLOAD PUSH3 0x15B JUMP JUMPDEST DUP5 PUSH3 0x197 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x256 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x23D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1E1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x287 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x266 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2A6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2201 PUSH3 0x335 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x422 ADD MSTORE DUP2 DUP2 PUSH2 0x530 ADD MSTORE DUP2 DUP2 PUSH2 0x77F ADD MSTORE DUP2 DUP2 PUSH2 0x827 ADD MSTORE DUP2 DUP2 PUSH2 0x94A ADD MSTORE DUP2 DUP2 PUSH2 0xE10 ADD MSTORE DUP2 DUP2 PUSH2 0x120A ADD MSTORE PUSH2 0x148B ADD MSTORE PUSH2 0x2201 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x1D3567 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x5CDF1649 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x66792BA1 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x50D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0xD0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x5C8 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F4 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x641 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x616 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x641 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x624 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x684 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x67A SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x755 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x128A SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x766 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x87F SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8AB SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90F SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x983 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9B9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x7 SLOAD PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xA0A SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x20 DUP5 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP1 DUP5 MSTORE SWAP1 SWAP4 POP PUSH2 0xA0A SWAP3 PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 CALLER SWAP2 CALLVALUE PUSH2 0x1362 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xB29 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB39 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xB43 PUSH1 0x0 PUSH2 0x1528 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0xC1E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4A SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC97 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x924 PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0xD12 PUSH2 0x1303 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xD52 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xD9B PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xDE6 SWAP1 DUP4 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xDF9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0xE4D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xEA9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xFBC SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x1054 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x110E PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x112C DUP3 DUP5 DUP4 PUSH2 0x1F68 JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1168 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x11D6 DUP2 PUSH2 0x1528 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1259 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1281 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12ED GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB29 JUMPI PUSH2 0xB29 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x170F JUMP JUMPDEST CALLER PUSH2 0x130C PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AC SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x1475 DUP8 DUP8 MLOAD PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x14CC SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x6 SWAP1 PUSH2 0x7E0 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1586 DUP2 PUSH1 0x1F PUSH2 0x213E JUMP JUMPDEST LT ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x15CF DUP3 DUP5 PUSH2 0x213E JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x166B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1653 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16AA PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x16F6 JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x179D SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x17CD JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x184B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x187A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BA DUP8 PUSH2 0x1822 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E2 DUP11 DUP4 DUP12 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x18F6 PUSH1 0x40 DUP11 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x190C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1919 DUP10 DUP3 DUP11 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1962 DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198E DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A21 PUSH2 0x19C2 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A42 PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1AB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC6 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1AD5 PUSH1 0x40 DUP6 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B7B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B63 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B9C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x924 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDF DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BED PUSH1 0x20 DUP5 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2B DUP7 PUSH2 0x1822 JUMP JUMPDEST SWAP5 POP PUSH2 0x1C39 PUSH1 0x20 DUP8 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C67 DUP9 DUP3 DUP10 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C96 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CA4 PUSH1 0x20 DUP6 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD3 DUP6 PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE1 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CEF PUSH1 0x40 DUP7 ADD PUSH2 0x1ADE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1281 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1DB7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E04 JUMPI PUSH2 0x1E04 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1E18 DUP2 PUSH2 0x1E12 DUP5 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP5 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1E35 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x1E3F DUP6 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E76 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E57 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E94 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F22 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F4B PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1F93 DUP4 PUSH2 0x1F8D DUP4 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP4 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x1FAF JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x1FB9 DUP7 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FF2 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1FD2 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x200F JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2021 JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20B6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1F22 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20F4 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1B84 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2106 DUP2 DUP9 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x2131 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2163 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x218A PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x21AB DUP2 DUP7 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x21BF DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CALLER PUSH30 0x3F3212FE145603F0E641EE588D5A8E28D3D51F69D9038937DA086E7F1064 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"457:43:17:-:0;407:1143;457:43;;407:1143;457:43;;;;;;;;;;;;:::i;:::-;;538:449;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:11;;936:32:8;719:10:16;936:18:8;:32::i;:::-;-1:-1:-1;;;;;1201:42:2;;;;;616:57:17;::::1;631:42;616:57:::0;;-1:-1:-1;612:82:17::1;;675:11;:19:::0;;-1:-1:-1;;675:19:17::1;689:5;675:19;::::0;;612:82:::1;-1:-1:-1::0;;;;;709:57:17;::::1;724:42;709:57:::0;705:82:::1;;768:11;:19:::0;;-1:-1:-1;;768:19:17::1;782:5;768:19;::::0;;705:82:::1;538:449:::0;407:1143;;2426:187:8;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:8;;;-1:-1:-1;;;;;;2534:17:8;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:23;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:23;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:23;;;2580:26;2531:89;-1:-1:-1;;1335:1:23;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:23;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:23;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:23;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:23:o;2735:290::-;2805:6;2858:2;2846:9;2837:7;2833:23;2829:32;2826:52;;;2874:1;2871;2864:12;2826:52;2900:16;;-1:-1:-1;;;;;2945:31:23;;2935:42;;2925:70;;2991:1;2988;2981:12;2925:70;3014:5;2735:290;-1:-1:-1;;;2735:290:23:o;:::-;407:1143:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_PAYLOAD_SIZE_LIMIT_448":{"entryPoint":null,"id":448,"parameterSlots":0,"returnSlots":0},"@_blockingLzReceive_1068":{"entryPoint":4746,"id":1068,"parameterSlots":4,"returnSlots":0},"@_checkOwner_1682":{"entryPoint":4867,"id":1682,"parameterSlots":0,"returnSlots":0},"@_checkPayloadSize_711":{"entryPoint":6060,"id":711,"parameterSlots":2,"returnSlots":0},"@_lzSend_622":{"entryPoint":4962,"id":622,"parameterSlots":6,"returnSlots":0},"@_msgSender_3249":{"entryPoint":null,"id":3249,"parameterSlots":0,"returnSlots":1},"@_nonblockingLzReceive_3317":{"entryPoint":5383,"id":3317,"parameterSlots":4,"returnSlots":0},"@_storeFailedMessage_1102":{"entryPoint":5903,"id":1102,"parameterSlots":5,"returnSlots":0},"@_transferOwnership_1739":{"entryPoint":5416,"id":1739,"parameterSlots":1,"returnSlots":0},"@data_3267":{"entryPoint":2885,"id":3267,"parameterSlots":0,"returnSlots":0},"@excessivelySafeCall_372":{"entryPoint":5765,"id":372,"parameterSlots":4,"returnSlots":2},"@failedMessages_997":{"entryPoint":null,"id":997,"parameterSlots":0,"returnSlots":0},"@forceResumeReceive_808":{"entryPoint":2347,"id":808,"parameterSlots":3,"returnSlots":0},"@getConfig_736":{"entryPoint":4569,"id":736,"parameterSlots":4,"returnSlots":1},"@getTrustedRemoteAddress_888":{"entryPoint":3067,"id":888,"parameterSlots":1,"returnSlots":1},"@isTrustedRemote_970":{"entryPoint":2142,"id":970,"parameterSlots":3,"returnSlots":1},"@lzEndpoint_451":{"entryPoint":null,"id":451,"parameterSlots":0,"returnSlots":0},"@lzReceive_562":{"entryPoint":1325,"id":562,"parameterSlots":6,"returnSlots":0},"@minDstGasLookup_461":{"entryPoint":null,"id":461,"parameterSlots":0,"returnSlots":0},"@nonblockingLzReceive_1132":{"entryPoint":2645,"id":1132,"parameterSlots":6,"returnSlots":0},"@owner_1668":{"entryPoint":3052,"id":1668,"parameterSlots":0,"returnSlots":1},"@payloadSizeLimitLookup_465":{"entryPoint":null,"id":465,"parameterSlots":0,"returnSlots":0},"@precrime_467":{"entryPoint":null,"id":467,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_1696":{"entryPoint":2865,"id":1696,"parameterSlots":0,"returnSlots":0},"@retryMessage_1211":{"entryPoint":3718,"id":1211,"parameterSlots":6,"returnSlots":0},"@send_3350":{"entryPoint":2574,"id":3350,"parameterSlots":1,"returnSlots":0},"@setConfig_760":{"entryPoint":3569,"id":760,"parameterSlots":5,"returnSlots":0},"@setMinDstGas_930":{"entryPoint":4252,"id":930,"parameterSlots":3,"returnSlots":0},"@setPayloadSizeLimit_946":{"entryPoint":2023,"id":946,"parameterSlots":2,"returnSlots":0},"@setPrecrime_904":{"entryPoint":3475,"id":904,"parameterSlots":1,"returnSlots":0},"@setReceiveVersion_790":{"entryPoint":2054,"id":790,"parameterSlots":1,"returnSlots":0},"@setSendVersion_775":{"entryPoint":1886,"id":775,"parameterSlots":1,"returnSlots":0},"@setTrustedRemoteAddress_857":{"entryPoint":3338,"id":857,"parameterSlots":3,"returnSlots":0},"@setTrustedRemote_829":{"entryPoint":4358,"id":829,"parameterSlots":3,"returnSlots":0},"@slice_63":{"entryPoint":5496,"id":63,"parameterSlots":3,"returnSlots":1},"@transferOwnership_1719":{"entryPoint":4448,"id":1719,"parameterSlots":1,"returnSlots":0},"@trustAddress_3371":{"entryPoint":2481,"id":3371,"parameterSlots":1,"returnSlots":0},"@trustedRemoteLookup_455":{"entryPoint":3027,"id":455,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":6878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":6703,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes_fromMemory":{"entryPoint":8225,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":6201,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":6901,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":8273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":6443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_bytes_calldata_ptr":{"entryPoint":6512,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr":{"entryPoint":6296,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64":{"entryPoint":6765,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16":{"entryPoint":7107,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256":{"entryPoint":7348,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16t_uint256":{"entryPoint":7288,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr":{"entryPoint":7178,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_uint256":{"entryPoint":6470,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint16":{"entryPoint":6178,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":6273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":7497,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":7044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7481,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":7891,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7538,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed":{"entryPoint":7981,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8407,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8345,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8557,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7924,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6616,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6664,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8510,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7866,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":7568,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage":{"entryPoint":8040,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":7659,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7008,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7423,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":7638,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7844,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6594,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25835:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"62:111:23","statements":[{"nodeType":"YulAssignment","src":"72:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"94:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"81:12:23"},"nodeType":"YulFunctionCall","src":"81:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"72:5:23"}]},{"body":{"nodeType":"YulBlock","src":"151:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"160:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"153:6:23"},"nodeType":"YulFunctionCall","src":"153:12:23"},"nodeType":"YulExpressionStatement","src":"153:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"123:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"141:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"130:3:23"},"nodeType":"YulFunctionCall","src":"130:18:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"120:2:23"},"nodeType":"YulFunctionCall","src":"120:29:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"113:6:23"},"nodeType":"YulFunctionCall","src":"113:37:23"},"nodeType":"YulIf","src":"110:57:23"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"52:5:23","type":""}],"src":"14:159:23"},{"body":{"nodeType":"YulBlock","src":"250:275:23","statements":[{"body":{"nodeType":"YulBlock","src":"299:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"308:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"311:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"301:6:23"},"nodeType":"YulFunctionCall","src":"301:12:23"},"nodeType":"YulExpressionStatement","src":"301:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"278:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"286:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:23"},"nodeType":"YulFunctionCall","src":"274:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"293:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"270:3:23"},"nodeType":"YulFunctionCall","src":"270:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"263:6:23"},"nodeType":"YulFunctionCall","src":"263:35:23"},"nodeType":"YulIf","src":"260:55:23"},{"nodeType":"YulAssignment","src":"324:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"347:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"334:12:23"},"nodeType":"YulFunctionCall","src":"334:20:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"324:6:23"}]},{"body":{"nodeType":"YulBlock","src":"397:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"406:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"409:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"399:6:23"},"nodeType":"YulFunctionCall","src":"399:12:23"},"nodeType":"YulExpressionStatement","src":"399:12:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"385:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"389:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"381:3:23"},"nodeType":"YulFunctionCall","src":"381:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"393:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"377:3:23"},"nodeType":"YulFunctionCall","src":"377:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"366:2:23"},"nodeType":"YulFunctionCall","src":"366:30:23"},"nodeType":"YulIf","src":"363:50:23"},{"nodeType":"YulAssignment","src":"422:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"438:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"446:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"434:3:23"},"nodeType":"YulFunctionCall","src":"434:17:23"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"422:8:23"}]},{"body":{"nodeType":"YulBlock","src":"503:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:23"},"nodeType":"YulFunctionCall","src":"505:12:23"},"nodeType":"YulExpressionStatement","src":"505:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"474:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"482:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:23"},"nodeType":"YulFunctionCall","src":"470:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"491:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"466:3:23"},"nodeType":"YulFunctionCall","src":"466:30:23"},{"name":"end","nodeType":"YulIdentifier","src":"498:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"463:2:23"},"nodeType":"YulFunctionCall","src":"463:39:23"},"nodeType":"YulIf","src":"460:59:23"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"213:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"221:3:23","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"229:8:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"239:6:23","type":""}],"src":"178:347:23"},{"body":{"nodeType":"YulBlock","src":"578:123:23","statements":[{"nodeType":"YulAssignment","src":"588:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"610:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"597:12:23"},"nodeType":"YulFunctionCall","src":"597:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"588:5:23"}]},{"body":{"nodeType":"YulBlock","src":"679:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"688:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"691:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"681:6:23"},"nodeType":"YulFunctionCall","src":"681:12:23"},"nodeType":"YulExpressionStatement","src":"681:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"639:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"650:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"665:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"669:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"661:3:23"},"nodeType":"YulFunctionCall","src":"661:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"673:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"657:3:23"},"nodeType":"YulFunctionCall","src":"657:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"646:3:23"},"nodeType":"YulFunctionCall","src":"646:30:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"636:2:23"},"nodeType":"YulFunctionCall","src":"636:41:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"629:6:23"},"nodeType":"YulFunctionCall","src":"629:49:23"},"nodeType":"YulIf","src":"626:69:23"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"557:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"568:5:23","type":""}],"src":"530:171:23"},{"body":{"nodeType":"YulBlock","src":"863:705:23","statements":[{"body":{"nodeType":"YulBlock","src":"910:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"919:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"922:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"912:6:23"},"nodeType":"YulFunctionCall","src":"912:12:23"},"nodeType":"YulExpressionStatement","src":"912:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"884:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"893:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"880:3:23"},"nodeType":"YulFunctionCall","src":"880:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"905:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"876:3:23"},"nodeType":"YulFunctionCall","src":"876:33:23"},"nodeType":"YulIf","src":"873:53:23"},{"nodeType":"YulAssignment","src":"935:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"963:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"945:17:23"},"nodeType":"YulFunctionCall","src":"945:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"935:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"982:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1013:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1024:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:23"},"nodeType":"YulFunctionCall","src":"1009:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"996:12:23"},"nodeType":"YulFunctionCall","src":"996:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"986:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1037:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1055:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1059:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1051:3:23"},"nodeType":"YulFunctionCall","src":"1051:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1063:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1047:3:23"},"nodeType":"YulFunctionCall","src":"1047:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1041:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1092:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1101:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1104:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1094:6:23"},"nodeType":"YulFunctionCall","src":"1094:12:23"},"nodeType":"YulExpressionStatement","src":"1094:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1080:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1088:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1077:2:23"},"nodeType":"YulFunctionCall","src":"1077:14:23"},"nodeType":"YulIf","src":"1074:34:23"},{"nodeType":"YulVariableDeclaration","src":"1117:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1173:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1184:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1169:3:23"},"nodeType":"YulFunctionCall","src":"1169:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1193:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1143:25:23"},"nodeType":"YulFunctionCall","src":"1143:58:23"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1121:8:23","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1131:8:23","type":""}]},{"nodeType":"YulAssignment","src":"1210:18:23","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1220:8:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1210:6:23"}]},{"nodeType":"YulAssignment","src":"1237:18:23","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1247:8:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1237:6:23"}]},{"nodeType":"YulAssignment","src":"1264:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1296:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1307:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1292:3:23"},"nodeType":"YulFunctionCall","src":"1292:18:23"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"1274:17:23"},"nodeType":"YulFunctionCall","src":"1274:37:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1264:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1320:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1364:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:23"},"nodeType":"YulFunctionCall","src":"1349:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1336:12:23"},"nodeType":"YulFunctionCall","src":"1336:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1324:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1397:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1406:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1409:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1399:6:23"},"nodeType":"YulFunctionCall","src":"1399:12:23"},"nodeType":"YulExpressionStatement","src":"1399:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1383:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1393:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1380:2:23"},"nodeType":"YulFunctionCall","src":"1380:16:23"},"nodeType":"YulIf","src":"1377:36:23"},{"nodeType":"YulVariableDeclaration","src":"1422:86:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1478:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1489:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1474:3:23"},"nodeType":"YulFunctionCall","src":"1474:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1500:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1448:25:23"},"nodeType":"YulFunctionCall","src":"1448:60:23"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"1426:8:23","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"1436:8:23","type":""}]},{"nodeType":"YulAssignment","src":"1517:18:23","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1527:8:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1517:6:23"}]},{"nodeType":"YulAssignment","src":"1544:18:23","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"1554:8:23"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1544:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"789:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"800:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"812:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"820:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"828:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"836:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"844:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"852:6:23","type":""}],"src":"706:862:23"},{"body":{"nodeType":"YulBlock","src":"1642:115:23","statements":[{"body":{"nodeType":"YulBlock","src":"1688:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1697:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1700:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1690:6:23"},"nodeType":"YulFunctionCall","src":"1690:12:23"},"nodeType":"YulExpressionStatement","src":"1690:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1663:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1672:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1659:3:23"},"nodeType":"YulFunctionCall","src":"1659:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1684:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1655:3:23"},"nodeType":"YulFunctionCall","src":"1655:32:23"},"nodeType":"YulIf","src":"1652:52:23"},{"nodeType":"YulAssignment","src":"1713:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1741:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1723:17:23"},"nodeType":"YulFunctionCall","src":"1723:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1713:6:23"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1608:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1619:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1631:6:23","type":""}],"src":"1573:184:23"},{"body":{"nodeType":"YulBlock","src":"1848:166:23","statements":[{"body":{"nodeType":"YulBlock","src":"1894:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1896:6:23"},"nodeType":"YulFunctionCall","src":"1896:12:23"},"nodeType":"YulExpressionStatement","src":"1896:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1869:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1865:3:23"},"nodeType":"YulFunctionCall","src":"1865:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1861:3:23"},"nodeType":"YulFunctionCall","src":"1861:32:23"},"nodeType":"YulIf","src":"1858:52:23"},{"nodeType":"YulAssignment","src":"1919:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1929:17:23"},"nodeType":"YulFunctionCall","src":"1929:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1919:6:23"}]},{"nodeType":"YulAssignment","src":"1966:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2004:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1989:3:23"},"nodeType":"YulFunctionCall","src":"1989:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1976:12:23"},"nodeType":"YulFunctionCall","src":"1976:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1966:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1806:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1817:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1829:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1837:6:23","type":""}],"src":"1762:252:23"},{"body":{"nodeType":"YulBlock","src":"2124:376:23","statements":[{"body":{"nodeType":"YulBlock","src":"2170:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2179:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2182:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2172:6:23"},"nodeType":"YulFunctionCall","src":"2172:12:23"},"nodeType":"YulExpressionStatement","src":"2172:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2145:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2154:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2141:3:23"},"nodeType":"YulFunctionCall","src":"2141:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2166:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2137:3:23"},"nodeType":"YulFunctionCall","src":"2137:32:23"},"nodeType":"YulIf","src":"2134:52:23"},{"nodeType":"YulAssignment","src":"2195:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2223:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"2205:17:23"},"nodeType":"YulFunctionCall","src":"2205:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2195:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"2242:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2273:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2284:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:23"},"nodeType":"YulFunctionCall","src":"2269:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2256:12:23"},"nodeType":"YulFunctionCall","src":"2256:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2246:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2331:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2340:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2343:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2333:6:23"},"nodeType":"YulFunctionCall","src":"2333:12:23"},"nodeType":"YulExpressionStatement","src":"2333:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2303:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2319:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2323:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2315:3:23"},"nodeType":"YulFunctionCall","src":"2315:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2327:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2311:3:23"},"nodeType":"YulFunctionCall","src":"2311:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2300:2:23"},"nodeType":"YulFunctionCall","src":"2300:30:23"},"nodeType":"YulIf","src":"2297:50:23"},{"nodeType":"YulVariableDeclaration","src":"2356:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2423:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:23"},"nodeType":"YulFunctionCall","src":"2408:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2432:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"2382:25:23"},"nodeType":"YulFunctionCall","src":"2382:58:23"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"2360:8:23","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"2370:8:23","type":""}]},{"nodeType":"YulAssignment","src":"2449:18:23","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"2459:8:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2449:6:23"}]},{"nodeType":"YulAssignment","src":"2476:18:23","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2486:8:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2476:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2074:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2085:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2097:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2105:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2113:6:23","type":""}],"src":"2019:481:23"},{"body":{"nodeType":"YulBlock","src":"2600:92:23","statements":[{"nodeType":"YulAssignment","src":"2610:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2622:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2633:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2618:3:23"},"nodeType":"YulFunctionCall","src":"2618:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2610:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2677:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2670:6:23"},"nodeType":"YulFunctionCall","src":"2670:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2663:6:23"},"nodeType":"YulFunctionCall","src":"2663:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2645:6:23"},"nodeType":"YulFunctionCall","src":"2645:41:23"},"nodeType":"YulExpressionStatement","src":"2645:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2569:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2580:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2591:4:23","type":""}],"src":"2505:187:23"},{"body":{"nodeType":"YulBlock","src":"2798:76:23","statements":[{"nodeType":"YulAssignment","src":"2808:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2820:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2831:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2816:3:23"},"nodeType":"YulFunctionCall","src":"2816:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2808:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2850:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"2861:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2843:6:23"},"nodeType":"YulFunctionCall","src":"2843:25:23"},"nodeType":"YulExpressionStatement","src":"2843:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2767:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2778:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2789:4:23","type":""}],"src":"2697:177:23"},{"body":{"nodeType":"YulBlock","src":"2911:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2928:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2940:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2931:3:23"},"nodeType":"YulFunctionCall","src":"2931:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2921:6:23"},"nodeType":"YulFunctionCall","src":"2921:31:23"},"nodeType":"YulExpressionStatement","src":"2921:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2968:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2971:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2961:6:23"},"nodeType":"YulFunctionCall","src":"2961:15:23"},"nodeType":"YulExpressionStatement","src":"2961:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2992:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2995:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2985:6:23"},"nodeType":"YulFunctionCall","src":"2985:15:23"},"nodeType":"YulExpressionStatement","src":"2985:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2879:127:23"},{"body":{"nodeType":"YulBlock","src":"3056:230:23","statements":[{"nodeType":"YulAssignment","src":"3066:19:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3082:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3076:5:23"},"nodeType":"YulFunctionCall","src":"3076:9:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3066:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"3094:58:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3116:6:23"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3132:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"3138:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3128:3:23"},"nodeType":"YulFunctionCall","src":"3128:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3143:3:23"},"nodeType":"YulFunctionCall","src":"3143:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3124:3:23"},"nodeType":"YulFunctionCall","src":"3124:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3112:3:23"},"nodeType":"YulFunctionCall","src":"3112:40:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3098:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3227:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3229:16:23"},"nodeType":"YulFunctionCall","src":"3229:18:23"},"nodeType":"YulExpressionStatement","src":"3229:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3170:10:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3190:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3194:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3186:3:23"},"nodeType":"YulFunctionCall","src":"3186:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"3198:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3182:3:23"},"nodeType":"YulFunctionCall","src":"3182:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3167:2:23"},"nodeType":"YulFunctionCall","src":"3167:34:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3206:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3218:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3203:2:23"},"nodeType":"YulFunctionCall","src":"3203:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3164:2:23"},"nodeType":"YulFunctionCall","src":"3164:62:23"},"nodeType":"YulIf","src":"3161:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3265:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3269:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3258:6:23"},"nodeType":"YulFunctionCall","src":"3258:22:23"},"nodeType":"YulExpressionStatement","src":"3258:22:23"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3036:4:23","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3045:6:23","type":""}],"src":"3011:275:23"},{"body":{"nodeType":"YulBlock","src":"3348:129:23","statements":[{"body":{"nodeType":"YulBlock","src":"3392:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3394:16:23"},"nodeType":"YulFunctionCall","src":"3394:18:23"},"nodeType":"YulExpressionStatement","src":"3394:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3364:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3380:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3384:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3376:3:23"},"nodeType":"YulFunctionCall","src":"3376:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"3388:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3372:3:23"},"nodeType":"YulFunctionCall","src":"3372:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3361:2:23"},"nodeType":"YulFunctionCall","src":"3361:30:23"},"nodeType":"YulIf","src":"3358:56:23"},{"nodeType":"YulAssignment","src":"3423:48:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3443:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3451:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3439:3:23"},"nodeType":"YulFunctionCall","src":"3439:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3460:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3456:3:23"},"nodeType":"YulFunctionCall","src":"3456:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3435:3:23"},"nodeType":"YulFunctionCall","src":"3435:29:23"},{"kind":"number","nodeType":"YulLiteral","src":"3466:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:23"},"nodeType":"YulFunctionCall","src":"3431:40:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3423:4:23"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3328:6:23","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3339:4:23","type":""}],"src":"3291:186:23"},{"body":{"nodeType":"YulBlock","src":"3556:262:23","statements":[{"nodeType":"YulAssignment","src":"3566:61:23","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3619:6:23"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"3591:27:23"},"nodeType":"YulFunctionCall","src":"3591:35:23"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3575:15:23"},"nodeType":"YulFunctionCall","src":"3575:52:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3566:5:23"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3643:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"3650:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3636:6:23"},"nodeType":"YulFunctionCall","src":"3636:21:23"},"nodeType":"YulExpressionStatement","src":"3636:21:23"},{"body":{"nodeType":"YulBlock","src":"3695:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3704:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3707:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3697:6:23"},"nodeType":"YulFunctionCall","src":"3697:12:23"},"nodeType":"YulExpressionStatement","src":"3697:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3676:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3681:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3672:3:23"},"nodeType":"YulFunctionCall","src":"3672:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"3690:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3669:2:23"},"nodeType":"YulFunctionCall","src":"3669:25:23"},"nodeType":"YulIf","src":"3666:45:23"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3737:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"3744:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:23"},"nodeType":"YulFunctionCall","src":"3733:16:23"},{"name":"src","nodeType":"YulIdentifier","src":"3751:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3756:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3720:12:23"},"nodeType":"YulFunctionCall","src":"3720:43:23"},"nodeType":"YulExpressionStatement","src":"3720:43:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3787:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"3794:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:23"},"nodeType":"YulFunctionCall","src":"3783:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3803:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3779:3:23"},"nodeType":"YulFunctionCall","src":"3779:29:23"},{"kind":"number","nodeType":"YulLiteral","src":"3810:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3772:6:23"},"nodeType":"YulFunctionCall","src":"3772:40:23"},"nodeType":"YulExpressionStatement","src":"3772:40:23"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3525:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"3530:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"3538:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3546:5:23","type":""}],"src":"3482:336:23"},{"body":{"nodeType":"YulBlock","src":"3934:482:23","statements":[{"body":{"nodeType":"YulBlock","src":"3980:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3989:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3992:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3982:6:23"},"nodeType":"YulFunctionCall","src":"3982:12:23"},"nodeType":"YulExpressionStatement","src":"3982:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3955:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3964:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3951:3:23"},"nodeType":"YulFunctionCall","src":"3951:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3976:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3947:3:23"},"nodeType":"YulFunctionCall","src":"3947:32:23"},"nodeType":"YulIf","src":"3944:52:23"},{"nodeType":"YulAssignment","src":"4005:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4033:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"4015:17:23"},"nodeType":"YulFunctionCall","src":"4015:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4005:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"4052:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:23"},"nodeType":"YulFunctionCall","src":"4079:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4066:12:23"},"nodeType":"YulFunctionCall","src":"4066:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4141:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4150:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4153:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4143:6:23"},"nodeType":"YulFunctionCall","src":"4143:12:23"},"nodeType":"YulExpressionStatement","src":"4143:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4113:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4129:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4133:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4125:3:23"},"nodeType":"YulFunctionCall","src":"4125:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"4137:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4121:3:23"},"nodeType":"YulFunctionCall","src":"4121:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4110:2:23"},"nodeType":"YulFunctionCall","src":"4110:30:23"},"nodeType":"YulIf","src":"4107:50:23"},{"nodeType":"YulVariableDeclaration","src":"4166:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4180:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4191:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4176:3:23"},"nodeType":"YulFunctionCall","src":"4176:22:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4170:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4246:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4255:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4258:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4248:6:23"},"nodeType":"YulFunctionCall","src":"4248:12:23"},"nodeType":"YulExpressionStatement","src":"4248:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4225:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"4229:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4221:3:23"},"nodeType":"YulFunctionCall","src":"4221:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4236:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4217:3:23"},"nodeType":"YulFunctionCall","src":"4217:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4210:6:23"},"nodeType":"YulFunctionCall","src":"4210:35:23"},"nodeType":"YulIf","src":"4207:55:23"},{"nodeType":"YulAssignment","src":"4271:83:23","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4319:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"4323:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4315:3:23"},"nodeType":"YulFunctionCall","src":"4315:11:23"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4341:2:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4328:12:23"},"nodeType":"YulFunctionCall","src":"4328:16:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4346:7:23"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"4281:33:23"},"nodeType":"YulFunctionCall","src":"4281:73:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4271:6:23"}]},{"nodeType":"YulAssignment","src":"4363:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4395:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4406:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4391:3:23"},"nodeType":"YulFunctionCall","src":"4391:18:23"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4373:17:23"},"nodeType":"YulFunctionCall","src":"4373:37:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4363:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3884:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3895:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3907:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3915:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3923:6:23","type":""}],"src":"3823:593:23"},{"body":{"nodeType":"YulBlock","src":"4522:76:23","statements":[{"nodeType":"YulAssignment","src":"4532:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4544:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4555:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4540:3:23"},"nodeType":"YulFunctionCall","src":"4540:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4532:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4574:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"4585:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4567:6:23"},"nodeType":"YulFunctionCall","src":"4567:25:23"},"nodeType":"YulExpressionStatement","src":"4567:25:23"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4491:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4502:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4513:4:23","type":""}],"src":"4421:177:23"},{"body":{"nodeType":"YulBlock","src":"4652:124:23","statements":[{"nodeType":"YulAssignment","src":"4662:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4684:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4671:12:23"},"nodeType":"YulFunctionCall","src":"4671:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:23"}]},{"body":{"nodeType":"YulBlock","src":"4754:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4763:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4756:6:23"},"nodeType":"YulFunctionCall","src":"4756:12:23"},"nodeType":"YulExpressionStatement","src":"4756:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4713:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4724:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4739:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4744:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4735:3:23"},"nodeType":"YulFunctionCall","src":"4735:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"4748:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4731:3:23"},"nodeType":"YulFunctionCall","src":"4731:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4720:3:23"},"nodeType":"YulFunctionCall","src":"4720:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4710:2:23"},"nodeType":"YulFunctionCall","src":"4710:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4703:6:23"},"nodeType":"YulFunctionCall","src":"4703:50:23"},"nodeType":"YulIf","src":"4700:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4631:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4642:5:23","type":""}],"src":"4603:173:23"},{"body":{"nodeType":"YulBlock","src":"4851:116:23","statements":[{"body":{"nodeType":"YulBlock","src":"4897:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4906:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4909:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4899:6:23"},"nodeType":"YulFunctionCall","src":"4899:12:23"},"nodeType":"YulExpressionStatement","src":"4899:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4872:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4881:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4868:3:23"},"nodeType":"YulFunctionCall","src":"4868:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4893:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4864:3:23"},"nodeType":"YulFunctionCall","src":"4864:32:23"},"nodeType":"YulIf","src":"4861:52:23"},{"nodeType":"YulAssignment","src":"4922:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4951:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4932:18:23"},"nodeType":"YulFunctionCall","src":"4932:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4922:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4817:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4828:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4840:6:23","type":""}],"src":"4781:186:23"},{"body":{"nodeType":"YulBlock","src":"5052:370:23","statements":[{"body":{"nodeType":"YulBlock","src":"5098:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5107:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5110:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5100:6:23"},"nodeType":"YulFunctionCall","src":"5100:12:23"},"nodeType":"YulExpressionStatement","src":"5100:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5073:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5082:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5069:3:23"},"nodeType":"YulFunctionCall","src":"5069:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5094:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5065:3:23"},"nodeType":"YulFunctionCall","src":"5065:32:23"},"nodeType":"YulIf","src":"5062:52:23"},{"nodeType":"YulVariableDeclaration","src":"5123:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5150:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5137:12:23"},"nodeType":"YulFunctionCall","src":"5137:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5127:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5203:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5212:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5215:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5205:6:23"},"nodeType":"YulFunctionCall","src":"5205:12:23"},"nodeType":"YulExpressionStatement","src":"5205:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5175:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5191:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5195:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5187:3:23"},"nodeType":"YulFunctionCall","src":"5187:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"5199:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5183:3:23"},"nodeType":"YulFunctionCall","src":"5183:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5172:2:23"},"nodeType":"YulFunctionCall","src":"5172:30:23"},"nodeType":"YulIf","src":"5169:50:23"},{"nodeType":"YulVariableDeclaration","src":"5228:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5242:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5253:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5238:3:23"},"nodeType":"YulFunctionCall","src":"5238:22:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5232:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5308:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5317:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5310:6:23"},"nodeType":"YulFunctionCall","src":"5310:12:23"},"nodeType":"YulExpressionStatement","src":"5310:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5287:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"5291:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5283:3:23"},"nodeType":"YulFunctionCall","src":"5283:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5298:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5279:3:23"},"nodeType":"YulFunctionCall","src":"5279:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5272:6:23"},"nodeType":"YulFunctionCall","src":"5272:35:23"},"nodeType":"YulIf","src":"5269:55:23"},{"nodeType":"YulAssignment","src":"5333:83:23","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5381:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"5385:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5377:3:23"},"nodeType":"YulFunctionCall","src":"5377:11:23"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5403:2:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5390:12:23"},"nodeType":"YulFunctionCall","src":"5390:16:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5408:7:23"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"5343:33:23"},"nodeType":"YulFunctionCall","src":"5343:73:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5333:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5018:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5029:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5041:6:23","type":""}],"src":"4972:450:23"},{"body":{"nodeType":"YulBlock","src":"5493:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5503:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5512:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5507:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5572:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5597:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"5602:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5593:3:23"},"nodeType":"YulFunctionCall","src":"5593:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5616:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"5621:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5612:3:23"},"nodeType":"YulFunctionCall","src":"5612:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5606:5:23"},"nodeType":"YulFunctionCall","src":"5606:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:23"},"nodeType":"YulFunctionCall","src":"5586:39:23"},"nodeType":"YulExpressionStatement","src":"5586:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5533:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"5536:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5530:2:23"},"nodeType":"YulFunctionCall","src":"5530:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5544:19:23","statements":[{"nodeType":"YulAssignment","src":"5546:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5555:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"5558:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5551:3:23"},"nodeType":"YulFunctionCall","src":"5551:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5546:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"5526:3:23","statements":[]},"src":"5522:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5655:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"5660:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5651:3:23"},"nodeType":"YulFunctionCall","src":"5651:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"5669:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5644:6:23"},"nodeType":"YulFunctionCall","src":"5644:27:23"},"nodeType":"YulExpressionStatement","src":"5644:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5471:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5476:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"5481:6:23","type":""}],"src":"5427:250:23"},{"body":{"nodeType":"YulBlock","src":"5732:221:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5742:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5762:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5756:5:23"},"nodeType":"YulFunctionCall","src":"5756:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5746:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5784:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"5789:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:23"},"nodeType":"YulFunctionCall","src":"5777:19:23"},"nodeType":"YulExpressionStatement","src":"5777:19:23"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5844:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"5851:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5840:3:23"},"nodeType":"YulFunctionCall","src":"5840:16:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5862:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"5867:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5858:3:23"},"nodeType":"YulFunctionCall","src":"5858:14:23"},{"name":"length","nodeType":"YulIdentifier","src":"5874:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5805:34:23"},"nodeType":"YulFunctionCall","src":"5805:76:23"},"nodeType":"YulExpressionStatement","src":"5805:76:23"},{"nodeType":"YulAssignment","src":"5890:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5905:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5918:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5926:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5914:3:23"},"nodeType":"YulFunctionCall","src":"5914:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5935:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5931:3:23"},"nodeType":"YulFunctionCall","src":"5931:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5910:3:23"},"nodeType":"YulFunctionCall","src":"5910:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5901:3:23"},"nodeType":"YulFunctionCall","src":"5901:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"5942:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5897:3:23"},"nodeType":"YulFunctionCall","src":"5897:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5890:3:23"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5709:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5716:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5724:3:23","type":""}],"src":"5682:271:23"},{"body":{"nodeType":"YulBlock","src":"6079:99:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6096:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6107:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6089:6:23"},"nodeType":"YulFunctionCall","src":"6089:21:23"},"nodeType":"YulExpressionStatement","src":"6089:21:23"},{"nodeType":"YulAssignment","src":"6119:53:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6145:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6157:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6168:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6153:3:23"},"nodeType":"YulFunctionCall","src":"6153:18:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6127:17:23"},"nodeType":"YulFunctionCall","src":"6127:45:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6119:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6048:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6059:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6070:4:23","type":""}],"src":"5958:220:23"},{"body":{"nodeType":"YulBlock","src":"6302:99:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6319:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6330:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6312:6:23"},"nodeType":"YulFunctionCall","src":"6312:21:23"},"nodeType":"YulExpressionStatement","src":"6312:21:23"},{"nodeType":"YulAssignment","src":"6342:53:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6368:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6380:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6391:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6376:3:23"},"nodeType":"YulFunctionCall","src":"6376:18:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6350:17:23"},"nodeType":"YulFunctionCall","src":"6350:45:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6342:4:23"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6271:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6282:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6293:4:23","type":""}],"src":"6183:218:23"},{"body":{"nodeType":"YulBlock","src":"6491:171:23","statements":[{"body":{"nodeType":"YulBlock","src":"6537:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6546:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6549:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6539:6:23"},"nodeType":"YulFunctionCall","src":"6539:12:23"},"nodeType":"YulExpressionStatement","src":"6539:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6512:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6521:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6508:3:23"},"nodeType":"YulFunctionCall","src":"6508:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6533:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6504:3:23"},"nodeType":"YulFunctionCall","src":"6504:32:23"},"nodeType":"YulIf","src":"6501:52:23"},{"nodeType":"YulAssignment","src":"6562:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6590:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"6572:17:23"},"nodeType":"YulFunctionCall","src":"6572:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6562:6:23"}]},{"nodeType":"YulAssignment","src":"6609:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6641:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6652:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6637:3:23"},"nodeType":"YulFunctionCall","src":"6637:18:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"6619:17:23"},"nodeType":"YulFunctionCall","src":"6619:37:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6609:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6449:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6460:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6472:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6480:6:23","type":""}],"src":"6406:256:23"},{"body":{"nodeType":"YulBlock","src":"6768:102:23","statements":[{"nodeType":"YulAssignment","src":"6778:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6790:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6801:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6786:3:23"},"nodeType":"YulFunctionCall","src":"6786:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6778:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6820:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6835:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6851:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6856:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6847:3:23"},"nodeType":"YulFunctionCall","src":"6847:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"6860:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6843:3:23"},"nodeType":"YulFunctionCall","src":"6843:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6831:3:23"},"nodeType":"YulFunctionCall","src":"6831:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6813:6:23"},"nodeType":"YulFunctionCall","src":"6813:51:23"},"nodeType":"YulExpressionStatement","src":"6813:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6737:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6748:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6759:4:23","type":""}],"src":"6667:203:23"},{"body":{"nodeType":"YulBlock","src":"7003:102:23","statements":[{"nodeType":"YulAssignment","src":"7013:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7025:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7036:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7021:3:23"},"nodeType":"YulFunctionCall","src":"7021:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7013:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7055:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7070:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7086:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7091:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7082:3:23"},"nodeType":"YulFunctionCall","src":"7082:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"7095:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7078:3:23"},"nodeType":"YulFunctionCall","src":"7078:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7066:3:23"},"nodeType":"YulFunctionCall","src":"7066:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7048:6:23"},"nodeType":"YulFunctionCall","src":"7048:51:23"},"nodeType":"YulExpressionStatement","src":"7048:51:23"}]},"name":"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6972:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6983:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6994:4:23","type":""}],"src":"6875:230:23"},{"body":{"nodeType":"YulBlock","src":"7248:484:23","statements":[{"body":{"nodeType":"YulBlock","src":"7295:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7304:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7307:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7297:6:23"},"nodeType":"YulFunctionCall","src":"7297:12:23"},"nodeType":"YulExpressionStatement","src":"7297:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7269:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7278:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7265:3:23"},"nodeType":"YulFunctionCall","src":"7265:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7290:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7261:3:23"},"nodeType":"YulFunctionCall","src":"7261:33:23"},"nodeType":"YulIf","src":"7258:53:23"},{"nodeType":"YulAssignment","src":"7320:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7348:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7330:17:23"},"nodeType":"YulFunctionCall","src":"7330:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7320:6:23"}]},{"nodeType":"YulAssignment","src":"7367:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7399:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7410:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7395:3:23"},"nodeType":"YulFunctionCall","src":"7395:18:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7377:17:23"},"nodeType":"YulFunctionCall","src":"7377:37:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7367:6:23"}]},{"nodeType":"YulAssignment","src":"7423:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7450:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7461:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7446:3:23"},"nodeType":"YulFunctionCall","src":"7446:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7433:12:23"},"nodeType":"YulFunctionCall","src":"7433:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7423:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"7474:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7505:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7516:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7501:3:23"},"nodeType":"YulFunctionCall","src":"7501:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7488:12:23"},"nodeType":"YulFunctionCall","src":"7488:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7478:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7563:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7572:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7575:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7565:6:23"},"nodeType":"YulFunctionCall","src":"7565:12:23"},"nodeType":"YulExpressionStatement","src":"7565:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7535:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7551:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"7555:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7547:3:23"},"nodeType":"YulFunctionCall","src":"7547:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"7559:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7543:3:23"},"nodeType":"YulFunctionCall","src":"7543:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7532:2:23"},"nodeType":"YulFunctionCall","src":"7532:30:23"},"nodeType":"YulIf","src":"7529:50:23"},{"nodeType":"YulVariableDeclaration","src":"7588:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"7655:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:23"},"nodeType":"YulFunctionCall","src":"7640:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7664:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"7614:25:23"},"nodeType":"YulFunctionCall","src":"7614:58:23"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"7592:8:23","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"7602:8:23","type":""}]},{"nodeType":"YulAssignment","src":"7681:18:23","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"7691:8:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7681:6:23"}]},{"nodeType":"YulAssignment","src":"7708:18:23","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"7718:8:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7708:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7182:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7193:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7205:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7213:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7221:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7229:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7237:6:23","type":""}],"src":"7110:622:23"},{"body":{"nodeType":"YulBlock","src":"7839:222:23","statements":[{"body":{"nodeType":"YulBlock","src":"7885:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7894:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7897:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7887:6:23"},"nodeType":"YulFunctionCall","src":"7887:12:23"},"nodeType":"YulExpressionStatement","src":"7887:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7860:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7869:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7856:3:23"},"nodeType":"YulFunctionCall","src":"7856:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7881:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7852:3:23"},"nodeType":"YulFunctionCall","src":"7852:32:23"},"nodeType":"YulIf","src":"7849:52:23"},{"nodeType":"YulAssignment","src":"7910:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7938:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7920:17:23"},"nodeType":"YulFunctionCall","src":"7920:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7910:6:23"}]},{"nodeType":"YulAssignment","src":"7957:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7989:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8000:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7985:3:23"},"nodeType":"YulFunctionCall","src":"7985:18:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7967:17:23"},"nodeType":"YulFunctionCall","src":"7967:37:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7957:6:23"}]},{"nodeType":"YulAssignment","src":"8013:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8040:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8051:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8036:3:23"},"nodeType":"YulFunctionCall","src":"8036:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8023:12:23"},"nodeType":"YulFunctionCall","src":"8023:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8013:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7789:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7800:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7812:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7820:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7828:6:23","type":""}],"src":"7737:324:23"},{"body":{"nodeType":"YulBlock","src":"8185:280:23","statements":[{"body":{"nodeType":"YulBlock","src":"8232:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8241:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8244:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8234:6:23"},"nodeType":"YulFunctionCall","src":"8234:12:23"},"nodeType":"YulExpressionStatement","src":"8234:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8206:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"8215:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8202:3:23"},"nodeType":"YulFunctionCall","src":"8202:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"8227:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8198:3:23"},"nodeType":"YulFunctionCall","src":"8198:33:23"},"nodeType":"YulIf","src":"8195:53:23"},{"nodeType":"YulAssignment","src":"8257:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8285:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"8267:17:23"},"nodeType":"YulFunctionCall","src":"8267:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8257:6:23"}]},{"nodeType":"YulAssignment","src":"8304:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8336:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8347:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8332:3:23"},"nodeType":"YulFunctionCall","src":"8332:18:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"8314:17:23"},"nodeType":"YulFunctionCall","src":"8314:37:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8304:6:23"}]},{"nodeType":"YulAssignment","src":"8360:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8393:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8404:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8389:3:23"},"nodeType":"YulFunctionCall","src":"8389:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8370:18:23"},"nodeType":"YulFunctionCall","src":"8370:38:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8360:6:23"}]},{"nodeType":"YulAssignment","src":"8417:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8455:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8440:3:23"},"nodeType":"YulFunctionCall","src":"8440:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8427:12:23"},"nodeType":"YulFunctionCall","src":"8427:32:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8417:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8127:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8138:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8150:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8158:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8166:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8174:6:23","type":""}],"src":"8066:399:23"},{"body":{"nodeType":"YulBlock","src":"8644:180:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8661:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8672:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8654:6:23"},"nodeType":"YulFunctionCall","src":"8654:21:23"},"nodeType":"YulExpressionStatement","src":"8654:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8695:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8706:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8691:3:23"},"nodeType":"YulFunctionCall","src":"8691:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"8711:2:23","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8684:6:23"},"nodeType":"YulFunctionCall","src":"8684:30:23"},"nodeType":"YulExpressionStatement","src":"8684:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8734:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8730:3:23"},"nodeType":"YulFunctionCall","src":"8730:18:23"},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"8750:32:23","type":"","value":"LzApp: invalid endpoint caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8723:6:23"},"nodeType":"YulFunctionCall","src":"8723:60:23"},"nodeType":"YulExpressionStatement","src":"8723:60:23"},{"nodeType":"YulAssignment","src":"8792:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8804:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8815:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8800:3:23"},"nodeType":"YulFunctionCall","src":"8800:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8792:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8621:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8635:4:23","type":""}],"src":"8470:354:23"},{"body":{"nodeType":"YulBlock","src":"8884:325:23","statements":[{"nodeType":"YulAssignment","src":"8894:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8908:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8911:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8904:3:23"},"nodeType":"YulFunctionCall","src":"8904:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8894:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"8925:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8955:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"8961:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8951:3:23"},"nodeType":"YulFunctionCall","src":"8951:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8929:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"9002:31:23","statements":[{"nodeType":"YulAssignment","src":"9004:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9018:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"9026:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9014:3:23"},"nodeType":"YulFunctionCall","src":"9014:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9004:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8982:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8975:6:23"},"nodeType":"YulFunctionCall","src":"8975:26:23"},"nodeType":"YulIf","src":"8972:61:23"},{"body":{"nodeType":"YulBlock","src":"9092:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9113:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9120:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9125:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9116:3:23"},"nodeType":"YulFunctionCall","src":"9116:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9106:6:23"},"nodeType":"YulFunctionCall","src":"9106:31:23"},"nodeType":"YulExpressionStatement","src":"9106:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9157:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9160:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9150:6:23"},"nodeType":"YulFunctionCall","src":"9150:15:23"},"nodeType":"YulExpressionStatement","src":"9150:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9185:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9188:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9178:6:23"},"nodeType":"YulFunctionCall","src":"9178:15:23"},"nodeType":"YulExpressionStatement","src":"9178:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9048:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9071:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"9079:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9068:2:23"},"nodeType":"YulFunctionCall","src":"9068:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9045:2:23"},"nodeType":"YulFunctionCall","src":"9045:38:23"},"nodeType":"YulIf","src":"9042:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8864:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8873:6:23","type":""}],"src":"8829:380:23"},{"body":{"nodeType":"YulBlock","src":"9361:124:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9384:3:23"},{"name":"value0","nodeType":"YulIdentifier","src":"9389:6:23"},{"name":"value1","nodeType":"YulIdentifier","src":"9397:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9371:12:23"},"nodeType":"YulFunctionCall","src":"9371:33:23"},"nodeType":"YulExpressionStatement","src":"9371:33:23"},{"nodeType":"YulVariableDeclaration","src":"9413:26:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9427:3:23"},{"name":"value1","nodeType":"YulIdentifier","src":"9432:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9423:3:23"},"nodeType":"YulFunctionCall","src":"9423:16:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9417:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9455:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"9459:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9448:6:23"},"nodeType":"YulFunctionCall","src":"9448:13:23"},"nodeType":"YulExpressionStatement","src":"9448:13:23"},{"nodeType":"YulAssignment","src":"9470:9:23","value":{"name":"_1","nodeType":"YulIdentifier","src":"9477:2:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9470:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9329:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9334:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9342:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9353:3:23","type":""}],"src":"9214:271:23"},{"body":{"nodeType":"YulBlock","src":"9664:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9681:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9692:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9674:6:23"},"nodeType":"YulFunctionCall","src":"9674:21:23"},"nodeType":"YulExpressionStatement","src":"9674:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9715:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9726:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9711:3:23"},"nodeType":"YulFunctionCall","src":"9711:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"9731:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9704:6:23"},"nodeType":"YulFunctionCall","src":"9704:30:23"},"nodeType":"YulExpressionStatement","src":"9704:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9754:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9765:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9750:3:23"},"nodeType":"YulFunctionCall","src":"9750:18:23"},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f","kind":"string","nodeType":"YulLiteral","src":"9770:34:23","type":"","value":"LzApp: invalid source sending co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9743:6:23"},"nodeType":"YulFunctionCall","src":"9743:62:23"},"nodeType":"YulExpressionStatement","src":"9743:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9825:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9836:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9821:3:23"},"nodeType":"YulFunctionCall","src":"9821:18:23"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"9841:8:23","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9814:6:23"},"nodeType":"YulFunctionCall","src":"9814:36:23"},"nodeType":"YulExpressionStatement","src":"9814:36:23"},{"nodeType":"YulAssignment","src":"9859:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9871:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9882:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9867:3:23"},"nodeType":"YulFunctionCall","src":"9867:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9859:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9641:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9655:4:23","type":""}],"src":"9490:402:23"},{"body":{"nodeType":"YulBlock","src":"9996:89:23","statements":[{"nodeType":"YulAssignment","src":"10006:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10018:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10029:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10014:3:23"},"nodeType":"YulFunctionCall","src":"10014:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10006:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10048:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10063:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"10071:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10059:3:23"},"nodeType":"YulFunctionCall","src":"10059:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10041:6:23"},"nodeType":"YulFunctionCall","src":"10041:38:23"},"nodeType":"YulExpressionStatement","src":"10041:38:23"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9965:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9976:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9987:4:23","type":""}],"src":"9897:188:23"},{"body":{"nodeType":"YulBlock","src":"10156:200:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10173:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"10178:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10166:6:23"},"nodeType":"YulFunctionCall","src":"10166:19:23"},"nodeType":"YulExpressionStatement","src":"10166:19:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10211:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"10216:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10207:3:23"},"nodeType":"YulFunctionCall","src":"10207:14:23"},{"name":"start","nodeType":"YulIdentifier","src":"10223:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"10230:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10194:12:23"},"nodeType":"YulFunctionCall","src":"10194:43:23"},"nodeType":"YulExpressionStatement","src":"10194:43:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10261:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"10266:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10257:3:23"},"nodeType":"YulFunctionCall","src":"10257:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"10275:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10253:3:23"},"nodeType":"YulFunctionCall","src":"10253:27:23"},{"kind":"number","nodeType":"YulLiteral","src":"10282:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10246:6:23"},"nodeType":"YulFunctionCall","src":"10246:38:23"},"nodeType":"YulExpressionStatement","src":"10246:38:23"},{"nodeType":"YulAssignment","src":"10293:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10308:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10321:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"10329:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10317:3:23"},"nodeType":"YulFunctionCall","src":"10317:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10338:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10334:3:23"},"nodeType":"YulFunctionCall","src":"10334:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10313:3:23"},"nodeType":"YulFunctionCall","src":"10313:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10304:3:23"},"nodeType":"YulFunctionCall","src":"10304:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"10345:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10300:3:23"},"nodeType":"YulFunctionCall","src":"10300:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10293:3:23"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"10125:5:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"10132:6:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10140:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10148:3:23","type":""}],"src":"10090:266:23"},{"body":{"nodeType":"YulBlock","src":"10516:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10533:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10548:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"10556:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10544:3:23"},"nodeType":"YulFunctionCall","src":"10544:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10526:6:23"},"nodeType":"YulFunctionCall","src":"10526:38:23"},"nodeType":"YulExpressionStatement","src":"10526:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10584:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10595:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10580:3:23"},"nodeType":"YulFunctionCall","src":"10580:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"10600:2:23","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10573:6:23"},"nodeType":"YulFunctionCall","src":"10573:30:23"},"nodeType":"YulExpressionStatement","src":"10573:30:23"},{"nodeType":"YulAssignment","src":"10612:69:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10646:6:23"},{"name":"value2","nodeType":"YulIdentifier","src":"10654:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:23"},"nodeType":"YulFunctionCall","src":"10662:18:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"10620:25:23"},"nodeType":"YulFunctionCall","src":"10620:61:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10612:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10469:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10480:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10488:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10496:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10507:4:23","type":""}],"src":"10361:326:23"},{"body":{"nodeType":"YulBlock","src":"10839:178:23","statements":[{"nodeType":"YulVariableDeclaration","src":"10849:33:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10871:2:23","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"10875:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10867:3:23"},"nodeType":"YulFunctionCall","src":"10867:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"10879:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10863:3:23"},"nodeType":"YulFunctionCall","src":"10863:18:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10859:3:23"},"nodeType":"YulFunctionCall","src":"10859:23:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10853:2:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10898:3:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10911:2:23","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"10915:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10907:3:23"},"nodeType":"YulFunctionCall","src":"10907:15:23"},{"name":"_1","nodeType":"YulIdentifier","src":"10924:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10903:3:23"},"nodeType":"YulFunctionCall","src":"10903:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10891:6:23"},"nodeType":"YulFunctionCall","src":"10891:37:23"},"nodeType":"YulExpressionStatement","src":"10891:37:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10948:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"10953:2:23","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10944:3:23"},"nodeType":"YulFunctionCall","src":"10944:12:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10966:2:23","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"10970:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10962:3:23"},"nodeType":"YulFunctionCall","src":"10962:15:23"},{"name":"_1","nodeType":"YulIdentifier","src":"10979:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10958:3:23"},"nodeType":"YulFunctionCall","src":"10958:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10937:6:23"},"nodeType":"YulFunctionCall","src":"10937:46:23"},"nodeType":"YulExpressionStatement","src":"10937:46:23"},{"nodeType":"YulAssignment","src":"10992:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11003:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11008:2:23","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10999:3:23"},"nodeType":"YulFunctionCall","src":"10999:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10992:3:23"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10807:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10812:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10820:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10831:3:23","type":""}],"src":"10692:325:23"},{"body":{"nodeType":"YulBlock","src":"11077:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11094:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11097:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11087:6:23"},"nodeType":"YulFunctionCall","src":"11087:14:23"},"nodeType":"YulExpressionStatement","src":"11087:14:23"},{"nodeType":"YulAssignment","src":"11110:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11128:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11131:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11118:9:23"},"nodeType":"YulFunctionCall","src":"11118:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11110:4:23"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11060:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11068:4:23","type":""}],"src":"11022:120:23"},{"body":{"nodeType":"YulBlock","src":"11227:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"11260:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11274:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11284:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11278:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11305:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"11309:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11298:6:23"},"nodeType":"YulFunctionCall","src":"11298:17:23"},"nodeType":"YulExpressionStatement","src":"11298:17:23"},{"nodeType":"YulVariableDeclaration","src":"11328:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11350:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"11354:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11340:9:23"},"nodeType":"YulFunctionCall","src":"11340:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"11332:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11372:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11395:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11405:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11412:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"11424:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11408:3:23"},"nodeType":"YulFunctionCall","src":"11408:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11401:3:23"},"nodeType":"YulFunctionCall","src":"11401:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11391:3:23"},"nodeType":"YulFunctionCall","src":"11391:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"11376:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11466:23:23","statements":[{"nodeType":"YulAssignment","src":"11468:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"11483:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11468:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11448:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"11460:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11445:2:23"},"nodeType":"YulFunctionCall","src":"11445:20:23"},"nodeType":"YulIf","src":"11442:47:23"},{"nodeType":"YulVariableDeclaration","src":"11502:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11516:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11526:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11533:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11538:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11529:3:23"},"nodeType":"YulFunctionCall","src":"11529:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11522:3:23"},"nodeType":"YulFunctionCall","src":"11522:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11512:3:23"},"nodeType":"YulFunctionCall","src":"11512:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11506:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11556:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"11569:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"11560:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11654:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11663:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11670:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11656:6:23"},"nodeType":"YulFunctionCall","src":"11656:17:23"},"nodeType":"YulExpressionStatement","src":"11656:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11604:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"11611:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11601:2:23"},"nodeType":"YulFunctionCall","src":"11601:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11615:26:23","statements":[{"nodeType":"YulAssignment","src":"11617:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11630:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"11637:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11626:3:23"},"nodeType":"YulFunctionCall","src":"11626:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"11617:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"11597:3:23","statements":[]},"src":"11593:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11243:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11248:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11240:2:23"},"nodeType":"YulFunctionCall","src":"11240:11:23"},"nodeType":"YulIf","src":"11237:448:23"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"11199:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"11206:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"11211:10:23","type":""}],"src":"11147:544:23"},{"body":{"nodeType":"YulBlock","src":"11781:81:23","statements":[{"nodeType":"YulAssignment","src":"11791:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11806:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11824:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"11827:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11820:3:23"},"nodeType":"YulFunctionCall","src":"11820:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11837:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11833:3:23"},"nodeType":"YulFunctionCall","src":"11833:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11816:3:23"},"nodeType":"YulFunctionCall","src":"11816:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11812:3:23"},"nodeType":"YulFunctionCall","src":"11812:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11802:3:23"},"nodeType":"YulFunctionCall","src":"11802:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11848:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"11851:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11844:3:23"},"nodeType":"YulFunctionCall","src":"11844:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11799:2:23"},"nodeType":"YulFunctionCall","src":"11799:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11791:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11758:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"11764:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11772:4:23","type":""}],"src":"11696:166:23"},{"body":{"nodeType":"YulBlock","src":"11961:1254:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11971:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11991:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11985:5:23"},"nodeType":"YulFunctionCall","src":"11985:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11975:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"12038:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12040:16:23"},"nodeType":"YulFunctionCall","src":"12040:18:23"},"nodeType":"YulExpressionStatement","src":"12040:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12010:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12026:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"12030:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12022:3:23"},"nodeType":"YulFunctionCall","src":"12022:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"12034:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12018:3:23"},"nodeType":"YulFunctionCall","src":"12018:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12007:2:23"},"nodeType":"YulFunctionCall","src":"12007:30:23"},"nodeType":"YulIf","src":"12004:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12112:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12150:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12144:5:23"},"nodeType":"YulFunctionCall","src":"12144:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12118:25:23"},"nodeType":"YulFunctionCall","src":"12118:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"12158:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"12069:42:23"},"nodeType":"YulFunctionCall","src":"12069:96:23"},"nodeType":"YulExpressionStatement","src":"12069:96:23"},{"nodeType":"YulVariableDeclaration","src":"12174:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12191:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"12178:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12201:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12220:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"12205:11:23","type":""}]},{"nodeType":"YulAssignment","src":"12233:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12246:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12233:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12303:655:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12317:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12336:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12348:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12344:3:23"},"nodeType":"YulFunctionCall","src":"12344:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12332:3:23"},"nodeType":"YulFunctionCall","src":"12332:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"12321:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12365:48:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12408:4:23"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"12379:28:23"},"nodeType":"YulFunctionCall","src":"12379:34:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"12369:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12426:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12435:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12430:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"12513:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12538:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12556:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12561:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12552:3:23"},"nodeType":"YulFunctionCall","src":"12552:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12546:5:23"},"nodeType":"YulFunctionCall","src":"12546:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12531:6:23"},"nodeType":"YulFunctionCall","src":"12531:42:23"},"nodeType":"YulExpressionStatement","src":"12531:42:23"},{"nodeType":"YulAssignment","src":"12590:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12604:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12612:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:23"},"nodeType":"YulFunctionCall","src":"12600:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12590:6:23"}]},{"nodeType":"YulAssignment","src":"12631:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12648:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12659:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12644:3:23"},"nodeType":"YulFunctionCall","src":"12644:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12631:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12460:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12463:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12457:2:23"},"nodeType":"YulFunctionCall","src":"12457:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12472:28:23","statements":[{"nodeType":"YulAssignment","src":"12474:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12483:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12486:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12479:3:23"},"nodeType":"YulFunctionCall","src":"12479:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12474:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"12453:3:23","statements":[]},"src":"12449:236:23"},{"body":{"nodeType":"YulBlock","src":"12733:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12751:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12778:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12783:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12774:3:23"},"nodeType":"YulFunctionCall","src":"12774:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12768:5:23"},"nodeType":"YulFunctionCall","src":"12768:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12755:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12818:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12830:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12857:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"12860:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12853:3:23"},"nodeType":"YulFunctionCall","src":"12853:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"12869:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12849:3:23"},"nodeType":"YulFunctionCall","src":"12849:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12879:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12875:3:23"},"nodeType":"YulFunctionCall","src":"12875:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12845:3:23"},"nodeType":"YulFunctionCall","src":"12845:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12841:3:23"},"nodeType":"YulFunctionCall","src":"12841:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12826:3:23"},"nodeType":"YulFunctionCall","src":"12826:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12811:6:23"},"nodeType":"YulFunctionCall","src":"12811:74:23"},"nodeType":"YulExpressionStatement","src":"12811:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12704:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"12713:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12701:2:23"},"nodeType":"YulFunctionCall","src":"12701:19:23"},"nodeType":"YulIf","src":"12698:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12919:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12933:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"12936:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12929:3:23"},"nodeType":"YulFunctionCall","src":"12929:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"12945:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:23"},"nodeType":"YulFunctionCall","src":"12925:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12912:6:23"},"nodeType":"YulFunctionCall","src":"12912:36:23"},"nodeType":"YulExpressionStatement","src":"12912:36:23"}]},"nodeType":"YulCase","src":"12296:662:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12301:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12975:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12989:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13002:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12993:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"13038:67:23","statements":[{"nodeType":"YulAssignment","src":"13056:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13075:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13080:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13071:3:23"},"nodeType":"YulFunctionCall","src":"13071:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13065:5:23"},"nodeType":"YulFunctionCall","src":"13065:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13056:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"13019:6:23"},"nodeType":"YulIf","src":"13016:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13125:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13184:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"13191:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"13131:52:23"},"nodeType":"YulFunctionCall","src":"13131:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13118:6:23"},"nodeType":"YulFunctionCall","src":"13118:81:23"},"nodeType":"YulExpressionStatement","src":"13118:81:23"}]},"nodeType":"YulCase","src":"12967:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12276:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12284:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12273:2:23"},"nodeType":"YulFunctionCall","src":"12273:14:23"},"nodeType":"YulSwitch","src":"12266:943:23"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11946:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"11952:3:23","type":""}],"src":"11867:1348:23"},{"body":{"nodeType":"YulBlock","src":"13394:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13411:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13422:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13404:6:23"},"nodeType":"YulFunctionCall","src":"13404:21:23"},"nodeType":"YulExpressionStatement","src":"13404:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13445:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13456:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13441:3:23"},"nodeType":"YulFunctionCall","src":"13441:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"13461:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13434:6:23"},"nodeType":"YulFunctionCall","src":"13434:30:23"},"nodeType":"YulExpressionStatement","src":"13434:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13484:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13495:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13480:3:23"},"nodeType":"YulFunctionCall","src":"13480:18:23"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265","kind":"string","nodeType":"YulLiteral","src":"13500:34:23","type":"","value":"NonblockingLzApp: caller must be"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13473:6:23"},"nodeType":"YulFunctionCall","src":"13473:62:23"},"nodeType":"YulExpressionStatement","src":"13473:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13555:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13566:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13551:3:23"},"nodeType":"YulFunctionCall","src":"13551:18:23"},{"hexValue":"204c7a417070","kind":"string","nodeType":"YulLiteral","src":"13571:8:23","type":"","value":" LzApp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13544:6:23"},"nodeType":"YulFunctionCall","src":"13544:36:23"},"nodeType":"YulExpressionStatement","src":"13544:36:23"},{"nodeType":"YulAssignment","src":"13589:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13601:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13612:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13597:3:23"},"nodeType":"YulFunctionCall","src":"13597:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13589:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13371:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13385:4:23","type":""}],"src":"13220:402:23"},{"body":{"nodeType":"YulBlock","src":"13801:179:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13818:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13829:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13811:6:23"},"nodeType":"YulFunctionCall","src":"13811:21:23"},"nodeType":"YulExpressionStatement","src":"13811:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13852:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13863:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13848:3:23"},"nodeType":"YulFunctionCall","src":"13848:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"13868:2:23","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13841:6:23"},"nodeType":"YulFunctionCall","src":"13841:30:23"},"nodeType":"YulExpressionStatement","src":"13841:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13891:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13902:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13887:3:23"},"nodeType":"YulFunctionCall","src":"13887:18:23"},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","kind":"string","nodeType":"YulLiteral","src":"13907:31:23","type":"","value":"LzApp: no trusted path record"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13880:6:23"},"nodeType":"YulFunctionCall","src":"13880:59:23"},"nodeType":"YulExpressionStatement","src":"13880:59:23"},{"nodeType":"YulAssignment","src":"13948:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13960:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13971:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13956:3:23"},"nodeType":"YulFunctionCall","src":"13956:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13948:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13778:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13792:4:23","type":""}],"src":"13627:353:23"},{"body":{"nodeType":"YulBlock","src":"14017:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14034:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14041:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14046:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14037:3:23"},"nodeType":"YulFunctionCall","src":"14037:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14027:6:23"},"nodeType":"YulFunctionCall","src":"14027:31:23"},"nodeType":"YulExpressionStatement","src":"14027:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14074:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14077:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14067:6:23"},"nodeType":"YulFunctionCall","src":"14067:15:23"},"nodeType":"YulExpressionStatement","src":"14067:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14098:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14101:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14091:6:23"},"nodeType":"YulFunctionCall","src":"14091:15:23"},"nodeType":"YulExpressionStatement","src":"14091:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13985:127:23"},{"body":{"nodeType":"YulBlock","src":"14166:79:23","statements":[{"nodeType":"YulAssignment","src":"14176:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14188:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"14191:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14184:3:23"},"nodeType":"YulFunctionCall","src":"14184:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14176:4:23"}]},{"body":{"nodeType":"YulBlock","src":"14217:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14219:16:23"},"nodeType":"YulFunctionCall","src":"14219:18:23"},"nodeType":"YulExpressionStatement","src":"14219:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14208:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"14214:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14205:2:23"},"nodeType":"YulFunctionCall","src":"14205:11:23"},"nodeType":"YulIf","src":"14202:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14148:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"14151:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14157:4:23","type":""}],"src":"14117:128:23"},{"body":{"nodeType":"YulBlock","src":"14425:177:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14448:3:23"},{"name":"value0","nodeType":"YulIdentifier","src":"14453:6:23"},{"name":"value1","nodeType":"YulIdentifier","src":"14461:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14435:12:23"},"nodeType":"YulFunctionCall","src":"14435:33:23"},"nodeType":"YulExpressionStatement","src":"14435:33:23"},{"nodeType":"YulVariableDeclaration","src":"14477:26:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14491:3:23"},{"name":"value1","nodeType":"YulIdentifier","src":"14496:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14487:3:23"},"nodeType":"YulFunctionCall","src":"14487:16:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14481:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14519:2:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14531:2:23","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"14535:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14527:3:23"},"nodeType":"YulFunctionCall","src":"14527:15:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14556:2:23","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"14560:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14552:3:23"},"nodeType":"YulFunctionCall","src":"14552:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"14564:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14548:3:23"},"nodeType":"YulFunctionCall","src":"14548:18:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14544:3:23"},"nodeType":"YulFunctionCall","src":"14544:23:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14523:3:23"},"nodeType":"YulFunctionCall","src":"14523:45:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14512:6:23"},"nodeType":"YulFunctionCall","src":"14512:57:23"},"nodeType":"YulExpressionStatement","src":"14512:57:23"},{"nodeType":"YulAssignment","src":"14578:18:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14589:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"14593:2:23","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14585:3:23"},"nodeType":"YulFunctionCall","src":"14585:11:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14578:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14385:3:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14390:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14398:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14406:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14417:3:23","type":""}],"src":"14250:352:23"},{"body":{"nodeType":"YulBlock","src":"14816:289:23","statements":[{"nodeType":"YulVariableDeclaration","src":"14826:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14836:6:23","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14830:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14858:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14873:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"14881:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14869:3:23"},"nodeType":"YulFunctionCall","src":"14869:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14851:6:23"},"nodeType":"YulFunctionCall","src":"14851:34:23"},"nodeType":"YulExpressionStatement","src":"14851:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14905:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14916:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14901:3:23"},"nodeType":"YulFunctionCall","src":"14901:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14925:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"14933:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14921:3:23"},"nodeType":"YulFunctionCall","src":"14921:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14894:6:23"},"nodeType":"YulFunctionCall","src":"14894:43:23"},"nodeType":"YulExpressionStatement","src":"14894:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14957:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14968:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14953:3:23"},"nodeType":"YulFunctionCall","src":"14953:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"14973:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14946:6:23"},"nodeType":"YulFunctionCall","src":"14946:34:23"},"nodeType":"YulExpressionStatement","src":"14946:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15000:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15011:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14996:3:23"},"nodeType":"YulFunctionCall","src":"14996:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"15016:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14989:6:23"},"nodeType":"YulFunctionCall","src":"14989:31:23"},"nodeType":"YulExpressionStatement","src":"14989:31:23"},{"nodeType":"YulAssignment","src":"15029:70:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15063:6:23"},{"name":"value4","nodeType":"YulIdentifier","src":"15071:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15083:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15094:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15079:3:23"},"nodeType":"YulFunctionCall","src":"15079:19:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"15037:25:23"},"nodeType":"YulFunctionCall","src":"15037:62:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15029:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14753:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14764:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14772:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14780:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14788:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14796:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14807:4:23","type":""}],"src":"14607:498:23"},{"body":{"nodeType":"YulBlock","src":"15284:225:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15301:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15312:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15294:6:23"},"nodeType":"YulFunctionCall","src":"15294:21:23"},"nodeType":"YulExpressionStatement","src":"15294:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15335:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15346:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15331:3:23"},"nodeType":"YulFunctionCall","src":"15331:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"15351:2:23","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15324:6:23"},"nodeType":"YulFunctionCall","src":"15324:30:23"},"nodeType":"YulExpressionStatement","src":"15324:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15374:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15385:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15370:3:23"},"nodeType":"YulFunctionCall","src":"15370:18:23"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373","kind":"string","nodeType":"YulLiteral","src":"15390:34:23","type":"","value":"NonblockingLzApp: no stored mess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15363:6:23"},"nodeType":"YulFunctionCall","src":"15363:62:23"},"nodeType":"YulExpressionStatement","src":"15363:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15445:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15456:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15441:3:23"},"nodeType":"YulFunctionCall","src":"15441:18:23"},{"hexValue":"616765","kind":"string","nodeType":"YulLiteral","src":"15461:5:23","type":"","value":"age"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15434:6:23"},"nodeType":"YulFunctionCall","src":"15434:33:23"},"nodeType":"YulExpressionStatement","src":"15434:33:23"},{"nodeType":"YulAssignment","src":"15476:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15488:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15499:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15484:3:23"},"nodeType":"YulFunctionCall","src":"15484:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15476:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15261:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15275:4:23","type":""}],"src":"15110:399:23"},{"body":{"nodeType":"YulBlock","src":"15688:223:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15705:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15716:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15698:6:23"},"nodeType":"YulFunctionCall","src":"15698:21:23"},"nodeType":"YulExpressionStatement","src":"15698:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15739:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15750:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15735:3:23"},"nodeType":"YulFunctionCall","src":"15735:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"15755:2:23","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15728:6:23"},"nodeType":"YulFunctionCall","src":"15728:30:23"},"nodeType":"YulExpressionStatement","src":"15728:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15778:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15789:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15774:3:23"},"nodeType":"YulFunctionCall","src":"15774:18:23"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f61","kind":"string","nodeType":"YulLiteral","src":"15794:34:23","type":"","value":"NonblockingLzApp: invalid payloa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15767:6:23"},"nodeType":"YulFunctionCall","src":"15767:62:23"},"nodeType":"YulExpressionStatement","src":"15767:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15849:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15860:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15845:3:23"},"nodeType":"YulFunctionCall","src":"15845:18:23"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"15865:3:23","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15838:6:23"},"nodeType":"YulFunctionCall","src":"15838:31:23"},"nodeType":"YulExpressionStatement","src":"15838:31:23"},{"nodeType":"YulAssignment","src":"15878:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15890:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15901:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15886:3:23"},"nodeType":"YulFunctionCall","src":"15886:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15878:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15665:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15679:4:23","type":""}],"src":"15514:397:23"},{"body":{"nodeType":"YulBlock","src":"16125:284:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16142:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16157:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16165:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16153:3:23"},"nodeType":"YulFunctionCall","src":"16153:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16135:6:23"},"nodeType":"YulFunctionCall","src":"16135:38:23"},"nodeType":"YulExpressionStatement","src":"16135:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16193:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16204:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16189:3:23"},"nodeType":"YulFunctionCall","src":"16189:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"16209:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16182:6:23"},"nodeType":"YulFunctionCall","src":"16182:31:23"},"nodeType":"YulExpressionStatement","src":"16182:31:23"},{"nodeType":"YulAssignment","src":"16222:70:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16256:6:23"},{"name":"value2","nodeType":"YulIdentifier","src":"16264:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16276:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16287:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16272:3:23"},"nodeType":"YulFunctionCall","src":"16272:19:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"16230:25:23"},"nodeType":"YulFunctionCall","src":"16230:62:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16222:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16312:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16323:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16308:3:23"},"nodeType":"YulFunctionCall","src":"16308:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16332:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16348:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"16352:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16344:3:23"},"nodeType":"YulFunctionCall","src":"16344:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"16356:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16340:3:23"},"nodeType":"YulFunctionCall","src":"16340:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16328:3:23"},"nodeType":"YulFunctionCall","src":"16328:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16301:6:23"},"nodeType":"YulFunctionCall","src":"16301:59:23"},"nodeType":"YulExpressionStatement","src":"16301:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16380:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16391:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16376:3:23"},"nodeType":"YulFunctionCall","src":"16376:18:23"},{"name":"value4","nodeType":"YulIdentifier","src":"16396:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16369:6:23"},"nodeType":"YulFunctionCall","src":"16369:34:23"},"nodeType":"YulExpressionStatement","src":"16369:34:23"}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16062:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16073:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16081:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16089:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16097:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16105:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16116:4:23","type":""}],"src":"15916:493:23"},{"body":{"nodeType":"YulBlock","src":"16567:205:23","statements":[{"nodeType":"YulAssignment","src":"16577:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16589:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16600:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16585:3:23"},"nodeType":"YulFunctionCall","src":"16585:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16577:4:23"}]},{"nodeType":"YulVariableDeclaration","src":"16612:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"16622:6:23","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16616:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16644:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16659:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"16667:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16655:3:23"},"nodeType":"YulFunctionCall","src":"16655:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16637:6:23"},"nodeType":"YulFunctionCall","src":"16637:34:23"},"nodeType":"YulExpressionStatement","src":"16637:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16691:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16702:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16687:3:23"},"nodeType":"YulFunctionCall","src":"16687:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16711:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"16719:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16707:3:23"},"nodeType":"YulFunctionCall","src":"16707:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16680:6:23"},"nodeType":"YulFunctionCall","src":"16680:43:23"},"nodeType":"YulExpressionStatement","src":"16680:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16743:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16754:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16739:3:23"},"nodeType":"YulFunctionCall","src":"16739:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"16759:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16732:6:23"},"nodeType":"YulFunctionCall","src":"16732:34:23"},"nodeType":"YulExpressionStatement","src":"16732:34:23"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16520:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16531:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16539:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16547:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16558:4:23","type":""}],"src":"16414:358:23"},{"body":{"nodeType":"YulBlock","src":"16878:1101:23","statements":[{"body":{"nodeType":"YulBlock","src":"16919:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16921:16:23"},"nodeType":"YulFunctionCall","src":"16921:18:23"},"nodeType":"YulExpressionStatement","src":"16921:18:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"16894:3:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16907:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"16911:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16903:3:23"},"nodeType":"YulFunctionCall","src":"16903:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"16915:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16899:3:23"},"nodeType":"YulFunctionCall","src":"16899:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16891:2:23"},"nodeType":"YulFunctionCall","src":"16891:27:23"},"nodeType":"YulIf","src":"16888:53:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16993:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17031:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17025:5:23"},"nodeType":"YulFunctionCall","src":"17025:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16999:25:23"},"nodeType":"YulFunctionCall","src":"16999:38:23"},{"name":"len","nodeType":"YulIdentifier","src":"17039:3:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"16950:42:23"},"nodeType":"YulFunctionCall","src":"16950:93:23"},"nodeType":"YulExpressionStatement","src":"16950:93:23"},{"nodeType":"YulVariableDeclaration","src":"17052:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"17069:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"17056:9:23","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17113:608:23","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:32:23","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17146:3:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17155:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17151:3:23"},"nodeType":"YulFunctionCall","src":"17151:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17142:3:23"},"nodeType":"YulFunctionCall","src":"17142:17:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"17131:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17172:48:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17215:4:23"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"17186:28:23"},"nodeType":"YulFunctionCall","src":"17186:34:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"17176:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17233:18:23","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"17242:9:23"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17237:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"17321:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17346:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17371:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17376:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17367:3:23"},"nodeType":"YulFunctionCall","src":"17367:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17354:12:23"},"nodeType":"YulFunctionCall","src":"17354:33:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17339:6:23"},"nodeType":"YulFunctionCall","src":"17339:49:23"},"nodeType":"YulExpressionStatement","src":"17339:49:23"},{"nodeType":"YulAssignment","src":"17405:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17419:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"17427:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17415:3:23"},"nodeType":"YulFunctionCall","src":"17415:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17405:6:23"}]},{"nodeType":"YulAssignment","src":"17446:33:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17463:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17474:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17459:3:23"},"nodeType":"YulFunctionCall","src":"17459:20:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17446:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17275:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"17278:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17272:2:23"},"nodeType":"YulFunctionCall","src":"17272:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17287:21:23","statements":[{"nodeType":"YulAssignment","src":"17289:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17298:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"17301:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17294:3:23"},"nodeType":"YulFunctionCall","src":"17294:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17289:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"17268:3:23","statements":[]},"src":"17264:229:23"},{"body":{"nodeType":"YulBlock","src":"17538:127:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17563:6:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17592:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17597:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17588:3:23"},"nodeType":"YulFunctionCall","src":"17588:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17575:12:23"},"nodeType":"YulFunctionCall","src":"17575:33:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17626:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"17629:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17622:3:23"},"nodeType":"YulFunctionCall","src":"17622:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"17635:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17618:3:23"},"nodeType":"YulFunctionCall","src":"17618:21:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17645:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17641:3:23"},"nodeType":"YulFunctionCall","src":"17641:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17614:3:23"},"nodeType":"YulFunctionCall","src":"17614:34:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17610:3:23"},"nodeType":"YulFunctionCall","src":"17610:39:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17571:3:23"},"nodeType":"YulFunctionCall","src":"17571:79:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17556:6:23"},"nodeType":"YulFunctionCall","src":"17556:95:23"},"nodeType":"YulExpressionStatement","src":"17556:95:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"17512:7:23"},{"name":"len","nodeType":"YulIdentifier","src":"17521:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17509:2:23"},"nodeType":"YulFunctionCall","src":"17509:16:23"},"nodeType":"YulIf","src":"17506:159:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17685:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17699:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"17702:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17695:3:23"},"nodeType":"YulFunctionCall","src":"17695:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"17708:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17691:3:23"},"nodeType":"YulFunctionCall","src":"17691:19:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17678:6:23"},"nodeType":"YulFunctionCall","src":"17678:33:23"},"nodeType":"YulExpressionStatement","src":"17678:33:23"}]},"nodeType":"YulCase","src":"17106:615:23","value":{"kind":"number","nodeType":"YulLiteral","src":"17111:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17738:235:23","statements":[{"nodeType":"YulVariableDeclaration","src":"17752:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"17765:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17756:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"17798:74:23","statements":[{"nodeType":"YulAssignment","src":"17816:42:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17842:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17847:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17838:3:23"},"nodeType":"YulFunctionCall","src":"17838:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17825:12:23"},"nodeType":"YulFunctionCall","src":"17825:33:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17816:5:23"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"17782:3:23"},"nodeType":"YulIf","src":"17779:93:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17892:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17951:5:23"},{"name":"len","nodeType":"YulIdentifier","src":"17958:3:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"17898:52:23"},"nodeType":"YulFunctionCall","src":"17898:64:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17885:6:23"},"nodeType":"YulFunctionCall","src":"17885:78:23"},"nodeType":"YulExpressionStatement","src":"17885:78:23"}]},"nodeType":"YulCase","src":"17730:243:23","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17089:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"17094:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17086:2:23"},"nodeType":"YulFunctionCall","src":"17086:11:23"},"nodeType":"YulSwitch","src":"17079:894:23"}]},"name":"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16858:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"16864:3:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"16869:3:23","type":""}],"src":"16777:1202:23"},{"body":{"nodeType":"YulBlock","src":"18158:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18175:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18186:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18168:6:23"},"nodeType":"YulFunctionCall","src":"18168:21:23"},"nodeType":"YulExpressionStatement","src":"18168:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18209:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18220:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18205:3:23"},"nodeType":"YulFunctionCall","src":"18205:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18225:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18198:6:23"},"nodeType":"YulFunctionCall","src":"18198:30:23"},"nodeType":"YulExpressionStatement","src":"18198:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18248:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18259:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18244:3:23"},"nodeType":"YulFunctionCall","src":"18244:18:23"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"18264:34:23","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18237:6:23"},"nodeType":"YulFunctionCall","src":"18237:62:23"},"nodeType":"YulExpressionStatement","src":"18237:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18319:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18330:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18315:3:23"},"nodeType":"YulFunctionCall","src":"18315:18:23"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"18335:8:23","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18308:6:23"},"nodeType":"YulFunctionCall","src":"18308:36:23"},"nodeType":"YulExpressionStatement","src":"18308:36:23"},{"nodeType":"YulAssignment","src":"18353:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18365:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18376:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18361:3:23"},"nodeType":"YulFunctionCall","src":"18361:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18353:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18135:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18149:4:23","type":""}],"src":"17984:402:23"},{"body":{"nodeType":"YulBlock","src":"18572:275:23","statements":[{"nodeType":"YulAssignment","src":"18582:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18594:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18605:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18590:3:23"},"nodeType":"YulFunctionCall","src":"18590:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18582:4:23"}]},{"nodeType":"YulVariableDeclaration","src":"18618:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"18628:6:23","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18622:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18650:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18665:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"18673:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18661:3:23"},"nodeType":"YulFunctionCall","src":"18661:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18643:6:23"},"nodeType":"YulFunctionCall","src":"18643:34:23"},"nodeType":"YulExpressionStatement","src":"18643:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18697:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18708:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18693:3:23"},"nodeType":"YulFunctionCall","src":"18693:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18717:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"18725:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18713:3:23"},"nodeType":"YulFunctionCall","src":"18713:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18686:6:23"},"nodeType":"YulFunctionCall","src":"18686:43:23"},"nodeType":"YulExpressionStatement","src":"18686:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18749:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18760:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18745:3:23"},"nodeType":"YulFunctionCall","src":"18745:18:23"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18769:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18785:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18790:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18781:3:23"},"nodeType":"YulFunctionCall","src":"18781:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"18794:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18777:3:23"},"nodeType":"YulFunctionCall","src":"18777:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18765:3:23"},"nodeType":"YulFunctionCall","src":"18765:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18738:6:23"},"nodeType":"YulFunctionCall","src":"18738:60:23"},"nodeType":"YulExpressionStatement","src":"18738:60:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18818:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18829:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18814:3:23"},"nodeType":"YulFunctionCall","src":"18814:18:23"},{"name":"value3","nodeType":"YulIdentifier","src":"18834:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18807:6:23"},"nodeType":"YulFunctionCall","src":"18807:34:23"},"nodeType":"YulExpressionStatement","src":"18807:34:23"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18517:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18528:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18536:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18544:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18552:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18563:4:23","type":""}],"src":"18391:456:23"},{"body":{"nodeType":"YulBlock","src":"18937:235:23","statements":[{"nodeType":"YulAssignment","src":"18947:61:23","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19000:6:23"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"18972:27:23"},"nodeType":"YulFunctionCall","src":"18972:35:23"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18956:15:23"},"nodeType":"YulFunctionCall","src":"18956:52:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18947:5:23"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19024:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"19031:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19017:6:23"},"nodeType":"YulFunctionCall","src":"19017:21:23"},"nodeType":"YulExpressionStatement","src":"19017:21:23"},{"body":{"nodeType":"YulBlock","src":"19076:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19085:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19088:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19078:6:23"},"nodeType":"YulFunctionCall","src":"19078:12:23"},"nodeType":"YulExpressionStatement","src":"19078:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19057:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"19062:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19053:3:23"},"nodeType":"YulFunctionCall","src":"19053:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"19071:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19050:2:23"},"nodeType":"YulFunctionCall","src":"19050:25:23"},"nodeType":"YulIf","src":"19047:45:23"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19136:3:23"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19145:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"19152:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19141:3:23"},"nodeType":"YulFunctionCall","src":"19141:16:23"},{"name":"length","nodeType":"YulIdentifier","src":"19159:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19101:34:23"},"nodeType":"YulFunctionCall","src":"19101:65:23"},"nodeType":"YulExpressionStatement","src":"19101:65:23"}]},"name":"abi_decode_available_length_bytes_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18906:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"18911:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"18919:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18927:5:23","type":""}],"src":"18852:320:23"},{"body":{"nodeType":"YulBlock","src":"19267:367:23","statements":[{"body":{"nodeType":"YulBlock","src":"19313:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19322:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19325:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19315:6:23"},"nodeType":"YulFunctionCall","src":"19315:12:23"},"nodeType":"YulExpressionStatement","src":"19315:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19288:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"19297:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19284:3:23"},"nodeType":"YulFunctionCall","src":"19284:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"19309:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19280:3:23"},"nodeType":"YulFunctionCall","src":"19280:32:23"},"nodeType":"YulIf","src":"19277:52:23"},{"nodeType":"YulVariableDeclaration","src":"19338:30:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19358:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19352:5:23"},"nodeType":"YulFunctionCall","src":"19352:16:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19342:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19411:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19420:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19423:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19413:6:23"},"nodeType":"YulFunctionCall","src":"19413:12:23"},"nodeType":"YulExpressionStatement","src":"19413:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19383:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19399:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"19403:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19395:3:23"},"nodeType":"YulFunctionCall","src":"19395:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"19407:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19391:3:23"},"nodeType":"YulFunctionCall","src":"19391:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19380:2:23"},"nodeType":"YulFunctionCall","src":"19380:30:23"},"nodeType":"YulIf","src":"19377:50:23"},{"nodeType":"YulVariableDeclaration","src":"19436:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19450:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"19461:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19446:3:23"},"nodeType":"YulFunctionCall","src":"19446:22:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19440:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19516:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19525:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19528:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19518:6:23"},"nodeType":"YulFunctionCall","src":"19518:12:23"},"nodeType":"YulExpressionStatement","src":"19518:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19495:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"19499:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19491:3:23"},"nodeType":"YulFunctionCall","src":"19491:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19506:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19487:3:23"},"nodeType":"YulFunctionCall","src":"19487:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19480:6:23"},"nodeType":"YulFunctionCall","src":"19480:35:23"},"nodeType":"YulIf","src":"19477:55:23"},{"nodeType":"YulAssignment","src":"19541:87:23","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19600:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"19604:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19596:3:23"},"nodeType":"YulFunctionCall","src":"19596:11:23"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19615:2:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19609:5:23"},"nodeType":"YulFunctionCall","src":"19609:9:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19620:7:23"}],"functionName":{"name":"abi_decode_available_length_bytes_fromMemory","nodeType":"YulIdentifier","src":"19551:44:23"},"nodeType":"YulFunctionCall","src":"19551:77:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19541:6:23"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19233:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19244:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19256:6:23","type":""}],"src":"19177:457:23"},{"body":{"nodeType":"YulBlock","src":"19856:340:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19873:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19888:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19896:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19884:3:23"},"nodeType":"YulFunctionCall","src":"19884:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19866:6:23"},"nodeType":"YulFunctionCall","src":"19866:38:23"},"nodeType":"YulExpressionStatement","src":"19866:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19924:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19935:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19920:3:23"},"nodeType":"YulFunctionCall","src":"19920:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"19940:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19913:6:23"},"nodeType":"YulFunctionCall","src":"19913:31:23"},"nodeType":"YulExpressionStatement","src":"19913:31:23"},{"nodeType":"YulVariableDeclaration","src":"19953:60:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19985:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19997:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20008:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19993:3:23"},"nodeType":"YulFunctionCall","src":"19993:19:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"19967:17:23"},"nodeType":"YulFunctionCall","src":"19967:46:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"19957:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20033:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20044:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20029:3:23"},"nodeType":"YulFunctionCall","src":"20029:18:23"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20053:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20069:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"20073:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20065:3:23"},"nodeType":"YulFunctionCall","src":"20065:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"20077:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20061:3:23"},"nodeType":"YulFunctionCall","src":"20061:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20049:3:23"},"nodeType":"YulFunctionCall","src":"20049:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20022:6:23"},"nodeType":"YulFunctionCall","src":"20022:59:23"},"nodeType":"YulExpressionStatement","src":"20022:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20101:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20112:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20097:3:23"},"nodeType":"YulFunctionCall","src":"20097:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"20121:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"20129:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20117:3:23"},"nodeType":"YulFunctionCall","src":"20117:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20090:6:23"},"nodeType":"YulFunctionCall","src":"20090:50:23"},"nodeType":"YulExpressionStatement","src":"20090:50:23"},{"nodeType":"YulAssignment","src":"20149:41:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20175:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"20183:6:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20157:17:23"},"nodeType":"YulFunctionCall","src":"20157:33:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20149:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19801:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19812:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19820:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19828:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19836:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19847:4:23","type":""}],"src":"19639:557:23"},{"body":{"nodeType":"YulBlock","src":"20375:182:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20392:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20403:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20385:6:23"},"nodeType":"YulFunctionCall","src":"20385:21:23"},"nodeType":"YulExpressionStatement","src":"20385:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20426:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20437:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20422:3:23"},"nodeType":"YulFunctionCall","src":"20422:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"20442:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20415:6:23"},"nodeType":"YulFunctionCall","src":"20415:30:23"},"nodeType":"YulExpressionStatement","src":"20415:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20465:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20476:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20461:3:23"},"nodeType":"YulFunctionCall","src":"20461:18:23"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"20481:34:23","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20454:6:23"},"nodeType":"YulFunctionCall","src":"20454:62:23"},"nodeType":"YulExpressionStatement","src":"20454:62:23"},{"nodeType":"YulAssignment","src":"20525:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20537:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20548:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20533:3:23"},"nodeType":"YulFunctionCall","src":"20533:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20525:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20352:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20366:4:23","type":""}],"src":"20201:356:23"},{"body":{"nodeType":"YulBlock","src":"20736:238:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20753:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20764:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20746:6:23"},"nodeType":"YulFunctionCall","src":"20746:21:23"},"nodeType":"YulExpressionStatement","src":"20746:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20787:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20798:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20783:3:23"},"nodeType":"YulFunctionCall","src":"20783:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"20803:2:23","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20776:6:23"},"nodeType":"YulFunctionCall","src":"20776:30:23"},"nodeType":"YulExpressionStatement","src":"20776:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20826:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20837:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20822:3:23"},"nodeType":"YulFunctionCall","src":"20822:18:23"},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"20842:34:23","type":"","value":"LzApp: destination chain is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20815:6:23"},"nodeType":"YulFunctionCall","src":"20815:62:23"},"nodeType":"YulExpressionStatement","src":"20815:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20897:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20908:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20893:3:23"},"nodeType":"YulFunctionCall","src":"20893:18:23"},{"hexValue":"61207472757374656420736f75726365","kind":"string","nodeType":"YulLiteral","src":"20913:18:23","type":"","value":"a trusted source"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20886:6:23"},"nodeType":"YulFunctionCall","src":"20886:46:23"},"nodeType":"YulExpressionStatement","src":"20886:46:23"},{"nodeType":"YulAssignment","src":"20941:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20953:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20964:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20949:3:23"},"nodeType":"YulFunctionCall","src":"20949:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20941:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20713:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20727:4:23","type":""}],"src":"20562:412:23"},{"body":{"nodeType":"YulBlock","src":"21288:531:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21305:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21320:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"21328:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21316:3:23"},"nodeType":"YulFunctionCall","src":"21316:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21298:6:23"},"nodeType":"YulFunctionCall","src":"21298:38:23"},"nodeType":"YulExpressionStatement","src":"21298:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21356:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21367:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21352:3:23"},"nodeType":"YulFunctionCall","src":"21352:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"21372:3:23","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21345:6:23"},"nodeType":"YulFunctionCall","src":"21345:31:23"},"nodeType":"YulExpressionStatement","src":"21345:31:23"},{"nodeType":"YulVariableDeclaration","src":"21385:60:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21417:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21429:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21440:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21425:3:23"},"nodeType":"YulFunctionCall","src":"21425:19:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21399:17:23"},"nodeType":"YulFunctionCall","src":"21399:46:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"21389:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21465:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21476:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21461:3:23"},"nodeType":"YulFunctionCall","src":"21461:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"21485:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"21493:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21481:3:23"},"nodeType":"YulFunctionCall","src":"21481:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21454:6:23"},"nodeType":"YulFunctionCall","src":"21454:50:23"},"nodeType":"YulExpressionStatement","src":"21454:50:23"},{"nodeType":"YulVariableDeclaration","src":"21513:47:23","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21545:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"21553:6:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21527:17:23"},"nodeType":"YulFunctionCall","src":"21527:33:23"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"21517:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21569:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21587:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21592:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21583:3:23"},"nodeType":"YulFunctionCall","src":"21583:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"21596:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21579:3:23"},"nodeType":"YulFunctionCall","src":"21579:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21573:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21618:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21629:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21614:3:23"},"nodeType":"YulFunctionCall","src":"21614:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21638:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"21646:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21634:3:23"},"nodeType":"YulFunctionCall","src":"21634:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21607:6:23"},"nodeType":"YulFunctionCall","src":"21607:43:23"},"nodeType":"YulExpressionStatement","src":"21607:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21670:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21681:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21666:3:23"},"nodeType":"YulFunctionCall","src":"21666:19:23"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21691:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"21699:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21687:3:23"},"nodeType":"YulFunctionCall","src":"21687:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21659:6:23"},"nodeType":"YulFunctionCall","src":"21659:44:23"},"nodeType":"YulExpressionStatement","src":"21659:44:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21723:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21734:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21719:3:23"},"nodeType":"YulFunctionCall","src":"21719:19:23"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"21744:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"21752:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21740:3:23"},"nodeType":"YulFunctionCall","src":"21740:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21712:6:23"},"nodeType":"YulFunctionCall","src":"21712:51:23"},"nodeType":"YulExpressionStatement","src":"21712:51:23"},{"nodeType":"YulAssignment","src":"21772:41:23","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"21798:6:23"},{"name":"tail_2","nodeType":"YulIdentifier","src":"21806:6:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21780:17:23"},"nodeType":"YulFunctionCall","src":"21780:33:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21772:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21217:9:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"21228:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21236:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21244:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21252:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21260:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21268:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21279:4:23","type":""}],"src":"20979:840:23"},{"body":{"nodeType":"YulBlock","src":"21915:367:23","statements":[{"body":{"nodeType":"YulBlock","src":"21961:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21970:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21973:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21963:6:23"},"nodeType":"YulFunctionCall","src":"21963:12:23"},"nodeType":"YulExpressionStatement","src":"21963:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21936:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"21945:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21932:3:23"},"nodeType":"YulFunctionCall","src":"21932:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"21957:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21928:3:23"},"nodeType":"YulFunctionCall","src":"21928:32:23"},"nodeType":"YulIf","src":"21925:52:23"},{"nodeType":"YulVariableDeclaration","src":"21986:30:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22006:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22000:5:23"},"nodeType":"YulFunctionCall","src":"22000:16:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21990:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"22059:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22068:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22071:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22061:6:23"},"nodeType":"YulFunctionCall","src":"22061:12:23"},"nodeType":"YulExpressionStatement","src":"22061:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22031:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22047:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"22051:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22043:3:23"},"nodeType":"YulFunctionCall","src":"22043:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"22055:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22039:3:23"},"nodeType":"YulFunctionCall","src":"22039:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22028:2:23"},"nodeType":"YulFunctionCall","src":"22028:30:23"},"nodeType":"YulIf","src":"22025:50:23"},{"nodeType":"YulVariableDeclaration","src":"22084:32:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22098:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"22109:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22094:3:23"},"nodeType":"YulFunctionCall","src":"22094:22:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22088:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"22164:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22173:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22176:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22166:6:23"},"nodeType":"YulFunctionCall","src":"22166:12:23"},"nodeType":"YulExpressionStatement","src":"22166:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22143:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"22147:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22139:3:23"},"nodeType":"YulFunctionCall","src":"22139:13:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22154:7:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22135:3:23"},"nodeType":"YulFunctionCall","src":"22135:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22128:6:23"},"nodeType":"YulFunctionCall","src":"22128:35:23"},"nodeType":"YulIf","src":"22125:55:23"},{"nodeType":"YulAssignment","src":"22189:87:23","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22248:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"22252:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22244:3:23"},"nodeType":"YulFunctionCall","src":"22244:11:23"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22263:2:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22257:5:23"},"nodeType":"YulFunctionCall","src":"22257:9:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22268:7:23"}],"functionName":{"name":"abi_decode_available_length_bytes_fromMemory","nodeType":"YulIdentifier","src":"22199:44:23"},"nodeType":"YulFunctionCall","src":"22199:77:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22189:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21881:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21892:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21904:6:23","type":""}],"src":"21824:458:23"},{"body":{"nodeType":"YulBlock","src":"22383:1254:23","statements":[{"nodeType":"YulVariableDeclaration","src":"22393:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22413:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22407:5:23"},"nodeType":"YulFunctionCall","src":"22407:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"22397:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"22460:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22462:16:23"},"nodeType":"YulFunctionCall","src":"22462:18:23"},"nodeType":"YulExpressionStatement","src":"22462:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22432:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22448:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"22452:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22444:3:23"},"nodeType":"YulFunctionCall","src":"22444:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"22456:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22440:3:23"},"nodeType":"YulFunctionCall","src":"22440:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22429:2:23"},"nodeType":"YulFunctionCall","src":"22429:30:23"},"nodeType":"YulIf","src":"22426:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22534:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22572:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22566:5:23"},"nodeType":"YulFunctionCall","src":"22566:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"22540:25:23"},"nodeType":"YulFunctionCall","src":"22540:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"22580:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"22491:42:23"},"nodeType":"YulFunctionCall","src":"22491:96:23"},"nodeType":"YulExpressionStatement","src":"22491:96:23"},{"nodeType":"YulVariableDeclaration","src":"22596:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"22613:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22600:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22623:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"22642:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"22627:11:23","type":""}]},{"nodeType":"YulAssignment","src":"22655:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22668:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22655:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"22725:655:23","statements":[{"nodeType":"YulVariableDeclaration","src":"22739:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22758:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22770:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22766:3:23"},"nodeType":"YulFunctionCall","src":"22766:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22754:3:23"},"nodeType":"YulFunctionCall","src":"22754:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"22743:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22787:48:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22830:4:23"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"22801:28:23"},"nodeType":"YulFunctionCall","src":"22801:34:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"22791:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22848:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"22857:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22852:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"22935:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22960:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22978:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22983:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22974:3:23"},"nodeType":"YulFunctionCall","src":"22974:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22968:5:23"},"nodeType":"YulFunctionCall","src":"22968:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22953:6:23"},"nodeType":"YulFunctionCall","src":"22953:42:23"},"nodeType":"YulExpressionStatement","src":"22953:42:23"},{"nodeType":"YulAssignment","src":"23012:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23026:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"23034:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23022:3:23"},"nodeType":"YulFunctionCall","src":"23022:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23012:6:23"}]},{"nodeType":"YulAssignment","src":"23053:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23070:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"23081:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23066:3:23"},"nodeType":"YulFunctionCall","src":"23066:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23053:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22882:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22885:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22879:2:23"},"nodeType":"YulFunctionCall","src":"22879:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22894:28:23","statements":[{"nodeType":"YulAssignment","src":"22896:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22905:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22908:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22901:3:23"},"nodeType":"YulFunctionCall","src":"22901:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22896:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"22875:3:23","statements":[]},"src":"22871:236:23"},{"body":{"nodeType":"YulBlock","src":"23155:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"23173:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23200:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23205:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23196:3:23"},"nodeType":"YulFunctionCall","src":"23196:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23190:5:23"},"nodeType":"YulFunctionCall","src":"23190:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"23177:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23240:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"23252:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23279:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"23282:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23275:3:23"},"nodeType":"YulFunctionCall","src":"23275:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"23291:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23271:3:23"},"nodeType":"YulFunctionCall","src":"23271:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23301:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23297:3:23"},"nodeType":"YulFunctionCall","src":"23297:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23267:3:23"},"nodeType":"YulFunctionCall","src":"23267:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23263:3:23"},"nodeType":"YulFunctionCall","src":"23263:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23248:3:23"},"nodeType":"YulFunctionCall","src":"23248:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23233:6:23"},"nodeType":"YulFunctionCall","src":"23233:74:23"},"nodeType":"YulExpressionStatement","src":"23233:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"23126:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"23135:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23123:2:23"},"nodeType":"YulFunctionCall","src":"23123:19:23"},"nodeType":"YulIf","src":"23120:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23341:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23355:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"23358:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23351:3:23"},"nodeType":"YulFunctionCall","src":"23351:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"23367:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23347:3:23"},"nodeType":"YulFunctionCall","src":"23347:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23334:6:23"},"nodeType":"YulFunctionCall","src":"23334:36:23"},"nodeType":"YulExpressionStatement","src":"23334:36:23"}]},"nodeType":"YulCase","src":"22718:662:23","value":{"kind":"number","nodeType":"YulLiteral","src":"22723:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"23397:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"23411:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"23424:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23415:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"23460:67:23","statements":[{"nodeType":"YulAssignment","src":"23478:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23497:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23502:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23493:3:23"},"nodeType":"YulFunctionCall","src":"23493:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23487:5:23"},"nodeType":"YulFunctionCall","src":"23487:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23478:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"23441:6:23"},"nodeType":"YulIf","src":"23438:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23547:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23606:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"23613:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"23553:52:23"},"nodeType":"YulFunctionCall","src":"23553:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23540:6:23"},"nodeType":"YulFunctionCall","src":"23540:81:23"},"nodeType":"YulExpressionStatement","src":"23540:81:23"}]},"nodeType":"YulCase","src":"23389:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22698:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"22706:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22695:2:23"},"nodeType":"YulFunctionCall","src":"22695:14:23"},"nodeType":"YulSwitch","src":"22688:943:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22368:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"22374:3:23","type":""}],"src":"22287:1350:23"},{"body":{"nodeType":"YulBlock","src":"23690:77:23","statements":[{"nodeType":"YulAssignment","src":"23700:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23711:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"23714:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23707:3:23"},"nodeType":"YulFunctionCall","src":"23707:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23700:3:23"}]},{"body":{"nodeType":"YulBlock","src":"23739:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23741:16:23"},"nodeType":"YulFunctionCall","src":"23741:18:23"},"nodeType":"YulExpressionStatement","src":"23741:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23731:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"23734:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23728:2:23"},"nodeType":"YulFunctionCall","src":"23728:10:23"},"nodeType":"YulIf","src":"23725:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23673:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"23676:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23682:3:23","type":""}],"src":"23642:125:23"},{"body":{"nodeType":"YulBlock","src":"23946:164:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23963:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23974:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23956:6:23"},"nodeType":"YulFunctionCall","src":"23956:21:23"},"nodeType":"YulExpressionStatement","src":"23956:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23997:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24008:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23993:3:23"},"nodeType":"YulFunctionCall","src":"23993:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24013:2:23","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23986:6:23"},"nodeType":"YulFunctionCall","src":"23986:30:23"},"nodeType":"YulExpressionStatement","src":"23986:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24036:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24047:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24032:3:23"},"nodeType":"YulFunctionCall","src":"24032:18:23"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"24052:16:23","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24025:6:23"},"nodeType":"YulFunctionCall","src":"24025:44:23"},"nodeType":"YulExpressionStatement","src":"24025:44:23"},{"nodeType":"YulAssignment","src":"24078:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24090:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24101:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24086:3:23"},"nodeType":"YulFunctionCall","src":"24086:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24078:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23923:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23937:4:23","type":""}],"src":"23772:338:23"},{"body":{"nodeType":"YulBlock","src":"24289:167:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24306:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24317:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24299:6:23"},"nodeType":"YulFunctionCall","src":"24299:21:23"},"nodeType":"YulExpressionStatement","src":"24299:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24340:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24351:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24336:3:23"},"nodeType":"YulFunctionCall","src":"24336:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24356:2:23","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24329:6:23"},"nodeType":"YulFunctionCall","src":"24329:30:23"},"nodeType":"YulExpressionStatement","src":"24329:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24379:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24390:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24375:3:23"},"nodeType":"YulFunctionCall","src":"24375:18:23"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"24395:19:23","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24368:6:23"},"nodeType":"YulFunctionCall","src":"24368:47:23"},"nodeType":"YulExpressionStatement","src":"24368:47:23"},{"nodeType":"YulAssignment","src":"24424:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24436:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24447:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24432:3:23"},"nodeType":"YulFunctionCall","src":"24432:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24424:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24266:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24280:4:23","type":""}],"src":"24115:341:23"},{"body":{"nodeType":"YulBlock","src":"24598:150:23","statements":[{"nodeType":"YulVariableDeclaration","src":"24608:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24628:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24622:5:23"},"nodeType":"YulFunctionCall","src":"24622:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24612:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24683:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"24691:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24679:3:23"},"nodeType":"YulFunctionCall","src":"24679:17:23"},{"name":"pos","nodeType":"YulIdentifier","src":"24698:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"24703:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24644:34:23"},"nodeType":"YulFunctionCall","src":"24644:66:23"},"nodeType":"YulExpressionStatement","src":"24644:66:23"},{"nodeType":"YulAssignment","src":"24719:23:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24730:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"24735:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24726:3:23"},"nodeType":"YulFunctionCall","src":"24726:16:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24719:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24574:3:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24579:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24590:3:23","type":""}],"src":"24461:287:23"},{"body":{"nodeType":"YulBlock","src":"25016:456:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25033:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25048:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"25056:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25044:3:23"},"nodeType":"YulFunctionCall","src":"25044:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25026:6:23"},"nodeType":"YulFunctionCall","src":"25026:38:23"},"nodeType":"YulExpressionStatement","src":"25026:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25084:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25095:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25080:3:23"},"nodeType":"YulFunctionCall","src":"25080:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"25100:3:23","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25073:6:23"},"nodeType":"YulFunctionCall","src":"25073:31:23"},"nodeType":"YulExpressionStatement","src":"25073:31:23"},{"nodeType":"YulVariableDeclaration","src":"25113:60:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25145:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25157:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25168:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25153:3:23"},"nodeType":"YulFunctionCall","src":"25153:19:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"25127:17:23"},"nodeType":"YulFunctionCall","src":"25127:46:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"25117:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25193:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25204:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25189:3:23"},"nodeType":"YulFunctionCall","src":"25189:18:23"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25213:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25229:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"25233:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25225:3:23"},"nodeType":"YulFunctionCall","src":"25225:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"25237:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25221:3:23"},"nodeType":"YulFunctionCall","src":"25221:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25209:3:23"},"nodeType":"YulFunctionCall","src":"25209:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25182:6:23"},"nodeType":"YulFunctionCall","src":"25182:59:23"},"nodeType":"YulExpressionStatement","src":"25182:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25261:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25272:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25257:3:23"},"nodeType":"YulFunctionCall","src":"25257:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"25281:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"25289:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25277:3:23"},"nodeType":"YulFunctionCall","src":"25277:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25250:6:23"},"nodeType":"YulFunctionCall","src":"25250:50:23"},"nodeType":"YulExpressionStatement","src":"25250:50:23"},{"nodeType":"YulVariableDeclaration","src":"25309:47:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25341:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"25349:6:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"25323:17:23"},"nodeType":"YulFunctionCall","src":"25323:33:23"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"25313:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25376:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25387:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25372:3:23"},"nodeType":"YulFunctionCall","src":"25372:19:23"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"25397:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"25405:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25393:3:23"},"nodeType":"YulFunctionCall","src":"25393:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25365:6:23"},"nodeType":"YulFunctionCall","src":"25365:51:23"},"nodeType":"YulExpressionStatement","src":"25365:51:23"},{"nodeType":"YulAssignment","src":"25425:41:23","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25451:6:23"},{"name":"tail_2","nodeType":"YulIdentifier","src":"25459:6:23"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"25433:17:23"},"nodeType":"YulFunctionCall","src":"25433:33:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25425:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24953:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24964:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24972:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24980:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24988:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24996:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25007:4:23","type":""}],"src":"24753:719:23"},{"body":{"nodeType":"YulBlock","src":"25651:182:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25668:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25679:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25661:6:23"},"nodeType":"YulFunctionCall","src":"25661:21:23"},"nodeType":"YulExpressionStatement","src":"25661:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25702:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25713:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25698:3:23"},"nodeType":"YulFunctionCall","src":"25698:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"25718:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25691:6:23"},"nodeType":"YulFunctionCall","src":"25691:30:23"},"nodeType":"YulExpressionStatement","src":"25691:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25741:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25752:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25737:3:23"},"nodeType":"YulFunctionCall","src":"25737:18:23"},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","kind":"string","nodeType":"YulLiteral","src":"25757:34:23","type":"","value":"LzApp: payload size is too large"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25730:6:23"},"nodeType":"YulFunctionCall","src":"25730:62:23"},"nodeType":"YulExpressionStatement","src":"25730:62:23"},{"nodeType":"YulAssignment","src":"25801:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25813:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25824:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25809:3:23"},"nodeType":"YulFunctionCall","src":"25809:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25801:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25628:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25642:4:23","type":""}],"src":"25477:356:23"}]},"contents":"{\n    { }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_uint64(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n    }\n    function abi_decode_tuple_t_uint16t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        array := allocate_memory(array_allocation_size_bytes(length))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LzApp: invalid endpoint caller\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LzApp: invalid source sending co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"NonblockingLzApp: caller must be\")\n        mstore(add(headStart, 96), \" LzApp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LzApp: no trusted path record\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(sub(shl(96, 1), 1))))\n        end := add(_1, 20)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"NonblockingLzApp: no stored mess\")\n        mstore(add(headStart, 96), \"age\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"NonblockingLzApp: invalid payloa\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), value4)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage(slot, src, len)\n    {\n        if gt(len, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_available_length_bytes_fromMemory(src, length, end) -> array\n    {\n        array := allocate_memory(array_allocation_size_bytes(length))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(src, add(array, 0x20), length)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes_fromMemory(add(_1, 32), mload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string(value3, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"LzApp: destination chain is not \")\n        mstore(add(headStart, 96), \"a trusted source\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_string(value1, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), sub(tail_2, headStart))\n        tail := abi_encode_string(value5, tail_2)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes_fromMemory(add(_1, 32), mload(_1), dataEnd)\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 160)\n        let tail_1 := abi_encode_string(value1, add(headStart, 160))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LzApp: payload size is too large\")\n        tail := add(headStart, 96)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"451":[{"length":32,"start":1058},{"length":32,"start":1328},{"length":32,"start":1919},{"length":32,"start":2087},{"length":32,"start":2378},{"length":32,"start":3600},{"length":32,"start":4618},{"length":32,"start":5259}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x1D3567 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x5CDF1649 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x66792BA1 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x50D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0xD0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x5C8 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F4 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x641 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x616 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x641 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x624 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x684 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x67A SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x755 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x128A SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x766 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x87F SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8AB SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90F SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x983 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9B9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x7 SLOAD PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xA0A SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x20 DUP5 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP1 DUP5 MSTORE SWAP1 SWAP4 POP PUSH2 0xA0A SWAP3 PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 CALLER SWAP2 CALLVALUE PUSH2 0x1362 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xB29 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB39 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xB43 PUSH1 0x0 PUSH2 0x1528 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0xC1E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4A SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC97 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x924 PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0xD12 PUSH2 0x1303 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xD52 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xD9B PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xDE6 SWAP1 DUP4 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xDF9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0xE4D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xEA9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xFBC SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x1054 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x110E PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x112C DUP3 DUP5 DUP4 PUSH2 0x1F68 JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1168 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x11D6 DUP2 PUSH2 0x1528 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1259 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1281 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12ED GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB29 JUMPI PUSH2 0xB29 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x170F JUMP JUMPDEST CALLER PUSH2 0x130C PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AC SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x1475 DUP8 DUP8 MLOAD PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x14CC SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x6 SWAP1 PUSH2 0x7E0 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1586 DUP2 PUSH1 0x1F PUSH2 0x213E JUMP JUMPDEST LT ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x15CF DUP3 DUP5 PUSH2 0x213E JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x166B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1653 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16AA PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x16F6 JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x179D SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x17CD JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x184B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x187A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BA DUP8 PUSH2 0x1822 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E2 DUP11 DUP4 DUP12 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x18F6 PUSH1 0x40 DUP11 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x190C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1919 DUP10 DUP3 DUP11 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1962 DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198E DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A21 PUSH2 0x19C2 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A42 PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1AB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC6 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1AD5 PUSH1 0x40 DUP6 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B7B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B63 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B9C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x924 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDF DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BED PUSH1 0x20 DUP5 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2B DUP7 PUSH2 0x1822 JUMP JUMPDEST SWAP5 POP PUSH2 0x1C39 PUSH1 0x20 DUP8 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C67 DUP9 DUP3 DUP10 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C96 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CA4 PUSH1 0x20 DUP6 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD3 DUP6 PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE1 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CEF PUSH1 0x40 DUP7 ADD PUSH2 0x1ADE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1281 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1DB7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E04 JUMPI PUSH2 0x1E04 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1E18 DUP2 PUSH2 0x1E12 DUP5 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP5 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1E35 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x1E3F DUP6 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E76 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E57 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E94 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F22 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F4B PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1F93 DUP4 PUSH2 0x1F8D DUP4 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP4 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x1FAF JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x1FB9 DUP7 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FF2 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1FD2 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x200F JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2021 JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20B6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1F22 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20F4 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1B84 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2106 DUP2 DUP9 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x2131 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2163 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x218A PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x21AB DUP2 DUP7 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x21BF DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CALLER PUSH30 0x3F3212FE145603F0E641EE588D5A8E28D3D51F69D9038937DA086E7F1064 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"407:1143:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:825:2;;;;;;;;;;-1:-1:-1;1256:825:2;;;;;:::i;:::-;;:::i;:::-;;4791:121;;;;;;;;;;-1:-1:-1;4791:121:2;;;;;:::i;:::-;;:::i;6649:140::-;;;;;;;;;;-1:-1:-1;6649:140:2;;;;;:::i;:::-;;:::i;4918:127::-;;;;;;;;;;-1:-1:-1;4918:127:2;;;;;:::i;:::-;;:::i;6884:247::-;;;;;;;;;;-1:-1:-1;6884:247:2;;;;;:::i;:::-;;:::i;:::-;;;2670:14:23;;2663:22;2645:41;;2633:2;2618:18;6884:247:2;;;;;;;;810:53;;;;;;;;;;-1:-1:-1;810:53:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2843:25:23;;;2831:2;2816:18;810:53:2;2697:177:23;5051:176:2;;;;;;;;;;-1:-1:-1;5051:176:2;;;;;:::i;:::-;;:::i;622:85:3:-;;;;;;;;;;-1:-1:-1;622:85:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:167:17;;;;;;;;;;-1:-1:-1;1380:167:17;;;;;:::i;:::-;;:::i;1160:212::-;;;;;;:::i;:::-;;:::i;1955:380:3:-;;;;;;;;;;-1:-1:-1;1955:380:3;;;;;:::i;:::-;;:::i;1824:101:8:-;;;;;;;;;;;;;:::i;457:43:17:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;682:51:2:-;;;;;;;;;;-1:-1:-1;682:51:2;;;;;:::i;:::-;;:::i;739:65::-;;;;;;;;;;-1:-1:-1;739:65:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1201:85:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;869:23:2:-;;;;;;;;;;-1:-1:-1;869:23:2;;;;-1:-1:-1;;;;;869:23:2;;;5864:326;;;;;;;;;;-1:-1:-1;5864:326:2;;;;;:::i;:::-;;:::i;5580:278::-;;;;;;;;;;-1:-1:-1;5580:278:2;;;;;:::i;:::-;;:::i;630:46::-;;;;;;;;;;;;;;;6196:133;;;;;;;;;;-1:-1:-1;6196:133:2;;;;;:::i;:::-;;:::i;568:55::-;;;;;;;;;;;;618:5;568:55;;4545:240;;;;;;;;;;-1:-1:-1;4545:240:2;;;;;:::i;:::-;;:::i;2554:795:3:-;;;;;;:::i;:::-;;:::i;6335:255:2:-;;;;;;;;;;-1:-1:-1;6335:255:2;;;;;:::i;:::-;;:::i;5370:204::-;;;;;;;;;;-1:-1:-1;5370:204:2;;;;;:::i;:::-;;:::i;2074:198:8:-;;;;;;;;;;-1:-1:-1;2074:198:8;;;;;:::i;:::-;;:::i;4239:247:2:-;;;;;;;;;;-1:-1:-1;4239:247:2;;;;;:::i;:::-;;:::i;1256:825::-;719:10:16;1532::2;-1:-1:-1;;;;;1508:35:2;;1500:78;;;;-1:-1:-1;;;1500:78:2;;8672:2:23;1500:78:2;;;8654:21:23;8711:2;8691:18;;;8684:30;8750:32;8730:18;;;8723:60;8800:18;;1500:78:2;;;;;;;;;1618:32;;;1589:26;1618:32;;;:19;:32;;;;;1589:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:13;:20;1813:11;;:18;;:42;:70;;;;;1882:1;1859:13;:20;:24;1813:70;:124;;;;-1:-1:-1;1913:24:2;;;;;;1887:22;;;;1897:11;;;;1887:22;:::i;:::-;;;;;;;;:50;1813:124;1792:209;;;;-1:-1:-1;;;1792:209:2;;9692:2:23;1792:209:2;;;9674:21:23;9731:2;9711:18;;;9704:30;9770:34;9750:18;;;9743:62;-1:-1:-1;;;9821:18:23;;;9814:36;9867:19;;1792:209:2;9490:402:23;1792:209:2;2012:62;2031:11;2044;;2012:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2012:62:2;;;;;;;;;;;;;;;;;;;;;;2057:6;;-1:-1:-1;2012:62:2;-1:-1:-1;2065:8:2;;;;;;2012:62;;2065:8;;;;2012:62;;;;;;;;;-1:-1:-1;2012:18:2;;-1:-1:-1;;;2012:62:2:i;:::-;1425:656;1256:825;;;;;;:::o;4791:121::-;1094:13:8;:11;:13::i;:::-;4870:35:2::1;::::0;-1:-1:-1;;;4870:35:2;;10071:6:23;10059:19;;4870:35:2::1;::::0;::::1;10041:38:23::0;4870:10:2::1;-1:-1:-1::0;;;;;4870:25:2::1;::::0;::::1;::::0;10014:18:23;;4870:35:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4791:121:::0;:::o;6649:140::-;1094:13:8;:11;:13::i;:::-;6739:35:2::1;::::0;;::::1;;::::0;;;:22:::1;:35;::::0;;;;:43;6649:140::o;4918:127::-;1094:13:8;:11;:13::i;:::-;5000:38:2::1;::::0;-1:-1:-1;;;5000:38:2;;10071:6:23;10059:19;;5000:38:2::1;::::0;::::1;10041::23::0;5000:10:2::1;-1:-1:-1::0;;;;;5000:28:2::1;::::0;::::1;::::0;10014:18:23;;5000:38:2::1;9897:188:23::0;6884:247:2;7025:32;;;6980:4;7025:32;;;:19;:32;;;;;6996:61;;6980:4;;7025:32;6996:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7112:11;;7102:22;;;;;;;:::i;:::-;;;;;;;;7084:13;7074:24;;;;;;:50;7067:57;;;6884:247;;;;;;:::o;5051:176::-;1094:13:8;:11;:13::i;:::-;5165:55:2::1;::::0;-1:-1:-1;;;5165:55:2;;-1:-1:-1;;;;;5165:10:2::1;:29;::::0;::::1;::::0;:55:::1;::::0;5195:11;;5208;;;;5165:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;1380:167:17::0;1094:13:8;:11;:13::i;:::-;1489:47:17::1;::::0;-1:-1:-1;;;;;;10871:2:23;10907:15;;;10903:24;;1489:47:17::1;::::0;::::1;10891:37:23::0;1530:4:17::1;10962:15:23::0;;10958:24;10944:12;;;10937:46;10999:12;;1489:47:17::1;::::0;;-1:-1:-1;;1489:47:17;;::::1;::::0;;;;;;1474:11:::1;::::0;::::1;;1454:32;::::0;;;:19:::1;1489:47;1454:32:::0;;;:82:::1;::::0;:32;:82:::1;:::i;:::-;;1380:167:::0;:::o;1160:212::-;1224:20;1258:8;1247:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1247:20:17;;;;;;1286:11;;1247:20;1343:9;;;;;1286:11;1343:9;;;1247:20;;-1:-1:-1;1278:86:17;;1286:11;;;;;1247:20;;1316:10;;1354:9;1278:7;:86::i;1955:380:3:-;719:10:16;2205:4:3;2181:29;2173:80;;;;-1:-1:-1;;;2173:80:3;;13422:2:23;2173:80:3;;;13404:21:23;13461:2;13441:18;;;13434:30;13500:34;13480:18;;;13473:62;-1:-1:-1;;;13551:18:23;;;13544:36;13597:19;;2173:80:3;13220:402:23;2173:80:3;2263:65;2285:11;2298;;2263:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2263:65:3;;;;;;;;;;;;;;;;;;;;;;2311:6;;-1:-1:-1;2263:65:3;-1:-1:-1;2319:8:3;;;;;;2263:65;;2319:8;;;;2263:65;;;;;;;;;-1:-1:-1;2263:21:3;;-1:-1:-1;;;2263:65:3:i;:::-;1955:380;;;;;;:::o;1824:101:8:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;457:43:17:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;682:51:2:-;;;;;;;;;;;;;;;;:::i;1201:85:8:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:8;;1201:85::o;5864:326:2:-;5987:35;;;5967:17;5987:35;;;:19;:35;;;;;5967:55;;5943:12;;5967:17;5987:35;5967:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6040:4;:11;6055:1;6040:16;6032:58;;;;-1:-1:-1;;;6032:58:2;;13829:2:23;6032:58:2;;;13811:21:23;13868:2;13848:18;;;13841:30;13907:31;13887:18;;;13880:59;13956:18;;6032:58:2;13627:353:23;6032:58:2;6107:31;6118:1;6135:2;6121:4;:11;:16;;;;:::i;:::-;6107:4;;:31;:10;:31::i;5580:278::-;1094:13:8;:11;:13::i;:::-;5751:14:2::1;;5775:4;5734:47;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;5734:47:2;;::::1;::::0;;;;;;5696:35:::1;::::0;::::1;;::::0;;;:19:::1;5734:47;5696:35:::0;;;:85:::1;::::0;:35;:85:::1;:::i;:::-;;5796:55;5820:14;5836;;5796:55;;;;;;;;:::i;:::-;;;;;;;;5580:278:::0;;;:::o;6196:133::-;1094:13:8;:11;:13::i;:::-;6265:8:2::1;:20:::0;;-1:-1:-1;;;;;;6265:20:2::1;-1:-1:-1::0;;;;;6265:20:2;::::1;;::::0;;6300:22:::1;::::0;::::1;::::0;::::1;::::0;6265:20;;6300:22:::1;:::i;:::-;;;;;;;;6196:133:::0;:::o;4545:240::-;1094:13:8;:11;:13::i;:::-;4716:62:2::1;::::0;-1:-1:-1;;;4716:62:2;;-1:-1:-1;;;;;4716:10:2::1;:20;::::0;::::1;::::0;:62:::1;::::0;4737:8;;4747;;4757:11;;4770:7;;;;4716:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4545:240:::0;;;;;:::o;2554:795:3:-;2801:27;;;2779:19;2801:27;;;:14;:27;;;;;;:40;;;;2829:11;;;;2801:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2801:48:3;;;;;;;;;;;;-1:-1:-1;2801:48:3;2859:73;;;;-1:-1:-1;;;2859:73:3;;15312:2:23;2859:73:3;;;15294:21:23;15351:2;15331:18;;;15324:30;15390:34;15370:18;;;15363:62;-1:-1:-1;;;15441:18:23;;;15434:33;15484:19;;2859:73:3;15110:399:23;2859:73:3;2973:11;2960:8;;2950:19;;;;;;;:::i;:::-;;;;;;;;:34;2942:80;;;;-1:-1:-1;;;2942:80:3;;15716:2:23;2942:80:3;;;15698:21:23;15755:2;15735:18;;;15728:30;15794:34;15774:18;;;15767:62;-1:-1:-1;;;15845:18:23;;;15838:31;15886:19;;2942:80:3;15514:397:23;2942:80:3;3068:27;;;3127:1;3068:27;;;:14;:27;;;;;;:40;;;;3096:11;;;;3068:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3068:48:3;;;;;;;;;;;;:61;;;;3196:65;;;;;;;;;;;;;;;;;;;3218:11;;3231;;3196:65;;;;;;3231:11;3196:65;;3231:11;3196:65;;;;;;;;;-1:-1:-1;;3196:65:3;;;;;;;;;;;;;;;;;;;;;;3244:6;;-1:-1:-1;3196:65:3;-1:-1:-1;3252:8:3;;;;;;3196:65;;3252:8;;;;3196:65;;;;;;;;;-1:-1:-1;3196:21:3;;-1:-1:-1;;;3196:65:3:i;:::-;3276:66;3296:11;3309;;3322:6;3330:11;3276:66;;;;;;;;;;:::i;:::-;;;;;;;;2725:624;2554:795;;;;;;:::o;6335:255:2:-;1094:13:8;:11;:13::i;:::-;6470:28:2::1;::::0;;::::1;;::::0;;;:15:::1;:28;::::0;;;;;;;:41;;::::1;::::0;;;;;;;;;;:51;;;6536:47;;16637:34:23;;;16687:18;;16680:43;;;;16739:18;;;16732:34;;;6536:47:2::1;::::0;16600:2:23;16585:18;6536:47:2::1;16414:358:23::0;5370:204:2;1094:13:8;:11;:13::i;:::-;5470:35:2::1;::::0;::::1;;::::0;;;:19:::1;:35;::::0;;;;:43:::1;5508:5:::0;;5470:35;:43:::1;:::i;:::-;;5528:39;5545:14;5561:5;;5528:39;;;;;;;;:::i;2074:198:8:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:8;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:8;;18186:2:23;2154:73:8::1;::::0;::::1;18168:21:23::0;18225:2;18205:18;;;18198:30;18264:34;18244:18;;;18237:62;-1:-1:-1;;;18315:18:23;;;18308:36;18361:19;;2154:73:8::1;17984:402:23::0;2154:73:8::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4239:247:2:-;4411:68;;-1:-1:-1;;;4411:68:2;;18628:6:23;18661:15;;;4411:68:2;;;18643:34:23;18713:15;;18693:18;;;18686:43;4460:4:2;18745:18:23;;;18738:60;18814:18;;;18807:34;;;4380:12:2;;4411:10;-1:-1:-1;;;;;4411:20:2;;;;18590:19:23;;4411:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4411:68:2;;;;;;;;;;;;:::i;:::-;4404:75;4239:247;-1:-1:-1;;;;;4239:247:2:o;985:592:3:-;1172:12;1186:19;1209:199;1256:9;1279:3;1319:34;;;1355:11;1368;1381:6;1389:8;1296:102;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1296:102:3;;;;;;;;;;;;;;-1:-1:-1;;;;;1296:102:3;-1:-1:-1;;;;;;1296:102:3;;;;;;;;;;1217:4;;1209:199;;:33;:199::i;:::-;1171:237;;;;1466:7;1461:110;;1489:71;1509:11;1522;1535:6;1543:8;1553:6;1489:19;:71::i;1359:130:8:-;719:10:16;1422:7:8;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:8;;1414:68;;;;-1:-1:-1;;;1414:68:8;;20403:2:23;1414:68:8;;;20385:21:23;;;20422:18;;;20415:30;20481:34;20461:18;;;20454:62;20533:18;;1414:68:8;20201:356:23;2403:602:2;2679:32;;;2650:26;2679:32;;;:19;:32;;;;;2650:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:13;:20;2753:1;2729:25;2721:86;;;;-1:-1:-1;;;2721:86:2;;20764:2:23;2721:86:2;;;20746:21:23;20803:2;20783:18;;;20776:30;20842:34;20822:18;;;20815:62;-1:-1:-1;;;20893:18:23;;;20886:46;20949:19;;2721:86:2;20562:412:23;2721:86:2;2817:47;2835:11;2848:8;:15;2817:17;:47::i;:::-;2874:124;;-1:-1:-1;;;2874:124:2;;-1:-1:-1;;;;;2874:10:2;:15;;;;2897:10;;2874:124;;2909:11;;2922:13;;2937:8;;2947:14;;2963:18;;2983:14;;2874:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2640:365;2403:602;;;;;;:::o;995:157:17:-;1125:8;1114:30;;;;;;;;;;;;:::i;:::-;1107:4;;:37;;:4;:37;:::i;2426:187:8:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:8;;;-1:-1:-1;;;;;;2534:17:8;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;9258:2770:0:-;9374:12;9422:7;9406:12;9422:7;9416:2;9406:12;:::i;:::-;:23;;9398:50;;;;-1:-1:-1;;;9398:50:0;;23974:2:23;9398:50:0;;;23956:21:23;24013:2;23993:18;;;23986:30;-1:-1:-1;;;24032:18:23;;;24025:44;24086:18;;9398:50:0;23772:338:23;9398:50:0;9483:16;9492:7;9483:6;:16;:::i;:::-;9466:6;:13;:33;;9458:63;;;;-1:-1:-1;;;9458:63:0;;24317:2:23;9458:63:0;;;24299:21:23;24356:2;24336:18;;;24329:30;-1:-1:-1;;;24375:18:23;;;24368:47;24432:18;;9458:63:0;24115:341:23;9458:63:0;9532:22;9595:15;;9623:1967;;;;11731:4;11725:11;11712:24;;11917:1;11906:9;11899:20;11965:4;11954:9;11950:20;11944:4;11937:34;9588:2397;;9623:1967;9805:4;9799:11;9786:24;;10464:2;10455:7;10451:16;10846:9;10839:17;10833:4;10829:28;10817:9;10806;10802:25;10798:60;10894:7;10890:2;10886:16;11146:6;11132:9;11125:17;11119:4;11115:28;11103:9;11095:6;11091:22;11087:57;11083:70;10920:425;11179:3;11175:2;11172:11;10920:425;;;11317:9;;11306:21;;11220:4;11212:13;;;;11252;10920:425;;;-1:-1:-1;;11363:26:0;;;11571:2;11554:11;-1:-1:-1;;11550:25:0;11544:4;11537:39;-1:-1:-1;9588:2397:0;-1:-1:-1;12012:9:0;9258:2770;-1:-1:-1;;;;9258:2770:0:o;1111:1274:1:-;1265:4;1271:12;1331;1353:13;1376:24;1413:8;1403:19;;-1:-1:-1;;;;;1403:19:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:19:1;;1376:46;;1919:1;1890;1853:9;1847:16;1815:4;1804:9;1800:20;1766:1;1728:7;1699:4;1677:267;1665:279;;2011:16;2000:27;;2055:8;2046:7;2043:21;2040:76;;;2094:8;2083:19;;2040:76;2201:7;2188:11;2181:28;2321:7;2318:1;2311:4;2298:11;2294:22;2279:50;2356:8;;;;-1:-1:-1;1111:1274:1;-1:-1:-1;;;;;;1111:1274:1:o;1583:366:3:-;1852:8;1842:19;;;;;;1791:14;:27;1806:11;1791:27;;;;;;;;;;;;;;;1819:11;1791:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1791:48:3;;;;;;;;;:70;;;;1876:66;;;;1890:11;;1903;;1832:6;;1924:8;;1934:7;;1876:66;:::i;:::-;;;;;;;;1583:366;;;;;:::o;3742:395:2:-;3864:35;;;3840:21;3864:35;;;:22;:35;;;;;;;3913:21;;;3909:135;;-1:-1:-1;618:5:2;3909:135;4077:16;4061:12;:32;;4053:77;;;;-1:-1:-1;;;4053:77:2;;25679:2:23;4053:77:2;;;25661:21:23;;;25698:18;;;25691:30;25757:34;25737:18;;;25730:62;25809:18;;4053:77:2;25477:356:23;4053:77:2;3830:307;3742:395;;:::o;14:159:23:-;81:20;;141:6;130:18;;120:29;;110:57;;163:1;160;153:12;110:57;14:159;;;:::o;178:347::-;229:8;239:6;293:3;286:4;278:6;274:17;270:27;260:55;;311:1;308;301:12;260:55;-1:-1:-1;334:20:23;;-1:-1:-1;;;;;366:30:23;;363:50;;;409:1;406;399:12;363:50;446:4;438:6;434:17;422:29;;498:3;491:4;482:6;474;470:19;466:30;463:39;460:59;;;515:1;512;505:12;460:59;178:347;;;;;:::o;530:171::-;597:20;;-1:-1:-1;;;;;646:30:23;;636:41;;626:69;;691:1;688;681:12;706:862;812:6;820;828;836;844;852;905:3;893:9;884:7;880:23;876:33;873:53;;;922:1;919;912:12;873:53;945:28;963:9;945:28;:::i;:::-;935:38;-1:-1:-1;1024:2:23;1009:18;;996:32;-1:-1:-1;;;;;1077:14:23;;;1074:34;;;1104:1;1101;1094:12;1074:34;1143:58;1193:7;1184:6;1173:9;1169:22;1143:58;:::i;:::-;1220:8;;-1:-1:-1;1117:84:23;-1:-1:-1;1117:84:23;;-1:-1:-1;1274:37:23;1307:2;1292:18;;1274:37;:::i;:::-;1264:47;;1364:2;1353:9;1349:18;1336:32;1320:48;;1393:2;1383:8;1380:16;1377:36;;;1409:1;1406;1399:12;1377:36;;1448:60;1500:7;1489:8;1478:9;1474:24;1448:60;:::i;:::-;706:862;;;;-1:-1:-1;706:862:23;;-1:-1:-1;706:862:23;;1527:8;;706:862;-1:-1:-1;;;706:862:23:o;1573:184::-;1631:6;1684:2;1672:9;1663:7;1659:23;1655:32;1652:52;;;1700:1;1697;1690:12;1652:52;1723:28;1741:9;1723:28;:::i;1762:252::-;1829:6;1837;1890:2;1878:9;1869:7;1865:23;1861:32;1858:52;;;1906:1;1903;1896:12;1858:52;1929:28;1947:9;1929:28;:::i;:::-;1919:38;2004:2;1989:18;;;;1976:32;;-1:-1:-1;;;1762:252:23:o;2019:481::-;2097:6;2105;2113;2166:2;2154:9;2145:7;2141:23;2137:32;2134:52;;;2182:1;2179;2172:12;2134:52;2205:28;2223:9;2205:28;:::i;:::-;2195:38;-1:-1:-1;2284:2:23;2269:18;;2256:32;-1:-1:-1;;;;;2300:30:23;;2297:50;;;2343:1;2340;2333:12;2297:50;2382:58;2432:7;2423:6;2412:9;2408:22;2382:58;:::i;:::-;2019:481;;2459:8;;-1:-1:-1;2356:84:23;;-1:-1:-1;;;;2019:481:23:o;2879:127::-;2940:10;2935:3;2931:20;2928:1;2921:31;2971:4;2968:1;2961:15;2995:4;2992:1;2985:15;3011:275;3082:2;3076:9;3147:2;3128:13;;-1:-1:-1;;3124:27:23;3112:40;;-1:-1:-1;;;;;3167:34:23;;3203:22;;;3164:62;3161:88;;;3229:18;;:::i;:::-;3265:2;3258:22;3011:275;;-1:-1:-1;3011:275:23:o;3291:186::-;3339:4;-1:-1:-1;;;;;3361:30:23;;3358:56;;;3394:18;;:::i;:::-;-1:-1:-1;3460:2:23;3439:15;-1:-1:-1;;3435:29:23;3466:4;3431:40;;3291:186::o;3482:336::-;3546:5;3575:52;3591:35;3619:6;3591:35;:::i;:::-;3575:52;:::i;:::-;3566:61;;3650:6;3643:5;3636:21;3690:3;3681:6;3676:3;3672:16;3669:25;3666:45;;;3707:1;3704;3697:12;3666:45;3756:6;3751:3;3744:4;3737:5;3733:16;3720:43;3810:1;3803:4;3794:6;3787:5;3783:18;3779:29;3772:40;3482:336;;;;;:::o;3823:593::-;3907:6;3915;3923;3976:2;3964:9;3955:7;3951:23;3947:32;3944:52;;;3992:1;3989;3982:12;3944:52;4015:28;4033:9;4015:28;:::i;:::-;4005:38;-1:-1:-1;4094:2:23;4079:18;;4066:32;-1:-1:-1;;;;;4110:30:23;;4107:50;;;4153:1;4150;4143:12;4107:50;4176:22;;4229:4;4221:13;;4217:27;-1:-1:-1;4207:55:23;;4258:1;4255;4248:12;4207:55;4281:73;4346:7;4341:2;4328:16;4323:2;4319;4315:11;4281:73;:::i;:::-;4271:83;;;4373:37;4406:2;4395:9;4391:18;4373:37;:::i;:::-;4363:47;;3823:593;;;;;:::o;4603:173::-;4671:20;;-1:-1:-1;;;;;4720:31:23;;4710:42;;4700:70;;4766:1;4763;4756:12;4781:186;4840:6;4893:2;4881:9;4872:7;4868:23;4864:32;4861:52;;;4909:1;4906;4899:12;4861:52;4932:29;4951:9;4932:29;:::i;4972:450::-;5041:6;5094:2;5082:9;5073:7;5069:23;5065:32;5062:52;;;5110:1;5107;5100:12;5062:52;5137:23;;-1:-1:-1;;;;;5172:30:23;;5169:50;;;5215:1;5212;5205:12;5169:50;5238:22;;5291:4;5283:13;;5279:27;-1:-1:-1;5269:55:23;;5320:1;5317;5310:12;5269:55;5343:73;5408:7;5403:2;5390:16;5385:2;5381;5377:11;5343:73;:::i;:::-;5333:83;4972:450;-1:-1:-1;;;;4972:450:23:o;5427:250::-;5512:1;5522:113;5536:6;5533:1;5530:13;5522:113;;;5612:11;;;5606:18;5593:11;;;5586:39;5558:2;5551:10;5522:113;;;-1:-1:-1;;5669:1:23;5651:16;;5644:27;5427:250::o;5682:271::-;5724:3;5762:5;5756:12;5789:6;5784:3;5777:19;5805:76;5874:6;5867:4;5862:3;5858:14;5851:4;5844:5;5840:16;5805:76;:::i;:::-;5935:2;5914:15;-1:-1:-1;;5910:29:23;5901:39;;;;5942:4;5897:50;;5682:271;-1:-1:-1;;5682:271:23:o;5958:220::-;6107:2;6096:9;6089:21;6070:4;6127:45;6168:2;6157:9;6153:18;6145:6;6127:45;:::i;6406:256::-;6472:6;6480;6533:2;6521:9;6512:7;6508:23;6504:32;6501:52;;;6549:1;6546;6539:12;6501:52;6572:28;6590:9;6572:28;:::i;:::-;6562:38;;6619:37;6652:2;6641:9;6637:18;6619:37;:::i;:::-;6609:47;;6406:256;;;;;:::o;6667:203::-;-1:-1:-1;;;;;6831:32:23;;;;6813:51;;6801:2;6786:18;;6667:203::o;7110:622::-;7205:6;7213;7221;7229;7237;7290:3;7278:9;7269:7;7265:23;7261:33;7258:53;;;7307:1;7304;7297:12;7258:53;7330:28;7348:9;7330:28;:::i;:::-;7320:38;;7377:37;7410:2;7399:9;7395:18;7377:37;:::i;:::-;7367:47;-1:-1:-1;7461:2:23;7446:18;;7433:32;;-1:-1:-1;7516:2:23;7501:18;;7488:32;-1:-1:-1;;;;;7532:30:23;;7529:50;;;7575:1;7572;7565:12;7529:50;7614:58;7664:7;7655:6;7644:9;7640:22;7614:58;:::i;:::-;7110:622;;;;-1:-1:-1;7110:622:23;;-1:-1:-1;7691:8:23;;7588:84;7110:622;-1:-1:-1;;;7110:622:23:o;7737:324::-;7812:6;7820;7828;7881:2;7869:9;7860:7;7856:23;7852:32;7849:52;;;7897:1;7894;7887:12;7849:52;7920:28;7938:9;7920:28;:::i;:::-;7910:38;;7967:37;8000:2;7989:9;7985:18;7967:37;:::i;:::-;7957:47;;8051:2;8040:9;8036:18;8023:32;8013:42;;7737:324;;;;;:::o;8066:399::-;8150:6;8158;8166;8174;8227:3;8215:9;8206:7;8202:23;8198:33;8195:53;;;8244:1;8241;8234:12;8195:53;8267:28;8285:9;8267:28;:::i;:::-;8257:38;;8314:37;8347:2;8336:9;8332:18;8314:37;:::i;:::-;8304:47;;8370:38;8404:2;8393:9;8389:18;8370:38;:::i;:::-;8066:399;;;;-1:-1:-1;8360:48:23;;8455:2;8440:18;8427:32;;-1:-1:-1;;8066:399:23:o;8829:380::-;8908:1;8904:12;;;;8951;;;8972:61;;9026:4;9018:6;9014:17;9004:27;;8972:61;9079:2;9071:6;9068:14;9048:18;9045:38;9042:161;;9125:10;9120:3;9116:20;9113:1;9106:31;9160:4;9157:1;9150:15;9188:4;9185:1;9178:15;9042:161;;8829:380;;;:::o;9214:271::-;9397:6;9389;9384:3;9371:33;9353:3;9423:16;;9448:13;;;9423:16;9214:271;-1:-1:-1;9214:271:23:o;10090:266::-;10178:6;10173:3;10166:19;10230:6;10223:5;10216:4;10211:3;10207:14;10194:43;-1:-1:-1;10282:1:23;10257:16;;;10275:4;10253:27;;;10246:38;;;;10338:2;10317:15;;;-1:-1:-1;;10313:29:23;10304:39;;;10300:50;;10090:266::o;10361:326::-;10556:6;10548;10544:19;10533:9;10526:38;10600:2;10595;10584:9;10580:18;10573:30;10507:4;10620:61;10677:2;10666:9;10662:18;10654:6;10646;10620:61;:::i;11147:544::-;11248:2;11243:3;11240:11;11237:448;;;11284:1;11309:5;11305:2;11298:17;11354:4;11350:2;11340:19;11424:2;11412:10;11408:19;11405:1;11401:27;11395:4;11391:38;11460:4;11448:10;11445:20;11442:47;;;-1:-1:-1;11483:4:23;11442:47;11538:2;11533:3;11529:12;11526:1;11522:20;11516:4;11512:31;11502:41;;11593:82;11611:2;11604:5;11601:13;11593:82;;;11656:17;;;11637:1;11626:13;11593:82;;11696:166;-1:-1:-1;;11824:1:23;11820:11;;;11816:24;11812:29;11802:40;11848:1;11844:11;;;;11799:57;;11696:166::o;11867:1348::-;11985:10;;-1:-1:-1;;;;;12007:30:23;;12004:56;;;12040:18;;:::i;:::-;12069:96;12158:6;12118:38;12150:4;12144:11;12118:38;:::i;:::-;12112:4;12069:96;:::i;:::-;12220:4;;12284:2;12273:14;;12301:1;12296:662;;;;13002:1;13019:6;13016:89;;;-1:-1:-1;13071:19:23;;;13065:26;13016:89;13131:67;13191:6;13184:5;13131:67;:::i;:::-;13125:4;13118:81;;12266:943;;12296:662;11094:1;11087:14;;;11131:4;11118:18;;-1:-1:-1;;12332:20:23;;;12449:236;12463:7;12460:1;12457:14;12449:236;;;12552:19;;;12546:26;12531:42;;12644:27;;;;12612:1;12600:14;;;;12479:19;;12449:236;;;12453:3;12713:6;12704:7;12701:19;12698:201;;;12774:19;;;12768:26;-1:-1:-1;;12857:1:23;12853:14;;;12869:3;12849:24;12845:37;12841:42;12826:58;12811:74;;12698:201;-1:-1:-1;;;;;12945:1:23;12929:14;;;12925:22;12912:36;;-1:-1:-1;11867:1348:23:o;13985:127::-;14046:10;14041:3;14037:20;14034:1;14027:31;14077:4;14074:1;14067:15;14101:4;14098:1;14091:15;14117:128;14184:9;;;14205:11;;;14202:37;;;14219:18;;:::i;:::-;14117:128;;;;:::o;14250:352::-;14461:6;14453;14448:3;14435:33;14556:2;14527:15;;;;-1:-1:-1;;;;;;14523:45:23;14487:16;;14512:57;;;14593:2;14585:11;;14250:352;-1:-1:-1;14250:352:23:o;14607:498::-;14807:4;14836:6;14881:2;14873:6;14869:15;14858:9;14851:34;14933:2;14925:6;14921:15;14916:2;14905:9;14901:18;14894:43;;14973:6;14968:2;14957:9;14953:18;14946:34;15016:3;15011:2;15000:9;14996:18;14989:31;15037:62;15094:3;15083:9;15079:19;15071:6;15063;15037:62;:::i;:::-;15029:70;14607:498;-1:-1:-1;;;;;;;14607:498:23:o;15916:493::-;16165:6;16157;16153:19;16142:9;16135:38;16209:3;16204:2;16193:9;16189:18;16182:31;16116:4;16230:62;16287:3;16276:9;16272:19;16264:6;16256;16230:62;:::i;:::-;-1:-1:-1;;;;;16328:31:23;;;;16348:2;16308:18;;16301:59;-1:-1:-1;16391:2:23;16376:18;16369:34;16222:70;15916:493;-1:-1:-1;;;15916:493:23:o;16777:1202::-;-1:-1:-1;;;;;16891:27:23;;16888:53;;;16921:18;;:::i;:::-;16950:93;17039:3;16999:38;17031:4;17025:11;16999:38;:::i;:::-;16993:4;16950:93;:::i;:::-;17069:1;17094:2;17089:3;17086:11;17111:1;17106:615;;;;17765:1;17782:3;17779:93;;;-1:-1:-1;17838:19:23;;;17825:33;17779:93;17898:64;17958:3;17951:5;17898:64;:::i;:::-;17892:4;17885:78;;17079:894;;17106:615;11094:1;11087:14;;;11131:4;11118:18;;-1:-1:-1;;17142:17:23;;;17242:9;17264:229;17278:7;17275:1;17272:14;17264:229;;;17367:19;;;17354:33;17339:49;;17474:4;17459:20;;;;17427:1;17415:14;;;;17294:12;17264:229;;;17268:3;17521;17512:7;17509:16;17506:159;;;17645:1;17641:6;17635:3;17629;17626:1;17622:11;17618:21;17614:34;17610:39;17597:9;17592:3;17588:19;17575:33;17571:79;17563:6;17556:95;17506:159;;;17708:1;17702:3;17699:1;17695:11;17691:19;17685:4;17678:33;17079:894;;16777:1202;;;:::o;18852:320::-;18927:5;18956:52;18972:35;19000:6;18972:35;:::i;18956:52::-;18947:61;;19031:6;19024:5;19017:21;19071:3;19062:6;19057:3;19053:16;19050:25;19047:45;;;19088:1;19085;19078:12;19047:45;19101:65;19159:6;19152:4;19145:5;19141:16;19136:3;19101:65;:::i;19177:457::-;19256:6;19309:2;19297:9;19288:7;19284:23;19280:32;19277:52;;;19325:1;19322;19315:12;19277:52;19352:16;;-1:-1:-1;;;;;19380:30:23;;19377:50;;;19423:1;19420;19413:12;19377:50;19446:22;;19499:4;19491:13;;19487:27;-1:-1:-1;19477:55:23;;19528:1;19525;19518:12;19477:55;19551:77;19620:7;19615:2;19609:9;19604:2;19600;19596:11;19551:77;:::i;19639:557::-;19896:6;19888;19884:19;19873:9;19866:38;19940:3;19935:2;19924:9;19920:18;19913:31;19847:4;19967:46;20008:3;19997:9;19993:19;19985:6;19967:46;:::i;:::-;-1:-1:-1;;;;;20049:31:23;;20069:2;20029:18;;20022:59;20117:22;;;20112:2;20097:18;;20090:50;20157:33;20121:6;20175;20157:33;:::i;20979:840::-;21328:6;21320;21316:19;21305:9;21298:38;21372:3;21367:2;21356:9;21352:18;21345:31;21279:4;21399:46;21440:3;21429:9;21425:19;21417:6;21399:46;:::i;:::-;21493:9;21485:6;21481:22;21476:2;21465:9;21461:18;21454:50;21527:33;21553:6;21545;21527:33;:::i;:::-;-1:-1:-1;;;;;21634:15:23;;;21629:2;21614:18;;21607:43;21687:15;;21681:3;21666:19;;21659:44;21740:22;;;21587:3;21719:19;;21712:51;21513:47;-1:-1:-1;21780:33:23;21513:47;21798:6;21780:33;:::i;:::-;21772:41;20979:840;-1:-1:-1;;;;;;;;;20979:840:23:o;23642:125::-;23707:9;;;23728:10;;;23725:36;;;23741:18;;:::i;24461:287::-;24590:3;24628:6;24622:13;24644:66;24703:6;24698:3;24691:4;24683:6;24679:17;24644:66;:::i;:::-;24726:16;;;;;24461:287;-1:-1:-1;;24461:287:23:o;24753:719::-;25056:6;25048;25044:19;25033:9;25026:38;25100:3;25095:2;25084:9;25080:18;25073:31;25007:4;25127:46;25168:3;25157:9;25153:19;25145:6;25127:46;:::i;:::-;-1:-1:-1;;;;;25209:31:23;;25229:2;25189:18;;25182:59;25277:22;;;25272:2;25257:18;;25250:50;25323:33;25281:6;25341;25323:33;:::i;:::-;25309:47;;25405:9;25397:6;25393:22;25387:3;25376:9;25372:19;25365:51;25433:33;25459:6;25451;25433:33;:::i;:::-;25425:41;24753:719;-1:-1:-1;;;;;;;;24753:719:23:o"},"gasEstimates":{"creation":{"codeDepositCost":"1741000","executionCost":"infinite","totalCost":"infinite"},"external":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"635","data()":"infinite","failedMessages(uint16,bytes,uint64)":"infinite","forceResumeReceive(uint16,bytes)":"infinite","getConfig(uint16,uint16,address,uint256)":"infinite","getTrustedRemoteAddress(uint16)":"infinite","isTrustedRemote(uint16,bytes)":"infinite","lzEndpoint()":"infinite","lzReceive(uint16,bytes,uint64,bytes)":"infinite","minDstGasLookup(uint16,uint16)":"infinite","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"infinite","owner()":"2678","payloadSizeLimitLookup(uint16)":"2595","precrime()":"2691","renounceOwnership()":"infinite","retryMessage(uint16,bytes,uint64,bytes)":"infinite","send(string)":"infinite","setConfig(uint16,uint16,uint256,bytes)":"infinite","setMinDstGas(uint16,uint16,uint256)":"infinite","setPayloadSizeLimit(uint16,uint256)":"24723","setPrecrime(address)":"28302","setReceiveVersion(uint16)":"infinite","setSendVersion(uint16)":"infinite","setTrustedRemote(uint16,bytes)":"infinite","setTrustedRemoteAddress(uint16,bytes)":"infinite","transferOwnership(address)":"28928","trustAddress(address)":"infinite","trustedRemoteLookup(uint16)":"infinite"},"internal":{"_nonblockingLzReceive(uint16,bytes memory,uint64,bytes memory)":"infinite"}},"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","data()":"73d4a13a","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","send(string)":"66792ba1","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustAddress(address)":"5cdf1649","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzEndpoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otherContract\",\"type\":\"address\"}],\"name\":\"trustAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZeroTest.sol\":\"LayerZeroTest\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\n            gasleft(),\\n            150,\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\n        );\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload,\\n        bytes memory _reason\\n    ) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function retryMessage(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x612ff1f2a158b7e64e873885b5ff08afa348998fd9005f384d555d643ba7968d\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/LayerZeroTest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\\\";\\r\\n\\r\\n/*\\r\\n    LayerZero BNB Testnet\\r\\n      lzChainId: 10102  lzEndpoint: 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1\\r\\n      contract: \\r\\n    LayerZero Fantom Testnet\\r\\n      lzChainId:10112   lzEndpoint: 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf\\r\\n      contract: \\r\\n*/\\r\\n\\r\\ncontract LayerZeroTest is NonblockingLzApp {\\r\\n    string public data = \\\"Nothing received yet\\\";\\r\\n    uint16 destChainId;\\r\\n    \\r\\n    constructor(address _lzEndpoint) NonblockingLzApp(_lzEndpoint) {\\r\\n        if (_lzEndpoint == 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1) destChainId = 10112;\\r\\n        if (_lzEndpoint == 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf) destChainId = 10102;\\r\\n        // if (_lzEndpoint == 0xf69186dfBa60DdB133E91E9A4B5673624293d8F8) destChainId = 10109;\\r\\n        // if (_lzEndpoint == 0x6aB5Ae6822647046626e83ee6dB8187151E1d5ab) destChainId = 10143;\\r\\n    }\\r\\n\\r\\n    function _nonblockingLzReceive(uint16, bytes memory, uint64, bytes memory _payload) internal override {\\r\\n       data = abi.decode(_payload, (string));\\r\\n    }\\r\\n\\r\\n    function send(string memory _message) public payable {\\r\\n        bytes memory payload = abi.encode(_message);\\r\\n        _lzSend(destChainId, payload, payable(msg.sender), address(0x0), bytes(\\\"\\\"), msg.value);\\r\\n    }\\r\\n\\r\\n    function trustAddress(address _otherContract) public onlyOwner {\\r\\n        trustedRemoteLookup[destChainId] = abi.encodePacked(_otherContract, address(this));   \\r\\n    }\\r\\n}\",\"keccak256\":\"0x6000e66a8a88d489e6ba2ab516026b6ce547ce8ba9bf2e75350b35854bc860f4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1635,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":997,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"},{"astId":3267,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"data","offset":0,"slot":"6","type":"t_string_storage"},{"astId":3269,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"destChainId","offset":0,"slot":"7","type":"t_uint16"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ITokenBridge.sol":{"ITokenBridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"EnableEmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Receive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"RegisterToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"bytes32","name":"to","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"Send","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"aptosChainId","type":"uint16"}],"name":"SetAptosChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"bridgeFeeBP","type":"uint256"}],"name":"SetBridgeBP","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetGlobalPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"localChainId","type":"uint16"}],"name":"SetLocalChainId","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"SetTokenPause","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useCustomAdapterParams","type":"bool"}],"name":"SetUseCustomAdapterParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"weth","type":"address"}],"name":"SetWETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLD","type":"uint256"}],"name":"WithdrawTVL","type":"event"},{"inputs":[{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"quoteForSend","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_toAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendETHToAptos","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"_toAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"components":[{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"}],"internalType":"struct LzLib.CallParams","name":"_callParams","type":"tuple"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"sendToAptos","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"quoteForSend((address,address),bytes)":"468b9668","sendETHToAptos(bytes32,uint256,(address,address),bytes)":"ca23bb4c","sendToAptos(address,bytes32,uint256,(address,address),bytes)":"76a9099a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"EnableEmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Receive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RegisterToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"Send\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"aptosChainId\",\"type\":\"uint16\"}],\"name\":\"SetAptosChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bridgeFeeBP\",\"type\":\"uint256\"}],\"name\":\"SetBridgeBP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetGlobalPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"localChainId\",\"type\":\"uint16\"}],\"name\":\"SetLocalChainId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"SetTokenPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"SetUseCustomAdapterParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"name\":\"SetWETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"}],\"name\":\"WithdrawTVL\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"quoteForSend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_toAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendETHToAptos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_toAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"}],\"internalType\":\"struct LzLib.CallParams\",\"name\":\"_callParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendToAptos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITokenBridge.sol\":\"ITokenBridge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ITokenBridge.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.6.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\n\\r\\ninterface ITokenBridge {\\r\\n    enum PacketType {\\r\\n        SEND_TO_APTOS,\\r\\n        RECEIVE_FROM_APTOS\\r\\n    }\\r\\n\\r\\n    function sendToAptos(\\r\\n        address _token,\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendETHToAptos(\\r\\n        bytes32 _toAddress,\\r\\n        uint _amountLD,\\r\\n        LzLib.CallParams calldata _callParams,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteForSend(LzLib.CallParams calldata _callParams, bytes calldata _adapterParams)\\r\\n        external\\r\\n        view\\r\\n        returns (uint nativeFee, uint zroFee);\\r\\n\\r\\n    event Send(address indexed token, address indexed from, bytes32 indexed to, uint amountLD);\\r\\n    event Receive(address indexed token, address indexed to, uint amountLD);\\r\\n    event RegisterToken(address token);\\r\\n    event SetBridgeBP(uint bridgeFeeBP);\\r\\n    event SetWETH(address weth);\\r\\n    event SetGlobalPause(bool paused);\\r\\n    event SetTokenPause(address token, bool paused);\\r\\n    event SetLocalChainId(uint16 localChainId);\\r\\n    event SetAptosChainId(uint16 aptosChainId);\\r\\n    event SetUseCustomAdapterParams(bool useCustomAdapterParams);\\r\\n    event WithdrawFee(address indexed token, address to, uint amountLD);\\r\\n    event WithdrawTVL(address indexed token, address to, uint amountLD);\\r\\n    event EnableEmergencyWithdraw(bool enabled, uint unlockTime);\\r\\n}\\r\\n\",\"keccak256\":\"0xf147f03f81fa28462ee5a457f7f7ce1b602f205aae1ac242b21fe4b3c7bc6269\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IWETH.sol":{"IWETH":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n    function withdraw(uint) external;\\r\\n\\r\\n    function approve(address to, uint value) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x35d711a3c1dcd8a5c7380c665516661094181754f0df97cbdfb38e1cff4440ea\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mocks/LZEndpointMock.sol":{"LZEndpointMock":{"abi":[{"inputs":[{"internalType":"uint16","name":"_chainId","type":"uint16"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"payload","type":"bytes"}],"name":"Packet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"address","name":"dstAddress","type":"address"}],"name":"PayloadCleared","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"srcAddress","type":"bytes"},{"indexed":false,"internalType":"address","name":"dstAddress","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"PayloadStored","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"chainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"srcAddress","type":"bytes"}],"name":"UaForceResumeReceive","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"ValueTransferFailed","type":"event"},{"inputs":[],"name":"blockNextMsg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"callReceive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultAdapterParams","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint16","name":"_chainID","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_chainID","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lzEndpointLookup","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mockChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"msgsToDeliver","outputs":[{"internalType":"address","name":"dstAddress","type":"address"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextMsgBlocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracleFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"address","name":"","type":"address"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFeeConfig","outputs":[{"internalType":"uint256","name":"zroFee","type":"uint256"},{"internalType":"uint256","name":"nativeBP","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"relayerFeeConfig","outputs":[{"internalType":"uint128","name":"dstPriceRatio","type":"uint128"},{"internalType":"uint128","name":"dstGasPriceInWei","type":"uint128"},{"internalType":"uint128","name":"dstNativeAmtCap","type":"uint128"},{"internalType":"uint64","name":"baseGas","type":"uint64"},{"internalType":"uint64","name":"gasPerByte","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"_callReceive","type":"bool"}],"name":"setCallReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"setDefaultAdapterParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"destAddr","type":"address"},{"internalType":"address","name":"lzEndpointAddr","type":"address"}],"name":"setDestLzEndpoint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_oracleFee","type":"uint256"}],"name":"setOracleFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_zroFee","type":"uint256"},{"internalType":"uint256","name":"_nativeBP","type":"uint256"}],"name":"setProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"_dstPriceRatio","type":"uint128"},{"internalType":"uint128","name":"_dstGasPriceInWei","type":"uint128"},{"internalType":"uint128","name":"_dstNativeAmtCap","type":"uint128"},{"internalType":"uint64","name":"_baseGas","type":"uint64"},{"internalType":"uint64","name":"_gasPerByte","type":"uint64"}],"name":"setRelayerPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"storedPayload","outputs":[{"internalType":"uint64","name":"payloadLength","type":"uint64"},{"internalType":"address","name":"dstAddress","type":"address"},{"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3733":{"entryPoint":null,"id":3733,"parameterSlots":1,"returnSlots":0},"@buildDefaultAdapterParams_1471":{"entryPoint":null,"id":1471,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_uint16_fromMemory":{"entryPoint":317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":444,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":527,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":384,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":362,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3288:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"94:196:23","statements":[{"body":{"nodeType":"YulBlock","src":"140:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"152:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"142:6:23"},"nodeType":"YulFunctionCall","src":"142:12:23"},"nodeType":"YulExpressionStatement","src":"142:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"115:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"124:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"111:3:23"},"nodeType":"YulFunctionCall","src":"111:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"136:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"107:3:23"},"nodeType":"YulFunctionCall","src":"107:32:23"},"nodeType":"YulIf","src":"104:52:23"},{"nodeType":"YulVariableDeclaration","src":"165:29:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"184:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"178:5:23"},"nodeType":"YulFunctionCall","src":"178:16:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"244:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"256:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"246:6:23"},"nodeType":"YulFunctionCall","src":"246:12:23"},"nodeType":"YulExpressionStatement","src":"246:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"216:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"234:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"223:3:23"},"nodeType":"YulFunctionCall","src":"223:18:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"213:2:23"},"nodeType":"YulFunctionCall","src":"213:29:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"206:6:23"},"nodeType":"YulFunctionCall","src":"206:37:23"},"nodeType":"YulIf","src":"203:57:23"},{"nodeType":"YulAssignment","src":"269:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"279:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"269:6:23"}]}]},"name":"abi_decode_tuple_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"71:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"83:6:23","type":""}],"src":"14:276:23"},{"body":{"nodeType":"YulBlock","src":"327:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"344:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"351:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"356:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"347:3:23"},"nodeType":"YulFunctionCall","src":"347:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"337:6:23"},"nodeType":"YulFunctionCall","src":"337:31:23"},"nodeType":"YulExpressionStatement","src":"337:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"384:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"387:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"377:6:23"},"nodeType":"YulFunctionCall","src":"377:15:23"},"nodeType":"YulExpressionStatement","src":"377:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"408:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"411:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"401:6:23"},"nodeType":"YulFunctionCall","src":"401:15:23"},"nodeType":"YulExpressionStatement","src":"401:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"295:127:23"},{"body":{"nodeType":"YulBlock","src":"482:325:23","statements":[{"nodeType":"YulAssignment","src":"492:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"506:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"509:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"502:3:23"},"nodeType":"YulFunctionCall","src":"502:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"492:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"523:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"553:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"549:3:23"},"nodeType":"YulFunctionCall","src":"549:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"527:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"600:31:23","statements":[{"nodeType":"YulAssignment","src":"602:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"616:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"624:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"612:3:23"},"nodeType":"YulFunctionCall","src":"612:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"602:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"580:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"573:6:23"},"nodeType":"YulFunctionCall","src":"573:26:23"},"nodeType":"YulIf","src":"570:61:23"},{"body":{"nodeType":"YulBlock","src":"690:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"711:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"718:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"723:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"714:3:23"},"nodeType":"YulFunctionCall","src":"714:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"704:6:23"},"nodeType":"YulFunctionCall","src":"704:31:23"},"nodeType":"YulExpressionStatement","src":"704:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"755:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"758:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"748:6:23"},"nodeType":"YulFunctionCall","src":"748:15:23"},"nodeType":"YulExpressionStatement","src":"748:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"783:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"786:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"776:6:23"},"nodeType":"YulFunctionCall","src":"776:15:23"},"nodeType":"YulExpressionStatement","src":"776:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"646:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"669:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"677:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"666:2:23"},"nodeType":"YulFunctionCall","src":"666:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"643:2:23"},"nodeType":"YulFunctionCall","src":"643:38:23"},"nodeType":"YulIf","src":"640:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"462:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"471:6:23","type":""}],"src":"427:380:23"},{"body":{"nodeType":"YulBlock","src":"867:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"884:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"887:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"877:6:23"},"nodeType":"YulFunctionCall","src":"877:14:23"},"nodeType":"YulExpressionStatement","src":"877:14:23"},{"nodeType":"YulAssignment","src":"900:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"918:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"921:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"908:9:23"},"nodeType":"YulFunctionCall","src":"908:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"900:4:23"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"850:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"858:4:23","type":""}],"src":"812:120:23"},{"body":{"nodeType":"YulBlock","src":"1017:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"1050:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1064:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1074:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1068:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1095:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"1099:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1088:6:23"},"nodeType":"YulFunctionCall","src":"1088:17:23"},"nodeType":"YulExpressionStatement","src":"1088:17:23"},{"nodeType":"YulVariableDeclaration","src":"1118:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1140:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"1144:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1130:9:23"},"nodeType":"YulFunctionCall","src":"1130:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1122:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1162:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1185:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1195:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1202:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1198:3:23"},"nodeType":"YulFunctionCall","src":"1198:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1191:3:23"},"nodeType":"YulFunctionCall","src":"1191:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1181:3:23"},"nodeType":"YulFunctionCall","src":"1181:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1166:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1256:23:23","statements":[{"nodeType":"YulAssignment","src":"1258:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"1273:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1258:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1238:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1250:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1235:2:23"},"nodeType":"YulFunctionCall","src":"1235:20:23"},"nodeType":"YulIf","src":"1232:47:23"},{"nodeType":"YulVariableDeclaration","src":"1292:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1306:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1316:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1323:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1328:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1319:3:23"},"nodeType":"YulFunctionCall","src":"1319:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1312:3:23"},"nodeType":"YulFunctionCall","src":"1312:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1302:3:23"},"nodeType":"YulFunctionCall","src":"1302:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1296:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1346:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1359:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1350:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1444:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1453:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1460:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1446:6:23"},"nodeType":"YulFunctionCall","src":"1446:17:23"},"nodeType":"YulExpressionStatement","src":"1446:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1394:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"1401:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1391:2:23"},"nodeType":"YulFunctionCall","src":"1391:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1405:26:23","statements":[{"nodeType":"YulAssignment","src":"1407:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1420:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1427:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:23"},"nodeType":"YulFunctionCall","src":"1416:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1407:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1387:3:23","statements":[]},"src":"1383:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1033:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1030:2:23"},"nodeType":"YulFunctionCall","src":"1030:11:23"},"nodeType":"YulIf","src":"1027:448:23"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"989:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"996:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1001:10:23","type":""}],"src":"937:544:23"},{"body":{"nodeType":"YulBlock","src":"1571:81:23","statements":[{"nodeType":"YulAssignment","src":"1581:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1596:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1614:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1617:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1610:3:23"},"nodeType":"YulFunctionCall","src":"1610:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1627:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1623:3:23"},"nodeType":"YulFunctionCall","src":"1623:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1606:3:23"},"nodeType":"YulFunctionCall","src":"1606:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1602:3:23"},"nodeType":"YulFunctionCall","src":"1602:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1592:3:23"},"nodeType":"YulFunctionCall","src":"1592:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1638:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1641:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1634:3:23"},"nodeType":"YulFunctionCall","src":"1634:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1589:2:23"},"nodeType":"YulFunctionCall","src":"1589:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1581:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1548:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"1554:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1562:4:23","type":""}],"src":"1486:166:23"},{"body":{"nodeType":"YulBlock","src":"1751:1254:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1761:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1781:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1775:5:23"},"nodeType":"YulFunctionCall","src":"1775:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1765:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1828:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1830:16:23"},"nodeType":"YulFunctionCall","src":"1830:18:23"},"nodeType":"YulExpressionStatement","src":"1830:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1800:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1816:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1820:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1812:3:23"},"nodeType":"YulFunctionCall","src":"1812:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1824:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1808:3:23"},"nodeType":"YulFunctionCall","src":"1808:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1797:2:23"},"nodeType":"YulFunctionCall","src":"1797:30:23"},"nodeType":"YulIf","src":"1794:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1902:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1940:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1934:5:23"},"nodeType":"YulFunctionCall","src":"1934:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1908:25:23"},"nodeType":"YulFunctionCall","src":"1908:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"1948:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"1859:42:23"},"nodeType":"YulFunctionCall","src":"1859:96:23"},"nodeType":"YulExpressionStatement","src":"1859:96:23"},{"nodeType":"YulVariableDeclaration","src":"1964:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1981:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1968:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1991:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2010:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1995:11:23","type":""}]},{"nodeType":"YulAssignment","src":"2023:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2036:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2023:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2093:655:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2107:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2126:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2138:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2134:3:23"},"nodeType":"YulFunctionCall","src":"2134:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2122:3:23"},"nodeType":"YulFunctionCall","src":"2122:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2111:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2155:48:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2198:4:23"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"2169:28:23"},"nodeType":"YulFunctionCall","src":"2169:34:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2159:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2216:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2225:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2220:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2303:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2328:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2346:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2351:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2342:3:23"},"nodeType":"YulFunctionCall","src":"2342:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2336:5:23"},"nodeType":"YulFunctionCall","src":"2336:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2321:6:23"},"nodeType":"YulFunctionCall","src":"2321:42:23"},"nodeType":"YulExpressionStatement","src":"2321:42:23"},{"nodeType":"YulAssignment","src":"2380:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2394:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2402:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2390:3:23"},"nodeType":"YulFunctionCall","src":"2390:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2380:6:23"}]},{"nodeType":"YulAssignment","src":"2421:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2438:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2449:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2434:3:23"},"nodeType":"YulFunctionCall","src":"2434:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2421:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2250:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2253:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2247:2:23"},"nodeType":"YulFunctionCall","src":"2247:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2262:28:23","statements":[{"nodeType":"YulAssignment","src":"2264:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2273:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2276:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:23"},"nodeType":"YulFunctionCall","src":"2269:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2264:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"2243:3:23","statements":[]},"src":"2239:236:23"},{"body":{"nodeType":"YulBlock","src":"2523:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2541:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2568:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2573:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2564:3:23"},"nodeType":"YulFunctionCall","src":"2564:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2558:5:23"},"nodeType":"YulFunctionCall","src":"2558:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2545:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2608:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2620:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2650:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:23"},"nodeType":"YulFunctionCall","src":"2643:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2659:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2639:3:23"},"nodeType":"YulFunctionCall","src":"2639:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2669:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2665:3:23"},"nodeType":"YulFunctionCall","src":"2665:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2635:3:23"},"nodeType":"YulFunctionCall","src":"2635:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2631:3:23"},"nodeType":"YulFunctionCall","src":"2631:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2616:3:23"},"nodeType":"YulFunctionCall","src":"2616:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2601:6:23"},"nodeType":"YulFunctionCall","src":"2601:74:23"},"nodeType":"YulExpressionStatement","src":"2601:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2494:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"2503:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2491:2:23"},"nodeType":"YulFunctionCall","src":"2491:19:23"},"nodeType":"YulIf","src":"2488:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2709:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2723:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2726:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2719:3:23"},"nodeType":"YulFunctionCall","src":"2719:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2735:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2715:3:23"},"nodeType":"YulFunctionCall","src":"2715:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2702:6:23"},"nodeType":"YulFunctionCall","src":"2702:36:23"},"nodeType":"YulExpressionStatement","src":"2702:36:23"}]},"nodeType":"YulCase","src":"2086:662:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2091:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2765:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2779:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2792:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2783:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2828:67:23","statements":[{"nodeType":"YulAssignment","src":"2846:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2865:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2870:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2861:3:23"},"nodeType":"YulFunctionCall","src":"2861:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2855:5:23"},"nodeType":"YulFunctionCall","src":"2855:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2846:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2809:6:23"},"nodeType":"YulIf","src":"2806:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2915:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2974:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"2981:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2921:52:23"},"nodeType":"YulFunctionCall","src":"2921:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2908:6:23"},"nodeType":"YulFunctionCall","src":"2908:81:23"},"nodeType":"YulExpressionStatement","src":"2908:81:23"}]},"nodeType":"YulCase","src":"2757:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2066:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2074:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2063:2:23"},"nodeType":"YulFunctionCall","src":"2063:14:23"},"nodeType":"YulSwitch","src":"2056:943:23"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1736:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"1742:3:23","type":""}],"src":"1657:1348:23"},{"body":{"nodeType":"YulBlock","src":"3155:131:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3172:3:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3185:3:23","type":"","value":"240"},{"name":"value0","nodeType":"YulIdentifier","src":"3190:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3181:3:23"},"nodeType":"YulFunctionCall","src":"3181:16:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3203:3:23","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"3208:5:23","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3199:3:23"},"nodeType":"YulFunctionCall","src":"3199:15:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3177:3:23"},"nodeType":"YulFunctionCall","src":"3177:38:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3165:6:23"},"nodeType":"YulFunctionCall","src":"3165:51:23"},"nodeType":"YulExpressionStatement","src":"3165:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3236:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"3241:1:23","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3232:3:23"},"nodeType":"YulFunctionCall","src":"3232:11:23"},{"name":"value1","nodeType":"YulIdentifier","src":"3245:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3225:6:23"},"nodeType":"YulFunctionCall","src":"3225:27:23"},"nodeType":"YulExpressionStatement","src":"3225:27:23"},{"nodeType":"YulAssignment","src":"3261:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3272:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"3277:2:23","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3268:3:23"},"nodeType":"YulFunctionCall","src":"3268:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3261:3:23"}]}]},"name":"abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3123:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3128:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3136:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3147:3:23","type":""}],"src":"3010:276:23"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(240, value0), shl(240, 65535)))\n        mstore(add(pos, 2), value1)\n        end := add(pos, 34)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xC DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3241 CODESIZE SUB DUP1 PUSH3 0x3241 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x43 SWAP2 PUSH3 0x13D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP4 AND OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH5 0x2540BE400 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH8 0x8AC7230489E80000 DUP3 DUP5 ADD MSTORE PUSH1 0x64 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH21 0x2540BE400000000000000000000000002540BE400 PUSH1 0x2 SSTORE PUSH25 0x1000000000000006400000000000000008AC7230489E80000 PUSH1 0x3 SSTORE DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MSTORE PUSH2 0x3E8 SWAP2 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x6 SSTORE PUSH3 0x126 PUSH3 0x186A0 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x42 ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SWAP1 PUSH3 0x135 SWAP1 DUP3 PUSH3 0x20F JUMP JUMPDEST POP POP PUSH3 0x2DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH3 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x195 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x20A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1E5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x206 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F1 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x22B JUMPI PUSH3 0x22B PUSH3 0x16A JUMP JUMPDEST PUSH3 0x243 DUP2 PUSH3 0x23C DUP5 SLOAD PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x27B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x262 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x206 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2AC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x28B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2CB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2F56 DUP1 PUSH3 0x2EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D3277F EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x96568F6 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xEAF6EA6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x12A9EE6B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x240DE277 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x272BD384 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x2C365E25 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x3408E470 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x3E0DD83E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x40A7BB10 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x6FBAC4B5 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x71BA2FD6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x76A386DC EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x7A145748 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x907C5E7E EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x9924D33B EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x9C729DA1 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xAAFF5F16 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xB2086499 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xB2304574 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xB6D9EF60 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xC08F15A1 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xC2FA4813 EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xC5803100 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xC81B383A EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xCA066B35 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x772 JUMPI DUP1 PUSH4 0xD23104F1 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0xDA1A7C9A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xDB14F305 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xE97A448A EQ PUSH2 0x7D1 JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0xF9CD3CEB EQ PUSH2 0x81F JUMPI DUP1 PUSH4 0xFBBA623B EQ PUSH2 0x843 JUMPI DUP1 PUSH4 0xFDC07C70 EQ PUSH2 0x863 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1D5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x214E JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x241C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP5 DUP7 AND DUP6 MUL OR PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xFFFF AND PUSH2 0x230 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x263 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x263 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST POP ADDRESS SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x44D CALLDATASIZE PUSH1 0x4 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2575 JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x54F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND SWAP3 SWAP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x2575 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x262C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x69A CALLDATASIZE PUSH1 0x4 PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x6BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2660 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x267E JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x736 CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x78D CALLDATASIZE PUSH1 0x4 PUSH2 0x27F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x230 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x835 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x85E CALLDATASIZE PUSH1 0x4 PUSH2 0x28A8 JUMP JUMPDEST PUSH2 0x1BA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x87E CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x8A9 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP7 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP5 POP SWAP2 SWAP3 POP PUSH2 0x943 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96F SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x991 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x9D3 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FF SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD GT PUSH2 0xAF1 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xA6E SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9A SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xAF3 JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB06 DUP10 PUSH1 0x1 DUP11 DUP11 MLOAD DUP7 PUSH2 0x1BFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB17 DUP8 DUP4 PUSH1 0x6 SLOAD PUSH2 0x1D96 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0xB27 JUMPI DUP1 SWAP5 POP DUP5 PUSH2 0xB2C JUMP JUMPDEST DUP1 SWAP4 POP DUP4 JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0xB3A DUP4 DUP8 PUSH2 0x2944 JUMP JUMPDEST PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x2944 JUMP JUMPDEST SWAP5 POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xB76 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C69642063616C6C6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0x23D2684F396E92A6E2FF2D16F98E6FEA00D50CB27A64B531BC0748F730211F98 SWAP1 PUSH2 0xC5B SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x78D DUP5 DUP5 DUP5 PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xCC9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x2957 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 EQ DUP1 ISZERO PUSH2 0xD2F JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD25 SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C6964207061796C6F61640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0xDC5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH3 0x1D3567 SWAP1 PUSH2 0xE11 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP8 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x612434F39581C8E7D99746C9C20C6EB0CE8C0EB99F007C5719D620841370957D DUP9 DUP9 DUP9 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE7A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2072656365697665207265656E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6379 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x200 OR SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xF24 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP11 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xF5F SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF85 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A69 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x4C617965725A65726F4D6F636B3A2077726F6E67206E6F6E6365 PUSH1 0x30 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x12D7 JUMPI PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1032 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP2 MSTORE POP DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1268 JUMPI DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x1113 SWAP1 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP POP POP PUSH1 0x0 JUMPDEST DUP3 SLOAD PUSH2 0x1127 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x11ED JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1140 JUMPI PUSH2 0x1140 PUSH2 0x2BC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP4 DUP3 PUSH1 0x1 PUSH2 0x115C SWAP2 SWAP1 PUSH2 0x2944 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x116C JUMPI PUSH2 0x116C PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD SWAP1 PUSH2 0x11D6 SWAP1 DUP5 ADD DUP3 PUSH2 0x2BDD JUMP JUMPDEST POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x11E5 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1119 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1202 JUMPI PUSH2 0x1202 PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x125F SWAP1 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x12D0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x12CC SWAP1 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP POP POP JUMPDEST POP POP PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1324 SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x1353 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD DUP7 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR OR DUP2 SSTORE SWAP4 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x13DA SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 PUSH2 0x2CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH3 0x1D3567 SWAP1 DUP7 SWAP1 PUSH2 0x1429 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x1455 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1586 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14C5 SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x14F4 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1570 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP11 SWAP1 PUSH2 0x2CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073656E64207265656E7472616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP6 MLOAD PUSH1 0x28 EQ PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E636F72726563742072656D6F746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616464726573732073697A65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP1 MLOAD DUP8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x170D JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0x168A SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16B6 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x170F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1760 DUP4 CALLER DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO ISZERO DUP7 PUSH2 0xA54 JUMP JUMPDEST POP SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F7420656E6F756768206E6174697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20666F722066656573 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 PUSH2 0x17F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A69 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE SWAP1 POP PUSH1 0x0 DUP3 CALLVALUE PUSH2 0x182C SWAP2 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x18D9 JUMPI PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x18D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206661696C656420746F20726566756E6400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x18E7 DUP8 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP DUP2 ISZERO PUSH2 0x1989 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1942 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1987 JUMPI PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x2C7A964CA3DE5EC1D42D9822F9BBD0EB142A59CC9F855E9D93813B773192C7A3 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP16 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP15 DUP15 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP6 SWAP7 POP SWAP1 SWAP5 PUSH2 0x19F1 SWAP5 POP DUP13 SWAP4 POP PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP2 POP CALLER SWAP1 DUP16 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x20 ADD PUSH2 0x2D3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH32 0xE9BDED5F24A4168E4F3BF44E00298C993B22376AAD8C58C7DDA9718A54CBEA82 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1A31 SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B87 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A2064657374696E6174696F6E204C61796572 PUSH1 0x44 DUP3 ADD MSTORE PUSH23 0x16995C9BC8115B991C1BDA5B9D081B9BDD08199BDD5B99 PUSH1 0x4A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP7 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC2FA4813 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP4 DUP9 DUP15 DUP14 DUP11 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B52 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH2 0x1BB4 DUP3 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1BDB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0C DUP6 PUSH2 0x1FCA JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x1C98 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 GT ISZERO PUSH2 0x1C8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206473744E6174697665416D7420746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3630B933B29 PUSH1 0xD5 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x1C95 DUP3 DUP3 PUSH2 0x2944 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1CB9 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2944 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1CD6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2E0D JUMP JUMPDEST SWAP1 POP PUSH2 0x1CE2 DUP2 DUP4 PUSH2 0x2944 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH5 0x2540BE400 SWAP1 PUSH2 0x1D05 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH2 0x2E0D JUMP JUMPDEST PUSH2 0x1D0F SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH5 0x2540BE400 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH2 0x1D52 SWAP3 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x1D66 SWAP2 SWAP1 PUSH2 0x2E79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH2 0x1D7B DUP2 DUP12 PUSH2 0x2E0D JUMP JUMPDEST PUSH2 0x1D85 SWAP1 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO PUSH2 0x1DA7 JUMPI POP PUSH1 0x4 SLOAD PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1DB8 DUP5 DUP7 PUSH2 0x2944 JUMP JUMPDEST PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x2E0D JUMP JUMPDEST PUSH2 0x1DCC SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST SWAP1 POP PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1DF6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x78D JUMPI DUP1 SLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH2 0x1E21 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E31 JUMPI PUSH2 0x1E31 PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x1E8A SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EB6 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EE6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1D3567 DUP7 DUP7 DUP7 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x1F8F JUMPI PUSH2 0x1F8F PUSH2 0x2EEA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE SWAP1 PUSH2 0x1FC0 PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x20E9 JUMP JUMPDEST POP POP SWAP1 SSTORE POP PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x22 EQ DUP1 PUSH2 0x1FE1 JUMPI POP PUSH1 0x42 DUP6 MLOAD GT JUMPDEST PUSH2 0x2025 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646170746572506172616D73 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD MLOAD SWAP4 POP PUSH1 0x22 DUP6 ADD MLOAD SWAP3 POP DUP4 PUSH2 0xFFFF AND PUSH1 0x1 EQ DUP1 PUSH2 0x204A JUMPI POP DUP4 PUSH2 0xFFFF AND PUSH1 0x2 EQ JUMPDEST PUSH2 0x208B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E737570706F7274656420747854797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x20C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x47617320746F6F206C6F77 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x20E2 JUMPI POP POP PUSH1 0x42 DUP4 ADD MLOAD PUSH1 0x56 DUP5 ADD MLOAD JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x20F5 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2105 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2133 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x211F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP3 PUSH2 0x2137 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8C2 DUP2 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x21AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x21DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2201 DUP5 PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x221C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2228 DUP7 DUP3 DUP8 ADD PUSH2 0x219B JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2276 JUMPI PUSH2 0x2276 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x229E JUMPI PUSH2 0x229E PUSH2 0x2235 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x22B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22F5 DUP5 PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x231C DUP7 DUP3 DUP8 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2348 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2330 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2369 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x232D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x23B0 SWAP1 DUP4 ADD DUP5 PUSH2 0x2351 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2351 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x243D DUP7 PUSH2 0x23EE JUMP JUMPDEST SWAP5 POP PUSH2 0x244B PUSH1 0x20 DUP8 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP4 POP PUSH2 0x2459 PUSH1 0x40 DUP8 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP3 POP PUSH2 0x2467 PUSH1 0x60 DUP8 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP2 POP PUSH2 0x2475 PUSH1 0x80 DUP8 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B2 DUP7 PUSH2 0x2137 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x24C2 DUP2 PUSH2 0x2169 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x24DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24EA DUP10 DUP4 DUP11 ADD PUSH2 0x224B JUMP JUMPDEST SWAP5 POP PUSH2 0x24F8 PUSH1 0x60 DUP10 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x250E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251B DUP9 DUP3 DUP10 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x253B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2544 DUP4 PUSH2 0x2137 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x255F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x256B DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2591 DUP4 PUSH2 0x2137 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x25A1 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25CD DUP7 PUSH2 0x2137 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x25E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F5 DUP10 DUP4 DUP11 ADD PUSH2 0x219B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x260E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x261B DUP9 DUP3 DUP10 ADD PUSH2 0x219B JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP3 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2591 DUP2 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x269A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26A3 DUP10 PUSH2 0x2137 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x26BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26CB DUP13 DUP4 DUP14 ADD PUSH2 0x219B JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP PUSH2 0x26E0 DUP3 PUSH2 0x2169 JUMP JUMPDEST DUP2 SWAP7 POP PUSH2 0x26EF PUSH1 0x60 DUP13 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x270C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2719 DUP12 DUP3 DUP13 ADD PUSH2 0x219B JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2751 DUP9 PUSH2 0x2137 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x276D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2779 DUP12 DUP4 DUP13 ADD PUSH2 0x224B JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x278F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279B DUP12 DUP4 DUP13 ADD PUSH2 0x219B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x27B0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x27C2 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x27D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E5 DUP11 DUP3 DUP12 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x280A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2813 DUP6 PUSH2 0x2137 JUMP JUMPDEST SWAP4 POP PUSH2 0x2821 PUSH1 0x20 DUP7 ADD PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x284F DUP8 DUP3 DUP9 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287A DUP6 PUSH2 0x2137 JUMP JUMPDEST SWAP4 POP PUSH2 0x2888 PUSH1 0x20 DUP7 ADD PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2898 DUP2 PUSH2 0x2169 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x28D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28DC DUP5 DUP3 DUP6 ADD PUSH2 0x224B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2908 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2928 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073746F726564207061796C6F6164 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x23B0 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x298C JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x29F1 PUSH1 0x80 DUP4 ADD DUP8 DUP10 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2A13 DUP2 DUP6 DUP8 PUSH2 0x298C JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A3E PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP2 ADD PUSH2 0x2A8D JUMPI PUSH2 0x2A8D PUSH2 0x292E JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2AE1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2ABE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2ADD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2ACA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B14 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x2B28 DUP2 PUSH2 0x2B22 DUP5 SLOAD PUSH2 0x28F4 JUMP JUMPDEST DUP5 PUSH2 0x2A97 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B57 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B45 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x2B4F DUP6 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B86 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B67 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2BA4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x292E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB PUSH2 0x2BE8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2BF2 DUP3 SLOAD PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C09 JUMPI PUSH2 0x2C09 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x2C17 DUP2 PUSH2 0x2B22 DUP5 SLOAD PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C45 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2C33 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH2 0x2C3D DUP5 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST DUP6 SSTORE POP PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C7F JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2C5F JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x2C9D JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2CC3 JUMPI PUSH2 0x2CC3 PUSH2 0x292E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP10 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2CE8 PUSH1 0xC0 DUP4 ADD DUP10 DUP12 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D19 DUP2 DUP7 DUP9 PUSH2 0x298C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2D2D DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP8 DUP2 SHL DUP3 AND PUSH1 0x8 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 DUP2 SHL DUP3 AND PUSH1 0xA DUP7 ADD MSTORE SWAP2 DUP8 SWAP1 SHL SWAP1 SWAP3 AND PUSH1 0x1E DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x2DA7 SWAP1 DUP3 SWAP1 PUSH1 0x34 DUP7 ADD SWAP1 DUP8 ADD PUSH2 0x232D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x34 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2DD6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x2351 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2A13 DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x292E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E49 JUMPI PUSH2 0x2E49 PUSH2 0x2E24 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x2E71 JUMPI PUSH2 0x2E71 PUSH2 0x292E JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND DUP1 PUSH2 0x2E93 JUMPI PUSH2 0x2E93 PUSH2 0x2E24 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2EBD PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2EDE DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xF SWAP15 0x4D SWAP6 0xB6 0x2F ADDMOD 0x22 0x2D PUSH2 0x2B5A 0xB9 KECCAK256 CODECOPY 0xCD DUP16 0xBB 0xBE 0xA5 POP 0xA9 0x5E DUP14 0xF9 0xF9 0x27 NUMBER PUSH12 0xBDF5DBA26469706673582212 KECCAK256 0xC8 0xA8 DUP11 0xCB 0xA5 0x4A CALLDATACOPY 0x49 CREATE2 ORIGIN 0xD3 CALLDATALOAD PUSH16 0x11A315CBD2D78D4A319F52AD93175D04 XOR BLOCKHASH 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"948:17619:20:-:0;;;2179:38;;;-1:-1:-1;;2224:41:20;;;;;3750:544;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3790:11;:22;;-1:-1:-1;;3790:22:20;;;;;;;3868:228;;;;;;;;3915:4;3868:228;;;;;;;;;;;4025:4;3868:228;;;;4053:3;3868:228;;;;;;;;;;;;3849:247;:16;:247;;;;4127:49;;;;;;;;4154:4;4127:49;;;4170:4;4127:49;;;;;;;4107:17;:69;;;;;;4209:4;4197:9;:16;4247:39;4279:6;1114:35:7;;;-1:-1:-1;;;1114:35:7;;;3165:51:23;3232:11;;;;3225:27;;;;1114:35:7;;;;;;;;;;3268:12:23;;1114:35:7;;;918:238;4247:39:20;4224:20;;:62;;:20;:62;:::i;:::-;;3750:544;948:17619;;14:276:23;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;184:9;178:16;234:6;227:5;223:18;216:5;213:29;203:57;;256:1;253;246:12;203:57;279:5;14:276;-1:-1:-1;;;14:276:23:o;295:127::-;356:10;351:3;347:20;344:1;337:31;387:4;384:1;377:15;411:4;408:1;401:15;427:380;506:1;502:12;;;;549;;;570:61;;624:4;616:6;612:17;602:27;;570:61;677:2;669:6;666:14;646:18;643:38;640:161;;723:10;718:3;714:20;711:1;704:31;758:4;755:1;748:15;786:4;783:1;776:15;640:161;;427:380;;;:::o;937:544::-;1038:2;1033:3;1030:11;1027:448;;;1074:1;1099:5;1095:2;1088:17;1144:4;1140:2;1130:19;1214:2;1202:10;1198:19;1195:1;1191:27;1185:4;1181:38;1250:4;1238:10;1235:20;1232:47;;;-1:-1:-1;1273:4:23;1232:47;1328:2;1323:3;1319:12;1316:1;1312:20;1306:4;1302:31;1292:41;;1383:82;1401:2;1394:5;1391:13;1383:82;;;1446:17;;;1427:1;1416:13;1383:82;;;1387:3;;;1027:448;937:544;;;:::o;1657:1348::-;1775:10;;-1:-1:-1;;;;;1797:30:23;;1794:56;;;1830:18;;:::i;:::-;1859:96;1948:6;1908:38;1940:4;1934:11;1908:38;:::i;:::-;1902:4;1859:96;:::i;:::-;2010:4;;2074:2;2063:14;;2091:1;2086:662;;;;2792:1;2809:6;2806:89;;;-1:-1:-1;2861:19:23;;;2855:26;2806:89;-1:-1:-1;;1614:1:23;1610:11;;;1606:24;1602:29;1592:40;1638:1;1634:11;;;1589:57;2908:81;;2056:943;;2086:662;884:1;877:14;;;921:4;908:18;;-1:-1:-1;;2122:20:23;;;2239:236;2253:7;2250:1;2247:14;2239:236;;;2342:19;;;2336:26;2321:42;;2434:27;;;;2402:1;2390:14;;;;2269:19;;2239:236;;;2243:3;2503:6;2494:7;2491:19;2488:201;;;2564:19;;;2558:26;-1:-1:-1;;2647:1:23;2643:14;;;2659:3;2639:24;2635:37;2631:42;2616:58;2601:74;;2488:201;-1:-1:-1;;;;;2735:1:23;2719:14;;;2715:22;2702:36;;-1:-1:-1;1657:1348:23:o;3010:276::-;948:17619:20;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_clearMsgQue_4733":{"entryPoint":7635,"id":4733,"parameterSlots":3,"returnSlots":0},"@_getProtocolFees_4763":{"entryPoint":7574,"id":4763,"parameterSlots":3,"returnSlots":1},"@_getRelayerFee_4859":{"entryPoint":7165,"id":4859,"parameterSlots":5,"returnSlots":1},"@blockNextMsg_4572":{"entryPoint":null,"id":4572,"parameterSlots":0,"returnSlots":0},"@callReceive_3544":{"entryPoint":null,"id":3544,"parameterSlots":0,"returnSlots":0},"@decodeAdapterParams_1588":{"entryPoint":8138,"id":1588,"parameterSlots":1,"returnSlots":4},"@defaultAdapterParams_3554":{"entryPoint":2502,"id":3554,"parameterSlots":0,"returnSlots":0},"@estimateFees_4238":{"entryPoint":2644,"id":4238,"parameterSlots":5,"returnSlots":2},"@forceResumeReceive_4564":{"entryPoint":2899,"id":4564,"parameterSlots":3,"returnSlots":0},"@getChainId_4247":{"entryPoint":null,"id":4247,"parameterSlots":0,"returnSlots":1},"@getConfig_4443":{"entryPoint":null,"id":4443,"parameterSlots":4,"returnSlots":1},"@getInboundNonce_4157":{"entryPoint":7096,"id":4157,"parameterSlots":3,"returnSlots":1},"@getOutboundNonce_4174":{"entryPoint":3182,"id":4174,"parameterSlots":2,"returnSlots":1},"@getReceiveLibraryAddress_4404":{"entryPoint":null,"id":4404,"parameterSlots":1,"returnSlots":1},"@getReceiveVersion_4465":{"entryPoint":null,"id":4465,"parameterSlots":1,"returnSlots":1},"@getSendLibraryAddress_4390":{"entryPoint":null,"id":4390,"parameterSlots":1,"returnSlots":1},"@getSendVersion_4454":{"entryPoint":null,"id":4454,"parameterSlots":1,"returnSlots":1},"@hasStoredPayload_4376":{"entryPoint":2179,"id":4376,"parameterSlots":3,"returnSlots":1},"@inboundNonce_3560":{"entryPoint":null,"id":3560,"parameterSlots":0,"returnSlots":0},"@isReceivingPayload_4426":{"entryPoint":null,"id":4426,"parameterSlots":0,"returnSlots":1},"@isSendingPayload_4415":{"entryPoint":null,"id":4415,"parameterSlots":0,"returnSlots":1},"@lzEndpointLookup_3538":{"entryPoint":null,"id":3538,"parameterSlots":0,"returnSlots":0},"@mockChainId_3540":{"entryPoint":null,"id":3540,"parameterSlots":0,"returnSlots":0},"@msgsToDeliver_3581":{"entryPoint":2249,"id":3581,"parameterSlots":0,"returnSlots":0},"@nextMsgBlocked_3542":{"entryPoint":null,"id":3542,"parameterSlots":0,"returnSlots":0},"@oracleFee_3552":{"entryPoint":null,"id":3552,"parameterSlots":0,"returnSlots":0},"@outboundNonce_3566":{"entryPoint":null,"id":3566,"parameterSlots":0,"returnSlots":0},"@protocolFeeConfig_3550":{"entryPoint":null,"id":3550,"parameterSlots":0,"returnSlots":0},"@receivePayload_4140":{"entryPoint":3724,"id":4140,"parameterSlots":8,"returnSlots":0},"@relayerFeeConfig_3547":{"entryPoint":null,"id":3547,"parameterSlots":0,"returnSlots":0},"@retryPayload_4348":{"entryPoint":3238,"id":4348,"parameterSlots":5,"returnSlots":0},"@send_3933":{"entryPoint":5536,"id":3933,"parameterSlots":7,"returnSlots":0},"@setCallReceive_4596":{"entryPoint":null,"id":4596,"parameterSlots":1,"returnSlots":0},"@setConfig_4478":{"entryPoint":null,"id":4478,"parameterSlots":4,"returnSlots":0},"@setDefaultAdapterParams_4680":{"entryPoint":7080,"id":4680,"parameterSlots":1,"returnSlots":0},"@setDestLzEndpoint_4586":{"entryPoint":null,"id":4586,"parameterSlots":2,"returnSlots":0},"@setOracleFee_4670":{"entryPoint":null,"id":4670,"parameterSlots":1,"returnSlots":0},"@setProtocolFee_4660":{"entryPoint":null,"id":4660,"parameterSlots":2,"returnSlots":0},"@setReceiveVersion_4492":{"entryPoint":null,"id":4492,"parameterSlots":1,"returnSlots":0},"@setRelayerPrice_4640":{"entryPoint":null,"id":4640,"parameterSlots":5,"returnSlots":0},"@setSendVersion_4485":{"entryPoint":null,"id":4485,"parameterSlots":1,"returnSlots":0},"@storedPayload_3573":{"entryPoint":null,"id":3573,"parameterSlots":0,"returnSlots":0},"abi_decode_bool":{"entryPoint":9345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":8779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":8603,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":8574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9824,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":9772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":10408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint128t_uint128t_uint128t_uint64t_uint64":{"entryPoint":9244,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16":{"entryPoint":8526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_address":{"entryPoint":9589,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_addresst_bytes_memory_ptrt_boolt_bytes_memory_ptr":{"entryPoint":9361,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_bytes_calldata_ptr":{"entryPoint":8675,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_addresst_uint64t_uint256t_bytes_calldata_ptr":{"entryPoint":9854,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":9644,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_bytes_memory_ptr":{"entryPoint":9512,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_bytes_calldata_ptrt_address_payablet_addresst_bytes_memory_ptr":{"entryPoint":10029,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256":{"entryPoint":8919,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256":{"entryPoint":10331,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_memory_ptr":{"entryPoint":10228,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":9799,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":9145,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint128":{"entryPoint":9198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint16":{"entryPoint":8503,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":9221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":9041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":10636,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10468,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_uint64_t_uint16_t_address_t_uint16_t_address_t_bytes_memory_ptr__to_t_uint64_t_uint16_t_address_t_uint16_t_address_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11580,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint64_t_bytes_memory_ptr__to_t_address_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9085,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__to_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10677,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_address_t_uint64_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11466,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_address__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_address__fromStack_reversed":{"entryPoint":10784,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10707,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11935,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11705,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_address_t_bytes32__to_t_uint64_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10564,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint128":{"entryPoint":11897,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11834,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint128":{"entryPoint":11854,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11789,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11188,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":10903,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":11003,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_storage_to_t_bytes_storage":{"entryPoint":11229,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9005,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10484,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10982,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":11441,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":10857,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10542,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11812,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":12010,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11207,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8757,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":8553,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30983:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:119:23","statements":[{"nodeType":"YulAssignment","src":"153:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"165:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"176:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"161:3:23"},"nodeType":"YulFunctionCall","src":"161:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"153:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"206:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"188:6:23"},"nodeType":"YulFunctionCall","src":"188:25:23"},"nodeType":"YulExpressionStatement","src":"188:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"233:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"244:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"229:3:23"},"nodeType":"YulFunctionCall","src":"229:18:23"},{"name":"value1","nodeType":"YulIdentifier","src":"249:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"222:6:23"},"nodeType":"YulFunctionCall","src":"222:34:23"},"nodeType":"YulExpressionStatement","src":"222:34:23"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"115:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"123:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"134:4:23","type":""}],"src":"14:248:23"},{"body":{"nodeType":"YulBlock","src":"315:111:23","statements":[{"nodeType":"YulAssignment","src":"325:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"347:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"334:12:23"},"nodeType":"YulFunctionCall","src":"334:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"325:5:23"}]},{"body":{"nodeType":"YulBlock","src":"404:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"413:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"416:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"406:6:23"},"nodeType":"YulFunctionCall","src":"406:12:23"},"nodeType":"YulExpressionStatement","src":"406:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"376:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"387:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"394:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"383:3:23"},"nodeType":"YulFunctionCall","src":"383:18:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"373:2:23"},"nodeType":"YulFunctionCall","src":"373:29:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"366:6:23"},"nodeType":"YulFunctionCall","src":"366:37:23"},"nodeType":"YulIf","src":"363:57:23"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"294:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"305:5:23","type":""}],"src":"267:159:23"},{"body":{"nodeType":"YulBlock","src":"500:115:23","statements":[{"body":{"nodeType":"YulBlock","src":"546:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"555:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"558:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"548:6:23"},"nodeType":"YulFunctionCall","src":"548:12:23"},"nodeType":"YulExpressionStatement","src":"548:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"521:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"530:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"517:3:23"},"nodeType":"YulFunctionCall","src":"517:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"542:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"513:3:23"},"nodeType":"YulFunctionCall","src":"513:32:23"},"nodeType":"YulIf","src":"510:52:23"},{"nodeType":"YulAssignment","src":"571:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"599:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"581:17:23"},"nodeType":"YulFunctionCall","src":"581:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"571:6:23"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"466:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"477:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"489:6:23","type":""}],"src":"431:184:23"},{"body":{"nodeType":"YulBlock","src":"665:86:23","statements":[{"body":{"nodeType":"YulBlock","src":"729:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"738:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"741:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"731:6:23"},"nodeType":"YulFunctionCall","src":"731:12:23"},"nodeType":"YulExpressionStatement","src":"731:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"699:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"714:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"719:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"710:3:23"},"nodeType":"YulFunctionCall","src":"710:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"723:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"706:3:23"},"nodeType":"YulFunctionCall","src":"706:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"695:3:23"},"nodeType":"YulFunctionCall","src":"695:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"685:2:23"},"nodeType":"YulFunctionCall","src":"685:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"678:6:23"},"nodeType":"YulFunctionCall","src":"678:50:23"},"nodeType":"YulIf","src":"675:70:23"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"654:5:23","type":""}],"src":"620:131:23"},{"body":{"nodeType":"YulBlock","src":"826:177:23","statements":[{"body":{"nodeType":"YulBlock","src":"872:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"881:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"884:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"874:6:23"},"nodeType":"YulFunctionCall","src":"874:12:23"},"nodeType":"YulExpressionStatement","src":"874:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"847:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"856:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"843:3:23"},"nodeType":"YulFunctionCall","src":"843:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"868:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"839:3:23"},"nodeType":"YulFunctionCall","src":"839:32:23"},"nodeType":"YulIf","src":"836:52:23"},{"nodeType":"YulVariableDeclaration","src":"897:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"923:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"910:12:23"},"nodeType":"YulFunctionCall","src":"910:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"901:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"967:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"942:24:23"},"nodeType":"YulFunctionCall","src":"942:31:23"},"nodeType":"YulExpressionStatement","src":"942:31:23"},{"nodeType":"YulAssignment","src":"982:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"992:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"982:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"792:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"803:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"815:6:23","type":""}],"src":"756:247:23"},{"body":{"nodeType":"YulBlock","src":"1107:89:23","statements":[{"nodeType":"YulAssignment","src":"1117:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1129:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1140:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1125:3:23"},"nodeType":"YulFunctionCall","src":"1125:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1117:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1174:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1182:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1170:3:23"},"nodeType":"YulFunctionCall","src":"1170:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1152:6:23"},"nodeType":"YulFunctionCall","src":"1152:38:23"},"nodeType":"YulExpressionStatement","src":"1152:38:23"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1076:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1087:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1098:4:23","type":""}],"src":"1008:188:23"},{"body":{"nodeType":"YulBlock","src":"1273:275:23","statements":[{"body":{"nodeType":"YulBlock","src":"1322:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1331:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1334:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1324:6:23"},"nodeType":"YulFunctionCall","src":"1324:12:23"},"nodeType":"YulExpressionStatement","src":"1324:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1301:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1309:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1297:3:23"},"nodeType":"YulFunctionCall","src":"1297:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"1316:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:23"},"nodeType":"YulFunctionCall","src":"1293:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1286:6:23"},"nodeType":"YulFunctionCall","src":"1286:35:23"},"nodeType":"YulIf","src":"1283:55:23"},{"nodeType":"YulAssignment","src":"1347:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1370:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1357:12:23"},"nodeType":"YulFunctionCall","src":"1357:20:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1347:6:23"}]},{"body":{"nodeType":"YulBlock","src":"1420:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1429:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1432:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1422:6:23"},"nodeType":"YulFunctionCall","src":"1422:12:23"},"nodeType":"YulExpressionStatement","src":"1422:12:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1392:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1408:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1412:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1404:3:23"},"nodeType":"YulFunctionCall","src":"1404:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1416:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1400:3:23"},"nodeType":"YulFunctionCall","src":"1400:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1389:2:23"},"nodeType":"YulFunctionCall","src":"1389:30:23"},"nodeType":"YulIf","src":"1386:50:23"},{"nodeType":"YulAssignment","src":"1445:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1461:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1469:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1457:3:23"},"nodeType":"YulFunctionCall","src":"1457:17:23"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1445:8:23"}]},{"body":{"nodeType":"YulBlock","src":"1526:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1535:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1528:6:23"},"nodeType":"YulFunctionCall","src":"1528:12:23"},"nodeType":"YulExpressionStatement","src":"1528:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1497:6:23"},{"name":"length","nodeType":"YulIdentifier","src":"1505:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1493:3:23"},"nodeType":"YulFunctionCall","src":"1493:19:23"},{"kind":"number","nodeType":"YulLiteral","src":"1514:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1489:3:23"},"nodeType":"YulFunctionCall","src":"1489:30:23"},{"name":"end","nodeType":"YulIdentifier","src":"1521:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1486:2:23"},"nodeType":"YulFunctionCall","src":"1486:39:23"},"nodeType":"YulIf","src":"1483:59:23"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1236:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"1244:3:23","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1252:8:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"1262:6:23","type":""}],"src":"1201:347:23"},{"body":{"nodeType":"YulBlock","src":"1658:376:23","statements":[{"body":{"nodeType":"YulBlock","src":"1704:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1716:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:23"},"nodeType":"YulFunctionCall","src":"1706:12:23"},"nodeType":"YulExpressionStatement","src":"1706:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1679:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1688:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1675:3:23"},"nodeType":"YulFunctionCall","src":"1675:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1700:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1671:3:23"},"nodeType":"YulFunctionCall","src":"1671:32:23"},"nodeType":"YulIf","src":"1668:52:23"},{"nodeType":"YulAssignment","src":"1729:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1739:17:23"},"nodeType":"YulFunctionCall","src":"1739:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1729:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1776:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1807:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1818:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1803:3:23"},"nodeType":"YulFunctionCall","src":"1803:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1790:12:23"},"nodeType":"YulFunctionCall","src":"1790:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1780:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1865:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1874:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1877:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1867:6:23"},"nodeType":"YulFunctionCall","src":"1867:12:23"},"nodeType":"YulExpressionStatement","src":"1867:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1837:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1853:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1857:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1849:3:23"},"nodeType":"YulFunctionCall","src":"1849:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1861:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1845:3:23"},"nodeType":"YulFunctionCall","src":"1845:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1834:2:23"},"nodeType":"YulFunctionCall","src":"1834:30:23"},"nodeType":"YulIf","src":"1831:50:23"},{"nodeType":"YulVariableDeclaration","src":"1890:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1946:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1957:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:23"},"nodeType":"YulFunctionCall","src":"1942:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1966:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1916:25:23"},"nodeType":"YulFunctionCall","src":"1916:58:23"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1894:8:23","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1904:8:23","type":""}]},{"nodeType":"YulAssignment","src":"1983:18:23","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1993:8:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1983:6:23"}]},{"nodeType":"YulAssignment","src":"2010:18:23","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2020:8:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2010:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1608:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1619:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1631:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1639:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1647:6:23","type":""}],"src":"1553:481:23"},{"body":{"nodeType":"YulBlock","src":"2134:92:23","statements":[{"nodeType":"YulAssignment","src":"2144:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2156:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2167:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:23"},"nodeType":"YulFunctionCall","src":"2152:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2144:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2186:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2211:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2204:6:23"},"nodeType":"YulFunctionCall","src":"2204:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2197:6:23"},"nodeType":"YulFunctionCall","src":"2197:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2179:6:23"},"nodeType":"YulFunctionCall","src":"2179:41:23"},"nodeType":"YulExpressionStatement","src":"2179:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2103:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2114:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2125:4:23","type":""}],"src":"2039:187:23"},{"body":{"nodeType":"YulBlock","src":"2263:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2280:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2292:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2283:3:23"},"nodeType":"YulFunctionCall","src":"2283:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:23"},"nodeType":"YulFunctionCall","src":"2273:31:23"},"nodeType":"YulExpressionStatement","src":"2273:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2320:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2323:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2313:6:23"},"nodeType":"YulFunctionCall","src":"2313:15:23"},"nodeType":"YulExpressionStatement","src":"2313:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2344:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2347:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2337:6:23"},"nodeType":"YulFunctionCall","src":"2337:15:23"},"nodeType":"YulExpressionStatement","src":"2337:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2231:127:23"},{"body":{"nodeType":"YulBlock","src":"2415:666:23","statements":[{"body":{"nodeType":"YulBlock","src":"2464:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2473:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2476:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2466:6:23"},"nodeType":"YulFunctionCall","src":"2466:12:23"},"nodeType":"YulExpressionStatement","src":"2466:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2443:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2451:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2439:3:23"},"nodeType":"YulFunctionCall","src":"2439:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"2458:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2435:3:23"},"nodeType":"YulFunctionCall","src":"2435:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2428:6:23"},"nodeType":"YulFunctionCall","src":"2428:35:23"},"nodeType":"YulIf","src":"2425:55:23"},{"nodeType":"YulVariableDeclaration","src":"2489:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2512:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2499:12:23"},"nodeType":"YulFunctionCall","src":"2499:20:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2493:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2528:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2546:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2550:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2542:3:23"},"nodeType":"YulFunctionCall","src":"2542:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2554:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2538:3:23"},"nodeType":"YulFunctionCall","src":"2538:18:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2532:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2579:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2581:16:23"},"nodeType":"YulFunctionCall","src":"2581:18:23"},"nodeType":"YulExpressionStatement","src":"2581:18:23"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2571:2:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2575:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2568:2:23"},"nodeType":"YulFunctionCall","src":"2568:10:23"},"nodeType":"YulIf","src":"2565:36:23"},{"nodeType":"YulVariableDeclaration","src":"2610:17:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2624:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2620:3:23"},"nodeType":"YulFunctionCall","src":"2620:7:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2614:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2636:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2656:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2650:5:23"},"nodeType":"YulFunctionCall","src":"2650:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2640:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2668:71:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2690:6:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2714:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"2718:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2710:3:23"},"nodeType":"YulFunctionCall","src":"2710:13:23"},{"name":"_3","nodeType":"YulIdentifier","src":"2725:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2706:3:23"},"nodeType":"YulFunctionCall","src":"2706:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"2730:2:23","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2702:3:23"},"nodeType":"YulFunctionCall","src":"2702:31:23"},{"name":"_3","nodeType":"YulIdentifier","src":"2735:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2698:3:23"},"nodeType":"YulFunctionCall","src":"2698:40:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2686:3:23"},"nodeType":"YulFunctionCall","src":"2686:53:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2672:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2798:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2800:16:23"},"nodeType":"YulFunctionCall","src":"2800:18:23"},"nodeType":"YulExpressionStatement","src":"2800:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2757:10:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2769:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2754:2:23"},"nodeType":"YulFunctionCall","src":"2754:18:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2777:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2789:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2774:2:23"},"nodeType":"YulFunctionCall","src":"2774:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2751:2:23"},"nodeType":"YulFunctionCall","src":"2751:46:23"},"nodeType":"YulIf","src":"2748:72:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2836:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2840:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2829:6:23"},"nodeType":"YulFunctionCall","src":"2829:22:23"},"nodeType":"YulExpressionStatement","src":"2829:22:23"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2867:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2875:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:23"},"nodeType":"YulFunctionCall","src":"2860:18:23"},"nodeType":"YulExpressionStatement","src":"2860:18:23"},{"body":{"nodeType":"YulBlock","src":"2926:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2938:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2928:6:23"},"nodeType":"YulFunctionCall","src":"2928:12:23"},"nodeType":"YulExpressionStatement","src":"2928:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2901:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2909:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2897:3:23"},"nodeType":"YulFunctionCall","src":"2897:15:23"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2893:3:23"},"nodeType":"YulFunctionCall","src":"2893:26:23"},{"name":"end","nodeType":"YulIdentifier","src":"2921:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2890:2:23"},"nodeType":"YulFunctionCall","src":"2890:35:23"},"nodeType":"YulIf","src":"2887:55:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2968:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2976:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:23"},"nodeType":"YulFunctionCall","src":"2964:17:23"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2987:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2995:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2983:3:23"},"nodeType":"YulFunctionCall","src":"2983:17:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3002:2:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2951:12:23"},"nodeType":"YulFunctionCall","src":"2951:54:23"},"nodeType":"YulExpressionStatement","src":"2951:54:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3029:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"3037:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3025:3:23"},"nodeType":"YulFunctionCall","src":"3025:15:23"},{"kind":"number","nodeType":"YulLiteral","src":"3042:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3021:3:23"},"nodeType":"YulFunctionCall","src":"3021:26:23"},{"kind":"number","nodeType":"YulLiteral","src":"3049:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3014:6:23"},"nodeType":"YulFunctionCall","src":"3014:37:23"},"nodeType":"YulExpressionStatement","src":"3014:37:23"},{"nodeType":"YulAssignment","src":"3060:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3069:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3060:5:23"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2389:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2397:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2405:5:23","type":""}],"src":"2363:718:23"},{"body":{"nodeType":"YulBlock","src":"3198:348:23","statements":[{"body":{"nodeType":"YulBlock","src":"3244:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3256:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3246:6:23"},"nodeType":"YulFunctionCall","src":"3246:12:23"},"nodeType":"YulExpressionStatement","src":"3246:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3219:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3228:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3215:3:23"},"nodeType":"YulFunctionCall","src":"3215:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3240:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3211:3:23"},"nodeType":"YulFunctionCall","src":"3211:32:23"},"nodeType":"YulIf","src":"3208:52:23"},{"nodeType":"YulAssignment","src":"3269:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3297:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"3279:17:23"},"nodeType":"YulFunctionCall","src":"3279:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3269:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"3316:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3347:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3358:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3343:3:23"},"nodeType":"YulFunctionCall","src":"3343:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3330:12:23"},"nodeType":"YulFunctionCall","src":"3330:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3320:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3405:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3414:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3417:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3407:6:23"},"nodeType":"YulFunctionCall","src":"3407:12:23"},"nodeType":"YulExpressionStatement","src":"3407:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3377:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3393:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3397:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3389:3:23"},"nodeType":"YulFunctionCall","src":"3389:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"3401:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3385:3:23"},"nodeType":"YulFunctionCall","src":"3385:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3374:2:23"},"nodeType":"YulFunctionCall","src":"3374:30:23"},"nodeType":"YulIf","src":"3371:50:23"},{"nodeType":"YulAssignment","src":"3430:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3461:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3472:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3457:3:23"},"nodeType":"YulFunctionCall","src":"3457:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3481:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3440:16:23"},"nodeType":"YulFunctionCall","src":"3440:49:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3430:6:23"}]},{"nodeType":"YulAssignment","src":"3498:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3525:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3536:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3521:3:23"},"nodeType":"YulFunctionCall","src":"3521:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3508:12:23"},"nodeType":"YulFunctionCall","src":"3508:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3498:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3148:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3159:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3171:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3179:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3187:6:23","type":""}],"src":"3086:460:23"},{"body":{"nodeType":"YulBlock","src":"3617:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3627:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3636:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3631:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3721:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"3726:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3717:3:23"},"nodeType":"YulFunctionCall","src":"3717:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3740:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"3745:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3736:3:23"},"nodeType":"YulFunctionCall","src":"3736:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3730:5:23"},"nodeType":"YulFunctionCall","src":"3730:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3710:6:23"},"nodeType":"YulFunctionCall","src":"3710:39:23"},"nodeType":"YulExpressionStatement","src":"3710:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3657:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"3660:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3654:2:23"},"nodeType":"YulFunctionCall","src":"3654:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3668:19:23","statements":[{"nodeType":"YulAssignment","src":"3670:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3679:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"3682:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3675:3:23"},"nodeType":"YulFunctionCall","src":"3675:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3670:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3650:3:23","statements":[]},"src":"3646:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3779:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3784:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3775:3:23"},"nodeType":"YulFunctionCall","src":"3775:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"3793:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3768:6:23"},"nodeType":"YulFunctionCall","src":"3768:27:23"},"nodeType":"YulExpressionStatement","src":"3768:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3595:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3600:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"3605:6:23","type":""}],"src":"3551:250:23"},{"body":{"nodeType":"YulBlock","src":"3855:221:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3865:26:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3885:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3879:5:23"},"nodeType":"YulFunctionCall","src":"3879:12:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3869:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3907:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3912:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3900:6:23"},"nodeType":"YulFunctionCall","src":"3900:19:23"},"nodeType":"YulExpressionStatement","src":"3900:19:23"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3967:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"3974:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3963:3:23"},"nodeType":"YulFunctionCall","src":"3963:16:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3985:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"3990:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:23"},"nodeType":"YulFunctionCall","src":"3981:14:23"},{"name":"length","nodeType":"YulIdentifier","src":"3997:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3928:34:23"},"nodeType":"YulFunctionCall","src":"3928:76:23"},"nodeType":"YulExpressionStatement","src":"3928:76:23"},{"nodeType":"YulAssignment","src":"4013:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4028:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4041:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4049:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4037:3:23"},"nodeType":"YulFunctionCall","src":"4037:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4058:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4054:3:23"},"nodeType":"YulFunctionCall","src":"4054:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4033:3:23"},"nodeType":"YulFunctionCall","src":"4033:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4024:3:23"},"nodeType":"YulFunctionCall","src":"4024:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"4065:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:23"},"nodeType":"YulFunctionCall","src":"4020:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4013:3:23"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3832:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3839:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3847:3:23","type":""}],"src":"3806:270:23"},{"body":{"nodeType":"YulBlock","src":"4254:235:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4271:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4286:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4302:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4307:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4298:3:23"},"nodeType":"YulFunctionCall","src":"4298:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"4311:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:23"},"nodeType":"YulFunctionCall","src":"4294:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4282:3:23"},"nodeType":"YulFunctionCall","src":"4282:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4264:6:23"},"nodeType":"YulFunctionCall","src":"4264:51:23"},"nodeType":"YulExpressionStatement","src":"4264:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4335:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4331:3:23"},"nodeType":"YulFunctionCall","src":"4331:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4355:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4371:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4375:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4367:3:23"},"nodeType":"YulFunctionCall","src":"4367:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"4379:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4363:3:23"},"nodeType":"YulFunctionCall","src":"4363:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4351:3:23"},"nodeType":"YulFunctionCall","src":"4351:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4324:6:23"},"nodeType":"YulFunctionCall","src":"4324:59:23"},"nodeType":"YulExpressionStatement","src":"4324:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4403:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4414:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4399:3:23"},"nodeType":"YulFunctionCall","src":"4399:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4419:2:23","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4392:6:23"},"nodeType":"YulFunctionCall","src":"4392:30:23"},"nodeType":"YulExpressionStatement","src":"4392:30:23"},{"nodeType":"YulAssignment","src":"4431:52:23","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4456:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4468:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4479:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4464:3:23"},"nodeType":"YulFunctionCall","src":"4464:18:23"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"4439:16:23"},"nodeType":"YulFunctionCall","src":"4439:44:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4431:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_uint64_t_bytes_memory_ptr__to_t_address_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4207:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4218:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4226:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4234:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4245:4:23","type":""}],"src":"4081:408:23"},{"body":{"nodeType":"YulBlock","src":"4581:161:23","statements":[{"body":{"nodeType":"YulBlock","src":"4627:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4636:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4639:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4629:6:23"},"nodeType":"YulFunctionCall","src":"4629:12:23"},"nodeType":"YulExpressionStatement","src":"4629:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4602:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4598:3:23"},"nodeType":"YulFunctionCall","src":"4598:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4594:3:23"},"nodeType":"YulFunctionCall","src":"4594:32:23"},"nodeType":"YulIf","src":"4591:52:23"},{"nodeType":"YulAssignment","src":"4652:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4675:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4662:12:23"},"nodeType":"YulFunctionCall","src":"4662:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4652:6:23"}]},{"nodeType":"YulAssignment","src":"4694:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4721:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4732:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4717:3:23"},"nodeType":"YulFunctionCall","src":"4717:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4704:12:23"},"nodeType":"YulFunctionCall","src":"4704:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4694:6:23"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4539:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4550:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4562:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4570:6:23","type":""}],"src":"4494:248:23"},{"body":{"nodeType":"YulBlock","src":"4866:98:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4883:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4894:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4876:6:23"},"nodeType":"YulFunctionCall","src":"4876:21:23"},"nodeType":"YulExpressionStatement","src":"4876:21:23"},{"nodeType":"YulAssignment","src":"4906:52:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4931:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4943:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4954:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4939:3:23"},"nodeType":"YulFunctionCall","src":"4939:18:23"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"4914:16:23"},"nodeType":"YulFunctionCall","src":"4914:44:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4906:4:23"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4835:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4846:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4857:4:23","type":""}],"src":"4747:217:23"},{"body":{"nodeType":"YulBlock","src":"5018:124:23","statements":[{"nodeType":"YulAssignment","src":"5028:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5050:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5037:12:23"},"nodeType":"YulFunctionCall","src":"5037:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5028:5:23"}]},{"body":{"nodeType":"YulBlock","src":"5120:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5129:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5132:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5122:6:23"},"nodeType":"YulFunctionCall","src":"5122:12:23"},"nodeType":"YulExpressionStatement","src":"5122:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5079:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5090:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5105:3:23","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"5110:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5101:3:23"},"nodeType":"YulFunctionCall","src":"5101:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"5114:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5097:3:23"},"nodeType":"YulFunctionCall","src":"5097:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5086:3:23"},"nodeType":"YulFunctionCall","src":"5086:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5076:2:23"},"nodeType":"YulFunctionCall","src":"5076:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5069:6:23"},"nodeType":"YulFunctionCall","src":"5069:50:23"},"nodeType":"YulIf","src":"5066:70:23"}]},"name":"abi_decode_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4997:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5008:5:23","type":""}],"src":"4969:173:23"},{"body":{"nodeType":"YulBlock","src":"5195:123:23","statements":[{"nodeType":"YulAssignment","src":"5205:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5227:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5214:12:23"},"nodeType":"YulFunctionCall","src":"5214:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5205:5:23"}]},{"body":{"nodeType":"YulBlock","src":"5296:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5305:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5308:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5298:6:23"},"nodeType":"YulFunctionCall","src":"5298:12:23"},"nodeType":"YulExpressionStatement","src":"5298:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5256:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5267:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5282:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5286:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5278:3:23"},"nodeType":"YulFunctionCall","src":"5278:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"5290:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5274:3:23"},"nodeType":"YulFunctionCall","src":"5274:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5263:3:23"},"nodeType":"YulFunctionCall","src":"5263:30:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5253:2:23"},"nodeType":"YulFunctionCall","src":"5253:41:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5246:6:23"},"nodeType":"YulFunctionCall","src":"5246:49:23"},"nodeType":"YulIf","src":"5243:69:23"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5174:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5185:5:23","type":""}],"src":"5147:171:23"},{"body":{"nodeType":"YulBlock","src":"5459:344:23","statements":[{"body":{"nodeType":"YulBlock","src":"5506:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5515:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5518:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5508:6:23"},"nodeType":"YulFunctionCall","src":"5508:12:23"},"nodeType":"YulExpressionStatement","src":"5508:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5480:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5476:3:23"},"nodeType":"YulFunctionCall","src":"5476:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5501:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5472:3:23"},"nodeType":"YulFunctionCall","src":"5472:33:23"},"nodeType":"YulIf","src":"5469:53:23"},{"nodeType":"YulAssignment","src":"5531:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5560:9:23"}],"functionName":{"name":"abi_decode_uint128","nodeType":"YulIdentifier","src":"5541:18:23"},"nodeType":"YulFunctionCall","src":"5541:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5531:6:23"}]},{"nodeType":"YulAssignment","src":"5579:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5612:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5608:3:23"},"nodeType":"YulFunctionCall","src":"5608:18:23"}],"functionName":{"name":"abi_decode_uint128","nodeType":"YulIdentifier","src":"5589:18:23"},"nodeType":"YulFunctionCall","src":"5589:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5579:6:23"}]},{"nodeType":"YulAssignment","src":"5636:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5669:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5680:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5665:3:23"},"nodeType":"YulFunctionCall","src":"5665:18:23"}],"functionName":{"name":"abi_decode_uint128","nodeType":"YulIdentifier","src":"5646:18:23"},"nodeType":"YulFunctionCall","src":"5646:38:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5636:6:23"}]},{"nodeType":"YulAssignment","src":"5693:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5725:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5736:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5721:3:23"},"nodeType":"YulFunctionCall","src":"5721:18:23"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"5703:17:23"},"nodeType":"YulFunctionCall","src":"5703:37:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5693:6:23"}]},{"nodeType":"YulAssignment","src":"5749:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5781:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5792:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5777:3:23"},"nodeType":"YulFunctionCall","src":"5777:19:23"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"5759:17:23"},"nodeType":"YulFunctionCall","src":"5759:38:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5749:6:23"}]}]},"name":"abi_decode_tuple_t_uint128t_uint128t_uint128t_uint64t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5393:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5404:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5416:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5424:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5432:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5440:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5448:6:23","type":""}],"src":"5323:480:23"},{"body":{"nodeType":"YulBlock","src":"5854:114:23","statements":[{"nodeType":"YulAssignment","src":"5864:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5886:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5873:12:23"},"nodeType":"YulFunctionCall","src":"5873:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5864:5:23"}]},{"body":{"nodeType":"YulBlock","src":"5946:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5955:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5958:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5948:6:23"},"nodeType":"YulFunctionCall","src":"5948:12:23"},"nodeType":"YulExpressionStatement","src":"5948:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5915:5:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5936:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5929:6:23"},"nodeType":"YulFunctionCall","src":"5929:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5922:6:23"},"nodeType":"YulFunctionCall","src":"5922:21:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5912:2:23"},"nodeType":"YulFunctionCall","src":"5912:32:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5905:6:23"},"nodeType":"YulFunctionCall","src":"5905:40:23"},"nodeType":"YulIf","src":"5902:60:23"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5833:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5844:5:23","type":""}],"src":"5808:160:23"},{"body":{"nodeType":"YulBlock","src":"6125:664:23","statements":[{"body":{"nodeType":"YulBlock","src":"6172:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6181:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6184:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6174:6:23"},"nodeType":"YulFunctionCall","src":"6174:12:23"},"nodeType":"YulExpressionStatement","src":"6174:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6146:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6155:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6142:3:23"},"nodeType":"YulFunctionCall","src":"6142:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6167:3:23","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6138:3:23"},"nodeType":"YulFunctionCall","src":"6138:33:23"},"nodeType":"YulIf","src":"6135:53:23"},{"nodeType":"YulAssignment","src":"6197:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6225:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"6207:17:23"},"nodeType":"YulFunctionCall","src":"6207:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6197:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6244:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6274:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6285:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6270:3:23"},"nodeType":"YulFunctionCall","src":"6270:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6257:12:23"},"nodeType":"YulFunctionCall","src":"6257:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6248:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6323:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6298:24:23"},"nodeType":"YulFunctionCall","src":"6298:31:23"},"nodeType":"YulExpressionStatement","src":"6298:31:23"},{"nodeType":"YulAssignment","src":"6338:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"6348:5:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6338:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6362:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6393:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6404:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6389:3:23"},"nodeType":"YulFunctionCall","src":"6389:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6376:12:23"},"nodeType":"YulFunctionCall","src":"6376:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6366:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6417:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6435:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"6439:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6431:3:23"},"nodeType":"YulFunctionCall","src":"6431:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"6443:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6427:3:23"},"nodeType":"YulFunctionCall","src":"6427:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6421:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6472:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6481:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6484:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6474:6:23"},"nodeType":"YulFunctionCall","src":"6474:12:23"},"nodeType":"YulExpressionStatement","src":"6474:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6460:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6468:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6457:2:23"},"nodeType":"YulFunctionCall","src":"6457:14:23"},"nodeType":"YulIf","src":"6454:34:23"},{"nodeType":"YulAssignment","src":"6497:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6528:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"6539:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6524:3:23"},"nodeType":"YulFunctionCall","src":"6524:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6548:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6507:16:23"},"nodeType":"YulFunctionCall","src":"6507:49:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6497:6:23"}]},{"nodeType":"YulAssignment","src":"6565:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6595:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6606:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6591:3:23"},"nodeType":"YulFunctionCall","src":"6591:18:23"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"6575:15:23"},"nodeType":"YulFunctionCall","src":"6575:35:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6565:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"6619:49:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6663:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:23"},"nodeType":"YulFunctionCall","src":"6648:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6635:12:23"},"nodeType":"YulFunctionCall","src":"6635:33:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6623:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6697:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6706:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6709:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6699:6:23"},"nodeType":"YulFunctionCall","src":"6699:12:23"},"nodeType":"YulExpressionStatement","src":"6699:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6683:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"6693:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6680:2:23"},"nodeType":"YulFunctionCall","src":"6680:16:23"},"nodeType":"YulIf","src":"6677:36:23"},{"nodeType":"YulAssignment","src":"6722:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6753:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6764:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6749:3:23"},"nodeType":"YulFunctionCall","src":"6749:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6775:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6732:16:23"},"nodeType":"YulFunctionCall","src":"6732:51:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6722:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_addresst_bytes_memory_ptrt_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6059:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6070:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6082:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6090:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6098:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6106:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6114:6:23","type":""}],"src":"5973:816:23"},{"body":{"nodeType":"YulBlock","src":"6895:102:23","statements":[{"nodeType":"YulAssignment","src":"6905:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6917:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6928:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6913:3:23"},"nodeType":"YulFunctionCall","src":"6913:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6905:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6947:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6962:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6978:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6983:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6974:3:23"},"nodeType":"YulFunctionCall","src":"6974:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"6987:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6970:3:23"},"nodeType":"YulFunctionCall","src":"6970:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6958:3:23"},"nodeType":"YulFunctionCall","src":"6958:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6940:6:23"},"nodeType":"YulFunctionCall","src":"6940:51:23"},"nodeType":"YulExpressionStatement","src":"6940:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6864:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6875:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6886:4:23","type":""}],"src":"6794:203:23"},{"body":{"nodeType":"YulBlock","src":"7097:297:23","statements":[{"body":{"nodeType":"YulBlock","src":"7143:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7152:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7155:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7145:6:23"},"nodeType":"YulFunctionCall","src":"7145:12:23"},"nodeType":"YulExpressionStatement","src":"7145:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7118:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7127:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7114:3:23"},"nodeType":"YulFunctionCall","src":"7114:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7139:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7110:3:23"},"nodeType":"YulFunctionCall","src":"7110:32:23"},"nodeType":"YulIf","src":"7107:52:23"},{"nodeType":"YulAssignment","src":"7168:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7196:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7178:17:23"},"nodeType":"YulFunctionCall","src":"7178:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7168:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"7215:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7246:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:23"},"nodeType":"YulFunctionCall","src":"7242:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7229:12:23"},"nodeType":"YulFunctionCall","src":"7229:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7219:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7304:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7313:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7316:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7306:6:23"},"nodeType":"YulFunctionCall","src":"7306:12:23"},"nodeType":"YulExpressionStatement","src":"7306:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7276:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7292:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"7296:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7288:3:23"},"nodeType":"YulFunctionCall","src":"7288:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"7300:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7284:3:23"},"nodeType":"YulFunctionCall","src":"7284:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7273:2:23"},"nodeType":"YulFunctionCall","src":"7273:30:23"},"nodeType":"YulIf","src":"7270:50:23"},{"nodeType":"YulAssignment","src":"7329:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7360:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"7371:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7356:3:23"},"nodeType":"YulFunctionCall","src":"7356:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7380:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7339:16:23"},"nodeType":"YulFunctionCall","src":"7339:49:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7329:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7055:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7066:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7078:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7086:6:23","type":""}],"src":"7002:392:23"},{"body":{"nodeType":"YulBlock","src":"7554:213:23","statements":[{"nodeType":"YulAssignment","src":"7564:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7576:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7587:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7572:3:23"},"nodeType":"YulFunctionCall","src":"7572:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7564:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7606:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7621:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7637:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"7641:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7633:3:23"},"nodeType":"YulFunctionCall","src":"7633:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"7645:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7629:3:23"},"nodeType":"YulFunctionCall","src":"7629:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7617:3:23"},"nodeType":"YulFunctionCall","src":"7617:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7599:6:23"},"nodeType":"YulFunctionCall","src":"7599:50:23"},"nodeType":"YulExpressionStatement","src":"7599:50:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7669:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7680:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:23"},"nodeType":"YulFunctionCall","src":"7665:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7689:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7705:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7710:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7701:3:23"},"nodeType":"YulFunctionCall","src":"7701:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"7714:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7697:3:23"},"nodeType":"YulFunctionCall","src":"7697:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7685:3:23"},"nodeType":"YulFunctionCall","src":"7685:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7658:6:23"},"nodeType":"YulFunctionCall","src":"7658:60:23"},"nodeType":"YulExpressionStatement","src":"7658:60:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7738:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7749:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7734:3:23"},"nodeType":"YulFunctionCall","src":"7734:18:23"},{"name":"value2","nodeType":"YulIdentifier","src":"7754:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7727:6:23"},"nodeType":"YulFunctionCall","src":"7727:34:23"},"nodeType":"YulExpressionStatement","src":"7727:34:23"}]},"name":"abi_encode_tuple_t_uint64_t_address_t_bytes32__to_t_uint64_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7507:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7518:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7526:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7534:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7545:4:23","type":""}],"src":"7399:368:23"},{"body":{"nodeType":"YulBlock","src":"7858:233:23","statements":[{"body":{"nodeType":"YulBlock","src":"7904:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7913:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7916:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7906:6:23"},"nodeType":"YulFunctionCall","src":"7906:12:23"},"nodeType":"YulExpressionStatement","src":"7906:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7879:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7888:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7875:3:23"},"nodeType":"YulFunctionCall","src":"7875:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7900:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7871:3:23"},"nodeType":"YulFunctionCall","src":"7871:32:23"},"nodeType":"YulIf","src":"7868:52:23"},{"nodeType":"YulAssignment","src":"7929:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7957:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7939:17:23"},"nodeType":"YulFunctionCall","src":"7939:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7929:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"7976:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8006:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8017:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:23"},"nodeType":"YulFunctionCall","src":"8002:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7989:12:23"},"nodeType":"YulFunctionCall","src":"7989:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7980:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8055:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8030:24:23"},"nodeType":"YulFunctionCall","src":"8030:31:23"},"nodeType":"YulExpressionStatement","src":"8030:31:23"},{"nodeType":"YulAssignment","src":"8070:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"8080:5:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8070:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7816:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7827:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7839:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7847:6:23","type":""}],"src":"7772:319:23"},{"body":{"nodeType":"YulBlock","src":"8195:101:23","statements":[{"nodeType":"YulAssignment","src":"8205:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8217:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8228:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8213:3:23"},"nodeType":"YulFunctionCall","src":"8213:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8205:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8247:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8262:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8278:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"8282:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8274:3:23"},"nodeType":"YulFunctionCall","src":"8274:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"8286:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8270:3:23"},"nodeType":"YulFunctionCall","src":"8270:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8258:3:23"},"nodeType":"YulFunctionCall","src":"8258:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8240:6:23"},"nodeType":"YulFunctionCall","src":"8240:50:23"},"nodeType":"YulExpressionStatement","src":"8240:50:23"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8164:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8175:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8186:4:23","type":""}],"src":"8096:200:23"},{"body":{"nodeType":"YulBlock","src":"8510:370:23","statements":[{"nodeType":"YulAssignment","src":"8520:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8532:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8543:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8528:3:23"},"nodeType":"YulFunctionCall","src":"8528:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8520:4:23"}]},{"nodeType":"YulVariableDeclaration","src":"8556:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8574:3:23","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"8579:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8570:3:23"},"nodeType":"YulFunctionCall","src":"8570:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"8583:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8566:3:23"},"nodeType":"YulFunctionCall","src":"8566:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8560:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8601:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8616:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"8624:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8612:3:23"},"nodeType":"YulFunctionCall","src":"8612:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8594:6:23"},"nodeType":"YulFunctionCall","src":"8594:34:23"},"nodeType":"YulExpressionStatement","src":"8594:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8648:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8659:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8644:3:23"},"nodeType":"YulFunctionCall","src":"8644:18:23"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8668:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"8676:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8664:3:23"},"nodeType":"YulFunctionCall","src":"8664:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8637:6:23"},"nodeType":"YulFunctionCall","src":"8637:43:23"},"nodeType":"YulExpressionStatement","src":"8637:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8700:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8711:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8696:3:23"},"nodeType":"YulFunctionCall","src":"8696:18:23"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8720:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"8728:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8716:3:23"},"nodeType":"YulFunctionCall","src":"8716:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8689:6:23"},"nodeType":"YulFunctionCall","src":"8689:43:23"},"nodeType":"YulExpressionStatement","src":"8689:43:23"},{"nodeType":"YulVariableDeclaration","src":"8741:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8759:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"8763:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8755:3:23"},"nodeType":"YulFunctionCall","src":"8755:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"8767:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8751:3:23"},"nodeType":"YulFunctionCall","src":"8751:18:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8745:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8789:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8800:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8785:3:23"},"nodeType":"YulFunctionCall","src":"8785:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8809:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"8817:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8805:3:23"},"nodeType":"YulFunctionCall","src":"8805:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8778:6:23"},"nodeType":"YulFunctionCall","src":"8778:43:23"},"nodeType":"YulExpressionStatement","src":"8778:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8841:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8852:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8837:3:23"},"nodeType":"YulFunctionCall","src":"8837:19:23"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8862:6:23"},{"name":"_2","nodeType":"YulIdentifier","src":"8870:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8858:3:23"},"nodeType":"YulFunctionCall","src":"8858:15:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8830:6:23"},"nodeType":"YulFunctionCall","src":"8830:44:23"},"nodeType":"YulExpressionStatement","src":"8830:44:23"}]},"name":"abi_encode_tuple_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__to_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8447:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8458:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8466:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8474:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8482:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8490:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8501:4:23","type":""}],"src":"8301:579:23"},{"body":{"nodeType":"YulBlock","src":"9026:648:23","statements":[{"body":{"nodeType":"YulBlock","src":"9072:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9081:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9084:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9074:6:23"},"nodeType":"YulFunctionCall","src":"9074:12:23"},"nodeType":"YulExpressionStatement","src":"9074:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9047:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9056:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9043:3:23"},"nodeType":"YulFunctionCall","src":"9043:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9039:3:23"},"nodeType":"YulFunctionCall","src":"9039:32:23"},"nodeType":"YulIf","src":"9036:52:23"},{"nodeType":"YulAssignment","src":"9097:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9125:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"9107:17:23"},"nodeType":"YulFunctionCall","src":"9107:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9097:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"9144:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9175:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9186:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9171:3:23"},"nodeType":"YulFunctionCall","src":"9171:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9158:12:23"},"nodeType":"YulFunctionCall","src":"9158:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9148:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9199:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9217:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"9221:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9213:3:23"},"nodeType":"YulFunctionCall","src":"9213:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"9225:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9209:3:23"},"nodeType":"YulFunctionCall","src":"9209:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9203:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"9254:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9263:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9266:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9256:6:23"},"nodeType":"YulFunctionCall","src":"9256:12:23"},"nodeType":"YulExpressionStatement","src":"9256:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9242:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"9250:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9239:2:23"},"nodeType":"YulFunctionCall","src":"9239:14:23"},"nodeType":"YulIf","src":"9236:34:23"},{"nodeType":"YulVariableDeclaration","src":"9279:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9335:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"9346:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9331:3:23"},"nodeType":"YulFunctionCall","src":"9331:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9355:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"9305:25:23"},"nodeType":"YulFunctionCall","src":"9305:58:23"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"9283:8:23","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"9293:8:23","type":""}]},{"nodeType":"YulAssignment","src":"9372:18:23","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"9382:8:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9372:6:23"}]},{"nodeType":"YulAssignment","src":"9399:18:23","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"9409:8:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9399:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"9426:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9459:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9470:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9455:3:23"},"nodeType":"YulFunctionCall","src":"9455:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9442:12:23"},"nodeType":"YulFunctionCall","src":"9442:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9430:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"9503:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9512:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9515:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9505:6:23"},"nodeType":"YulFunctionCall","src":"9505:12:23"},"nodeType":"YulExpressionStatement","src":"9505:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9489:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"9499:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9486:2:23"},"nodeType":"YulFunctionCall","src":"9486:16:23"},"nodeType":"YulIf","src":"9483:36:23"},{"nodeType":"YulVariableDeclaration","src":"9528:86:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9584:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9595:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9580:3:23"},"nodeType":"YulFunctionCall","src":"9580:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9606:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"9554:25:23"},"nodeType":"YulFunctionCall","src":"9554:60:23"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"9532:8:23","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"9542:8:23","type":""}]},{"nodeType":"YulAssignment","src":"9623:18:23","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"9633:8:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9623:6:23"}]},{"nodeType":"YulAssignment","src":"9650:18:23","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"9660:8:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9650:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8960:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8971:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8983:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8991:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8999:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9007:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9015:6:23","type":""}],"src":"8885:789:23"},{"body":{"nodeType":"YulBlock","src":"9746:113:23","statements":[{"body":{"nodeType":"YulBlock","src":"9792:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9801:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9804:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9794:6:23"},"nodeType":"YulFunctionCall","src":"9794:12:23"},"nodeType":"YulExpressionStatement","src":"9794:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9767:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9776:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9763:3:23"},"nodeType":"YulFunctionCall","src":"9763:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9788:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9759:3:23"},"nodeType":"YulFunctionCall","src":"9759:32:23"},"nodeType":"YulIf","src":"9756:52:23"},{"nodeType":"YulAssignment","src":"9817:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9843:9:23"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"9827:15:23"},"nodeType":"YulFunctionCall","src":"9827:26:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9817:6:23"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9712:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9723:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9735:6:23","type":""}],"src":"9679:180:23"},{"body":{"nodeType":"YulBlock","src":"9934:110:23","statements":[{"body":{"nodeType":"YulBlock","src":"9980:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9989:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9992:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9982:6:23"},"nodeType":"YulFunctionCall","src":"9982:12:23"},"nodeType":"YulExpressionStatement","src":"9982:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9955:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9964:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9951:3:23"},"nodeType":"YulFunctionCall","src":"9951:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9976:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9947:3:23"},"nodeType":"YulFunctionCall","src":"9947:32:23"},"nodeType":"YulIf","src":"9944:52:23"},{"nodeType":"YulAssignment","src":"10005:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10028:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10015:12:23"},"nodeType":"YulFunctionCall","src":"10015:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10005:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9900:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9911:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9923:6:23","type":""}],"src":"9864:180:23"},{"body":{"nodeType":"YulBlock","src":"10136:301:23","statements":[{"body":{"nodeType":"YulBlock","src":"10182:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10191:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10194:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10184:6:23"},"nodeType":"YulFunctionCall","src":"10184:12:23"},"nodeType":"YulExpressionStatement","src":"10184:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10157:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10166:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10153:3:23"},"nodeType":"YulFunctionCall","src":"10153:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10178:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10149:3:23"},"nodeType":"YulFunctionCall","src":"10149:32:23"},"nodeType":"YulIf","src":"10146:52:23"},{"nodeType":"YulVariableDeclaration","src":"10207:36:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10233:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10220:12:23"},"nodeType":"YulFunctionCall","src":"10220:23:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10211:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10277:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10252:24:23"},"nodeType":"YulFunctionCall","src":"10252:31:23"},"nodeType":"YulExpressionStatement","src":"10252:31:23"},{"nodeType":"YulAssignment","src":"10292:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"10302:5:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10292:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"10316:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10348:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10359:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10344:3:23"},"nodeType":"YulFunctionCall","src":"10344:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10331:12:23"},"nodeType":"YulFunctionCall","src":"10331:32:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10320:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10397:7:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10372:24:23"},"nodeType":"YulFunctionCall","src":"10372:33:23"},"nodeType":"YulExpressionStatement","src":"10372:33:23"},{"nodeType":"YulAssignment","src":"10414:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10424:7:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10414:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10094:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10105:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10117:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10125:6:23","type":""}],"src":"10049:388:23"},{"body":{"nodeType":"YulBlock","src":"10633:876:23","statements":[{"body":{"nodeType":"YulBlock","src":"10680:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10689:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10692:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10682:6:23"},"nodeType":"YulFunctionCall","src":"10682:12:23"},"nodeType":"YulExpressionStatement","src":"10682:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10654:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10663:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10650:3:23"},"nodeType":"YulFunctionCall","src":"10650:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10675:3:23","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10646:3:23"},"nodeType":"YulFunctionCall","src":"10646:33:23"},"nodeType":"YulIf","src":"10643:53:23"},{"nodeType":"YulAssignment","src":"10705:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10733:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"10715:17:23"},"nodeType":"YulFunctionCall","src":"10715:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10705:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"10752:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10783:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10794:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10779:3:23"},"nodeType":"YulFunctionCall","src":"10779:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10766:12:23"},"nodeType":"YulFunctionCall","src":"10766:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10756:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10807:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10825:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"10829:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10821:3:23"},"nodeType":"YulFunctionCall","src":"10821:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"10833:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10817:3:23"},"nodeType":"YulFunctionCall","src":"10817:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10811:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"10862:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10871:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10874:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10864:6:23"},"nodeType":"YulFunctionCall","src":"10864:12:23"},"nodeType":"YulExpressionStatement","src":"10864:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10850:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"10858:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10847:2:23"},"nodeType":"YulFunctionCall","src":"10847:14:23"},"nodeType":"YulIf","src":"10844:34:23"},{"nodeType":"YulVariableDeclaration","src":"10887:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10943:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"10954:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10939:3:23"},"nodeType":"YulFunctionCall","src":"10939:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10963:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"10913:25:23"},"nodeType":"YulFunctionCall","src":"10913:58:23"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"10891:8:23","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"10901:8:23","type":""}]},{"nodeType":"YulAssignment","src":"10980:18:23","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"10990:8:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10980:6:23"}]},{"nodeType":"YulAssignment","src":"11007:18:23","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"11017:8:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11007:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"11034:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11064:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11075:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11060:3:23"},"nodeType":"YulFunctionCall","src":"11060:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11047:12:23"},"nodeType":"YulFunctionCall","src":"11047:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11038:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11113:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11088:24:23"},"nodeType":"YulFunctionCall","src":"11088:31:23"},"nodeType":"YulExpressionStatement","src":"11088:31:23"},{"nodeType":"YulAssignment","src":"11128:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"11138:5:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11128:6:23"}]},{"nodeType":"YulAssignment","src":"11152:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11184:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11195:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11180:3:23"},"nodeType":"YulFunctionCall","src":"11180:18:23"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"11162:17:23"},"nodeType":"YulFunctionCall","src":"11162:37:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11152:6:23"}]},{"nodeType":"YulAssignment","src":"11208:43:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11235:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11246:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11231:3:23"},"nodeType":"YulFunctionCall","src":"11231:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11218:12:23"},"nodeType":"YulFunctionCall","src":"11218:33:23"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11208:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"11260:49:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11293:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11304:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11289:3:23"},"nodeType":"YulFunctionCall","src":"11289:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11276:12:23"},"nodeType":"YulFunctionCall","src":"11276:33:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"11264:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11338:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11347:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11350:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11340:6:23"},"nodeType":"YulFunctionCall","src":"11340:12:23"},"nodeType":"YulExpressionStatement","src":"11340:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"11324:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11334:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11321:2:23"},"nodeType":"YulFunctionCall","src":"11321:16:23"},"nodeType":"YulIf","src":"11318:36:23"},{"nodeType":"YulVariableDeclaration","src":"11363:86:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11419:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"11430:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11415:3:23"},"nodeType":"YulFunctionCall","src":"11415:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11441:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"11389:25:23"},"nodeType":"YulFunctionCall","src":"11389:60:23"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"11367:8:23","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"11377:8:23","type":""}]},{"nodeType":"YulAssignment","src":"11458:18:23","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"11468:8:23"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11458:6:23"}]},{"nodeType":"YulAssignment","src":"11485:18:23","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"11495:8:23"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"11485:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_addresst_uint64t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10543:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10554:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10566:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10574:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10582:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10590:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10598:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10606:6:23","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10614:6:23","type":""},{"name":"value7","nodeType":"YulTypedName","src":"10622:6:23","type":""}],"src":"10442:1067:23"},{"body":{"nodeType":"YulBlock","src":"11713:986:23","statements":[{"body":{"nodeType":"YulBlock","src":"11760:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11769:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11772:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11762:6:23"},"nodeType":"YulFunctionCall","src":"11762:12:23"},"nodeType":"YulExpressionStatement","src":"11762:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11734:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"11743:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11730:3:23"},"nodeType":"YulFunctionCall","src":"11730:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"11755:3:23","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11726:3:23"},"nodeType":"YulFunctionCall","src":"11726:33:23"},"nodeType":"YulIf","src":"11723:53:23"},{"nodeType":"YulAssignment","src":"11785:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11813:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"11795:17:23"},"nodeType":"YulFunctionCall","src":"11795:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11785:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"11832:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11863:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11874:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11859:3:23"},"nodeType":"YulFunctionCall","src":"11859:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11846:12:23"},"nodeType":"YulFunctionCall","src":"11846:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11836:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11887:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11905:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"11909:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11901:3:23"},"nodeType":"YulFunctionCall","src":"11901:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"11913:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11897:3:23"},"nodeType":"YulFunctionCall","src":"11897:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11891:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11942:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11951:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11954:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11944:6:23"},"nodeType":"YulFunctionCall","src":"11944:12:23"},"nodeType":"YulExpressionStatement","src":"11944:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11930:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"11938:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11927:2:23"},"nodeType":"YulFunctionCall","src":"11927:14:23"},"nodeType":"YulIf","src":"11924:34:23"},{"nodeType":"YulAssignment","src":"11967:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11998:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12009:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11994:3:23"},"nodeType":"YulFunctionCall","src":"11994:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12018:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"11977:16:23"},"nodeType":"YulFunctionCall","src":"11977:49:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11967:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"12035:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12068:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12079:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12064:3:23"},"nodeType":"YulFunctionCall","src":"12064:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12051:12:23"},"nodeType":"YulFunctionCall","src":"12051:32:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"12039:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"12112:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12121:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12124:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12114:6:23"},"nodeType":"YulFunctionCall","src":"12114:12:23"},"nodeType":"YulExpressionStatement","src":"12114:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"12098:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12108:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12095:2:23"},"nodeType":"YulFunctionCall","src":"12095:16:23"},"nodeType":"YulIf","src":"12092:36:23"},{"nodeType":"YulVariableDeclaration","src":"12137:86:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12193:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"12204:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12189:3:23"},"nodeType":"YulFunctionCall","src":"12189:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12215:7:23"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"12163:25:23"},"nodeType":"YulFunctionCall","src":"12163:60:23"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"12141:8:23","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"12151:8:23","type":""}]},{"nodeType":"YulAssignment","src":"12232:18:23","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"12242:8:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12232:6:23"}]},{"nodeType":"YulAssignment","src":"12259:18:23","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"12269:8:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12259:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"12286:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12316:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12327:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12312:3:23"},"nodeType":"YulFunctionCall","src":"12312:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12299:12:23"},"nodeType":"YulFunctionCall","src":"12299:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12290:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12365:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12340:24:23"},"nodeType":"YulFunctionCall","src":"12340:31:23"},"nodeType":"YulExpressionStatement","src":"12340:31:23"},{"nodeType":"YulAssignment","src":"12380:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"12390:5:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12380:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"12404:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12436:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12447:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12432:3:23"},"nodeType":"YulFunctionCall","src":"12432:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12419:12:23"},"nodeType":"YulFunctionCall","src":"12419:33:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12408:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"12486:7:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12461:24:23"},"nodeType":"YulFunctionCall","src":"12461:33:23"},"nodeType":"YulExpressionStatement","src":"12461:33:23"},{"nodeType":"YulAssignment","src":"12503:17:23","value":{"name":"value_1","nodeType":"YulIdentifier","src":"12513:7:23"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12503:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"12529:49:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12562:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12573:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12558:3:23"},"nodeType":"YulFunctionCall","src":"12558:19:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12545:12:23"},"nodeType":"YulFunctionCall","src":"12545:33:23"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"12533:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"12607:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12616:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12619:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12609:6:23"},"nodeType":"YulFunctionCall","src":"12609:12:23"},"nodeType":"YulExpressionStatement","src":"12609:12:23"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"12593:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"12603:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12590:2:23"},"nodeType":"YulFunctionCall","src":"12590:16:23"},"nodeType":"YulIf","src":"12587:36:23"},{"nodeType":"YulAssignment","src":"12632:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12663:9:23"},{"name":"offset_2","nodeType":"YulIdentifier","src":"12674:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12659:3:23"},"nodeType":"YulFunctionCall","src":"12659:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12685:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"12642:16:23"},"nodeType":"YulFunctionCall","src":"12642:51:23"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12632:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_bytes_calldata_ptrt_address_payablet_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11631:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11642:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11654:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11662:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11670:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11678:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11686:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11694:6:23","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11702:6:23","type":""}],"src":"11514:1185:23"},{"body":{"nodeType":"YulBlock","src":"12832:405:23","statements":[{"body":{"nodeType":"YulBlock","src":"12879:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12888:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12891:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12881:6:23"},"nodeType":"YulFunctionCall","src":"12881:12:23"},"nodeType":"YulExpressionStatement","src":"12881:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12853:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"12862:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12849:3:23"},"nodeType":"YulFunctionCall","src":"12849:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"12874:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12845:3:23"},"nodeType":"YulFunctionCall","src":"12845:33:23"},"nodeType":"YulIf","src":"12842:53:23"},{"nodeType":"YulAssignment","src":"12904:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12932:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12914:17:23"},"nodeType":"YulFunctionCall","src":"12914:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12904:6:23"}]},{"nodeType":"YulAssignment","src":"12951:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12983:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12994:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12979:3:23"},"nodeType":"YulFunctionCall","src":"12979:18:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12961:17:23"},"nodeType":"YulFunctionCall","src":"12961:37:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12951:6:23"}]},{"nodeType":"YulAssignment","src":"13007:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13034:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13045:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:23"},"nodeType":"YulFunctionCall","src":"13030:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13017:12:23"},"nodeType":"YulFunctionCall","src":"13017:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13007:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"13058:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13089:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13100:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13085:3:23"},"nodeType":"YulFunctionCall","src":"13085:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13072:12:23"},"nodeType":"YulFunctionCall","src":"13072:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13062:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"13147:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13156:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13159:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13149:6:23"},"nodeType":"YulFunctionCall","src":"13149:12:23"},"nodeType":"YulExpressionStatement","src":"13149:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13119:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13135:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"13139:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13131:3:23"},"nodeType":"YulFunctionCall","src":"13131:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"13143:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13127:3:23"},"nodeType":"YulFunctionCall","src":"13127:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13116:2:23"},"nodeType":"YulFunctionCall","src":"13116:30:23"},"nodeType":"YulIf","src":"13113:50:23"},{"nodeType":"YulAssignment","src":"13172:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13203:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13214:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13199:3:23"},"nodeType":"YulFunctionCall","src":"13199:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13223:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"13182:16:23"},"nodeType":"YulFunctionCall","src":"13182:49:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13172:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12774:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12785:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12797:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12805:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12813:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12821:6:23","type":""}],"src":"12704:533:23"},{"body":{"nodeType":"YulBlock","src":"13361:341:23","statements":[{"body":{"nodeType":"YulBlock","src":"13408:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13417:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13420:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13410:6:23"},"nodeType":"YulFunctionCall","src":"13410:12:23"},"nodeType":"YulExpressionStatement","src":"13410:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13382:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13391:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13378:3:23"},"nodeType":"YulFunctionCall","src":"13378:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"13403:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13374:3:23"},"nodeType":"YulFunctionCall","src":"13374:33:23"},"nodeType":"YulIf","src":"13371:53:23"},{"nodeType":"YulAssignment","src":"13433:38:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13461:9:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13443:17:23"},"nodeType":"YulFunctionCall","src":"13443:28:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13433:6:23"}]},{"nodeType":"YulAssignment","src":"13480:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13512:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13523:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13508:3:23"},"nodeType":"YulFunctionCall","src":"13508:18:23"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13490:17:23"},"nodeType":"YulFunctionCall","src":"13490:37:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13480:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"13536:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13566:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13577:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13562:3:23"},"nodeType":"YulFunctionCall","src":"13562:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13549:12:23"},"nodeType":"YulFunctionCall","src":"13549:32:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13540:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13615:5:23"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13590:24:23"},"nodeType":"YulFunctionCall","src":"13590:31:23"},"nodeType":"YulExpressionStatement","src":"13590:31:23"},{"nodeType":"YulAssignment","src":"13630:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"13640:5:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13630:6:23"}]},{"nodeType":"YulAssignment","src":"13654:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13681:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13692:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13677:3:23"},"nodeType":"YulFunctionCall","src":"13677:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13664:12:23"},"nodeType":"YulFunctionCall","src":"13664:32:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13654:6:23"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13303:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13314:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13326:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13334:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13342:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13350:6:23","type":""}],"src":"13242:460:23"},{"body":{"nodeType":"YulBlock","src":"13808:76:23","statements":[{"nodeType":"YulAssignment","src":"13818:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13830:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13841:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13826:3:23"},"nodeType":"YulFunctionCall","src":"13826:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13818:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13860:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"13871:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13853:6:23"},"nodeType":"YulFunctionCall","src":"13853:25:23"},"nodeType":"YulExpressionStatement","src":"13853:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13777:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13788:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13799:4:23","type":""}],"src":"13707:177:23"},{"body":{"nodeType":"YulBlock","src":"13968:241:23","statements":[{"body":{"nodeType":"YulBlock","src":"14014:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14023:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14026:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14016:6:23"},"nodeType":"YulFunctionCall","src":"14016:12:23"},"nodeType":"YulExpressionStatement","src":"14016:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13989:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13998:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13985:3:23"},"nodeType":"YulFunctionCall","src":"13985:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"14010:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13981:3:23"},"nodeType":"YulFunctionCall","src":"13981:32:23"},"nodeType":"YulIf","src":"13978:52:23"},{"nodeType":"YulVariableDeclaration","src":"14039:37:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14066:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14053:12:23"},"nodeType":"YulFunctionCall","src":"14053:23:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14043:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14119:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14128:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14131:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14121:6:23"},"nodeType":"YulFunctionCall","src":"14121:12:23"},"nodeType":"YulExpressionStatement","src":"14121:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14091:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14107:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"14111:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14103:3:23"},"nodeType":"YulFunctionCall","src":"14103:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"14115:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14099:3:23"},"nodeType":"YulFunctionCall","src":"14099:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14088:2:23"},"nodeType":"YulFunctionCall","src":"14088:30:23"},"nodeType":"YulIf","src":"14085:50:23"},{"nodeType":"YulAssignment","src":"14144:59:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14175:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"14186:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14171:3:23"},"nodeType":"YulFunctionCall","src":"14171:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14195:7:23"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"14154:16:23"},"nodeType":"YulFunctionCall","src":"14154:49:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14144:6:23"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13934:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13945:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13957:6:23","type":""}],"src":"13889:320:23"},{"body":{"nodeType":"YulBlock","src":"14361:124:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14384:3:23"},{"name":"value0","nodeType":"YulIdentifier","src":"14389:6:23"},{"name":"value1","nodeType":"YulIdentifier","src":"14397:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14371:12:23"},"nodeType":"YulFunctionCall","src":"14371:33:23"},"nodeType":"YulExpressionStatement","src":"14371:33:23"},{"nodeType":"YulVariableDeclaration","src":"14413:26:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14427:3:23"},{"name":"value1","nodeType":"YulIdentifier","src":"14432:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14423:3:23"},"nodeType":"YulFunctionCall","src":"14423:16:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14417:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14455:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"14459:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14448:6:23"},"nodeType":"YulFunctionCall","src":"14448:13:23"},"nodeType":"YulExpressionStatement","src":"14448:13:23"},{"nodeType":"YulAssignment","src":"14470:9:23","value":{"name":"_1","nodeType":"YulIdentifier","src":"14477:2:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14470:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14329:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14334:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14342:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14353:3:23","type":""}],"src":"14214:271:23"},{"body":{"nodeType":"YulBlock","src":"14545:325:23","statements":[{"nodeType":"YulAssignment","src":"14555:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14569:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"14572:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14565:3:23"},"nodeType":"YulFunctionCall","src":"14565:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14555:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"14586:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14616:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"14622:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14612:3:23"},"nodeType":"YulFunctionCall","src":"14612:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14590:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14663:31:23","statements":[{"nodeType":"YulAssignment","src":"14665:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14679:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14687:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14675:3:23"},"nodeType":"YulFunctionCall","src":"14675:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14665:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14643:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14636:6:23"},"nodeType":"YulFunctionCall","src":"14636:26:23"},"nodeType":"YulIf","src":"14633:61:23"},{"body":{"nodeType":"YulBlock","src":"14753:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14774:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14781:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14786:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14777:3:23"},"nodeType":"YulFunctionCall","src":"14777:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14767:6:23"},"nodeType":"YulFunctionCall","src":"14767:31:23"},"nodeType":"YulExpressionStatement","src":"14767:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14818:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14821:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14811:6:23"},"nodeType":"YulFunctionCall","src":"14811:15:23"},"nodeType":"YulExpressionStatement","src":"14811:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14846:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14849:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14839:6:23"},"nodeType":"YulFunctionCall","src":"14839:15:23"},"nodeType":"YulExpressionStatement","src":"14839:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14709:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14732:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14740:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14729:2:23"},"nodeType":"YulFunctionCall","src":"14729:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14706:2:23"},"nodeType":"YulFunctionCall","src":"14706:38:23"},"nodeType":"YulIf","src":"14703:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14525:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14534:6:23","type":""}],"src":"14490:380:23"},{"body":{"nodeType":"YulBlock","src":"14907:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14924:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14931:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14936:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14927:3:23"},"nodeType":"YulFunctionCall","src":"14927:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14917:6:23"},"nodeType":"YulFunctionCall","src":"14917:31:23"},"nodeType":"YulExpressionStatement","src":"14917:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14964:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14967:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14957:6:23"},"nodeType":"YulFunctionCall","src":"14957:15:23"},"nodeType":"YulExpressionStatement","src":"14957:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14988:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14991:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14981:6:23"},"nodeType":"YulFunctionCall","src":"14981:15:23"},"nodeType":"YulExpressionStatement","src":"14981:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14875:127:23"},{"body":{"nodeType":"YulBlock","src":"15055:77:23","statements":[{"nodeType":"YulAssignment","src":"15065:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15076:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"15079:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15072:3:23"},"nodeType":"YulFunctionCall","src":"15072:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15065:3:23"}]},{"body":{"nodeType":"YulBlock","src":"15104:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15106:16:23"},"nodeType":"YulFunctionCall","src":"15106:18:23"},"nodeType":"YulExpressionStatement","src":"15106:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15096:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"15099:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15093:2:23"},"nodeType":"YulFunctionCall","src":"15093:10:23"},"nodeType":"YulIf","src":"15090:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15038:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"15041:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15047:3:23","type":""}],"src":"15007:125:23"},{"body":{"nodeType":"YulBlock","src":"15311:182:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15328:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15339:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15321:6:23"},"nodeType":"YulFunctionCall","src":"15321:21:23"},"nodeType":"YulExpressionStatement","src":"15321:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15362:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15373:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15358:3:23"},"nodeType":"YulFunctionCall","src":"15358:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"15378:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15351:6:23"},"nodeType":"YulFunctionCall","src":"15351:30:23"},"nodeType":"YulExpressionStatement","src":"15351:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15401:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15412:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15397:3:23"},"nodeType":"YulFunctionCall","src":"15397:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f6164","kind":"string","nodeType":"YulLiteral","src":"15417:34:23","type":"","value":"LayerZeroMock: no stored payload"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15390:6:23"},"nodeType":"YulFunctionCall","src":"15390:62:23"},"nodeType":"YulExpressionStatement","src":"15390:62:23"},{"nodeType":"YulAssignment","src":"15461:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15473:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15484:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15469:3:23"},"nodeType":"YulFunctionCall","src":"15469:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15461:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15288:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15302:4:23","type":""}],"src":"15137:356:23"},{"body":{"nodeType":"YulBlock","src":"15672:179:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15689:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15700:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15682:6:23"},"nodeType":"YulFunctionCall","src":"15682:21:23"},"nodeType":"YulExpressionStatement","src":"15682:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15723:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15734:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15719:3:23"},"nodeType":"YulFunctionCall","src":"15719:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"15739:2:23","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15712:6:23"},"nodeType":"YulFunctionCall","src":"15712:30:23"},"nodeType":"YulExpressionStatement","src":"15712:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15762:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15773:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:23"},"nodeType":"YulFunctionCall","src":"15758:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c69642063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"15778:31:23","type":"","value":"LayerZeroMock: invalid caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:23"},"nodeType":"YulFunctionCall","src":"15751:59:23"},"nodeType":"YulExpressionStatement","src":"15751:59:23"},{"nodeType":"YulAssignment","src":"15819:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15831:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15842:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15827:3:23"},"nodeType":"YulFunctionCall","src":"15827:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15819:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15649:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15663:4:23","type":""}],"src":"15498:353:23"},{"body":{"nodeType":"YulBlock","src":"15922:200:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15939:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"15944:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15932:6:23"},"nodeType":"YulFunctionCall","src":"15932:19:23"},"nodeType":"YulExpressionStatement","src":"15932:19:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15977:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15982:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15973:3:23"},"nodeType":"YulFunctionCall","src":"15973:14:23"},{"name":"start","nodeType":"YulIdentifier","src":"15989:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"15996:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"15960:12:23"},"nodeType":"YulFunctionCall","src":"15960:43:23"},"nodeType":"YulExpressionStatement","src":"15960:43:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16027:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"16032:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16023:3:23"},"nodeType":"YulFunctionCall","src":"16023:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"16041:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16019:3:23"},"nodeType":"YulFunctionCall","src":"16019:27:23"},{"kind":"number","nodeType":"YulLiteral","src":"16048:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16012:6:23"},"nodeType":"YulFunctionCall","src":"16012:38:23"},"nodeType":"YulExpressionStatement","src":"16012:38:23"},{"nodeType":"YulAssignment","src":"16059:57:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16074:3:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16087:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16095:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16083:3:23"},"nodeType":"YulFunctionCall","src":"16083:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16104:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16100:3:23"},"nodeType":"YulFunctionCall","src":"16100:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16079:3:23"},"nodeType":"YulFunctionCall","src":"16079:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16070:3:23"},"nodeType":"YulFunctionCall","src":"16070:39:23"},{"kind":"number","nodeType":"YulLiteral","src":"16111:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16066:3:23"},"nodeType":"YulFunctionCall","src":"16066:50:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16059:3:23"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"15891:5:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"15898:6:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15906:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15914:3:23","type":""}],"src":"15856:266:23"},{"body":{"nodeType":"YulBlock","src":"16282:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16299:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16314:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16322:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16310:3:23"},"nodeType":"YulFunctionCall","src":"16310:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16292:6:23"},"nodeType":"YulFunctionCall","src":"16292:38:23"},"nodeType":"YulExpressionStatement","src":"16292:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16350:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16361:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16346:3:23"},"nodeType":"YulFunctionCall","src":"16346:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"16366:2:23","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16339:6:23"},"nodeType":"YulFunctionCall","src":"16339:30:23"},"nodeType":"YulExpressionStatement","src":"16339:30:23"},{"nodeType":"YulAssignment","src":"16378:69:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16412:6:23"},{"name":"value2","nodeType":"YulIdentifier","src":"16420:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16432:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16443:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16428:3:23"},"nodeType":"YulFunctionCall","src":"16428:18:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"16386:25:23"},"nodeType":"YulFunctionCall","src":"16386:61:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16378:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16235:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16246:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16254:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16262:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16273:4:23","type":""}],"src":"16127:326:23"},{"body":{"nodeType":"YulBlock","src":"16632:180:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16649:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16660:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16642:6:23"},"nodeType":"YulFunctionCall","src":"16642:21:23"},"nodeType":"YulExpressionStatement","src":"16642:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16683:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16694:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16679:3:23"},"nodeType":"YulFunctionCall","src":"16679:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"16699:2:23","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16672:6:23"},"nodeType":"YulFunctionCall","src":"16672:30:23"},"nodeType":"YulExpressionStatement","src":"16672:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16722:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16733:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16718:3:23"},"nodeType":"YulFunctionCall","src":"16718:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c6964207061796c6f6164","kind":"string","nodeType":"YulLiteral","src":"16738:32:23","type":"","value":"LayerZeroMock: invalid payload"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16711:6:23"},"nodeType":"YulFunctionCall","src":"16711:60:23"},"nodeType":"YulExpressionStatement","src":"16711:60:23"},{"nodeType":"YulAssignment","src":"16780:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16792:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"16803:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16788:3:23"},"nodeType":"YulFunctionCall","src":"16788:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16780:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16609:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16623:4:23","type":""}],"src":"16458:354:23"},{"body":{"nodeType":"YulBlock","src":"17054:372:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17071:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17086:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"17094:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17082:3:23"},"nodeType":"YulFunctionCall","src":"17082:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17064:6:23"},"nodeType":"YulFunctionCall","src":"17064:38:23"},"nodeType":"YulExpressionStatement","src":"17064:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17122:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17133:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17118:3:23"},"nodeType":"YulFunctionCall","src":"17118:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"17138:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17111:6:23"},"nodeType":"YulFunctionCall","src":"17111:31:23"},"nodeType":"YulExpressionStatement","src":"17111:31:23"},{"nodeType":"YulVariableDeclaration","src":"17151:76:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17191:6:23"},{"name":"value2","nodeType":"YulIdentifier","src":"17199:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17211:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17222:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17207:3:23"},"nodeType":"YulFunctionCall","src":"17207:19:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"17165:25:23"},"nodeType":"YulFunctionCall","src":"17165:62:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"17155:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17247:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17258:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17243:3:23"},"nodeType":"YulFunctionCall","src":"17243:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17267:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17283:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"17287:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17279:3:23"},"nodeType":"YulFunctionCall","src":"17279:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"17291:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17275:3:23"},"nodeType":"YulFunctionCall","src":"17275:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17263:3:23"},"nodeType":"YulFunctionCall","src":"17263:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17236:6:23"},"nodeType":"YulFunctionCall","src":"17236:59:23"},"nodeType":"YulExpressionStatement","src":"17236:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17315:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17326:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17311:3:23"},"nodeType":"YulFunctionCall","src":"17311:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"17335:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"17343:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17331:3:23"},"nodeType":"YulFunctionCall","src":"17331:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17304:6:23"},"nodeType":"YulFunctionCall","src":"17304:50:23"},"nodeType":"YulExpressionStatement","src":"17304:50:23"},{"nodeType":"YulAssignment","src":"17363:57:23","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17397:6:23"},{"name":"value5","nodeType":"YulIdentifier","src":"17405:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"17413:6:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"17371:25:23"},"nodeType":"YulFunctionCall","src":"17371:49:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17363:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16983:9:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16994:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17002:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17010:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17018:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17026:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17034:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17045:4:23","type":""}],"src":"16817:609:23"},{"body":{"nodeType":"YulBlock","src":"17640:310:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17657:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17672:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"17680:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17668:3:23"},"nodeType":"YulFunctionCall","src":"17668:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17650:6:23"},"nodeType":"YulFunctionCall","src":"17650:38:23"},"nodeType":"YulExpressionStatement","src":"17650:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17708:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17719:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17704:3:23"},"nodeType":"YulFunctionCall","src":"17704:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"17724:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17697:6:23"},"nodeType":"YulFunctionCall","src":"17697:31:23"},"nodeType":"YulExpressionStatement","src":"17697:31:23"},{"nodeType":"YulAssignment","src":"17737:70:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17771:6:23"},{"name":"value2","nodeType":"YulIdentifier","src":"17779:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17791:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17802:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17787:3:23"},"nodeType":"YulFunctionCall","src":"17787:19:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"17745:25:23"},"nodeType":"YulFunctionCall","src":"17745:62:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17737:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17827:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17838:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17823:3:23"},"nodeType":"YulFunctionCall","src":"17823:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17847:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17863:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"17867:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17859:3:23"},"nodeType":"YulFunctionCall","src":"17859:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"17871:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17855:3:23"},"nodeType":"YulFunctionCall","src":"17855:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17843:3:23"},"nodeType":"YulFunctionCall","src":"17843:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17816:6:23"},"nodeType":"YulFunctionCall","src":"17816:59:23"},"nodeType":"YulExpressionStatement","src":"17816:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17895:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17906:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17891:3:23"},"nodeType":"YulFunctionCall","src":"17891:18:23"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17915:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17931:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17936:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17927:3:23"},"nodeType":"YulFunctionCall","src":"17927:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"17940:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17923:3:23"},"nodeType":"YulFunctionCall","src":"17923:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17911:3:23"},"nodeType":"YulFunctionCall","src":"17911:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17884:6:23"},"nodeType":"YulFunctionCall","src":"17884:60:23"},"nodeType":"YulExpressionStatement","src":"17884:60:23"}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_address__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17577:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17588:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17596:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17604:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17612:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17620:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17631:4:23","type":""}],"src":"17431:519:23"},{"body":{"nodeType":"YulBlock","src":"18129:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18146:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18157:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18139:6:23"},"nodeType":"YulFunctionCall","src":"18139:21:23"},"nodeType":"YulExpressionStatement","src":"18139:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18180:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18191:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18176:3:23"},"nodeType":"YulFunctionCall","src":"18176:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18196:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18169:6:23"},"nodeType":"YulFunctionCall","src":"18169:30:23"},"nodeType":"YulExpressionStatement","src":"18169:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18219:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18230:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18215:3:23"},"nodeType":"YulFunctionCall","src":"18215:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2072656365697665207265656e7472","kind":"string","nodeType":"YulLiteral","src":"18235:34:23","type":"","value":"LayerZeroMock: no receive reentr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18208:6:23"},"nodeType":"YulFunctionCall","src":"18208:62:23"},"nodeType":"YulExpressionStatement","src":"18208:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18290:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18301:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18286:3:23"},"nodeType":"YulFunctionCall","src":"18286:18:23"},{"hexValue":"616e6379","kind":"string","nodeType":"YulLiteral","src":"18306:6:23","type":"","value":"ancy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18279:6:23"},"nodeType":"YulFunctionCall","src":"18279:34:23"},"nodeType":"YulExpressionStatement","src":"18279:34:23"},{"nodeType":"YulAssignment","src":"18322:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18334:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18345:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18330:3:23"},"nodeType":"YulFunctionCall","src":"18330:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18322:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18106:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18120:4:23","type":""}],"src":"17955:400:23"},{"body":{"nodeType":"YulBlock","src":"18406:163:23","statements":[{"nodeType":"YulVariableDeclaration","src":"18416:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18434:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"18438:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18430:3:23"},"nodeType":"YulFunctionCall","src":"18430:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"18442:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18426:3:23"},"nodeType":"YulFunctionCall","src":"18426:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18420:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18453:29:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18472:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"18479:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18468:3:23"},"nodeType":"YulFunctionCall","src":"18468:14:23"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"18457:7:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"18510:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18512:16:23"},"nodeType":"YulFunctionCall","src":"18512:18:23"},"nodeType":"YulExpressionStatement","src":"18512:18:23"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"18497:7:23"},{"name":"_1","nodeType":"YulIdentifier","src":"18506:2:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18494:2:23"},"nodeType":"YulFunctionCall","src":"18494:15:23"},"nodeType":"YulIf","src":"18491:41:23"},{"nodeType":"YulAssignment","src":"18541:22:23","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"18552:7:23"},{"kind":"number","nodeType":"YulLiteral","src":"18561:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18548:3:23"},"nodeType":"YulFunctionCall","src":"18548:15:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18541:3:23"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18388:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18398:3:23","type":""}],"src":"18360:209:23"},{"body":{"nodeType":"YulBlock","src":"18748:176:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18765:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18776:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18758:6:23"},"nodeType":"YulFunctionCall","src":"18758:21:23"},"nodeType":"YulExpressionStatement","src":"18758:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18799:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18810:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18795:3:23"},"nodeType":"YulFunctionCall","src":"18795:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"18815:2:23","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18788:6:23"},"nodeType":"YulFunctionCall","src":"18788:30:23"},"nodeType":"YulExpressionStatement","src":"18788:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18838:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18849:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18834:3:23"},"nodeType":"YulFunctionCall","src":"18834:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a2077726f6e67206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"18854:28:23","type":"","value":"LayerZeroMock: wrong nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18827:6:23"},"nodeType":"YulFunctionCall","src":"18827:56:23"},"nodeType":"YulExpressionStatement","src":"18827:56:23"},{"nodeType":"YulAssignment","src":"18892:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18904:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18915:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18900:3:23"},"nodeType":"YulFunctionCall","src":"18900:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18892:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18725:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18739:4:23","type":""}],"src":"18574:350:23"},{"body":{"nodeType":"YulBlock","src":"18984:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19001:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"19004:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18994:6:23"},"nodeType":"YulFunctionCall","src":"18994:14:23"},"nodeType":"YulExpressionStatement","src":"18994:14:23"},{"nodeType":"YulAssignment","src":"19017:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19035:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19038:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19025:9:23"},"nodeType":"YulFunctionCall","src":"19025:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19017:4:23"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18967:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18975:4:23","type":""}],"src":"18929:120:23"},{"body":{"nodeType":"YulBlock","src":"19134:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"19167:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"19181:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"19191:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19185:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19212:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"19216:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19205:6:23"},"nodeType":"YulFunctionCall","src":"19205:17:23"},"nodeType":"YulExpressionStatement","src":"19205:17:23"},{"nodeType":"YulVariableDeclaration","src":"19235:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19257:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"19261:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19247:9:23"},"nodeType":"YulFunctionCall","src":"19247:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"19239:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19279:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19302:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19312:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19319:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"19331:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19315:3:23"},"nodeType":"YulFunctionCall","src":"19315:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19308:3:23"},"nodeType":"YulFunctionCall","src":"19308:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:23"},"nodeType":"YulFunctionCall","src":"19298:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"19283:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19373:23:23","statements":[{"nodeType":"YulAssignment","src":"19375:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"19390:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19375:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19355:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"19367:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19352:2:23"},"nodeType":"YulFunctionCall","src":"19352:20:23"},"nodeType":"YulIf","src":"19349:47:23"},{"nodeType":"YulVariableDeclaration","src":"19409:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19423:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19433:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19440:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"19445:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19436:3:23"},"nodeType":"YulFunctionCall","src":"19436:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19429:3:23"},"nodeType":"YulFunctionCall","src":"19429:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19419:3:23"},"nodeType":"YulFunctionCall","src":"19419:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"19413:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19463:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"19476:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"19467:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19561:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19570:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"19577:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19563:6:23"},"nodeType":"YulFunctionCall","src":"19563:17:23"},"nodeType":"YulExpressionStatement","src":"19563:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19511:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"19518:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19508:2:23"},"nodeType":"YulFunctionCall","src":"19508:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19522:26:23","statements":[{"nodeType":"YulAssignment","src":"19524:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19537:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"19544:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19533:3:23"},"nodeType":"YulFunctionCall","src":"19533:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"19524:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"19504:3:23","statements":[]},"src":"19500:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19150:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"19155:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19147:2:23"},"nodeType":"YulFunctionCall","src":"19147:11:23"},"nodeType":"YulIf","src":"19144:448:23"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"19106:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"19113:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"19118:10:23","type":""}],"src":"19054:544:23"},{"body":{"nodeType":"YulBlock","src":"19688:81:23","statements":[{"nodeType":"YulAssignment","src":"19698:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19713:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19731:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"19734:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19727:3:23"},"nodeType":"YulFunctionCall","src":"19727:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19744:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19740:3:23"},"nodeType":"YulFunctionCall","src":"19740:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19723:3:23"},"nodeType":"YulFunctionCall","src":"19723:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19719:3:23"},"nodeType":"YulFunctionCall","src":"19719:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19709:3:23"},"nodeType":"YulFunctionCall","src":"19709:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19755:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"19758:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19751:3:23"},"nodeType":"YulFunctionCall","src":"19751:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19706:2:23"},"nodeType":"YulFunctionCall","src":"19706:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"19698:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19665:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"19671:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"19679:4:23","type":""}],"src":"19603:166:23"},{"body":{"nodeType":"YulBlock","src":"19868:1254:23","statements":[{"nodeType":"YulVariableDeclaration","src":"19878:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19898:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19892:5:23"},"nodeType":"YulFunctionCall","src":"19892:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"19882:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19945:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19947:16:23"},"nodeType":"YulFunctionCall","src":"19947:18:23"},"nodeType":"YulExpressionStatement","src":"19947:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19917:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19933:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"19937:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19929:3:23"},"nodeType":"YulFunctionCall","src":"19929:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"19941:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19925:3:23"},"nodeType":"YulFunctionCall","src":"19925:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19914:2:23"},"nodeType":"YulFunctionCall","src":"19914:30:23"},"nodeType":"YulIf","src":"19911:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20019:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20057:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20051:5:23"},"nodeType":"YulFunctionCall","src":"20051:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"20025:25:23"},"nodeType":"YulFunctionCall","src":"20025:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"20065:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"19976:42:23"},"nodeType":"YulFunctionCall","src":"19976:96:23"},"nodeType":"YulExpressionStatement","src":"19976:96:23"},{"nodeType":"YulVariableDeclaration","src":"20081:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20098:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"20085:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20108:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20127:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"20112:11:23","type":""}]},{"nodeType":"YulAssignment","src":"20140:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20153:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20140:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"20210:655:23","statements":[{"nodeType":"YulVariableDeclaration","src":"20224:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20243:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20255:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20251:3:23"},"nodeType":"YulFunctionCall","src":"20251:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20239:3:23"},"nodeType":"YulFunctionCall","src":"20239:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"20228:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20272:48:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20315:4:23"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"20286:28:23"},"nodeType":"YulFunctionCall","src":"20286:34:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"20276:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20333:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20342:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20337:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"20420:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20445:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20463:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20468:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20459:3:23"},"nodeType":"YulFunctionCall","src":"20459:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20453:5:23"},"nodeType":"YulFunctionCall","src":"20453:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20438:6:23"},"nodeType":"YulFunctionCall","src":"20438:42:23"},"nodeType":"YulExpressionStatement","src":"20438:42:23"},{"nodeType":"YulAssignment","src":"20497:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20511:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"20519:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20507:3:23"},"nodeType":"YulFunctionCall","src":"20507:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20497:6:23"}]},{"nodeType":"YulAssignment","src":"20538:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20555:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20566:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20551:3:23"},"nodeType":"YulFunctionCall","src":"20551:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20538:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20367:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"20370:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20364:2:23"},"nodeType":"YulFunctionCall","src":"20364:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20379:28:23","statements":[{"nodeType":"YulAssignment","src":"20381:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20390:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20393:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20386:3:23"},"nodeType":"YulFunctionCall","src":"20386:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20381:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"20360:3:23","statements":[]},"src":"20356:236:23"},{"body":{"nodeType":"YulBlock","src":"20640:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"20658:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20685:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20690:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20681:3:23"},"nodeType":"YulFunctionCall","src":"20681:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20675:5:23"},"nodeType":"YulFunctionCall","src":"20675:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"20662:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20725:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"20737:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20764:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"20767:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20760:3:23"},"nodeType":"YulFunctionCall","src":"20760:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"20776:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20756:3:23"},"nodeType":"YulFunctionCall","src":"20756:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20786:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20782:3:23"},"nodeType":"YulFunctionCall","src":"20782:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20752:3:23"},"nodeType":"YulFunctionCall","src":"20752:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20748:3:23"},"nodeType":"YulFunctionCall","src":"20748:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20733:3:23"},"nodeType":"YulFunctionCall","src":"20733:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20718:6:23"},"nodeType":"YulFunctionCall","src":"20718:74:23"},"nodeType":"YulExpressionStatement","src":"20718:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"20611:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"20620:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20608:2:23"},"nodeType":"YulFunctionCall","src":"20608:19:23"},"nodeType":"YulIf","src":"20605:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20826:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20840:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"20843:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20836:3:23"},"nodeType":"YulFunctionCall","src":"20836:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"20852:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20832:3:23"},"nodeType":"YulFunctionCall","src":"20832:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20819:6:23"},"nodeType":"YulFunctionCall","src":"20819:36:23"},"nodeType":"YulExpressionStatement","src":"20819:36:23"}]},"nodeType":"YulCase","src":"20203:662:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20208:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"20882:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"20896:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"20909:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20900:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"20945:67:23","statements":[{"nodeType":"YulAssignment","src":"20963:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20982:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20987:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20978:3:23"},"nodeType":"YulFunctionCall","src":"20978:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20972:5:23"},"nodeType":"YulFunctionCall","src":"20972:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20963:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"20926:6:23"},"nodeType":"YulIf","src":"20923:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21032:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21091:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"21098:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"21038:52:23"},"nodeType":"YulFunctionCall","src":"21038:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21025:6:23"},"nodeType":"YulFunctionCall","src":"21025:81:23"},"nodeType":"YulExpressionStatement","src":"21025:81:23"}]},"nodeType":"YulCase","src":"20874:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20183:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"20191:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20180:2:23"},"nodeType":"YulFunctionCall","src":"20180:14:23"},"nodeType":"YulSwitch","src":"20173:943:23"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19853:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"19859:3:23","type":""}],"src":"19774:1348:23"},{"body":{"nodeType":"YulBlock","src":"21176:79:23","statements":[{"nodeType":"YulAssignment","src":"21186:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21198:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"21201:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21194:3:23"},"nodeType":"YulFunctionCall","src":"21194:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21186:4:23"}]},{"body":{"nodeType":"YulBlock","src":"21227:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21229:16:23"},"nodeType":"YulFunctionCall","src":"21229:18:23"},"nodeType":"YulExpressionStatement","src":"21229:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"21218:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"21224:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21215:2:23"},"nodeType":"YulFunctionCall","src":"21215:11:23"},"nodeType":"YulIf","src":"21212:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21158:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"21161:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21167:4:23","type":""}],"src":"21127:128:23"},{"body":{"nodeType":"YulBlock","src":"21292:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21309:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21316:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"21321:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21312:3:23"},"nodeType":"YulFunctionCall","src":"21312:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21302:6:23"},"nodeType":"YulFunctionCall","src":"21302:31:23"},"nodeType":"YulExpressionStatement","src":"21302:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21349:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21352:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21342:6:23"},"nodeType":"YulFunctionCall","src":"21342:15:23"},"nodeType":"YulExpressionStatement","src":"21342:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21373:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21376:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21366:6:23"},"nodeType":"YulFunctionCall","src":"21366:15:23"},"nodeType":"YulExpressionStatement","src":"21366:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21260:127:23"},{"body":{"nodeType":"YulBlock","src":"21483:1335:23","statements":[{"body":{"nodeType":"YulBlock","src":"21510:9:23","statements":[{"nodeType":"YulLeave","src":"21512:5:23"}]},"condition":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21499:4:23"},{"name":"src","nodeType":"YulIdentifier","src":"21505:3:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21496:2:23"},"nodeType":"YulFunctionCall","src":"21496:13:23"},"nodeType":"YulIf","src":"21493:26:23"},{"nodeType":"YulVariableDeclaration","src":"21528:51:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21574:3:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21568:5:23"},"nodeType":"YulFunctionCall","src":"21568:10:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21542:25:23"},"nodeType":"YulFunctionCall","src":"21542:37:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"21532:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"21622:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21624:16:23"},"nodeType":"YulFunctionCall","src":"21624:18:23"},"nodeType":"YulExpressionStatement","src":"21624:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21594:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21610:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"21614:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21606:3:23"},"nodeType":"YulFunctionCall","src":"21606:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"21618:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21602:3:23"},"nodeType":"YulFunctionCall","src":"21602:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21591:2:23"},"nodeType":"YulFunctionCall","src":"21591:30:23"},"nodeType":"YulIf","src":"21588:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21696:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21734:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21728:5:23"},"nodeType":"YulFunctionCall","src":"21728:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21702:25:23"},"nodeType":"YulFunctionCall","src":"21702:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"21742:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"21653:42:23"},"nodeType":"YulFunctionCall","src":"21653:96:23"},"nodeType":"YulExpressionStatement","src":"21653:96:23"},{"nodeType":"YulVariableDeclaration","src":"21758:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"21775:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"21762:9:23","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"21822:739:23","statements":[{"nodeType":"YulVariableDeclaration","src":"21836:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21855:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21867:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21863:3:23"},"nodeType":"YulFunctionCall","src":"21863:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21851:3:23"},"nodeType":"YulFunctionCall","src":"21851:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"21840:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21884:46:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21926:3:23"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"21897:28:23"},"nodeType":"YulFunctionCall","src":"21897:33:23"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"21888:5:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21943:48:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21986:4:23"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"21957:28:23"},"nodeType":"YulFunctionCall","src":"21957:34:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"21947:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22004:18:23","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"22013:9:23"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22008:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"22092:194:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22117:6:23"},{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"22135:5:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22142:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22131:3:23"},"nodeType":"YulFunctionCall","src":"22131:21:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22125:5:23"},"nodeType":"YulFunctionCall","src":"22125:28:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22110:6:23"},"nodeType":"YulFunctionCall","src":"22110:44:23"},"nodeType":"YulExpressionStatement","src":"22110:44:23"},{"nodeType":"YulVariableDeclaration","src":"22171:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"22181:1:23","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22175:2:23","type":""}]},{"nodeType":"YulAssignment","src":"22199:25:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22213:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"22221:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22209:3:23"},"nodeType":"YulFunctionCall","src":"22209:15:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22199:6:23"}]},{"nodeType":"YulAssignment","src":"22241:31:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22258:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"22269:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22254:3:23"},"nodeType":"YulFunctionCall","src":"22254:18:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22241:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22046:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22049:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22043:2:23"},"nodeType":"YulFunctionCall","src":"22043:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22058:21:23","statements":[{"nodeType":"YulAssignment","src":"22060:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22069:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"22072:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22065:3:23"},"nodeType":"YulFunctionCall","src":"22065:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22060:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"22039:3:23","statements":[]},"src":"22035:251:23"},{"body":{"nodeType":"YulBlock","src":"22334:168:23","statements":[{"nodeType":"YulVariableDeclaration","src":"22352:45:23","value":{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"22379:5:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22386:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22375:3:23"},"nodeType":"YulFunctionCall","src":"22375:21:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22369:5:23"},"nodeType":"YulFunctionCall","src":"22369:28:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"22356:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22421:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"22433:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22460:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"22463:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22456:3:23"},"nodeType":"YulFunctionCall","src":"22456:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"22472:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22452:3:23"},"nodeType":"YulFunctionCall","src":"22452:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22482:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22478:3:23"},"nodeType":"YulFunctionCall","src":"22478:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22448:3:23"},"nodeType":"YulFunctionCall","src":"22448:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22444:3:23"},"nodeType":"YulFunctionCall","src":"22444:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22429:3:23"},"nodeType":"YulFunctionCall","src":"22429:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22414:6:23"},"nodeType":"YulFunctionCall","src":"22414:74:23"},"nodeType":"YulExpressionStatement","src":"22414:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"22305:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"22314:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22302:2:23"},"nodeType":"YulFunctionCall","src":"22302:19:23"},"nodeType":"YulIf","src":"22299:203:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22522:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22536:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"22539:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22532:3:23"},"nodeType":"YulFunctionCall","src":"22532:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"22548:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22528:3:23"},"nodeType":"YulFunctionCall","src":"22528:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22515:6:23"},"nodeType":"YulFunctionCall","src":"22515:36:23"},"nodeType":"YulExpressionStatement","src":"22515:36:23"}]},"nodeType":"YulCase","src":"21815:746:23","value":{"kind":"number","nodeType":"YulLiteral","src":"21820:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22578:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"22592:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"22605:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22596:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"22641:67:23","statements":[{"nodeType":"YulAssignment","src":"22659:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22678:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22683:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22674:3:23"},"nodeType":"YulFunctionCall","src":"22674:19:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22668:5:23"},"nodeType":"YulFunctionCall","src":"22668:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22659:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"22622:6:23"},"nodeType":"YulIf","src":"22619:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22728:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22787:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"22794:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"22734:52:23"},"nodeType":"YulFunctionCall","src":"22734:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22721:6:23"},"nodeType":"YulFunctionCall","src":"22721:81:23"},"nodeType":"YulExpressionStatement","src":"22721:81:23"}]},"nodeType":"YulCase","src":"22570:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21795:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"21803:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21792:2:23"},"nodeType":"YulFunctionCall","src":"21792:14:23"},"nodeType":"YulSwitch","src":"21785:1027:23"}]},"name":"copy_byte_array_to_storage_from_t_bytes_storage_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"21468:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"21474:3:23","type":""}],"src":"21392:1426:23"},{"body":{"nodeType":"YulBlock","src":"22870:88:23","statements":[{"body":{"nodeType":"YulBlock","src":"22901:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22903:16:23"},"nodeType":"YulFunctionCall","src":"22903:18:23"},"nodeType":"YulExpressionStatement","src":"22903:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22886:5:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22897:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22893:3:23"},"nodeType":"YulFunctionCall","src":"22893:6:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22883:2:23"},"nodeType":"YulFunctionCall","src":"22883:17:23"},"nodeType":"YulIf","src":"22880:43:23"},{"nodeType":"YulAssignment","src":"22932:20:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22943:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"22950:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22939:3:23"},"nodeType":"YulFunctionCall","src":"22939:13:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22932:3:23"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22852:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22862:3:23","type":""}],"src":"22823:135:23"},{"body":{"nodeType":"YulBlock","src":"23274:557:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23291:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23306:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"23314:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23302:3:23"},"nodeType":"YulFunctionCall","src":"23302:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23284:6:23"},"nodeType":"YulFunctionCall","src":"23284:38:23"},"nodeType":"YulExpressionStatement","src":"23284:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23342:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23353:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23338:3:23"},"nodeType":"YulFunctionCall","src":"23338:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"23358:3:23","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23331:6:23"},"nodeType":"YulFunctionCall","src":"23331:31:23"},"nodeType":"YulExpressionStatement","src":"23331:31:23"},{"nodeType":"YulVariableDeclaration","src":"23371:76:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23411:6:23"},{"name":"value2","nodeType":"YulIdentifier","src":"23419:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23431:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23442:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23427:3:23"},"nodeType":"YulFunctionCall","src":"23427:19:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"23385:25:23"},"nodeType":"YulFunctionCall","src":"23385:62:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"23375:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23467:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23478:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23463:3:23"},"nodeType":"YulFunctionCall","src":"23463:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23487:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23503:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"23508:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23499:3:23"},"nodeType":"YulFunctionCall","src":"23499:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"23512:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23495:3:23"},"nodeType":"YulFunctionCall","src":"23495:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23483:3:23"},"nodeType":"YulFunctionCall","src":"23483:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23456:6:23"},"nodeType":"YulFunctionCall","src":"23456:60:23"},"nodeType":"YulExpressionStatement","src":"23456:60:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23536:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23547:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23532:3:23"},"nodeType":"YulFunctionCall","src":"23532:18:23"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23556:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23572:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"23576:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23568:3:23"},"nodeType":"YulFunctionCall","src":"23568:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"23580:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23564:3:23"},"nodeType":"YulFunctionCall","src":"23564:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23552:3:23"},"nodeType":"YulFunctionCall","src":"23552:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23525:6:23"},"nodeType":"YulFunctionCall","src":"23525:59:23"},"nodeType":"YulExpressionStatement","src":"23525:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23604:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23615:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23600:3:23"},"nodeType":"YulFunctionCall","src":"23600:19:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"23625:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"23633:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23621:3:23"},"nodeType":"YulFunctionCall","src":"23621:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23593:6:23"},"nodeType":"YulFunctionCall","src":"23593:51:23"},"nodeType":"YulExpressionStatement","src":"23593:51:23"},{"nodeType":"YulVariableDeclaration","src":"23653:63:23","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23693:6:23"},{"name":"value6","nodeType":"YulIdentifier","src":"23701:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"23709:6:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"23667:25:23"},"nodeType":"YulFunctionCall","src":"23667:49:23"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"23657:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23736:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23747:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23732:3:23"},"nodeType":"YulFunctionCall","src":"23732:19:23"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"23757:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"23765:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23753:3:23"},"nodeType":"YulFunctionCall","src":"23753:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23725:6:23"},"nodeType":"YulFunctionCall","src":"23725:51:23"},"nodeType":"YulExpressionStatement","src":"23725:51:23"},{"nodeType":"YulAssignment","src":"23785:40:23","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23810:6:23"},{"name":"tail_2","nodeType":"YulIdentifier","src":"23818:6:23"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"23793:16:23"},"nodeType":"YulFunctionCall","src":"23793:32:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23785:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_address_t_uint64_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23187:9:23","type":""},{"name":"value7","nodeType":"YulTypedName","src":"23198:6:23","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23206:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23214:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23222:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23230:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23238:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23246:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23254:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23265:4:23","type":""}],"src":"22963:868:23"},{"body":{"nodeType":"YulBlock","src":"24010:223:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24027:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24038:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24020:6:23"},"nodeType":"YulFunctionCall","src":"24020:21:23"},"nodeType":"YulExpressionStatement","src":"24020:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24061:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24072:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24057:3:23"},"nodeType":"YulFunctionCall","src":"24057:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24077:2:23","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24050:6:23"},"nodeType":"YulFunctionCall","src":"24050:30:23"},"nodeType":"YulExpressionStatement","src":"24050:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24100:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24111:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24096:3:23"},"nodeType":"YulFunctionCall","src":"24096:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073656e64207265656e7472616e63","kind":"string","nodeType":"YulLiteral","src":"24116:34:23","type":"","value":"LayerZeroMock: no send reentranc"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24089:6:23"},"nodeType":"YulFunctionCall","src":"24089:62:23"},"nodeType":"YulExpressionStatement","src":"24089:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24171:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24182:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24167:3:23"},"nodeType":"YulFunctionCall","src":"24167:18:23"},{"hexValue":"79","kind":"string","nodeType":"YulLiteral","src":"24187:3:23","type":"","value":"y"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24160:6:23"},"nodeType":"YulFunctionCall","src":"24160:31:23"},"nodeType":"YulExpressionStatement","src":"24160:31:23"},{"nodeType":"YulAssignment","src":"24200:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24212:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24223:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24208:3:23"},"nodeType":"YulFunctionCall","src":"24208:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24200:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23987:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24001:4:23","type":""}],"src":"23836:397:23"},{"body":{"nodeType":"YulBlock","src":"24412:234:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24429:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24440:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24422:6:23"},"nodeType":"YulFunctionCall","src":"24422:21:23"},"nodeType":"YulExpressionStatement","src":"24422:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24463:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24474:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24459:3:23"},"nodeType":"YulFunctionCall","src":"24459:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24479:2:23","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24452:6:23"},"nodeType":"YulFunctionCall","src":"24452:30:23"},"nodeType":"YulExpressionStatement","src":"24452:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24502:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24513:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24498:3:23"},"nodeType":"YulFunctionCall","src":"24498:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a20696e636f72726563742072656d6f746520","kind":"string","nodeType":"YulLiteral","src":"24518:34:23","type":"","value":"LayerZeroMock: incorrect remote "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24491:6:23"},"nodeType":"YulFunctionCall","src":"24491:62:23"},"nodeType":"YulExpressionStatement","src":"24491:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24573:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24584:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24569:3:23"},"nodeType":"YulFunctionCall","src":"24569:18:23"},{"hexValue":"616464726573732073697a65","kind":"string","nodeType":"YulLiteral","src":"24589:14:23","type":"","value":"address size"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24562:6:23"},"nodeType":"YulFunctionCall","src":"24562:42:23"},"nodeType":"YulExpressionStatement","src":"24562:42:23"},{"nodeType":"YulAssignment","src":"24613:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24625:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24636:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24621:3:23"},"nodeType":"YulFunctionCall","src":"24621:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24613:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24389:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24403:4:23","type":""}],"src":"24238:408:23"},{"body":{"nodeType":"YulBlock","src":"24825:231:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24842:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24853:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24835:6:23"},"nodeType":"YulFunctionCall","src":"24835:21:23"},"nodeType":"YulExpressionStatement","src":"24835:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24876:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24887:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24872:3:23"},"nodeType":"YulFunctionCall","src":"24872:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"24892:2:23","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24865:6:23"},"nodeType":"YulFunctionCall","src":"24865:30:23"},"nodeType":"YulExpressionStatement","src":"24865:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24915:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24926:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24911:3:23"},"nodeType":"YulFunctionCall","src":"24911:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e6174697665","kind":"string","nodeType":"YulLiteral","src":"24931:34:23","type":"","value":"LayerZeroMock: not enough native"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24904:6:23"},"nodeType":"YulFunctionCall","src":"24904:62:23"},"nodeType":"YulExpressionStatement","src":"24904:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24986:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24997:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24982:3:23"},"nodeType":"YulFunctionCall","src":"24982:18:23"},{"hexValue":"20666f722066656573","kind":"string","nodeType":"YulLiteral","src":"25002:11:23","type":"","value":" for fees"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24975:6:23"},"nodeType":"YulFunctionCall","src":"24975:39:23"},"nodeType":"YulExpressionStatement","src":"24975:39:23"},{"nodeType":"YulAssignment","src":"25023:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25035:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25046:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25031:3:23"},"nodeType":"YulFunctionCall","src":"25031:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25023:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24802:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24816:4:23","type":""}],"src":"24651:405:23"},{"body":{"nodeType":"YulBlock","src":"25252:14:23","statements":[{"nodeType":"YulAssignment","src":"25254:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"25261:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25254:3:23"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25236:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25244:3:23","type":""}],"src":"25061:205:23"},{"body":{"nodeType":"YulBlock","src":"25445:181:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25462:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25473:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25455:6:23"},"nodeType":"YulFunctionCall","src":"25455:21:23"},"nodeType":"YulExpressionStatement","src":"25455:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25496:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25507:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25492:3:23"},"nodeType":"YulFunctionCall","src":"25492:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"25512:2:23","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25485:6:23"},"nodeType":"YulFunctionCall","src":"25485:30:23"},"nodeType":"YulExpressionStatement","src":"25485:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25535:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25546:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25531:3:23"},"nodeType":"YulFunctionCall","src":"25531:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a206661696c656420746f20726566756e64","kind":"string","nodeType":"YulLiteral","src":"25551:33:23","type":"","value":"LayerZeroMock: failed to refund"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25524:6:23"},"nodeType":"YulFunctionCall","src":"25524:61:23"},"nodeType":"YulExpressionStatement","src":"25524:61:23"},{"nodeType":"YulAssignment","src":"25594:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25606:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25617:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25602:3:23"},"nodeType":"YulFunctionCall","src":"25602:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25594:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25422:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25436:4:23","type":""}],"src":"25271:355:23"},{"body":{"nodeType":"YulBlock","src":"25902:532:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25919:3:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25932:3:23","type":"","value":"192"},{"name":"value0","nodeType":"YulIdentifier","src":"25937:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25928:3:23"},"nodeType":"YulFunctionCall","src":"25928:16:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25958:3:23","type":"","value":"192"},{"kind":"number","nodeType":"YulLiteral","src":"25963:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25954:3:23"},"nodeType":"YulFunctionCall","src":"25954:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"25967:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25950:3:23"},"nodeType":"YulFunctionCall","src":"25950:19:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25946:3:23"},"nodeType":"YulFunctionCall","src":"25946:24:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25924:3:23"},"nodeType":"YulFunctionCall","src":"25924:47:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25912:6:23"},"nodeType":"YulFunctionCall","src":"25912:60:23"},"nodeType":"YulExpressionStatement","src":"25912:60:23"},{"nodeType":"YulVariableDeclaration","src":"25981:25:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25995:3:23","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"26000:5:23","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25991:3:23"},"nodeType":"YulFunctionCall","src":"25991:15:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25985:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26026:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26031:1:23","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26022:3:23"},"nodeType":"YulFunctionCall","src":"26022:11:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26043:3:23","type":"","value":"240"},{"name":"value1","nodeType":"YulIdentifier","src":"26048:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26039:3:23"},"nodeType":"YulFunctionCall","src":"26039:16:23"},{"name":"_1","nodeType":"YulIdentifier","src":"26057:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26035:3:23"},"nodeType":"YulFunctionCall","src":"26035:25:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26015:6:23"},"nodeType":"YulFunctionCall","src":"26015:46:23"},"nodeType":"YulExpressionStatement","src":"26015:46:23"},{"nodeType":"YulVariableDeclaration","src":"26070:33:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26092:2:23","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"26096:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26088:3:23"},"nodeType":"YulFunctionCall","src":"26088:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"26100:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26084:3:23"},"nodeType":"YulFunctionCall","src":"26084:18:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"26080:3:23"},"nodeType":"YulFunctionCall","src":"26080:23:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"26074:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26123:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26128:2:23","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26119:3:23"},"nodeType":"YulFunctionCall","src":"26119:12:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26141:2:23","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"26145:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26137:3:23"},"nodeType":"YulFunctionCall","src":"26137:15:23"},{"name":"_2","nodeType":"YulIdentifier","src":"26154:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26133:3:23"},"nodeType":"YulFunctionCall","src":"26133:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26112:6:23"},"nodeType":"YulFunctionCall","src":"26112:46:23"},"nodeType":"YulExpressionStatement","src":"26112:46:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26178:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26183:2:23","type":"","value":"30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26174:3:23"},"nodeType":"YulFunctionCall","src":"26174:12:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26196:3:23","type":"","value":"240"},{"name":"value3","nodeType":"YulIdentifier","src":"26201:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26192:3:23"},"nodeType":"YulFunctionCall","src":"26192:16:23"},{"name":"_1","nodeType":"YulIdentifier","src":"26210:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26188:3:23"},"nodeType":"YulFunctionCall","src":"26188:25:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26167:6:23"},"nodeType":"YulFunctionCall","src":"26167:47:23"},"nodeType":"YulExpressionStatement","src":"26167:47:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26234:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26239:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26230:3:23"},"nodeType":"YulFunctionCall","src":"26230:12:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26252:2:23","type":"","value":"96"},{"name":"value4","nodeType":"YulIdentifier","src":"26256:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26248:3:23"},"nodeType":"YulFunctionCall","src":"26248:15:23"},{"name":"_2","nodeType":"YulIdentifier","src":"26265:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26244:3:23"},"nodeType":"YulFunctionCall","src":"26244:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26223:6:23"},"nodeType":"YulFunctionCall","src":"26223:46:23"},"nodeType":"YulExpressionStatement","src":"26223:46:23"},{"nodeType":"YulVariableDeclaration","src":"26278:27:23","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"26298:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26292:5:23"},"nodeType":"YulFunctionCall","src":"26292:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26282:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"26353:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"26361:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26349:3:23"},"nodeType":"YulFunctionCall","src":"26349:15:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26370:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26375:2:23","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26366:3:23"},"nodeType":"YulFunctionCall","src":"26366:12:23"},{"name":"length","nodeType":"YulIdentifier","src":"26380:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26314:34:23"},"nodeType":"YulFunctionCall","src":"26314:73:23"},"nodeType":"YulExpressionStatement","src":"26314:73:23"},{"nodeType":"YulAssignment","src":"26396:32:23","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26411:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"26416:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26407:3:23"},"nodeType":"YulFunctionCall","src":"26407:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"26425:2:23","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26403:3:23"},"nodeType":"YulFunctionCall","src":"26403:25:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26396:3:23"}]}]},"name":"abi_encode_tuple_packed_t_uint64_t_uint16_t_address_t_uint16_t_address_t_bytes_memory_ptr__to_t_uint64_t_uint16_t_address_t_uint16_t_address_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25838:3:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"25843:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"25851:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25859:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25867:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25875:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25883:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25894:3:23","type":""}],"src":"25631:803:23"},{"body":{"nodeType":"YulBlock","src":"26613:245:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26630:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26641:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26623:6:23"},"nodeType":"YulFunctionCall","src":"26623:21:23"},"nodeType":"YulExpressionStatement","src":"26623:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26664:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26675:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26660:3:23"},"nodeType":"YulFunctionCall","src":"26660:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"26680:2:23","type":"","value":"55"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26653:6:23"},"nodeType":"YulFunctionCall","src":"26653:30:23"},"nodeType":"YulExpressionStatement","src":"26653:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26703:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26714:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26699:3:23"},"nodeType":"YulFunctionCall","src":"26699:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c61796572","kind":"string","nodeType":"YulLiteral","src":"26719:34:23","type":"","value":"LayerZeroMock: destination Layer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26692:6:23"},"nodeType":"YulFunctionCall","src":"26692:62:23"},"nodeType":"YulExpressionStatement","src":"26692:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26774:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26785:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26770:3:23"},"nodeType":"YulFunctionCall","src":"26770:18:23"},{"hexValue":"5a65726f20456e64706f696e74206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"26790:25:23","type":"","value":"Zero Endpoint not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26763:6:23"},"nodeType":"YulFunctionCall","src":"26763:53:23"},"nodeType":"YulExpressionStatement","src":"26763:53:23"},{"nodeType":"YulAssignment","src":"26825:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26837:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26848:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26833:3:23"},"nodeType":"YulFunctionCall","src":"26833:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26825:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26590:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26604:4:23","type":""}],"src":"26439:419:23"},{"body":{"nodeType":"YulBlock","src":"27010:178:23","statements":[{"nodeType":"YulVariableDeclaration","src":"27020:33:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27042:2:23","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"27046:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27038:3:23"},"nodeType":"YulFunctionCall","src":"27038:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"27050:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27034:3:23"},"nodeType":"YulFunctionCall","src":"27034:18:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27030:3:23"},"nodeType":"YulFunctionCall","src":"27030:23:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27024:2:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27069:3:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27082:2:23","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"27086:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27078:3:23"},"nodeType":"YulFunctionCall","src":"27078:15:23"},{"name":"_1","nodeType":"YulIdentifier","src":"27095:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27074:3:23"},"nodeType":"YulFunctionCall","src":"27074:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27062:6:23"},"nodeType":"YulFunctionCall","src":"27062:37:23"},"nodeType":"YulExpressionStatement","src":"27062:37:23"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27119:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27124:2:23","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27115:3:23"},"nodeType":"YulFunctionCall","src":"27115:12:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27137:2:23","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"27141:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27133:3:23"},"nodeType":"YulFunctionCall","src":"27133:15:23"},{"name":"_1","nodeType":"YulIdentifier","src":"27150:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27129:3:23"},"nodeType":"YulFunctionCall","src":"27129:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27108:6:23"},"nodeType":"YulFunctionCall","src":"27108:46:23"},"nodeType":"YulExpressionStatement","src":"27108:46:23"},{"nodeType":"YulAssignment","src":"27163:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27174:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27179:2:23","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27170:3:23"},"nodeType":"YulFunctionCall","src":"27170:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27163:3:23"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26978:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26983:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26991:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27002:3:23","type":""}],"src":"26863:325:23"},{"body":{"nodeType":"YulBlock","src":"27466:452:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27483:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27498:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"27506:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27494:3:23"},"nodeType":"YulFunctionCall","src":"27494:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27476:6:23"},"nodeType":"YulFunctionCall","src":"27476:38:23"},"nodeType":"YulExpressionStatement","src":"27476:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27534:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27545:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27530:3:23"},"nodeType":"YulFunctionCall","src":"27530:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"27550:3:23","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27523:6:23"},"nodeType":"YulFunctionCall","src":"27523:31:23"},"nodeType":"YulExpressionStatement","src":"27523:31:23"},{"nodeType":"YulVariableDeclaration","src":"27563:59:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27594:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27606:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27617:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27602:3:23"},"nodeType":"YulFunctionCall","src":"27602:19:23"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"27577:16:23"},"nodeType":"YulFunctionCall","src":"27577:45:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"27567:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27642:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27653:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27638:3:23"},"nodeType":"YulFunctionCall","src":"27638:18:23"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27662:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27678:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"27683:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27674:3:23"},"nodeType":"YulFunctionCall","src":"27674:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"27687:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27670:3:23"},"nodeType":"YulFunctionCall","src":"27670:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27658:3:23"},"nodeType":"YulFunctionCall","src":"27658:32:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27631:6:23"},"nodeType":"YulFunctionCall","src":"27631:60:23"},"nodeType":"YulExpressionStatement","src":"27631:60:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27711:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27722:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27707:3:23"},"nodeType":"YulFunctionCall","src":"27707:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27731:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27747:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"27751:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27743:3:23"},"nodeType":"YulFunctionCall","src":"27743:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"27755:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27739:3:23"},"nodeType":"YulFunctionCall","src":"27739:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27727:3:23"},"nodeType":"YulFunctionCall","src":"27727:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27700:6:23"},"nodeType":"YulFunctionCall","src":"27700:59:23"},"nodeType":"YulExpressionStatement","src":"27700:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27779:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27790:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27775:3:23"},"nodeType":"YulFunctionCall","src":"27775:19:23"},{"name":"value4","nodeType":"YulIdentifier","src":"27796:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27768:6:23"},"nodeType":"YulFunctionCall","src":"27768:35:23"},"nodeType":"YulExpressionStatement","src":"27768:35:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27823:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27834:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27819:3:23"},"nodeType":"YulFunctionCall","src":"27819:19:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"27844:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"27852:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27840:3:23"},"nodeType":"YulFunctionCall","src":"27840:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27812:6:23"},"nodeType":"YulFunctionCall","src":"27812:51:23"},"nodeType":"YulExpressionStatement","src":"27812:51:23"},{"nodeType":"YulAssignment","src":"27872:40:23","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"27897:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"27905:6:23"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"27880:16:23"},"nodeType":"YulFunctionCall","src":"27880:32:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27872:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27395:9:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"27406:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27414:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27422:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27430:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27438:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27446:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27457:4:23","type":""}],"src":"27193:725:23"},{"body":{"nodeType":"YulBlock","src":"28097:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28114:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28125:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28107:6:23"},"nodeType":"YulFunctionCall","src":"28107:21:23"},"nodeType":"YulExpressionStatement","src":"28107:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28148:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28159:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28144:3:23"},"nodeType":"YulFunctionCall","src":"28144:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"28164:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28137:6:23"},"nodeType":"YulFunctionCall","src":"28137:30:23"},"nodeType":"YulExpressionStatement","src":"28137:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28187:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28198:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28183:3:23"},"nodeType":"YulFunctionCall","src":"28183:18:23"},{"hexValue":"4c617965725a65726f4d6f636b3a206473744e6174697665416d7420746f6f20","kind":"string","nodeType":"YulLiteral","src":"28203:34:23","type":"","value":"LayerZeroMock: dstNativeAmt too "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28176:6:23"},"nodeType":"YulFunctionCall","src":"28176:62:23"},"nodeType":"YulExpressionStatement","src":"28176:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28258:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28269:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28254:3:23"},"nodeType":"YulFunctionCall","src":"28254:18:23"},{"hexValue":"6c6172676520","kind":"string","nodeType":"YulLiteral","src":"28274:8:23","type":"","value":"large "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28247:6:23"},"nodeType":"YulFunctionCall","src":"28247:36:23"},"nodeType":"YulExpressionStatement","src":"28247:36:23"},{"nodeType":"YulAssignment","src":"28292:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28304:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28315:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28300:3:23"},"nodeType":"YulFunctionCall","src":"28300:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28292:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28074:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28088:4:23","type":""}],"src":"27923:402:23"},{"body":{"nodeType":"YulBlock","src":"28382:116:23","statements":[{"nodeType":"YulAssignment","src":"28392:20:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28407:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"28410:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28403:3:23"},"nodeType":"YulFunctionCall","src":"28403:9:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"28392:7:23"}]},{"body":{"nodeType":"YulBlock","src":"28470:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28472:16:23"},"nodeType":"YulFunctionCall","src":"28472:18:23"},"nodeType":"YulExpressionStatement","src":"28472:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28441:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28434:6:23"},"nodeType":"YulFunctionCall","src":"28434:9:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28448:1:23"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"28455:7:23"},{"name":"x","nodeType":"YulIdentifier","src":"28464:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28451:3:23"},"nodeType":"YulFunctionCall","src":"28451:15:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28445:2:23"},"nodeType":"YulFunctionCall","src":"28445:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28431:2:23"},"nodeType":"YulFunctionCall","src":"28431:37:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28424:6:23"},"nodeType":"YulFunctionCall","src":"28424:45:23"},"nodeType":"YulIf","src":"28421:71:23"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28361:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"28364:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"28370:7:23","type":""}],"src":"28330:168:23"},{"body":{"nodeType":"YulBlock","src":"28535:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28552:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28559:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"28564:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28555:3:23"},"nodeType":"YulFunctionCall","src":"28555:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28545:6:23"},"nodeType":"YulFunctionCall","src":"28545:31:23"},"nodeType":"YulExpressionStatement","src":"28545:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28592:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28595:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28585:6:23"},"nodeType":"YulFunctionCall","src":"28585:15:23"},"nodeType":"YulExpressionStatement","src":"28585:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28616:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28619:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28609:6:23"},"nodeType":"YulFunctionCall","src":"28609:15:23"},"nodeType":"YulExpressionStatement","src":"28609:15:23"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"28503:127:23"},{"body":{"nodeType":"YulBlock","src":"28681:74:23","statements":[{"body":{"nodeType":"YulBlock","src":"28704:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"28706:16:23"},"nodeType":"YulFunctionCall","src":"28706:18:23"},"nodeType":"YulExpressionStatement","src":"28706:18:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28701:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28694:6:23"},"nodeType":"YulFunctionCall","src":"28694:9:23"},"nodeType":"YulIf","src":"28691:35:23"},{"nodeType":"YulAssignment","src":"28735:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28744:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"28747:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28740:3:23"},"nodeType":"YulFunctionCall","src":"28740:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28735:1:23"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28666:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"28669:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"28675:1:23","type":""}],"src":"28635:120:23"},{"body":{"nodeType":"YulBlock","src":"28812:207:23","statements":[{"nodeType":"YulVariableDeclaration","src":"28822:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28840:3:23","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"28845:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28836:3:23"},"nodeType":"YulFunctionCall","src":"28836:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"28849:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28832:3:23"},"nodeType":"YulFunctionCall","src":"28832:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"28826:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28860:46:23","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28887:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"28890:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28883:3:23"},"nodeType":"YulFunctionCall","src":"28883:10:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28899:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"28902:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28895:3:23"},"nodeType":"YulFunctionCall","src":"28895:10:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28879:3:23"},"nodeType":"YulFunctionCall","src":"28879:27:23"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"28864:11:23","type":""}]},{"nodeType":"YulAssignment","src":"28915:31:23","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"28930:11:23"},{"name":"_1","nodeType":"YulIdentifier","src":"28943:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28926:3:23"},"nodeType":"YulFunctionCall","src":"28926:20:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"28915:7:23"}]},{"body":{"nodeType":"YulBlock","src":"28991:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28993:16:23"},"nodeType":"YulFunctionCall","src":"28993:18:23"},"nodeType":"YulExpressionStatement","src":"28993:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"28968:7:23"},{"name":"product_raw","nodeType":"YulIdentifier","src":"28977:11:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28965:2:23"},"nodeType":"YulFunctionCall","src":"28965:24:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28958:6:23"},"nodeType":"YulFunctionCall","src":"28958:32:23"},"nodeType":"YulIf","src":"28955:58:23"}]},"name":"checked_mul_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28791:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"28794:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"28800:7:23","type":""}],"src":"28760:259:23"},{"body":{"nodeType":"YulBlock","src":"29070:155:23","statements":[{"nodeType":"YulVariableDeclaration","src":"29080:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29098:3:23","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"29103:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29094:3:23"},"nodeType":"YulFunctionCall","src":"29094:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"29107:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29090:3:23"},"nodeType":"YulFunctionCall","src":"29090:19:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29084:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29118:21:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29133:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"29136:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29129:3:23"},"nodeType":"YulFunctionCall","src":"29129:10:23"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"29122:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"29163:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"29165:16:23"},"nodeType":"YulFunctionCall","src":"29165:18:23"},"nodeType":"YulExpressionStatement","src":"29165:18:23"}]},"condition":{"arguments":[{"name":"y_1","nodeType":"YulIdentifier","src":"29158:3:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29151:6:23"},"nodeType":"YulFunctionCall","src":"29151:11:23"},"nodeType":"YulIf","src":"29148:37:23"},{"nodeType":"YulAssignment","src":"29194:25:23","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29207:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"29210:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29203:3:23"},"nodeType":"YulFunctionCall","src":"29203:10:23"},{"name":"y_1","nodeType":"YulIdentifier","src":"29215:3:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29199:3:23"},"nodeType":"YulFunctionCall","src":"29199:20:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"29194:1:23"}]}]},"name":"checked_div_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29055:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"29058:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"29064:1:23","type":""}],"src":"29024:201:23"},{"body":{"nodeType":"YulBlock","src":"29457:355:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29474:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29489:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"29497:6:23","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29485:3:23"},"nodeType":"YulFunctionCall","src":"29485:19:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29467:6:23"},"nodeType":"YulFunctionCall","src":"29467:38:23"},"nodeType":"YulExpressionStatement","src":"29467:38:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29525:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29536:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29521:3:23"},"nodeType":"YulFunctionCall","src":"29521:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"29541:3:23","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29514:6:23"},"nodeType":"YulFunctionCall","src":"29514:31:23"},"nodeType":"YulExpressionStatement","src":"29514:31:23"},{"nodeType":"YulVariableDeclaration","src":"29554:76:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29594:6:23"},{"name":"value2","nodeType":"YulIdentifier","src":"29602:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29614:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29625:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29610:3:23"},"nodeType":"YulFunctionCall","src":"29610:19:23"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"29568:25:23"},"nodeType":"YulFunctionCall","src":"29568:62:23"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"29558:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29650:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29661:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29646:3:23"},"nodeType":"YulFunctionCall","src":"29646:18:23"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"29670:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29686:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"29690:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29682:3:23"},"nodeType":"YulFunctionCall","src":"29682:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"29694:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29678:3:23"},"nodeType":"YulFunctionCall","src":"29678:18:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29666:3:23"},"nodeType":"YulFunctionCall","src":"29666:31:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29639:6:23"},"nodeType":"YulFunctionCall","src":"29639:59:23"},"nodeType":"YulExpressionStatement","src":"29639:59:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29718:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29729:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29714:3:23"},"nodeType":"YulFunctionCall","src":"29714:18:23"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"29738:6:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"29746:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29734:3:23"},"nodeType":"YulFunctionCall","src":"29734:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29707:6:23"},"nodeType":"YulFunctionCall","src":"29707:50:23"},"nodeType":"YulExpressionStatement","src":"29707:50:23"},{"nodeType":"YulAssignment","src":"29766:40:23","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"29791:6:23"},{"name":"tail_1","nodeType":"YulIdentifier","src":"29799:6:23"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"29774:16:23"},"nodeType":"YulFunctionCall","src":"29774:32:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29766:4:23"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29394:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29405:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29413:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29421:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29429:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29437:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29448:4:23","type":""}],"src":"29230:582:23"},{"body":{"nodeType":"YulBlock","src":"29849:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29866:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29873:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"29878:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29869:3:23"},"nodeType":"YulFunctionCall","src":"29869:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29859:6:23"},"nodeType":"YulFunctionCall","src":"29859:31:23"},"nodeType":"YulExpressionStatement","src":"29859:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29906:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29909:4:23","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29899:6:23"},"nodeType":"YulFunctionCall","src":"29899:15:23"},"nodeType":"YulExpressionStatement","src":"29899:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29930:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29933:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29923:6:23"},"nodeType":"YulFunctionCall","src":"29923:15:23"},"nodeType":"YulExpressionStatement","src":"29923:15:23"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"29817:127:23"},{"body":{"nodeType":"YulBlock","src":"30123:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30140:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30151:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30133:6:23"},"nodeType":"YulFunctionCall","src":"30133:21:23"},"nodeType":"YulExpressionStatement","src":"30133:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30174:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30185:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30170:3:23"},"nodeType":"YulFunctionCall","src":"30170:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"30190:2:23","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30163:6:23"},"nodeType":"YulFunctionCall","src":"30163:30:23"},"nodeType":"YulExpressionStatement","src":"30163:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30213:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30224:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30209:3:23"},"nodeType":"YulFunctionCall","src":"30209:18:23"},{"hexValue":"496e76616c69642061646170746572506172616d73","kind":"string","nodeType":"YulLiteral","src":"30229:23:23","type":"","value":"Invalid adapterParams"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30202:6:23"},"nodeType":"YulFunctionCall","src":"30202:51:23"},"nodeType":"YulExpressionStatement","src":"30202:51:23"},{"nodeType":"YulAssignment","src":"30262:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30274:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30285:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30270:3:23"},"nodeType":"YulFunctionCall","src":"30270:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30262:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30100:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30114:4:23","type":""}],"src":"29949:345:23"},{"body":{"nodeType":"YulBlock","src":"30473:168:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30490:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30501:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30483:6:23"},"nodeType":"YulFunctionCall","src":"30483:21:23"},"nodeType":"YulExpressionStatement","src":"30483:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30524:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30535:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30520:3:23"},"nodeType":"YulFunctionCall","src":"30520:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"30540:2:23","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30513:6:23"},"nodeType":"YulFunctionCall","src":"30513:30:23"},"nodeType":"YulExpressionStatement","src":"30513:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30563:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30574:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30559:3:23"},"nodeType":"YulFunctionCall","src":"30559:18:23"},{"hexValue":"556e737570706f7274656420747854797065","kind":"string","nodeType":"YulLiteral","src":"30579:20:23","type":"","value":"Unsupported txType"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30552:6:23"},"nodeType":"YulFunctionCall","src":"30552:48:23"},"nodeType":"YulExpressionStatement","src":"30552:48:23"},{"nodeType":"YulAssignment","src":"30609:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30621:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30632:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30617:3:23"},"nodeType":"YulFunctionCall","src":"30617:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30609:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30450:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30464:4:23","type":""}],"src":"30299:342:23"},{"body":{"nodeType":"YulBlock","src":"30820:161:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30837:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30848:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30830:6:23"},"nodeType":"YulFunctionCall","src":"30830:21:23"},"nodeType":"YulExpressionStatement","src":"30830:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30871:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30882:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30867:3:23"},"nodeType":"YulFunctionCall","src":"30867:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"30887:2:23","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30860:6:23"},"nodeType":"YulFunctionCall","src":"30860:30:23"},"nodeType":"YulExpressionStatement","src":"30860:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30910:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30921:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30906:3:23"},"nodeType":"YulFunctionCall","src":"30906:18:23"},{"hexValue":"47617320746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"30926:13:23","type":"","value":"Gas too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30899:6:23"},"nodeType":"YulFunctionCall","src":"30899:41:23"},"nodeType":"YulExpressionStatement","src":"30899:41:23"},{"nodeType":"YulAssignment","src":"30949:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30961:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30972:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30957:3:23"},"nodeType":"YulFunctionCall","src":"30957:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30949:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30797:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30811:4:23","type":""}],"src":"30646:335:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_uint64_t_bytes_memory_ptr__to_t_address_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes(value2, add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(128, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint128t_uint128t_uint128t_uint64t_uint64(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n        value1 := abi_decode_uint128(add(headStart, 32))\n        value2 := abi_decode_uint128(add(headStart, 64))\n        value3 := abi_decode_uint64(add(headStart, 96))\n        value4 := abi_decode_uint64(add(headStart, 128))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_addresst_bytes_memory_ptrt_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := abi_decode_bool(add(headStart, 96))\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint64_t_address_t_bytes32__to_t_uint64_t_address_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint16t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__to_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(128, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        let _2 := sub(shl(64, 1), 1)\n        mstore(add(headStart, 96), and(value3, _2))\n        mstore(add(headStart, 128), and(value4, _2))\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_addresst_uint64t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value3 := value\n        value4 := abi_decode_uint64(add(headStart, 96))\n        value5 := calldataload(add(headStart, 128))\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_bytes_calldata_ptrt_address_payablet_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value4 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value5 := value_1\n        let offset_2 := calldataload(add(headStart, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value6 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LayerZeroMock: no stored payload\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LayerZeroMock: invalid caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LayerZeroMock: invalid payload\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes_calldata(value4, value5, tail_1)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_address__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"LayerZeroMock: no receive reentr\")\n        mstore(add(headStart, 96), \"ancy\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint64(value) -> ret\n    {\n        let _1 := sub(shl(64, 1), 1)\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"LayerZeroMock: wrong nonce\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_storage_to_t_bytes_storage(slot, src)\n    {\n        if eq(slot, src) { leave }\n        let newLen := extract_byte_array_length(sload(src))\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let src_1 := array_dataslot_bytes_storage(src)\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, sload(add(src_1, srcOffset)))\n                let _1 := 1\n                dstPtr := add(dstPtr, _1)\n                srcOffset := add(srcOffset, _1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := sload(add(src_1, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_address_t_uint64_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 192))\n        mstore(add(headStart, 64), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value4, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes_calldata(value5, value6, tail_1)\n        mstore(add(headStart, 160), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value7, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"LayerZeroMock: no send reentranc\")\n        mstore(add(headStart, 96), \"y\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"LayerZeroMock: incorrect remote \")\n        mstore(add(headStart, 96), \"address size\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"LayerZeroMock: not enough native\")\n        mstore(add(headStart, 96), \" for fees\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"LayerZeroMock: failed to refund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint64_t_uint16_t_address_t_uint16_t_address_t_bytes_memory_ptr__to_t_uint64_t_uint16_t_address_t_uint16_t_address_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(192, value0), not(sub(shl(192, 1), 1))))\n        let _1 := shl(240, 65535)\n        mstore(add(pos, 8), and(shl(240, value1), _1))\n        let _2 := not(sub(shl(96, 1), 1))\n        mstore(add(pos, 10), and(shl(96, value2), _2))\n        mstore(add(pos, 30), and(shl(240, value3), _1))\n        mstore(add(pos, 32), and(shl(96, value4), _2))\n        let length := mload(value5)\n        copy_memory_to_memory_with_cleanup(add(value5, 32), add(pos, 52), length)\n        end := add(add(pos, length), 52)\n    }\n    function abi_encode_tuple_t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"LayerZeroMock: destination Layer\")\n        mstore(add(headStart, 96), \"Zero Endpoint not found\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 192))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value5, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LayerZeroMock: dstNativeAmt too \")\n        mstore(add(headStart, 96), \"large \")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint128(x, y) -> product\n    {\n        let _1 := sub(shl(128, 1), 1)\n        let product_raw := mul(and(x, _1), and(y, _1))\n        product := and(product_raw, _1)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function checked_div_t_uint128(x, y) -> r\n    {\n        let _1 := sub(shl(128, 1), 1)\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value4, tail_1)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid adapterParams\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Unsupported txType\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Gas too low\")\n        tail := add(headStart, 96)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D3277F EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x96568F6 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xEAF6EA6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x12A9EE6B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x240DE277 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x272BD384 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x2C365E25 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x3408E470 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x3E0DD83E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x40A7BB10 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x6FBAC4B5 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x71BA2FD6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x76A386DC EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x7A145748 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x907C5E7E EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x9924D33B EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x9C729DA1 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xAAFF5F16 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xB2086499 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xB2304574 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xB6D9EF60 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xC08F15A1 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xC2FA4813 EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xC5803100 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xC81B383A EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0xCA066B35 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x772 JUMPI DUP1 PUSH4 0xD23104F1 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0xDA1A7C9A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xDB14F305 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xE97A448A EQ PUSH2 0x7D1 JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0xF9CD3CEB EQ PUSH2 0x81F JUMPI DUP1 PUSH4 0xFBBA623B EQ PUSH2 0x843 JUMPI DUP1 PUSH4 0xFDC07C70 EQ PUSH2 0x863 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1D5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x214E JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x241C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP5 DUP7 AND DUP6 MUL OR PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xFFFF AND PUSH2 0x230 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x263 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x263 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST POP ADDRESS SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x44D CALLDATASIZE PUSH1 0x4 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2575 JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x54F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND SWAP3 SWAP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x2575 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x262C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x69A CALLDATASIZE PUSH1 0x4 PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x6BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2660 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x267E JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x716 CALLDATASIZE PUSH1 0x4 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0x736 CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x78D CALLDATASIZE PUSH1 0x4 PUSH2 0x27F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x230 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x263 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x835 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x85E CALLDATASIZE PUSH1 0x4 PUSH2 0x28A8 JUMP JUMPDEST PUSH2 0x1BA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x87E CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x8A9 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP7 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP5 POP SWAP2 SWAP3 POP PUSH2 0x943 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96F SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x991 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x9D3 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FF SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD GT PUSH2 0xAF1 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xA6E SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9A SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xAF3 JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB06 DUP10 PUSH1 0x1 DUP11 DUP11 MLOAD DUP7 PUSH2 0x1BFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB17 DUP8 DUP4 PUSH1 0x6 SLOAD PUSH2 0x1D96 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0xB27 JUMPI DUP1 SWAP5 POP DUP5 PUSH2 0xB2C JUMP JUMPDEST DUP1 SWAP4 POP DUP4 JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0xB3A DUP4 DUP8 PUSH2 0x2944 JUMP JUMPDEST PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x2944 JUMP JUMPDEST SWAP5 POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xB76 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x2957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C69642063616C6C6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0x23D2684F396E92A6E2FF2D16F98E6FEA00D50CB27A64B531BC0748F730211F98 SWAP1 PUSH2 0xC5B SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x78D DUP5 DUP5 DUP5 PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xCC9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x2957 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 EQ DUP1 ISZERO PUSH2 0xD2F JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD25 SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C6964207061796C6F61640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0xDC5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH3 0x1D3567 SWAP1 PUSH2 0xE11 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP8 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x612434F39581C8E7D99746C9C20C6EB0CE8C0EB99F007C5719D620841370957D DUP9 DUP9 DUP9 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE7A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2072656365697665207265656E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6379 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x200 OR SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xF24 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP11 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xF5F SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF85 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A69 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x4C617965725A65726F4D6F636B3A2077726F6E67206E6F6E6365 PUSH1 0x30 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x12D7 JUMPI PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1032 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP2 MSTORE POP DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1268 JUMPI DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x1113 SWAP1 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP POP POP PUSH1 0x0 JUMPDEST DUP3 SLOAD PUSH2 0x1127 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x11ED JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1140 JUMPI PUSH2 0x1140 PUSH2 0x2BC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP4 DUP3 PUSH1 0x1 PUSH2 0x115C SWAP2 SWAP1 PUSH2 0x2944 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x116C JUMPI PUSH2 0x116C PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD SWAP1 PUSH2 0x11D6 SWAP1 DUP5 ADD DUP3 PUSH2 0x2BDD JUMP JUMPDEST POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x11E5 SWAP1 PUSH2 0x2CB1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1119 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1202 JUMPI PUSH2 0x1202 PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x125F SWAP1 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x12D0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x12CC SWAP1 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP POP POP JUMPDEST POP POP PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1324 SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x1353 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD DUP7 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR OR DUP2 SSTORE SWAP4 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x13DA SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 PUSH2 0x2CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH3 0x1D3567 SWAP1 DUP7 SWAP1 PUSH2 0x1429 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x1455 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1586 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14C5 SWAP3 SWAP2 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x14F4 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1570 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP11 SWAP1 PUSH2 0x2CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073656E64207265656E7472616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP6 MLOAD PUSH1 0x28 EQ PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E636F72726563742072656D6F746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616464726573732073697A65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP1 MLOAD DUP8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x170D JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0x168A SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16B6 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x170F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1760 DUP4 CALLER DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO ISZERO DUP7 PUSH2 0xA54 JUMP JUMPDEST POP SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x17C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F7420656E6F756768206E6174697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20666F722066656573 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 PUSH2 0x17F9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A69 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE SWAP1 POP PUSH1 0x0 DUP3 CALLVALUE PUSH2 0x182C SWAP2 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x18D9 JUMPI PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1881 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x18D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206661696C656420746F20726566756E6400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x18E7 DUP8 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP DUP2 ISZERO PUSH2 0x1989 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1942 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1987 JUMPI PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x2C7A964CA3DE5EC1D42D9822F9BBD0EB142A59CC9F855E9D93813B773192C7A3 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP16 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP15 DUP15 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP6 SWAP7 POP SWAP1 SWAP5 PUSH2 0x19F1 SWAP5 POP DUP13 SWAP4 POP PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP2 POP CALLER SWAP1 DUP16 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x20 ADD PUSH2 0x2D3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH32 0xE9BDED5F24A4168E4F3BF44E00298C993B22376AAD8C58C7DDA9718A54CBEA82 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1A31 SWAP2 SWAP1 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B87 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A2064657374696E6174696F6E204C61796572 PUSH1 0x44 DUP3 ADD MSTORE PUSH23 0x16995C9BC8115B991C1BDA5B9D081B9BDD08199BDD5B99 PUSH1 0x4A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP7 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC2FA4813 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP4 DUP9 DUP15 DUP14 DUP11 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B52 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH2 0x1BB4 DUP3 DUP3 PUSH2 0x2AFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1BDB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0C DUP6 PUSH2 0x1FCA JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x1C98 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 GT ISZERO PUSH2 0x1C8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206473744E6174697665416D7420746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3630B933B29 PUSH1 0xD5 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x1C95 DUP3 DUP3 PUSH2 0x2944 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1CB9 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2944 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1CD6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2E0D JUMP JUMPDEST SWAP1 POP PUSH2 0x1CE2 DUP2 DUP4 PUSH2 0x2944 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH5 0x2540BE400 SWAP1 PUSH2 0x1D05 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH2 0x2E0D JUMP JUMPDEST PUSH2 0x1D0F SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH5 0x2540BE400 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH2 0x1D52 SWAP3 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x2E4E JUMP JUMPDEST PUSH2 0x1D66 SWAP2 SWAP1 PUSH2 0x2E79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH2 0x1D7B DUP2 DUP12 PUSH2 0x2E0D JUMP JUMPDEST PUSH2 0x1D85 SWAP1 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO PUSH2 0x1DA7 JUMPI POP PUSH1 0x4 SLOAD PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1DB8 DUP5 DUP7 PUSH2 0x2944 JUMP JUMPDEST PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x2E0D JUMP JUMPDEST PUSH2 0x1DCC SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST SWAP1 POP PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1DF6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x28E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x78D JUMPI DUP1 SLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH2 0x1E21 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E31 JUMPI PUSH2 0x1E31 PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x1E8A SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EB6 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EE6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1D3567 DUP7 DUP7 DUP7 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x1F8F JUMPI PUSH2 0x1F8F PUSH2 0x2EEA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE SWAP1 PUSH2 0x1FC0 PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x20E9 JUMP JUMPDEST POP POP SWAP1 SSTORE POP PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x22 EQ DUP1 PUSH2 0x1FE1 JUMPI POP PUSH1 0x42 DUP6 MLOAD GT JUMPDEST PUSH2 0x2025 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646170746572506172616D73 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD MLOAD SWAP4 POP PUSH1 0x22 DUP6 ADD MLOAD SWAP3 POP DUP4 PUSH2 0xFFFF AND PUSH1 0x1 EQ DUP1 PUSH2 0x204A JUMPI POP DUP4 PUSH2 0xFFFF AND PUSH1 0x2 EQ JUMPDEST PUSH2 0x208B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E737570706F7274656420747854797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x20C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x47617320746F6F206C6F77 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA9 JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x20E2 JUMPI POP POP PUSH1 0x42 DUP4 ADD MLOAD PUSH1 0x56 DUP5 ADD MLOAD JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x20F5 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2105 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2133 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x211F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP3 PUSH2 0x2137 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8C2 DUP2 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x21AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x21DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2201 DUP5 PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x221C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2228 DUP7 DUP3 DUP8 ADD PUSH2 0x219B JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x225C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2276 JUMPI PUSH2 0x2276 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x229E JUMPI PUSH2 0x229E PUSH2 0x2235 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x22B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22F5 DUP5 PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x231C DUP7 DUP3 DUP8 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2348 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2330 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2369 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x232D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x23B0 SWAP1 DUP4 ADD DUP5 PUSH2 0x2351 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2351 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x243D DUP7 PUSH2 0x23EE JUMP JUMPDEST SWAP5 POP PUSH2 0x244B PUSH1 0x20 DUP8 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP4 POP PUSH2 0x2459 PUSH1 0x40 DUP8 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP3 POP PUSH2 0x2467 PUSH1 0x60 DUP8 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP2 POP PUSH2 0x2475 PUSH1 0x80 DUP8 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B2 DUP7 PUSH2 0x2137 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x24C2 DUP2 PUSH2 0x2169 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x24DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24EA DUP10 DUP4 DUP11 ADD PUSH2 0x224B JUMP JUMPDEST SWAP5 POP PUSH2 0x24F8 PUSH1 0x60 DUP10 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x250E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251B DUP9 DUP3 DUP10 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x253B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2544 DUP4 PUSH2 0x2137 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x255F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x256B DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2591 DUP4 PUSH2 0x2137 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x25A1 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25CD DUP7 PUSH2 0x2137 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x25E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F5 DUP10 DUP4 DUP11 ADD PUSH2 0x219B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x260E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x261B DUP9 DUP3 DUP10 ADD PUSH2 0x219B JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C2 DUP3 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2591 DUP2 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x269A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26A3 DUP10 PUSH2 0x2137 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x26BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26CB DUP13 DUP4 DUP14 ADD PUSH2 0x219B JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP PUSH2 0x26E0 DUP3 PUSH2 0x2169 JUMP JUMPDEST DUP2 SWAP7 POP PUSH2 0x26EF PUSH1 0x60 DUP13 ADD PUSH2 0x2405 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x270C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2719 DUP12 DUP3 DUP13 ADD PUSH2 0x219B JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2751 DUP9 PUSH2 0x2137 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x276D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2779 DUP12 DUP4 DUP13 ADD PUSH2 0x224B JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x278F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279B DUP12 DUP4 DUP13 ADD PUSH2 0x219B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x27B0 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x27C2 DUP3 PUSH2 0x2169 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x27D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E5 DUP11 DUP3 DUP12 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x280A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2813 DUP6 PUSH2 0x2137 JUMP JUMPDEST SWAP4 POP PUSH2 0x2821 PUSH1 0x20 DUP7 ADD PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x284F DUP8 DUP3 DUP9 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x287A DUP6 PUSH2 0x2137 JUMP JUMPDEST SWAP4 POP PUSH2 0x2888 PUSH1 0x20 DUP7 ADD PUSH2 0x2137 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x2898 DUP2 PUSH2 0x2169 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x28D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28DC DUP5 DUP3 DUP6 ADD PUSH2 0x224B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2908 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2928 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073746F726564207061796C6F6164 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x23B0 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x298C JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x29F1 PUSH1 0x80 DUP4 ADD DUP8 DUP10 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2A13 DUP2 DUP6 DUP8 PUSH2 0x298C JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A3E PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP2 ADD PUSH2 0x2A8D JUMPI PUSH2 0x2A8D PUSH2 0x292E JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2AE1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2ABE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2ADD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2ACA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B14 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x2B28 DUP2 PUSH2 0x2B22 DUP5 SLOAD PUSH2 0x28F4 JUMP JUMPDEST DUP5 PUSH2 0x2A97 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B57 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B45 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x2B4F DUP6 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B86 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B67 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2BA4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x292E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB PUSH2 0x2BE8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2BF2 DUP3 SLOAD PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C09 JUMPI PUSH2 0x2C09 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x2C17 DUP2 PUSH2 0x2B22 DUP5 SLOAD PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C45 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2C33 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH2 0x2C3D DUP5 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST DUP6 SSTORE POP PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C7F JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2C5F JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x2C9D JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2CC3 JUMPI PUSH2 0x2CC3 PUSH2 0x292E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP10 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2CE8 PUSH1 0xC0 DUP4 ADD DUP10 DUP12 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D19 DUP2 DUP7 DUP9 PUSH2 0x298C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2D2D DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP8 DUP2 SHL DUP3 AND PUSH1 0x8 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 DUP2 SHL DUP3 AND PUSH1 0xA DUP7 ADD MSTORE SWAP2 DUP8 SWAP1 SHL SWAP1 SWAP3 AND PUSH1 0x1E DUP5 ADD MSTORE DUP5 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x2DA7 SWAP1 DUP3 SWAP1 PUSH1 0x34 DUP7 ADD SWAP1 DUP8 ADD PUSH2 0x232D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x34 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2DD6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x2351 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2A13 DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0x292E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2E49 JUMPI PUSH2 0x2E49 PUSH2 0x2E24 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x2E71 JUMPI PUSH2 0x2E71 PUSH2 0x292E JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND DUP1 PUSH2 0x2E93 JUMPI PUSH2 0x2E93 PUSH2 0x2E24 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2EBD PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2EDE DUP2 DUP6 PUSH2 0x2351 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xF SWAP15 0x4D SWAP6 0xB6 0x2F ADDMOD 0x22 0x2D PUSH2 0x2B5A 0xB9 KECCAK256 CODECOPY 0xCD DUP16 0xBB 0xBE 0xA5 POP 0xA9 0x5E DUP14 0xF9 0xF9 0x27 NUMBER PUSH12 0xBDF5DBA26469706673582212 KECCAK256 0xC8 0xA8 DUP11 0xCB 0xA5 0x4A CALLDATACOPY 0x49 CREATE2 ORIGIN 0xD3 CALLDATALOAD PUSH16 0x11A315CBD2D78D4A319F52AD93175D04 XOR BLOCKHASH 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"948:17619:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:42;;;;;;;;;;-1:-1:-1;1355:42:20;;;;;;;;;;;;;188:25:23;;;244:2;229:18;;222:34;;;;161:18;1355:42:20;;;;;;;;13632:80;;;;;;;;;;-1:-1:-1;13632:80:20;;;;;:::i;:::-;;;;;13159:137;;;;;;;;;;-1:-1:-1;13159:137:20;;;;;:::i;:::-;-1:-1:-1;13287:1:20;;13159:137;;;;1182:6:23;1170:19;;;1152:38;;1140:2;1125:18;13159:137:20;1008:188:23;12128:272:20;;;;;;;;;;-1:-1:-1;12128:272:20;;;;;:::i;:::-;;:::i;:::-;;;2204:14:23;;2197:22;2179:41;;2167:2;2152:18;12128:272:20;2039:187:23;2072:73:20;;;;;;;;;;-1:-1:-1;2072:73:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;15577:165::-;;;;;;;;;;-1:-1:-1;15577:165:20;;;;;:::i;:::-;15651:17;:34;;;;15696:26;:38;15577:165;1432:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;15079:490::-;;;;;;;;;;-1:-1:-1;15079:490:20;;;;;:::i;:::-;-1:-1:-1;;;;;15290:47:20;;;-1:-1:-1;;;15348:53:20;;;;;;15290:16;15348:53;15412:32;:51;;;;;;-1:-1:-1;;;;;;15474:35:20;;;;;;;-1:-1:-1;;;;;15474:35:20;;;;;;;;;;-1:-1:-1;;;;;15520:41:20;-1:-1:-1;;;15520:41:20;;;;;;;;15079:490;11134:99;;;;;;;;;;-1:-1:-1;11214:11:20;;;;11134:99;;1185:26;;;;;;;;;;-1:-1:-1;1185:26:20;;;;;;;;;;;10267:859;;;;;;;;;;-1:-1:-1;10267:859:20;;;;;:::i;:::-;;:::i;13811:735::-;;;;;;;;;;-1:-1:-1;13811:735:20;;;;;:::i;:::-;;:::i;1218:23::-;;;;;;;;;;-1:-1:-1;1218:23:20;;;;;;;;;;;12536:123;;;;;;;;;;-1:-1:-1;12536:123:20;;;;;:::i;:::-;-1:-1:-1;12646:4:20;;12536:123;;;;-1:-1:-1;;;;;6958:32:23;;;6940:51;;6928:2;6913:18;12536:123:20;6794:203:23;1952:71:20;;;;;;;;;;-1:-1:-1;1952:71:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1952:71:20;;;-1:-1:-1;;;1952:71:20;;-1:-1:-1;;;;;1952:71:20;;;;;;;;-1:-1:-1;;;;;7617:31:23;;;7599:50;;-1:-1:-1;;;;;7685:32:23;;;7680:2;7665:18;;7658:60;7734:18;;;7727:34;7587:2;7572:18;1952:71:20;7399:368:23;10052:207:20;;;;;;;;;;-1:-1:-1;10052:207:20;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8258:31:23;;;8240:50;;8228:2;8213:18;10052:207:20;8096:200:23;1308:40:20;;;;;;;;;;-1:-1:-1;1308:40:20;;;;;;-1:-1:-1;;;;;1308:40:20;;;;-1:-1:-1;;;1308:40:20;;;;;;;;;;;-1:-1:-1;;;;;1308:40:20;;;;;;-1:-1:-1;;;1308:40:20;;;;;;;;;-1:-1:-1;;;;;8612:15:23;;;8594:34;;8664:15;;;8659:2;8644:18;;8637:43;8716:15;;;;8696:18;;;8689:43;;;;-1:-1:-1;;;;;8805:15:23;;;8800:2;8785:18;;8778:43;8858:15;;;8574:3;8837:19;;8830:44;8543:3;8528:19;1308:40:20;8301:579:23;1562:63:20;;;;;;;;;;-1:-1:-1;1562:63:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1562:63:20;;;11241:879;;;;;;;;;;-1:-1:-1;11241:879:20;;;;;:::i;:::-;;:::i;1709:66::-;;;;;;;;;;-1:-1:-1;1709:66:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1709:66:20;;;14974:97;;;;;;;;;;-1:-1:-1;14974:97:20;;;;;:::i;:::-;15037:11;:26;;;;;;;-1:-1:-1;;15037:26:20;;;;;;;;;14974:97;15750:89;;;;;;;;;;-1:-1:-1;15750:89:20;;;;;:::i;:::-;15809:9;:22;15750:89;14826:140;;;;;;;;;;-1:-1:-1;14826:140:20;;;;;:::i;:::-;-1:-1:-1;;;;;14915:26:20;;;:16;:26;;;;;;;;;;:43;;-1:-1:-1;;;;;;14915:43:20;;;;;;;;14826:140;7179:2657;;;;;;;;;;-1:-1:-1;7179:2657:20;;;;;:::i;:::-;;:::i;4401:2770::-;;;;;;:::i;:::-;;:::i;1093:51::-;;;;;;;;;;-1:-1:-1;1093:51:20;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1093:51:20;;;12798:128;;;;;;;;;;;;12884:22;;;;;:34;:22;1083:1;12884:34;;12798:128;13452:172;;;;;;;;;;-1:-1:-1;13452:172:20;;;;;:::i;:::-;13899:647;13811:735;;;;14745:73;;;;;;;;;;;;14806:4;14789:21;;-1:-1:-1;;14789:21:20;;;;;14745:73;1153:25;;;;;;;;;;-1:-1:-1;1153:25:20;;;;;;;;12667:123;;;;;;;;;;;;12751:19;;:31;:19;1083:1;12751:31;;12667:123;12934:217;;;;;;;;;;-1:-1:-1;12934:217:20;;;;;:::i;:::-;13134:9;;;;;;;;;-1:-1:-1;13134:9:20;;12934:217;;;;;;;1404:21;;;;;;;;;;;;;;;;;;;13853:25:23;;;13841:2;13826:18;1404:21:20;13707:177:23;15847:127:20;;;;;;;;;;-1:-1:-1;15847:127:20;;;;;:::i;:::-;;:::i;9844:200::-;;;;;;;;;;-1:-1:-1;9844:200:20;;;;;:::i;:::-;;:::i;12128:272::-;12313:26;;;12264:4;12313:26;;;:13;:26;;;;;;:33;;12264:4;;12313:26;:33;;12340:5;;;;12313:33;:::i;:::-;;;;;;;;;;;;;;12364:14;;;:28;;;-1:-1:-1;;12128:272:20;;;;;;:::o;2072:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2072:73:20;;;-1:-1:-1;;;;2072:73:20;;;-1:-1:-1;;;;;2072:73:20;;-1:-1:-1;2072:73:20;;-1:-1:-1;2072:73:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1432:33::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10267:859::-;10476:14;10492:11;10516:26;10569:1;10545:14;:21;:25;:91;;10616:20;10545:91;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10586:14;10545:91;10516:120;;10673:15;10691:156;10720:11;10746:1;10762:16;10793:8;:15;10823:13;10691:14;:156::i;:::-;10673:174;;10886:16;10905:50;10922:9;10933:10;10945:9;;10905:16;:50::i;:::-;10886:69;;10966:9;:58;;11013:11;11001:23;;;10966:58;;;10987:11;10978:20;;;10966:58;-1:-1:-1;11109:9:20;;11084:22;11096:10;11084:9;:22;:::i;:::-;:34;;;;:::i;:::-;11072:46;;10505:621;;;10267:859;;;;;;;;:::o;13811:735::-;13937:26;;;13910:24;13937:26;;;:13;:26;;;;;;:33;;;;13964:5;;;;13937:33;:::i;:::-;;;;;;;;;;;;;;14068:14;;;;13937:33;;-1:-1:-1;14060:73:20;;;;-1:-1:-1;;;14060:73:20;;;;;;;:::i;:::-;;;;;;;;;14152:13;;-1:-1:-1;;;14152:13:20;;-1:-1:-1;;;;;14152:13:20;14169:10;14152:27;14144:69;;;;-1:-1:-1;;;14144:69:20;;15700:2:23;14144:69:20;;;15682:21:23;15739:2;15719:18;;;15712:30;15778:31;15758:18;;;15751:59;15827:18;;14144:69:20;15498:353:23;14144:69:20;14262:20;;-1:-1:-1;;;;;;14293:26:20;;;14281:1;14262:20;14330:14;;:27;14375:40;;;;;;14396:11;;14409:5;;;;14375:40;:::i;:::-;;;;;;;;14506:32;14519:11;14532:5;;14506:12;:32::i;10052:207::-;10215:23;;;10184:6;10215:23;;;:13;:23;;;;;;;;-1:-1:-1;;;;;10215:36:20;;;;;;;;;;-1:-1:-1;;;;;10215:36:20;10052:207;;;;;:::o;11241:879::-;11420:26;;;11393:24;11420:26;;;:13;:26;;;;;;:33;;;;11447:5;;;;11420:33;:::i;:::-;;;;;;;;;;;;;;11472:14;;;;11420:33;;-1:-1:-1;11464:73:20;;;;-1:-1:-1;;;11464:73:20;;;;;;;:::i;:::-;11589:16;;-1:-1:-1;;;;;11589:16:20;11570:35;;:76;;;;;11632:2;:14;;;11619:8;;11609:19;;;;;;;:::i;:::-;;;;;;;;:37;11570:76;11548:156;;;;-1:-1:-1;;;11548:156:20;;16660:2:23;11548:156:20;;;16642:21:23;16699:2;16679:18;;;16672:30;16738:32;16718:18;;;16711:60;16788:18;;11548:156:20;16458:354:23;11548:156:20;11738:13;;-1:-1:-1;;;;;;11829:26:20;;;;-1:-1:-1;;11866:14:20;;:27;;;11921:25;;;;;11738:13;11921:25;;;;;;:32;;-1:-1:-1;;;11738:13:20;;;-1:-1:-1;;;;;11738:13:20;;11921:32;;11947:5;;;;11921:32;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;11966:77:20;;-1:-1:-1;;;;;11921:32:20;;-1:-1:-1;;;;;;11966:40:20;;;;;:77;;12007:11;;12020:5;;;;11921:32;;12034:8;;;;11966:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12059:53;12074:11;12087:5;;12094;12101:10;12059:53;;;;;;;;;;:::i;:::-;;;;;;;;11382:738;;;11241:879;;;;;:::o;7179:2657::-;3088:22;;;;;:38;:22;1040:1;3088:38;3080:87;;;;-1:-1:-1;;;3080:87:20;;18157:2:23;3080:87:20;;;18139:21:23;18196:2;18176:18;;;18169:30;18235:34;18215:18;;;18208:62;-1:-1:-1;;;18286:18:23;;;18279:34;18330:19;;3080:87:20;17955:400:23;3080:87:20;3178:22;:33;;-1:-1:-1;;3178:33:20;;;;;7459:26:::1;::::0;::::1;-1:-1:-1::0;7459:26:20;;;:13:::1;:26;::::0;;;;;:33;;::::1;::::0;7486:5;;;;7459:33:::1;:::i;:::-;;;;;;;;;;;;;7432:60;;7590:12;:25;7603:11;7590:25;;;;;;;;;;;;;;;7616:5;;7590:32;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;7588:34;;7590:32:::1;::::0;7588:34:::1;::::0;-1:-1:-1;;;;;7588:34:20::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;7588:34:20::1;;;;;-1:-1:-1::0;;;;;7588:34:20::1;;;;;-1:-1:-1::0;;;;;7578:44:20::1;:6;-1:-1:-1::0;;;;;7578:44:20::1;;7570:83;;;::::0;-1:-1:-1;;;7570:83:20;;18776:2:23;7570:83:20::1;::::0;::::1;18758:21:23::0;18815:2;18795:18;;;18788:30;-1:-1:-1;;;18834:18:23;;;18827:56;18900:18;;7570:83:20::1;18574:350:23::0;7570:83:20::1;7794:14;::::0;::::1;::::0;:28;7790:2039:::1;;7870:26;::::0;::::1;7839:28;7870:26:::0;;;:13:::1;:26;::::0;;;;;:33;;::::1;::::0;7897:5;;;;7870:33:::1;:::i;:::-;;;;;;;;;;;;;7839:64;;7918:27;7948:44;;;;;;;;7962:11;-1:-1:-1::0;;;;;7948:44:20::1;;;;;7975:6;-1:-1:-1::0;;;;;7948:44:20::1;;;;;7983:8;;7948:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;7948:44:20;;-1:-1:-1;8202:11:20;;7918:74;;-1:-1:-1;8202:15:20;8198:449:::1;;8275:17:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;8275:17:20;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;::::1;::::0;-1:-1:-1;;;;;8275:17:20::1;-1:-1:-1::0;;;8275:17:20::1;-1:-1:-1::0;;;;;;8275:17:20;;;-1:-1:-1;;;;;8275:17:20;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;8285:6;;8275:17;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;8373:6;8368:107;8389:11:::0;;:15:::1;::::0;8403:1:::1;::::0;8389:15:::1;:::i;:::-;8385:1;:19;8368:107;;;8448:4;8453:1;8448:7;;;;;;;;:::i;:::-;;;;;;;;;;;8434:4;8439:1;8443;8439:5;;;;:::i;:::-;8434:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:21;;:11:::1;::::0;;::::1;;:21:::0;;-1:-1:-1;;;;;8434:21:20;;::::1;-1:-1:-1::0;;;;;;8434:21:20;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;8434:21:20;;;;-1:-1:-1;;;8434:21:20;;;::::1;-1:-1:-1::0;;;;;8434:21:20::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;8434:21:20;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;;;;8406:3;;;;;:::i;:::-;;;;8368:107;;;;8567:6;8557:4;8562:1;8557:7;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:16;;:7:::1;::::0;;::::1;;:16:::0;;;;::::1;::::0;-1:-1:-1;;;;;8557:16:20::1;-1:-1:-1::0;;;8557:16:20::1;-1:-1:-1::0;;;;;;8557:16:20;;;-1:-1:-1;;;;;8557:16:20;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;8198:449;;;8614:17:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;8614:17:20;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;::::1;::::0;-1:-1:-1;;;;;8614:17:20::1;-1:-1:-1::0;;;8614:17:20::1;-1:-1:-1::0;;;;;;8614:17:20;;;-1:-1:-1;;;;;8614:17:20;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;8624:6;;8614:17;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;8198:449;7824:834;;7790:2039;;;8668:14;::::0;;;::::1;;;8664:1165;;;8735:138;;;;;;;;8774:8;;:15;;-1:-1:-1::0;;;;;8735:138:20::1;;;;;8809:11;-1:-1:-1::0;;;;;8735:138:20::1;;;;;8849:8;;8839:19;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;8735:138;;;8699:26:::1;::::0;::::1;;::::0;;;:13:::1;:26;::::0;;;;:33;;::::1;::::0;8726:5;;;;8699:33:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;:174;;;;;;::::1;::::0;-1:-1:-1;;;;;8699:174:20::1;-1:-1:-1::0;;;8699:174:20::1;-1:-1:-1::0;;;;;;8699:174:20;;;-1:-1:-1;;;;;8699:174:20;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;;8958:9;;::::1;::::0;;8699:174:::1;8958:9:::0;;8893:75;;-1:-1:-1;;;;;;;;;;;8893:75:20;::::1;::::0;8907:11;;8920:5;;;;8927:11;;8940:6;;8948:8;;;;8699:33;8893:75:::1;:::i;:::-;;;;;;;;9058:14;:22:::0;;-1:-1:-1;;9058:22:20::1;::::0;;8664:1165:::1;;;9134:198;::::0;-1:-1:-1;;;9134:198:20;;-1:-1:-1;;;;;9134:41:20;::::1;::::0;::::1;::::0;9181:9;;9134:198:::1;::::0;9214:11;;9248:5;;;;9276:6;;9305:8;;;;9134:198:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;9113:705;;;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9432:154;;;;;;;;9475:8;;:15;;-1:-1:-1::0;;;;;9432:154:20::1;;;;;9514:11;-1:-1:-1::0;;;;;9432:154:20::1;;;;;9558:8;;9548:19;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;9432:154;;;9396:26:::1;::::0;::::1;;::::0;;;:13:::1;:26;::::0;;;;:33;;::::1;::::0;9423:5;;;;9396:33:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;:190;;;;;;::::1;::::0;-1:-1:-1;;;;;9396:190:20::1;-1:-1:-1::0;;;9396:190:20::1;-1:-1:-1::0;;;;;;9396:190:20;;;-1:-1:-1;;;;;9396:190:20;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;9610:72:20;::::1;::::0;9624:11;;9637:5;;;;9644:11;;9657:6;;9665:8;;;;9675:6;;9610:72:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;9780:14:20::1;:22:::0;;-1:-1:-1;;9780:22:20::1;::::0;;9113:705:::1;-1:-1:-1::0;;3234:22:20;:37;;-1:-1:-1;;3234:37:20;;;;;-1:-1:-1;;;;;;;7179:2657:20:o;4401:2770::-;2851:19;;:35;:19;1040:1;2851:35;2843:81;;;;-1:-1:-1;;;2843:81:20;;24038:2:23;2843:81:20;;;24020:21:23;24077:2;24057:18;;;24050:30;24116:34;24096:18;;;24089:62;-1:-1:-1;;;24167:18:23;;;24160:31;24208:19;;2843:81:20;23836:397:23;2843:81:20;2935:19;:30;;-1:-1:-1;;2935:30:20;1083:1;2935:30;;;4689:12;;4705:2:::1;4689:18;4681:75;;;::::0;-1:-1:-1;;;4681:75:20;;24440:2:23;4681:75:20::1;::::0;::::1;24422:21:23::0;24479:2;24459:18;;;24452:30;24518:34;24498:18;;;24491:62;-1:-1:-1;;;24569:18:23;;;24562:42;24621:19;;4681:75:20::1;24238:408:23::0;4681:75:20::1;4897:21:::0;;4849:8;;4829:17:::1;::::0;4897:91:::1;;4968:20;4897:91;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4938:14;4897:91;4868:120;;5000:14;5020:173;5047:10;5072;5097:8;;5020:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;5120:34:20;::::1;::::0;::::1;5169:13:::0;5020:12:::1;:173::i;:::-;4999:194;;;5225:9;5212;:22;;5204:76;;;::::0;-1:-1:-1;;;5204:76:20;;24853:2:23;5204:76:20::1;::::0;::::1;24835:21:23::0;24892:2;24872:18;;;24865:30;24931:34;24911:18;;;24904:62;-1:-1:-1;;;24982:18:23;;;24975:39;25031:19;;5204:76:20::1;24651:405:23::0;5204:76:20::1;5310:25;::::0;::::1;5293:12;5310:25:::0;;;:13:::1;:25;::::0;;;;;;;5336:10:::1;5310:37:::0;;;;;;;5308:39;;5293:12;;5308:39:::1;::::0;-1:-1:-1;;;;;5308:39:20::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;5308:39:20::1;;;;;-1:-1:-1::0;;;;;5308:39:20::1;;;;;5293:54;;5401:11;5427:9;5415;:21;;;;:::i;:::-;5401:35:::0;-1:-1:-1;5451:10:20;;5447:166:::1;;5479:12;5497:14;-1:-1:-1::0;;;;;5497:19:20::1;5524:6;5497:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5478:57;;;5558:7;5550:51;;;::::0;-1:-1:-1;;;5550:51:20;;25473:2:23;5550:51:20::1;::::0;::::1;25455:21:23::0;25512:2;25492:18;;;25485:30;25551:33;25531:18;;;25524:61;25602:18;;5550:51:20::1;25271:355:23::0;5550:51:20::1;5463:150;5447:166;5774:13;5789:17:::0;5808:29:::1;5841:54;5881:13;5841:39;:54::i;:::-;5771:124:::0;;-1:-1:-1;5771:124:20;-1:-1:-1;5771:124:20;-1:-1:-1;;5910:16:20;;5906:227:::1;;5944:12;5962:13;-1:-1:-1::0;;;;;5962:18:20::1;5988:12;5962:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5943:62;;;6025:7;6020:102;;6058:48;::::0;6093:12;;-1:-1:-1;;;;;6058:48:20;::::1;::::0;::::1;::::0;;;::::1;6020:102;5928:205;5906:227;6178:15;6256:2;6249:5;6245:14;6239:21;6228:32;;6281:20;6304:8;;6281:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;6404:11:20::1;::::0;6353:167:::1;::::0;6281:31;;-1:-1:-1;6281:31:20;;6353:167:::1;::::0;-1:-1:-1;6384:5:20;;-1:-1:-1;6404:11:20::1;::::0;;::::1;::::0;-1:-1:-1;6430:10:20::1;::::0;6455;;6480:7;;6281:31;;6353:167:::1;;;:::i;:::-;;;;;;;;;;;;;6323:197;;6536:22;6543:14;6536:22;;;;;;:::i;:::-;;;;;;;;6575:11;::::0;;;::::1;;;6571:593;;;-1:-1:-1::0;;;;;6624:25:20;;::::1;6603:18;6624:25:::0;;;::::1;::::0;;;;;;;::::1;::::0;6664:141:::1;;;::::0;-1:-1:-1;;;6664:141:20;;26641:2:23;6664:141:20::1;::::0;::::1;26623:21:23::0;26680:2;26660:18;;;26653:30;26719:34;26699:18;;;26692:62;-1:-1:-1;;;26770:18:23;;;26763:53;26833:19;;6664:141:20::1;26439:419:23::0;6664:141:20::1;6850:37;::::0;-1:-1:-1;;;;;;6867:10:20::1;27042:2:23::0;27078:15;;;27074:24;;6850:37:20::1;::::0;::::1;27062::23::0;27133:15;;;27129:24;27115:12;;;27108:46;6822:25:20::1;::::0;27170:12:23;;6850:37:20::1;;;;;;;;;;;;6822:65;;6947:10;-1:-1:-1::0;;;;;6932:41:20::1;;6992:11;;;;;;;;;;;7022:12;7053:7;7079:5;7103:8;7130:7;6932:220;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6588:576;;6571:593;-1:-1:-1::0;;2988:19:20;:34;;-1:-1:-1;;2988:34:20;1040:1;2988:34;;;-1:-1:-1;;;;;;;;;;;;;;;;4401:2770:20:o;15847:127::-;15929:20;:37;15952:14;15929:20;:37;:::i;:::-;;15847:127;:::o;9844:200::-;10007:22;;;9976:6;10007:22;;;:12;:22;;;;;;:29;;;;10030:5;;;;10007:29;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;10007:29:20;;-1:-1:-1;9844:200:20;;;;;:::o;17105:1459::-;17343:4;17361:13;17376;17391:17;17414:65;17454:14;17414:25;:65::i;:::-;17360:119;;;;;;;17490:21;17573:6;:11;;17583:1;17573:11;17569:239;;17627:32;;-1:-1:-1;;;;;17627:32:20;:48;-1:-1:-1;17627:48:20;17601:148;;;;-1:-1:-1;;;17601:148:20;;28125:2:23;17601:148:20;;;28107:21:23;28164:2;28144:18;;;28137:30;28203:34;28183:18;;;28176:62;-1:-1:-1;;;28254:18:23;;;28247:36;28300:19;;17601:148:20;27923:402:23;17601:148:20;17764:32;17784:12;17764:32;;:::i;:::-;;;17569:239;17959:24;;17887:19;;17959:35;;17986:8;;-1:-1:-1;;;17959:24:20;;-1:-1:-1;;;;;17959:24:20;:35;:::i;:::-;17909:16;:33;:86;;;-1:-1:-1;;;17909:33:20;;-1:-1:-1;;;;;17909:33:20;:86;:::i;:::-;17887:108;-1:-1:-1;18006:34:20;17887:108;18006:34;;:::i;:::-;18209:16;:30;18006:34;;-1:-1:-1;18172:14:20;;18243:6;;18190:49;;-1:-1:-1;;;;;18209:30:20;18006:34;18190:49;:::i;:::-;18189:60;;;;:::i;:::-;18457:16;:30;18414:27;;18172:77;;-1:-1:-1;18344:17:20;;18491:6;;-1:-1:-1;;;;;18457:30:20;;;;18365:76;;-1:-1:-1;;;18414:27:20;;;-1:-1:-1;;;;;18414:27:20;;-1:-1:-1;;;18365:33:20;;;;:76;:::i;:::-;:122;;;;:::i;:::-;18364:133;;;;:::i;:::-;-1:-1:-1;;;;;18344:153:20;;-1:-1:-1;18529:27:20;18344:153;18529:12;:27;:::i;:::-;18517:39;;:9;:39;:::i;:::-;18510:46;17105:1459;-1:-1:-1;;;;;;;;;;;;;17105:1459:20:o;16761:336::-;16895:4;16916:9;16912:178;;;-1:-1:-1;16949:17:20;:24;16942:31;;16912:178;17043:26;;17073:5;;17015:24;17029:10;17015:11;:24;:::i;:::-;17014:55;;;;:::i;:::-;17013:65;;;;:::i;:::-;17006:72;;;;16163:590;16278:26;;;16247:28;16278:26;;;:13;:26;;;;;;:33;;;;16305:5;;;;16278:33;:::i;:::-;;;;;;;;;;;;;16247:64;;16420:326;16427:11;;:15;16420:326;;16495:11;;16459:28;;16490:4;;16495:15;;16509:1;;16495:15;:::i;:::-;16490:21;;;;;;;;:::i;:::-;;;;;;;;;;16459:52;;;;;;;;16490:21;;;;;;;16459:52;;-1:-1:-1;;;;;16459:52:20;;;;-1:-1:-1;;;;;;;;16459:52:20;;;;;;;;;;;;;;;;;;16490:21;16459:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16545:7;:18;;;-1:-1:-1;;;;;16526:48:20;;16593:11;16623:5;;16647:7;:13;;;16679:7;:15;;;16526:183;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16724:4;:10;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;16724:10:20;;;;;;;;;-1:-1:-1;;;;;;16724:10:20;;;;;;;;;;:::i;:::-;;;;;16444:302;16420:326;;2036:801:7;2154:13;2181:10;2205:18;2237:30;2300:14;:21;2325:2;2300:27;:57;;;;2355:2;2331:14;:21;:26;2300:57;2292:91;;;;-1:-1:-1;;;2292:91:7;;30151:2:23;2292:91:7;;;30133:21:23;30190:2;30170:18;;;30163:30;-1:-1:-1;;;30209:18:23;;;30202:51;30270:18;;2292:91:7;29949:345:23;2292:91:7;2452:1;2436:14;2432:22;2426:29;2416:39;;2503:2;2487:14;2483:23;2477:30;2468:39;;2534:6;:11;;2544:1;2534:11;:26;;;;2549:6;:11;;2559:1;2549:11;2534:26;2526:57;;;;-1:-1:-1;;;2526:57:7;;30501:2:23;2526:57:7;;;30483:21:23;30540:2;30520:18;;;30513:30;-1:-1:-1;;;30559:18:23;;;30552:48;30617:18;;2526:57:7;30299:342:23;2526:57:7;2609:1;2601:5;:9;2593:33;;;;-1:-1:-1;;;2593:33:7;;30848:2:23;2593:33:7;;;30830:21:23;30887:2;30867:18;;;30860:30;-1:-1:-1;;;30906:18:23;;;30899:41;30957:18;;2593:33:7;30646:335:23;2593:33:7;2641:6;:11;;2651:1;2641:11;2637:194;;-1:-1:-1;;2738:2:7;2718:23;;2712:30;2803:2;2783:23;;2777:30;2637:194;2036:801;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;267:159:23:-;334:20;;394:6;383:18;;373:29;;363:57;;416:1;413;406:12;363:57;267:159;;;:::o;431:184::-;489:6;542:2;530:9;521:7;517:23;513:32;510:52;;;558:1;555;548:12;510:52;581:28;599:9;581:28;:::i;620:131::-;-1:-1:-1;;;;;695:31:23;;685:42;;675:70;;741:1;738;731:12;756:247;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;923:9;910:23;942:31;967:5;942:31;:::i;1201:347::-;1252:8;1262:6;1316:3;1309:4;1301:6;1297:17;1293:27;1283:55;;1334:1;1331;1324:12;1283:55;-1:-1:-1;1357:20:23;;-1:-1:-1;;;;;1389:30:23;;1386:50;;;1432:1;1429;1422:12;1386:50;1469:4;1461:6;1457:17;1445:29;;1521:3;1514:4;1505:6;1497;1493:19;1489:30;1486:39;1483:59;;;1538:1;1535;1528:12;1483:59;1201:347;;;;;:::o;1553:481::-;1631:6;1639;1647;1700:2;1688:9;1679:7;1675:23;1671:32;1668:52;;;1716:1;1713;1706:12;1668:52;1739:28;1757:9;1739:28;:::i;:::-;1729:38;-1:-1:-1;1818:2:23;1803:18;;1790:32;-1:-1:-1;;;;;1834:30:23;;1831:50;;;1877:1;1874;1867:12;1831:50;1916:58;1966:7;1957:6;1946:9;1942:22;1916:58;:::i;:::-;1553:481;;1993:8;;-1:-1:-1;1890:84:23;;-1:-1:-1;;;;1553:481:23:o;2231:127::-;2292:10;2287:3;2283:20;2280:1;2273:31;2323:4;2320:1;2313:15;2347:4;2344:1;2337:15;2363:718;2405:5;2458:3;2451:4;2443:6;2439:17;2435:27;2425:55;;2476:1;2473;2466:12;2425:55;2499:20;;-1:-1:-1;;;;;2568:10:23;;;2565:36;;;2581:18;;:::i;:::-;2656:2;2650:9;2624:2;2710:13;;-1:-1:-1;;2706:22:23;;;2730:2;2702:31;2698:40;2686:53;;;2754:18;;;2774:22;;;2751:46;2748:72;;;2800:18;;:::i;:::-;2840:10;2836:2;2829:22;2875:2;2867:6;2860:18;2921:3;2914:4;2909:2;2901:6;2897:15;2893:26;2890:35;2887:55;;;2938:1;2935;2928:12;2887:55;3002:2;2995:4;2987:6;2983:17;2976:4;2968:6;2964:17;2951:54;3049:1;3042:4;3037:2;3029:6;3025:15;3021:26;3014:37;3069:6;3060:15;;;;;;2363:718;;;;:::o;3086:460::-;3171:6;3179;3187;3240:2;3228:9;3219:7;3215:23;3211:32;3208:52;;;3256:1;3253;3246:12;3208:52;3279:28;3297:9;3279:28;:::i;:::-;3269:38;-1:-1:-1;3358:2:23;3343:18;;3330:32;-1:-1:-1;;;;;3374:30:23;;3371:50;;;3417:1;3414;3407:12;3371:50;3440:49;3481:7;3472:6;3461:9;3457:22;3440:49;:::i;:::-;3430:59;;;3536:2;3525:9;3521:18;3508:32;3498:42;;3086:460;;;;;:::o;3551:250::-;3636:1;3646:113;3660:6;3657:1;3654:13;3646:113;;;3736:11;;;3730:18;3717:11;;;3710:39;3682:2;3675:10;3646:113;;;-1:-1:-1;;3793:1:23;3775:16;;3768:27;3551:250::o;3806:270::-;3847:3;3885:5;3879:12;3912:6;3907:3;3900:19;3928:76;3997:6;3990:4;3985:3;3981:14;3974:4;3967:5;3963:16;3928:76;:::i;:::-;4058:2;4037:15;-1:-1:-1;;4033:29:23;4024:39;;;;4065:4;4020:50;;3806:270;-1:-1:-1;;3806:270:23:o;4081:408::-;-1:-1:-1;;;;;4282:32:23;;4264:51;;-1:-1:-1;;;;;4351:31:23;;4346:2;4331:18;;4324:59;4419:2;4371;4399:18;;4392:30;;;-1:-1:-1;;4439:44:23;;4464:18;;4456:6;4439:44;:::i;:::-;4431:52;4081:408;-1:-1:-1;;;;;4081:408:23:o;4494:248::-;4562:6;4570;4623:2;4611:9;4602:7;4598:23;4594:32;4591:52;;;4639:1;4636;4629:12;4591:52;-1:-1:-1;;4662:23:23;;;4732:2;4717:18;;;4704:32;;-1:-1:-1;4494:248:23:o;4747:217::-;4894:2;4883:9;4876:21;4857:4;4914:44;4954:2;4943:9;4939:18;4931:6;4914:44;:::i;4969:173::-;5037:20;;-1:-1:-1;;;;;5086:31:23;;5076:42;;5066:70;;5132:1;5129;5122:12;5147:171;5214:20;;-1:-1:-1;;;;;5263:30:23;;5253:41;;5243:69;;5308:1;5305;5298:12;5323:480;5416:6;5424;5432;5440;5448;5501:3;5489:9;5480:7;5476:23;5472:33;5469:53;;;5518:1;5515;5508:12;5469:53;5541:29;5560:9;5541:29;:::i;:::-;5531:39;;5589:38;5623:2;5612:9;5608:18;5589:38;:::i;:::-;5579:48;;5646:38;5680:2;5669:9;5665:18;5646:38;:::i;:::-;5636:48;;5703:37;5736:2;5725:9;5721:18;5703:37;:::i;:::-;5693:47;;5759:38;5792:3;5781:9;5777:19;5759:38;:::i;:::-;5749:48;;5323:480;;;;;;;;:::o;5808:160::-;5873:20;;5929:13;;5922:21;5912:32;;5902:60;;5958:1;5955;5948:12;5973:816;6082:6;6090;6098;6106;6114;6167:3;6155:9;6146:7;6142:23;6138:33;6135:53;;;6184:1;6181;6174:12;6135:53;6207:28;6225:9;6207:28;:::i;:::-;6197:38;;6285:2;6274:9;6270:18;6257:32;6298:31;6323:5;6298:31;:::i;:::-;6348:5;-1:-1:-1;6404:2:23;6389:18;;6376:32;-1:-1:-1;;;;;6457:14:23;;;6454:34;;;6484:1;6481;6474:12;6454:34;6507:49;6548:7;6539:6;6528:9;6524:22;6507:49;:::i;:::-;6497:59;;6575:35;6606:2;6595:9;6591:18;6575:35;:::i;:::-;6565:45;;6663:3;6652:9;6648:19;6635:33;6619:49;;6693:2;6683:8;6680:16;6677:36;;;6709:1;6706;6699:12;6677:36;;6732:51;6775:7;6764:8;6753:9;6749:24;6732:51;:::i;:::-;6722:61;;;5973:816;;;;;;;;:::o;7002:392::-;7078:6;7086;7139:2;7127:9;7118:7;7114:23;7110:32;7107:52;;;7155:1;7152;7145:12;7107:52;7178:28;7196:9;7178:28;:::i;:::-;7168:38;-1:-1:-1;7257:2:23;7242:18;;7229:32;-1:-1:-1;;;;;7273:30:23;;7270:50;;;7316:1;7313;7306:12;7270:50;7339:49;7380:7;7371:6;7360:9;7356:22;7339:49;:::i;:::-;7329:59;;;7002:392;;;;;:::o;7772:319::-;7839:6;7847;7900:2;7888:9;7879:7;7875:23;7871:32;7868:52;;;7916:1;7913;7906:12;7868:52;7939:28;7957:9;7939:28;:::i;:::-;7929:38;;8017:2;8006:9;8002:18;7989:32;8030:31;8055:5;8030:31;:::i;:::-;8080:5;8070:15;;;7772:319;;;;;:::o;8885:789::-;8983:6;8991;8999;9007;9015;9068:2;9056:9;9047:7;9043:23;9039:32;9036:52;;;9084:1;9081;9074:12;9036:52;9107:28;9125:9;9107:28;:::i;:::-;9097:38;-1:-1:-1;9186:2:23;9171:18;;9158:32;-1:-1:-1;;;;;9239:14:23;;;9236:34;;;9266:1;9263;9256:12;9236:34;9305:58;9355:7;9346:6;9335:9;9331:22;9305:58;:::i;:::-;9382:8;;-1:-1:-1;9279:84:23;-1:-1:-1;9470:2:23;9455:18;;9442:32;;-1:-1:-1;9486:16:23;;;9483:36;;;9515:1;9512;9505:12;9483:36;;9554:60;9606:7;9595:8;9584:9;9580:24;9554:60;:::i;:::-;8885:789;;;;-1:-1:-1;8885:789:23;;-1:-1:-1;9633:8:23;;9528:86;8885:789;-1:-1:-1;;;8885:789:23:o;9679:180::-;9735:6;9788:2;9776:9;9767:7;9763:23;9759:32;9756:52;;;9804:1;9801;9794:12;9756:52;9827:26;9843:9;9827:26;:::i;9864:180::-;9923:6;9976:2;9964:9;9955:7;9951:23;9947:32;9944:52;;;9992:1;9989;9982:12;9944:52;-1:-1:-1;10015:23:23;;9864:180;-1:-1:-1;9864:180:23:o;10049:388::-;10117:6;10125;10178:2;10166:9;10157:7;10153:23;10149:32;10146:52;;;10194:1;10191;10184:12;10146:52;10233:9;10220:23;10252:31;10277:5;10252:31;:::i;10442:1067::-;10566:6;10574;10582;10590;10598;10606;10614;10622;10675:3;10663:9;10654:7;10650:23;10646:33;10643:53;;;10692:1;10689;10682:12;10643:53;10715:28;10733:9;10715:28;:::i;:::-;10705:38;-1:-1:-1;10794:2:23;10779:18;;10766:32;-1:-1:-1;;;;;10847:14:23;;;10844:34;;;10874:1;10871;10864:12;10844:34;10913:58;10963:7;10954:6;10943:9;10939:22;10913:58;:::i;:::-;10990:8;;-1:-1:-1;10887:84:23;-1:-1:-1;11075:2:23;11060:18;;11047:32;;-1:-1:-1;11088:31:23;11047:32;11088:31;:::i;:::-;11138:5;11128:15;;11162:37;11195:2;11184:9;11180:18;11162:37;:::i;:::-;11152:47;;11246:3;11235:9;11231:19;11218:33;11208:43;;11304:3;11293:9;11289:19;11276:33;11260:49;;11334:2;11324:8;11321:16;11318:36;;;11350:1;11347;11340:12;11318:36;;11389:60;11441:7;11430:8;11419:9;11415:24;11389:60;:::i;:::-;10442:1067;;;;-1:-1:-1;10442:1067:23;;-1:-1:-1;10442:1067:23;;;;;;11468:8;-1:-1:-1;;;10442:1067:23:o;11514:1185::-;11654:6;11662;11670;11678;11686;11694;11702;11755:3;11743:9;11734:7;11730:23;11726:33;11723:53;;;11772:1;11769;11762:12;11723:53;11795:28;11813:9;11795:28;:::i;:::-;11785:38;-1:-1:-1;11874:2:23;11859:18;;11846:32;-1:-1:-1;;;;;11927:14:23;;;11924:34;;;11954:1;11951;11944:12;11924:34;11977:49;12018:7;12009:6;11998:9;11994:22;11977:49;:::i;:::-;11967:59;;12079:2;12068:9;12064:18;12051:32;12035:48;;12108:2;12098:8;12095:16;12092:36;;;12124:1;12121;12114:12;12092:36;12163:60;12215:7;12204:8;12193:9;12189:24;12163:60;:::i;:::-;12242:8;;-1:-1:-1;12137:86:23;-1:-1:-1;12327:2:23;12312:18;;12299:32;;-1:-1:-1;12340:31:23;12299:32;12340:31;:::i;:::-;12390:5;;-1:-1:-1;12447:3:23;12432:19;;12419:33;;12461;12419;12461;:::i;:::-;12513:7;;-1:-1:-1;12573:3:23;12558:19;;12545:33;;12590:16;;;12587:36;;;12619:1;12616;12609:12;12587:36;;12642:51;12685:7;12674:8;12663:9;12659:24;12642:51;:::i;:::-;12632:61;;;11514:1185;;;;;;;;;;:::o;12704:533::-;12797:6;12805;12813;12821;12874:3;12862:9;12853:7;12849:23;12845:33;12842:53;;;12891:1;12888;12881:12;12842:53;12914:28;12932:9;12914:28;:::i;:::-;12904:38;;12961:37;12994:2;12983:9;12979:18;12961:37;:::i;:::-;12951:47;-1:-1:-1;13045:2:23;13030:18;;13017:32;;-1:-1:-1;13100:2:23;13085:18;;13072:32;-1:-1:-1;;;;;13116:30:23;;13113:50;;;13159:1;13156;13149:12;13113:50;13182:49;13223:7;13214:6;13203:9;13199:22;13182:49;:::i;:::-;13172:59;;;12704:533;;;;;;;:::o;13242:460::-;13326:6;13334;13342;13350;13403:3;13391:9;13382:7;13378:23;13374:33;13371:53;;;13420:1;13417;13410:12;13371:53;13443:28;13461:9;13443:28;:::i;:::-;13433:38;;13490:37;13523:2;13512:9;13508:18;13490:37;:::i;:::-;13480:47;;13577:2;13566:9;13562:18;13549:32;13590:31;13615:5;13590:31;:::i;:::-;13242:460;;;;-1:-1:-1;13640:5:23;;13692:2;13677:18;13664:32;;-1:-1:-1;;13242:460:23:o;13889:320::-;13957:6;14010:2;13998:9;13989:7;13985:23;13981:32;13978:52;;;14026:1;14023;14016:12;13978:52;14053:23;;-1:-1:-1;;;;;14088:30:23;;14085:50;;;14131:1;14128;14121:12;14085:50;14154:49;14195:7;14186:6;14175:9;14171:22;14154:49;:::i;:::-;14144:59;13889:320;-1:-1:-1;;;;13889:320:23:o;14214:271::-;14397:6;14389;14384:3;14371:33;14353:3;14423:16;;14448:13;;;14423:16;14214:271;-1:-1:-1;14214:271:23:o;14490:380::-;14569:1;14565:12;;;;14612;;;14633:61;;14687:4;14679:6;14675:17;14665:27;;14633:61;14740:2;14732:6;14729:14;14709:18;14706:38;14703:161;;14786:10;14781:3;14777:20;14774:1;14767:31;14821:4;14818:1;14811:15;14849:4;14846:1;14839:15;14703:161;;14490:380;;;:::o;14875:127::-;14936:10;14931:3;14927:20;14924:1;14917:31;14967:4;14964:1;14957:15;14991:4;14988:1;14981:15;15007:125;15072:9;;;15093:10;;;15090:36;;;15106:18;;:::i;15137:356::-;15339:2;15321:21;;;15358:18;;;15351:30;15417:34;15412:2;15397:18;;15390:62;15484:2;15469:18;;15137:356::o;15856:266::-;15944:6;15939:3;15932:19;15996:6;15989:5;15982:4;15977:3;15973:14;15960:43;-1:-1:-1;16048:1:23;16023:16;;;16041:4;16019:27;;;16012:38;;;;16104:2;16083:15;;;-1:-1:-1;;16079:29:23;16070:39;;;16066:50;;15856:266::o;16127:326::-;16322:6;16314;16310:19;16299:9;16292:38;16366:2;16361;16350:9;16346:18;16339:30;16273:4;16386:61;16443:2;16432:9;16428:18;16420:6;16412;16386:61;:::i;16817:609::-;17094:6;17086;17082:19;17071:9;17064:38;17138:3;17133:2;17122:9;17118:18;17111:31;17045:4;17165:62;17222:3;17211:9;17207:19;17199:6;17191;17165:62;:::i;:::-;-1:-1:-1;;;;;17263:31:23;;17283:2;17243:18;;17236:59;17331:22;;;17326:2;17311:18;;17304:50;17371:49;17335:6;17405;17397;17371:49;:::i;:::-;17363:57;16817:609;-1:-1:-1;;;;;;;;;16817:609:23:o;17431:519::-;17680:6;17672;17668:19;17657:9;17650:38;17724:3;17719:2;17708:9;17704:18;17697:31;17631:4;17745:62;17802:3;17791:9;17787:19;17779:6;17771;17745:62;:::i;:::-;-1:-1:-1;;;;;17843:31:23;;;;17863:2;17823:18;;17816:59;-1:-1:-1;;;;;;17911:32:23;;;;17906:2;17891:18;;;17884:60;17737:70;17431:519;-1:-1:-1;;;17431:519:23:o;18360:209::-;18398:3;-1:-1:-1;;;;;18468:14:23;;;-1:-1:-1;;;;;;18494:15:23;;18491:41;;18512:18;;:::i;:::-;18561:1;18548:15;;18360:209;-1:-1:-1;;;18360:209:23:o;19054:544::-;19155:2;19150:3;19147:11;19144:448;;;19191:1;19216:5;19212:2;19205:17;19261:4;19257:2;19247:19;19331:2;19319:10;19315:19;19312:1;19308:27;19302:4;19298:38;19367:4;19355:10;19352:20;19349:47;;;-1:-1:-1;19390:4:23;19349:47;19445:2;19440:3;19436:12;19433:1;19429:20;19423:4;19419:31;19409:41;;19500:82;19518:2;19511:5;19508:13;19500:82;;;19563:17;;;19544:1;19533:13;19500:82;;;19504:3;;;19144:448;19054:544;;;:::o;19603:166::-;-1:-1:-1;;19731:1:23;19727:11;;;19723:24;19719:29;19709:40;19755:1;19751:11;;;;19706:57;;19603:166::o;19774:1348::-;19892:10;;-1:-1:-1;;;;;19914:30:23;;19911:56;;;19947:18;;:::i;:::-;19976:96;20065:6;20025:38;20057:4;20051:11;20025:38;:::i;:::-;20019:4;19976:96;:::i;:::-;20127:4;;20191:2;20180:14;;20208:1;20203:662;;;;20909:1;20926:6;20923:89;;;-1:-1:-1;20978:19:23;;;20972:26;20923:89;21038:67;21098:6;21091:5;21038:67;:::i;:::-;21032:4;21025:81;;20173:943;;20203:662;19001:1;18994:14;;;19038:4;19025:18;;-1:-1:-1;;20239:20:23;;;20356:236;20370:7;20367:1;20364:14;20356:236;;;20459:19;;;20453:26;20438:42;;20551:27;;;;20519:1;20507:14;;;;20386:19;;20356:236;;;20360:3;20620:6;20611:7;20608:19;20605:201;;;20681:19;;;20675:26;-1:-1:-1;;20764:1:23;20760:14;;;20776:3;20756:24;20752:37;20748:42;20733:58;20718:74;;20605:201;-1:-1:-1;;;;;20852:1:23;20836:14;;;20832:22;20819:36;;-1:-1:-1;19774:1348:23:o;21127:128::-;21194:9;;;21215:11;;;21212:37;;;21229:18;;:::i;21260:127::-;21321:10;21316:3;21312:20;21309:1;21302:31;21352:4;21349:1;21342:15;21376:4;21373:1;21366:15;21392:1426;21505:3;21499:4;21496:13;21493:26;;21512:5;;21392:1426::o;21493:26::-;21542:37;21574:3;21568:10;21542:37;:::i;:::-;-1:-1:-1;;;;;21591:30:23;;21588:56;;;21624:18;;:::i;:::-;21653:96;21742:6;21702:38;21734:4;21728:11;21702:38;:::i;21653:96::-;21775:1;21803:2;21795:6;21792:14;21820:1;21815:746;;;;22605:1;22622:6;22619:89;;;-1:-1:-1;22674:19:23;;;22668:26;22619:89;22734:67;22794:6;22787:5;22734:67;:::i;:::-;22728:4;22721:81;;21785:1027;;21815:746;19001:1;18994:14;;;19038:4;19025:18;;-1:-1:-1;;21851:20:23;;;19001:1;18994:14;;;19038:4;19025:18;;22013:9;22035:251;22049:7;22046:1;22043:14;22035:251;;;22131:21;;;22125:28;22110:44;;22181:1;22254:18;;;;22209:15;;;;22072:4;22065:12;22035:251;;;22039:3;22314:6;22305:7;22302:19;22299:203;;;22375:21;;;22369:28;-1:-1:-1;;22460:1:23;22456:14;;;22472:3;22452:24;22448:37;22444:42;22429:58;22414:74;;22299:203;;;;22548:1;22539:6;22536:1;22532:14;22528:22;22522:4;22515:36;21785:1027;;;;21392:1426;;:::o;22823:135::-;22862:3;22883:17;;;22880:43;;22903:18;;:::i;:::-;-1:-1:-1;22950:1:23;22939:13;;22823:135::o;22963:868::-;23314:6;23306;23302:19;23291:9;23284:38;23358:3;23353:2;23342:9;23338:18;23331:31;23265:4;23385:62;23442:3;23431:9;23427:19;23419:6;23411;23385:62;:::i;:::-;-1:-1:-1;;;;;23483:32:23;;23478:2;23463:18;;23456:60;-1:-1:-1;;;;;23552:31:23;;23547:2;23532:18;;23525:59;23621:22;;;23615:3;23600:19;;23593:51;23667:49;23625:6;23701;23693;23667:49;:::i;:::-;23653:63;;23765:9;23757:6;23753:22;23747:3;23736:9;23732:19;23725:51;23793:32;23818:6;23810;23793:32;:::i;:::-;23785:40;22963:868;-1:-1:-1;;;;;;;;;;;22963:868:23:o;25631:803::-;-1:-1:-1;;;;;;25958:3:23;25928:16;;;25924:47;25912:60;;-1:-1:-1;;;;;;25995:3:23;26039:16;;;26035:25;;26031:1;26022:11;;26015:46;-1:-1:-1;;;;;;26092:2:23;26137:15;;;26133:24;;26128:2;26119:12;;26112:46;26192:16;;;;26188:25;;;26183:2;26174:12;;26167:47;26248:15;;;26244:24;26239:2;26230:12;;;26223:46;;;;26292:13;;-1:-1:-1;;26314:73:23;;26292:13;;26375:2;26366:12;;;26349:15;;26314:73;:::i;:::-;26407:16;;;;26425:2;26403:25;;25631:803;-1:-1:-1;;;;;;;25631:803:23:o;27193:725::-;27506:6;27498;27494:19;27483:9;27476:38;27550:3;27545:2;27534:9;27530:18;27523:31;27457:4;27577:45;27617:3;27606:9;27602:19;27594:6;27577:45;:::i;:::-;-1:-1:-1;;;;;27658:32:23;;27653:2;27638:18;;27631:60;-1:-1:-1;;;;;27727:31:23;;27722:2;27707:18;;27700:59;27790:3;27775:19;;27768:35;;;27840:22;;;27678:3;27819:19;;27812:51;27880:32;27844:6;27897;27880:32;:::i;28330:168::-;28403:9;;;28434;;28451:15;;;28445:22;;28431:37;28421:71;;28472:18;;:::i;28503:127::-;28564:10;28559:3;28555:20;28552:1;28545:31;28595:4;28592:1;28585:15;28619:4;28616:1;28609:15;28635:120;28675:1;28701;28691:35;;28706:18;;:::i;:::-;-1:-1:-1;28740:9:23;;28635:120::o;28760:259::-;-1:-1:-1;;;;;28883:10:23;;;28895;;;28879:27;28926:20;;;;28832:19;28965:24;;;28955:58;;28993:18;;:::i;:::-;28955:58;;28760:259;;;;:::o;29024:201::-;29064:1;-1:-1:-1;;;;;29129:10:23;;;;29148:37;;29165:18;;:::i;:::-;29203:10;;29199:20;;;;;29024:201;-1:-1:-1;;29024:201:23:o;29230:582::-;29497:6;29489;29485:19;29474:9;29467:38;29541:3;29536:2;29525:9;29521:18;29514:31;29448:4;29568:62;29625:3;29614:9;29610:19;29602:6;29594;29568:62;:::i;:::-;-1:-1:-1;;;;;29666:31:23;;29686:2;29646:18;;29639:59;29734:22;;;29729:2;29714:18;;29707:50;29774:32;29738:6;29791;29774:32;:::i;:::-;29766:40;29230:582;-1:-1:-1;;;;;;;;29230:582:23:o;29817:127::-;29878:10;29873:3;29869:20;29866:1;29859:31;29909:4;29906:1;29899:15;29933:4;29930:1;29923:15"},"gasEstimates":{"creation":{"codeDepositCost":"2423600","executionCost":"infinite","totalCost":"infinite"},"external":{"blockNextMsg()":"24994","callReceive()":"2585","defaultAdapterParams()":"infinite","estimateFees(uint16,address,bytes,bool,bytes)":"infinite","forceResumeReceive(uint16,bytes)":"infinite","getChainId()":"2483","getConfig(uint16,uint16,address,uint256)":"infinite","getInboundNonce(uint16,bytes)":"infinite","getOutboundNonce(uint16,address)":"3096","getReceiveLibraryAddress(address)":"655","getReceiveVersion(address)":"1018","getSendLibraryAddress(address)":"765","getSendVersion(address)":"380","hasStoredPayload(uint16,bytes)":"infinite","inboundNonce(uint16,bytes)":"infinite","isReceivingPayload()":"2918","isSendingPayload()":"3017","lzEndpointLookup(address)":"3127","mockChainId()":"2995","msgsToDeliver(uint16,bytes,uint256)":"infinite","nextMsgBlocked()":"2519","oracleFee()":"3043","outboundNonce(uint16,address)":"3159","protocolFeeConfig()":"4395","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"infinite","relayerFeeConfig()":"5026","retryPayload(uint16,bytes,bytes)":"infinite","send(uint16,bytes,bytes,address,address,bytes)":"infinite","setCallReceive(bool)":"24993","setConfig(uint16,uint16,uint256,bytes)":"infinite","setDefaultAdapterParams(bytes)":"infinite","setDestLzEndpoint(address,address)":"infinite","setOracleFee(uint256)":"22796","setProtocolFee(uint256,uint256)":"44557","setReceiveVersion(uint16)":"346","setRelayerPrice(uint128,uint128,uint128,uint64,uint64)":"infinite","setSendVersion(uint16)":"280","storedPayload(uint16,bytes)":"infinite"},"internal":{"_clearMsgQue(uint16,bytes calldata)":"infinite","_getProtocolFees(bool,uint256,uint256)":"infinite","_getRelayerFee(uint16,uint16,address,uint256,bytes memory)":"infinite"}},"methodIdentifiers":{"blockNextMsg()":"d23104f1","callReceive()":"6fbac4b5","defaultAdapterParams()":"272bd384","estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","inboundNonce(uint16,bytes)":"9924d33b","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","lzEndpointLookup(address)":"c81b383a","mockChainId()":"db14f305","msgsToDeliver(uint16,bytes,uint256)":"12a9ee6b","nextMsgBlocked()":"3e0dd83e","oracleFee()":"f9cd3ceb","outboundNonce(uint16,address)":"b2086499","protocolFeeConfig()":"07d3277f","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","relayerFeeConfig()":"907c5e7e","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setCallReceive(bool)":"b2304574","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setDefaultAdapterParams(bytes)":"fbba623b","setDestLzEndpoint(address,address)":"c08f15a1","setOracleFee(uint256)":"b6d9ef60","setProtocolFee(uint256,uint256)":"240de277","setReceiveVersion(uint16)":"10ddb137","setRelayerPrice(uint128,uint128,uint128,uint64,uint64)":"2c365e25","setSendVersion(uint16)":"07e0db17","storedPayload(uint16,bytes)":"76a386dc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"Packet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"}],\"name\":\"PayloadCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"PayloadStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"}],\"name\":\"UaForceResumeReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"ValueTransferFailed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blockNextMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callReceive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdapterParams\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainID\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainID\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lzEndpointLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"msgsToDeliver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMsgBlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeBP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFeeConfig\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"dstPriceRatio\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"dstGasPriceInWei\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"dstNativeAmtCap\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"baseGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasPerByte\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_callReceive\",\"type\":\"bool\"}],\"name\":\"setCallReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"setDefaultAdapterParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lzEndpointAddr\",\"type\":\"address\"}],\"name\":\"setDestLzEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_oracleFee\",\"type\":\"uint256\"}],\"name\":\"setOracleFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zroFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nativeBP\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_dstPriceRatio\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_dstGasPriceInWei\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_dstNativeAmtCap\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"_baseGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_gasPerByte\",\"type\":\"uint64\"}],\"name\":\"setRelayerPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"storedPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"payloadLength\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/LZEndpointMock.sol\":\"LZEndpointMock\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"},\"contracts/mocks/LZEndpointMock.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/libs/LzLib.sol\\\";\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\\\";\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\\\";\\r\\n\\r\\n/*\\r\\nlike a real LayerZero enpoint but can be mocked, which handle message transmission, verification, and receipt.\\r\\n- blocking: LayerZero provides ordered delivery of messages from a given sender to a destination chain.\\r\\n- non-reentrancy: endpoint has a non-reentrancy guard for both the send() and receive(), respectively.\\r\\n- adapter parameters: allows UAs to add arbitrary transaction params in the send() function, like airdrop on destination chain.\\r\\nunlike a real LayerZero endpoint, it is\\r\\n- no messaging library versioning\\r\\n- send() will short circuit to lzReceive()\\r\\n- no user application configuration\\r\\n*/\\r\\ncontract LZEndpointMock is ILayerZeroEndpoint {\\r\\n    uint8 internal constant _NOT_ENTERED = 1;\\r\\n    uint8 internal constant _ENTERED = 2;\\r\\n\\r\\n    mapping(address => address) public lzEndpointLookup;\\r\\n\\r\\n    uint16 public mockChainId;\\r\\n    bool public nextMsgBlocked;\\r\\n    bool public callReceive; // if true, call lzReceive() in send()\\r\\n\\r\\n    // fee config\\r\\n    RelayerFeeConfig public relayerFeeConfig;\\r\\n    ProtocolFeeConfig public protocolFeeConfig;\\r\\n    uint public oracleFee;\\r\\n    bytes public defaultAdapterParams;\\r\\n\\r\\n    // path = remote addrss + local address\\r\\n    // inboundNonce = [srcChainId][path].\\r\\n    mapping(uint16 => mapping(bytes => uint64)) public inboundNonce;\\r\\n    //todo: this is a hack\\r\\n    // outboundNonce = [dstChainId][srcAddress]\\r\\n    mapping(uint16 => mapping(address => uint64)) public outboundNonce;\\r\\n    //    // outboundNonce = [dstChainId][path].\\r\\n    //    mapping(uint16 => mapping(bytes => uint64)) public outboundNonce;\\r\\n    // storedPayload = [srcChainId][path]\\r\\n    mapping(uint16 => mapping(bytes => StoredPayload)) public storedPayload;\\r\\n    // msgToDeliver = [srcChainId][path]\\r\\n    mapping(uint16 => mapping(bytes => QueuedPayload[])) public msgsToDeliver;\\r\\n\\r\\n    // reentrancy guard\\r\\n    uint8 internal _send_entered_state = 1;\\r\\n    uint8 internal _receive_entered_state = 1;\\r\\n\\r\\n    struct ProtocolFeeConfig {\\r\\n        uint zroFee;\\r\\n        uint nativeBP;\\r\\n    }\\r\\n\\r\\n    struct RelayerFeeConfig {\\r\\n        uint128 dstPriceRatio; // 10^10\\r\\n        uint128 dstGasPriceInWei;\\r\\n        uint128 dstNativeAmtCap;\\r\\n        uint64 baseGas;\\r\\n        uint64 gasPerByte;\\r\\n    }\\r\\n\\r\\n    struct StoredPayload {\\r\\n        uint64 payloadLength;\\r\\n        address dstAddress;\\r\\n        bytes32 payloadHash;\\r\\n    }\\r\\n\\r\\n    struct QueuedPayload {\\r\\n        address dstAddress;\\r\\n        uint64 nonce;\\r\\n        bytes payload;\\r\\n    }\\r\\n\\r\\n    modifier sendNonReentrant() {\\r\\n        require(_send_entered_state == _NOT_ENTERED, \\\"LayerZeroMock: no send reentrancy\\\");\\r\\n        _send_entered_state = _ENTERED;\\r\\n        _;\\r\\n        _send_entered_state = _NOT_ENTERED;\\r\\n    }\\r\\n\\r\\n    modifier receiveNonReentrant() {\\r\\n        require(_receive_entered_state == _NOT_ENTERED, \\\"LayerZeroMock: no receive reentrancy\\\");\\r\\n        _receive_entered_state = _ENTERED;\\r\\n        _;\\r\\n        _receive_entered_state = _NOT_ENTERED;\\r\\n    }\\r\\n\\r\\n    event UaForceResumeReceive(uint16 chainId, bytes srcAddress);\\r\\n    event PayloadCleared(uint16 srcChainId, bytes srcAddress, uint64 nonce, address dstAddress);\\r\\n    event PayloadStored(\\r\\n        uint16 srcChainId,\\r\\n        bytes srcAddress,\\r\\n        address dstAddress,\\r\\n        uint64 nonce,\\r\\n        bytes payload,\\r\\n        bytes reason\\r\\n    );\\r\\n    event ValueTransferFailed(address indexed to, uint indexed quantity);\\r\\n    event Packet(bytes payload);\\r\\n\\r\\n    constructor(uint16 _chainId) {\\r\\n        mockChainId = _chainId;\\r\\n\\r\\n        // init config\\r\\n        relayerFeeConfig = RelayerFeeConfig({\\r\\n            dstPriceRatio: 1e10, // 1:1, same chain, same native coin\\r\\n            dstGasPriceInWei: 1e10,\\r\\n            dstNativeAmtCap: 1e19,\\r\\n            baseGas: 100,\\r\\n            gasPerByte: 1\\r\\n        });\\r\\n        protocolFeeConfig = ProtocolFeeConfig({zroFee: 1e18, nativeBP: 1000}); // BP 0.1\\r\\n        oracleFee = 1e16;\\r\\n        defaultAdapterParams = LzLib.buildDefaultAdapterParams(100000);\\r\\n    }\\r\\n\\r\\n    // ------------------------------ ILayerZeroEndpoint Functions ------------------------------\\r\\n    function send(\\r\\n        uint16 _chainId,\\r\\n        bytes memory _path,\\r\\n        bytes calldata _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes memory _adapterParams\\r\\n    ) external payable override sendNonReentrant {\\r\\n        require(_path.length == 40, \\\"LayerZeroMock: incorrect remote address size\\\"); // only support evm chains\\r\\n\\r\\n        // not handle zro token\\r\\n        uint16 dstChainId = _chainId;\\r\\n        bytes memory adapterParams = _adapterParams.length > 0\\r\\n            ? _adapterParams\\r\\n            : defaultAdapterParams;\\r\\n        (uint nativeFee, ) = estimateFees(\\r\\n            dstChainId,\\r\\n            msg.sender,\\r\\n            _payload,\\r\\n            _zroPaymentAddress != address(0x0),\\r\\n            adapterParams\\r\\n        );\\r\\n        require(msg.value >= nativeFee, \\\"LayerZeroMock: not enough native for fees\\\");\\r\\n\\r\\n        uint64 nonce = ++outboundNonce[dstChainId][msg.sender];\\r\\n\\r\\n        // refund if they send too much\\r\\n        uint amount = msg.value - nativeFee;\\r\\n        if (amount > 0) {\\r\\n            (bool success, ) = _refundAddress.call{value: amount}(\\\"\\\");\\r\\n            require(success, \\\"LayerZeroMock: failed to refund\\\");\\r\\n        }\\r\\n\\r\\n        // Mock the process of receiving msg on dst chain\\r\\n        // Mock the relayer paying the dstNativeAddr the amount of extra native token\\r\\n        (, uint extraGas, uint dstNativeAmt, address payable dstNativeAddr) = LzLib\\r\\n            .decodeAdapterParams(adapterParams);\\r\\n        if (dstNativeAmt > 0) {\\r\\n            (bool success, ) = dstNativeAddr.call{value: dstNativeAmt}(\\\"\\\");\\r\\n            if (!success) {\\r\\n                emit ValueTransferFailed(dstNativeAddr, dstNativeAmt);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // emit the data packet\\r\\n        address dstAddr;\\r\\n        assembly {\\r\\n            dstAddr := mload(add(_path, 20))\\r\\n        }\\r\\n        bytes memory payload = _payload;\\r\\n        bytes memory encodedPayload = abi.encodePacked(\\r\\n            nonce,\\r\\n            mockChainId,\\r\\n            msg.sender,\\r\\n            dstChainId,\\r\\n            dstAddr,\\r\\n            payload\\r\\n        );\\r\\n        emit Packet(encodedPayload);\\r\\n\\r\\n        if (callReceive) {\\r\\n            address lzEndpoint = lzEndpointLookup[dstAddr];\\r\\n            require(\\r\\n                lzEndpoint != address(0),\\r\\n                \\\"LayerZeroMock: destination LayerZero Endpoint not found\\\"\\r\\n            );\\r\\n\\r\\n            bytes memory srcUaAddress = abi.encodePacked(msg.sender, dstAddr); // cast this address to bytes\\r\\n            LZEndpointMock(lzEndpoint).receivePayload(\\r\\n                mockChainId,\\r\\n                srcUaAddress,\\r\\n                dstAddr,\\r\\n                nonce,\\r\\n                extraGas,\\r\\n                payload\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _path,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint _gasLimit,\\r\\n        bytes calldata _payload\\r\\n    ) external override receiveNonReentrant {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\r\\n\\r\\n        // assert and increment the nonce. no message shuffling\\r\\n        require(_nonce == ++inboundNonce[_srcChainId][_path], \\\"LayerZeroMock: wrong nonce\\\");\\r\\n\\r\\n        // queue the following msgs inside of a stack to simulate a successful send on src, but not fully delivered on dst\\r\\n        if (sp.payloadHash != bytes32(0)) {\\r\\n            QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\\r\\n            QueuedPayload memory newMsg = QueuedPayload(_dstAddress, _nonce, _payload);\\r\\n\\r\\n            // warning, might run into gas issues trying to forward through a bunch of queued msgs\\r\\n            // shift all the msgs over so we can treat this like a fifo via array.pop()\\r\\n            if (msgs.length > 0) {\\r\\n                // extend the array\\r\\n                msgs.push(newMsg);\\r\\n\\r\\n                // shift all the indexes up for pop()\\r\\n                for (uint i = 0; i < msgs.length - 1; i++) {\\r\\n                    msgs[i + 1] = msgs[i];\\r\\n                }\\r\\n\\r\\n                // put the newMsg at the bottom of the stack\\r\\n                msgs[0] = newMsg;\\r\\n            } else {\\r\\n                msgs.push(newMsg);\\r\\n            }\\r\\n        } else if (nextMsgBlocked) {\\r\\n            storedPayload[_srcChainId][_path] = StoredPayload(\\r\\n                uint64(_payload.length),\\r\\n                _dstAddress,\\r\\n                keccak256(_payload)\\r\\n            );\\r\\n            emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, bytes(\\\"\\\"));\\r\\n            // ensure the next msgs that go through are no longer blocked\\r\\n            nextMsgBlocked = false;\\r\\n        } else {\\r\\n            try\\r\\n                ILayerZeroReceiver(_dstAddress).lzReceive{gas: _gasLimit}(\\r\\n                    _srcChainId,\\r\\n                    _path,\\r\\n                    _nonce,\\r\\n                    _payload\\r\\n                )\\r\\n            {} catch (bytes memory reason) {\\r\\n                storedPayload[_srcChainId][_path] = StoredPayload(\\r\\n                    uint64(_payload.length),\\r\\n                    _dstAddress,\\r\\n                    keccak256(_payload)\\r\\n                );\\r\\n                emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, reason);\\r\\n                // ensure the next msgs that go through are no longer blocked\\r\\n                nextMsgBlocked = false;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getInboundNonce(uint16 _chainID, bytes calldata _path)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (uint64)\\r\\n    {\\r\\n        return inboundNonce[_chainID][_path];\\r\\n    }\\r\\n\\r\\n    function getOutboundNonce(uint16 _chainID, address _srcAddress)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (uint64)\\r\\n    {\\r\\n        return outboundNonce[_chainID][_srcAddress];\\r\\n    }\\r\\n\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        address _userApplication,\\r\\n        bytes memory _payload,\\r\\n        bool _payInZRO,\\r\\n        bytes memory _adapterParams\\r\\n    ) public view returns (uint nativeFee, uint zroFee) {\\r\\n        bytes memory adapterParams = _adapterParams.length > 0\\r\\n            ? _adapterParams\\r\\n            : defaultAdapterParams;\\r\\n\\r\\n        // Relayer Fee\\r\\n        uint relayerFee = _getRelayerFee(\\r\\n            _dstChainId,\\r\\n            1,\\r\\n            _userApplication,\\r\\n            _payload.length,\\r\\n            adapterParams\\r\\n        );\\r\\n\\r\\n        // LayerZero Fee\\r\\n        uint protocolFee = _getProtocolFees(_payInZRO, relayerFee, oracleFee);\\r\\n        _payInZRO ? zroFee = protocolFee : nativeFee = protocolFee;\\r\\n\\r\\n        // return the sum of fees\\r\\n        nativeFee = nativeFee + relayerFee + oracleFee;\\r\\n    }\\r\\n\\r\\n    function getChainId() external view override returns (uint16) {\\r\\n        return mockChainId;\\r\\n    }\\r\\n\\r\\n    function retryPayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _path,\\r\\n        bytes calldata _payload\\r\\n    ) external override {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\r\\n        require(sp.payloadHash != bytes32(0), \\\"LayerZeroMock: no stored payload\\\");\\r\\n        require(\\r\\n            _payload.length == sp.payloadLength && keccak256(_payload) == sp.payloadHash,\\r\\n            \\\"LayerZeroMock: invalid payload\\\"\\r\\n        );\\r\\n\\r\\n        address dstAddress = sp.dstAddress;\\r\\n        // empty the storedPayload\\r\\n        sp.payloadLength = 0;\\r\\n        sp.dstAddress = address(0);\\r\\n        sp.payloadHash = bytes32(0);\\r\\n\\r\\n        uint64 nonce = inboundNonce[_srcChainId][_path];\\r\\n\\r\\n        ILayerZeroReceiver(dstAddress).lzReceive(_srcChainId, _path, nonce, _payload);\\r\\n        emit PayloadCleared(_srcChainId, _path, nonce, dstAddress);\\r\\n    }\\r\\n\\r\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _path)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\r\\n        return sp.payloadHash != bytes32(0);\\r\\n    }\\r\\n\\r\\n    function getSendLibraryAddress(address) external view override returns (address) {\\r\\n        return address(this);\\r\\n    }\\r\\n\\r\\n    function getReceiveLibraryAddress(address) external view override returns (address) {\\r\\n        return address(this);\\r\\n    }\\r\\n\\r\\n    function isSendingPayload() external view override returns (bool) {\\r\\n        return _send_entered_state == _ENTERED;\\r\\n    }\\r\\n\\r\\n    function isReceivingPayload() external view override returns (bool) {\\r\\n        return _receive_entered_state == _ENTERED;\\r\\n    }\\r\\n\\r\\n    function getConfig(\\r\\n        uint16, /*_version*/\\r\\n        uint16, /*_chainId*/\\r\\n        address, /*_ua*/\\r\\n        uint /*_configType*/\\r\\n    ) external pure override returns (bytes memory) {\\r\\n        return \\\"\\\";\\r\\n    }\\r\\n\\r\\n    function getSendVersion(\\r\\n        address /*_userApplication*/\\r\\n    ) external pure override returns (uint16) {\\r\\n        return 1;\\r\\n    }\\r\\n\\r\\n    function getReceiveVersion(\\r\\n        address /*_userApplication*/\\r\\n    ) external pure override returns (uint16) {\\r\\n        return 1;\\r\\n    }\\r\\n\\r\\n    function setConfig(\\r\\n        uint16, /*_version*/\\r\\n        uint16, /*_chainId*/\\r\\n        uint, /*_configType*/\\r\\n        bytes memory /*_config*/\\r\\n    ) external override {}\\r\\n\\r\\n    function setSendVersion(\\r\\n        uint16 /*version*/\\r\\n    ) external override {}\\r\\n\\r\\n    function setReceiveVersion(\\r\\n        uint16 /*version*/\\r\\n    ) external override {}\\r\\n\\r\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _path) external override {\\r\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\r\\n        // revert if no messages are cached. safeguard malicious UA behaviour\\r\\n        require(sp.payloadHash != bytes32(0), \\\"LayerZeroMock: no stored payload\\\");\\r\\n        require(sp.dstAddress == msg.sender, \\\"LayerZeroMock: invalid caller\\\");\\r\\n\\r\\n        // empty the storedPayload\\r\\n        sp.payloadLength = 0;\\r\\n        sp.dstAddress = address(0);\\r\\n        sp.payloadHash = bytes32(0);\\r\\n\\r\\n        emit UaForceResumeReceive(_srcChainId, _path);\\r\\n\\r\\n        // resume the receiving of msgs after we force clear the \\\"stuck\\\" msg\\r\\n        _clearMsgQue(_srcChainId, _path);\\r\\n    }\\r\\n\\r\\n    // ------------------------------ Other Public/External Functions --------------------------------------------------\\r\\n\\r\\n    // used to simulate messages received get stored as a payload\\r\\n    function blockNextMsg() external {\\r\\n        nextMsgBlocked = true;\\r\\n    }\\r\\n\\r\\n    function setDestLzEndpoint(address destAddr, address lzEndpointAddr) external {\\r\\n        lzEndpointLookup[destAddr] = lzEndpointAddr;\\r\\n    }\\r\\n\\r\\n    function setCallReceive(bool _callReceive) external {\\r\\n        callReceive = _callReceive;\\r\\n    }\\r\\n\\r\\n    function setRelayerPrice(\\r\\n        uint128 _dstPriceRatio,\\r\\n        uint128 _dstGasPriceInWei,\\r\\n        uint128 _dstNativeAmtCap,\\r\\n        uint64 _baseGas,\\r\\n        uint64 _gasPerByte\\r\\n    ) external {\\r\\n        relayerFeeConfig.dstPriceRatio = _dstPriceRatio;\\r\\n        relayerFeeConfig.dstGasPriceInWei = _dstGasPriceInWei;\\r\\n        relayerFeeConfig.dstNativeAmtCap = _dstNativeAmtCap;\\r\\n        relayerFeeConfig.baseGas = _baseGas;\\r\\n        relayerFeeConfig.gasPerByte = _gasPerByte;\\r\\n    }\\r\\n\\r\\n    function setProtocolFee(uint _zroFee, uint _nativeBP) external {\\r\\n        protocolFeeConfig.zroFee = _zroFee;\\r\\n        protocolFeeConfig.nativeBP = _nativeBP;\\r\\n    }\\r\\n\\r\\n    function setOracleFee(uint _oracleFee) external {\\r\\n        oracleFee = _oracleFee;\\r\\n    }\\r\\n\\r\\n    function setDefaultAdapterParams(bytes memory _adapterParams) external {\\r\\n        defaultAdapterParams = _adapterParams;\\r\\n    }\\r\\n\\r\\n    // --------------------- Internal Functions ---------------------\\r\\n    // simulates the relayer pushing through the rest of the msgs that got delayed due to the stored payload\\r\\n    function _clearMsgQue(uint16 _srcChainId, bytes calldata _path) internal {\\r\\n        QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\\r\\n\\r\\n        // warning, might run into gas issues trying to forward through a bunch of queued msgs\\r\\n        while (msgs.length > 0) {\\r\\n            QueuedPayload memory payload = msgs[msgs.length - 1];\\r\\n            ILayerZeroReceiver(payload.dstAddress).lzReceive(\\r\\n                _srcChainId,\\r\\n                _path,\\r\\n                payload.nonce,\\r\\n                payload.payload\\r\\n            );\\r\\n            msgs.pop();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _getProtocolFees(\\r\\n        bool _payInZro,\\r\\n        uint _relayerFee,\\r\\n        uint _oracleFee\\r\\n    ) internal view returns (uint) {\\r\\n        if (_payInZro) {\\r\\n            return protocolFeeConfig.zroFee;\\r\\n        } else {\\r\\n            return ((_relayerFee + _oracleFee) * protocolFeeConfig.nativeBP) / 10000;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _getRelayerFee(\\r\\n        uint16, /* _dstChainId */\\r\\n        uint16, /* _outboundProofType */\\r\\n        address, /* _userApplication */\\r\\n        uint _payloadSize,\\r\\n        bytes memory _adapterParams\\r\\n    ) internal view returns (uint) {\\r\\n        (uint16 txType, uint extraGas, uint dstNativeAmt, ) = LzLib.decodeAdapterParams(\\r\\n            _adapterParams\\r\\n        );\\r\\n        uint totalRemoteToken; // = baseGas + extraGas + requiredNativeAmount\\r\\n        if (txType == 2) {\\r\\n            require(\\r\\n                relayerFeeConfig.dstNativeAmtCap >= dstNativeAmt,\\r\\n                \\\"LayerZeroMock: dstNativeAmt too large \\\"\\r\\n            );\\r\\n            totalRemoteToken += dstNativeAmt;\\r\\n        }\\r\\n        // remoteGasTotal = dstGasPriceInWei * (baseGas + extraGas)\\r\\n        uint remoteGasTotal = relayerFeeConfig.dstGasPriceInWei *\\r\\n            (relayerFeeConfig.baseGas + extraGas);\\r\\n        totalRemoteToken += remoteGasTotal;\\r\\n\\r\\n        // tokenConversionRate = dstPrice / localPrice\\r\\n        // basePrice = totalRemoteToken * tokenConversionRate\\r\\n        uint basePrice = (totalRemoteToken * relayerFeeConfig.dstPriceRatio) / 10**10;\\r\\n\\r\\n        // pricePerByte = (dstGasPriceInWei * gasPerBytes) * tokenConversionRate\\r\\n        uint pricePerByte = (relayerFeeConfig.dstGasPriceInWei *\\r\\n            relayerFeeConfig.gasPerByte *\\r\\n            relayerFeeConfig.dstPriceRatio) / 10**10;\\r\\n\\r\\n        return basePrice + _payloadSize * pricePerByte;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4d43f45d8a5e85f7b7c37b3a24791f7b41a3ebe9f0dac9640cbc1f5a32e30d74\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3538,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"lzEndpointLookup","offset":0,"slot":"0","type":"t_mapping(t_address,t_address)"},{"astId":3540,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"mockChainId","offset":0,"slot":"1","type":"t_uint16"},{"astId":3542,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"nextMsgBlocked","offset":2,"slot":"1","type":"t_bool"},{"astId":3544,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"callReceive","offset":3,"slot":"1","type":"t_bool"},{"astId":3547,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"relayerFeeConfig","offset":0,"slot":"2","type":"t_struct(RelayerFeeConfig)3603_storage"},{"astId":3550,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"protocolFeeConfig","offset":0,"slot":"4","type":"t_struct(ProtocolFeeConfig)3592_storage"},{"astId":3552,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"oracleFee","offset":0,"slot":"6","type":"t_uint256"},{"astId":3554,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"defaultAdapterParams","offset":0,"slot":"7","type":"t_bytes_storage"},{"astId":3560,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"inboundNonce","offset":0,"slot":"8","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))"},{"astId":3566,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"outboundNonce","offset":0,"slot":"9","type":"t_mapping(t_uint16,t_mapping(t_address,t_uint64))"},{"astId":3573,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"storedPayload","offset":0,"slot":"10","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)3610_storage))"},{"astId":3581,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"msgsToDeliver","offset":0,"slot":"11","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)3617_storage)dyn_storage))"},{"astId":3584,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"_send_entered_state","offset":0,"slot":"12","type":"t_uint8"},{"astId":3587,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"_receive_entered_state","offset":1,"slot":"12","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(QueuedPayload)3617_storage)dyn_storage":{"base":"t_struct(QueuedPayload)3617_storage","encoding":"dynamic_array","label":"struct LZEndpointMock.QueuedPayload[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_uint64)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)3617_storage)dyn_storage)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => struct LZEndpointMock.QueuedPayload[])","numberOfBytes":"32","value":"t_array(t_struct(QueuedPayload)3617_storage)dyn_storage"},"t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)3610_storage)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => struct LZEndpointMock.StoredPayload)","numberOfBytes":"32","value":"t_struct(StoredPayload)3610_storage"},"t_mapping(t_bytes_memory_ptr,t_uint64)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_mapping(t_uint16,t_mapping(t_address,t_uint64))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(address => uint64))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint64)"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)3617_storage)dyn_storage))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)3617_storage)dyn_storage)"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)3610_storage))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)3610_storage)"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => uint64))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_uint64)"},"t_struct(ProtocolFeeConfig)3592_storage":{"encoding":"inplace","label":"struct LZEndpointMock.ProtocolFeeConfig","members":[{"astId":3589,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"zroFee","offset":0,"slot":"0","type":"t_uint256"},{"astId":3591,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"nativeBP","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(QueuedPayload)3617_storage":{"encoding":"inplace","label":"struct LZEndpointMock.QueuedPayload","members":[{"astId":3612,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstAddress","offset":0,"slot":"0","type":"t_address"},{"astId":3614,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"nonce","offset":20,"slot":"0","type":"t_uint64"},{"astId":3616,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"payload","offset":0,"slot":"1","type":"t_bytes_storage"}],"numberOfBytes":"64"},"t_struct(RelayerFeeConfig)3603_storage":{"encoding":"inplace","label":"struct LZEndpointMock.RelayerFeeConfig","members":[{"astId":3594,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstPriceRatio","offset":0,"slot":"0","type":"t_uint128"},{"astId":3596,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstGasPriceInWei","offset":16,"slot":"0","type":"t_uint128"},{"astId":3598,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstNativeAmtCap","offset":0,"slot":"1","type":"t_uint128"},{"astId":3600,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"baseGas","offset":16,"slot":"1","type":"t_uint64"},{"astId":3602,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"gasPerByte","offset":24,"slot":"1","type":"t_uint64"}],"numberOfBytes":"64"},"t_struct(StoredPayload)3610_storage":{"encoding":"inplace","label":"struct LZEndpointMock.StoredPayload","members":[{"astId":3605,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"payloadLength","offset":0,"slot":"0","type":"t_uint64"},{"astId":3607,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstAddress","offset":8,"slot":"0","type":"t_address"},{"astId":3609,"contract":"contracts/mocks/LZEndpointMock.sol:LZEndpointMock","label":"payloadHash","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mocks/Token.sol":{"Token":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint8","name":"_decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1850":{"entryPoint":null,"id":1850,"parameterSlots":2,"returnSlots":0},"@_4895":{"entryPoint":null,"id":4895,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_2391":{"entryPoint":null,"id":2391,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2380":{"entryPoint":351,"id":2380,"parameterSlots":3,"returnSlots":0},"@_mint_2209":{"entryPoint":153,"id":2209,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":378,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory":{"entryPoint":553,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1359,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1054,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1309,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1127,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1333,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":746,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":828,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":686,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1032,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":356,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6654:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:23"},"nodeType":"YulFunctionCall","src":"66:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:23"},"nodeType":"YulFunctionCall","src":"56:31:23"},"nodeType":"YulExpressionStatement","src":"56:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:23"},"nodeType":"YulFunctionCall","src":"96:15:23"},"nodeType":"YulExpressionStatement","src":"96:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:23"},"nodeType":"YulFunctionCall","src":"120:15:23"},"nodeType":"YulExpressionStatement","src":"120:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:23"},{"body":{"nodeType":"YulBlock","src":"210:776:23","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:23"},"nodeType":"YulFunctionCall","src":"261:12:23"},"nodeType":"YulExpressionStatement","src":"261:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:23"},"nodeType":"YulFunctionCall","src":"234:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:23"},"nodeType":"YulFunctionCall","src":"230:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:23"},"nodeType":"YulFunctionCall","src":"223:35:23"},"nodeType":"YulIf","src":"220:55:23"},{"nodeType":"YulVariableDeclaration","src":"284:23:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:23"},"nodeType":"YulFunctionCall","src":"294:13:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:23"},"nodeType":"YulFunctionCall","src":"330:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:23"},"nodeType":"YulFunctionCall","src":"326:18:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:23"},"nodeType":"YulFunctionCall","src":"369:18:23"},"nodeType":"YulExpressionStatement","src":"369:18:23"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:23"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:23"},"nodeType":"YulFunctionCall","src":"356:10:23"},"nodeType":"YulIf","src":"353:36:23"},{"nodeType":"YulVariableDeclaration","src":"398:17:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:23"},"nodeType":"YulFunctionCall","src":"408:7:23"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:23"},"nodeType":"YulFunctionCall","src":"438:9:23"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:23"},"nodeType":"YulFunctionCall","src":"498:13:23"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:23"},"nodeType":"YulFunctionCall","src":"494:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:23","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:23"},"nodeType":"YulFunctionCall","src":"490:31:23"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:23"},"nodeType":"YulFunctionCall","src":"486:40:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:23"},"nodeType":"YulFunctionCall","src":"474:53:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:23"},"nodeType":"YulFunctionCall","src":"588:18:23"},"nodeType":"YulExpressionStatement","src":"588:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:23"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:23"},"nodeType":"YulFunctionCall","src":"542:18:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:23"},"nodeType":"YulFunctionCall","src":"562:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:23"},"nodeType":"YulFunctionCall","src":"539:46:23"},"nodeType":"YulIf","src":"536:72:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:23"},"nodeType":"YulFunctionCall","src":"617:22:23"},"nodeType":"YulExpressionStatement","src":"617:22:23"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:23"},"nodeType":"YulFunctionCall","src":"648:18:23"},"nodeType":"YulExpressionStatement","src":"648:18:23"},{"nodeType":"YulVariableDeclaration","src":"675:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:23","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:23"},"nodeType":"YulFunctionCall","src":"737:12:23"},"nodeType":"YulExpressionStatement","src":"737:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:23"},"nodeType":"YulFunctionCall","src":"708:15:23"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:23"},"nodeType":"YulFunctionCall","src":"704:24:23"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:23"},"nodeType":"YulFunctionCall","src":"701:33:23"},"nodeType":"YulIf","src":"698:53:23"},{"nodeType":"YulVariableDeclaration","src":"760:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:23"},"nodeType":"YulFunctionCall","src":"850:14:23"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:23"},"nodeType":"YulFunctionCall","src":"846:23:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:23"},"nodeType":"YulFunctionCall","src":"881:14:23"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:23"},"nodeType":"YulFunctionCall","src":"877:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:23"},"nodeType":"YulFunctionCall","src":"871:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:23"},"nodeType":"YulFunctionCall","src":"839:63:23"},"nodeType":"YulExpressionStatement","src":"839:63:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:23"},"nodeType":"YulFunctionCall","src":"787:9:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:23","statements":[{"nodeType":"YulAssignment","src":"799:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:23"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:23"},"nodeType":"YulFunctionCall","src":"804:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:23","statements":[]},"src":"779:133:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:23"},"nodeType":"YulFunctionCall","src":"932:15:23"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:23"},"nodeType":"YulFunctionCall","src":"928:24:23"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:23"},"nodeType":"YulFunctionCall","src":"921:35:23"},"nodeType":"YulExpressionStatement","src":"921:35:23"},{"nodeType":"YulAssignment","src":"965:15:23","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:23"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:23","type":""}],"src":"146:840:23"},{"body":{"nodeType":"YulBlock","src":"1124:579:23","statements":[{"body":{"nodeType":"YulBlock","src":"1170:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1179:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1182:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1172:6:23"},"nodeType":"YulFunctionCall","src":"1172:12:23"},"nodeType":"YulExpressionStatement","src":"1172:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1154:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1141:3:23"},"nodeType":"YulFunctionCall","src":"1141:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1166:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1137:3:23"},"nodeType":"YulFunctionCall","src":"1137:32:23"},"nodeType":"YulIf","src":"1134:52:23"},{"nodeType":"YulVariableDeclaration","src":"1195:30:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1209:5:23"},"nodeType":"YulFunctionCall","src":"1209:16:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1199:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1234:28:23","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1252:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1256:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1248:3:23"},"nodeType":"YulFunctionCall","src":"1248:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1260:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1244:3:23"},"nodeType":"YulFunctionCall","src":"1244:18:23"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1238:2:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1289:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1298:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1301:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1291:6:23"},"nodeType":"YulFunctionCall","src":"1291:12:23"},"nodeType":"YulExpressionStatement","src":"1291:12:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1277:6:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1285:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1274:2:23"},"nodeType":"YulFunctionCall","src":"1274:14:23"},"nodeType":"YulIf","src":"1271:34:23"},{"nodeType":"YulAssignment","src":"1314:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1368:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:23"},"nodeType":"YulFunctionCall","src":"1353:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:23"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1324:28:23"},"nodeType":"YulFunctionCall","src":"1324:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1314:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1394:41:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:23"},"nodeType":"YulFunctionCall","src":"1416:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1410:5:23"},"nodeType":"YulFunctionCall","src":"1410:25:23"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1398:8:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:23"},"nodeType":"YulFunctionCall","src":"1466:12:23"},"nodeType":"YulExpressionStatement","src":"1466:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1450:8:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1460:2:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1447:2:23"},"nodeType":"YulFunctionCall","src":"1447:16:23"},"nodeType":"YulIf","src":"1444:36:23"},{"nodeType":"YulAssignment","src":"1489:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1532:9:23"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1543:8:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:23"},"nodeType":"YulFunctionCall","src":"1528:24:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1554:7:23"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1499:28:23"},"nodeType":"YulFunctionCall","src":"1499:63:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1489:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1571:38:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1594:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1605:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1590:3:23"},"nodeType":"YulFunctionCall","src":"1590:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1584:5:23"},"nodeType":"YulFunctionCall","src":"1584:25:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1575:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1657:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1666:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1659:6:23"},"nodeType":"YulFunctionCall","src":"1659:12:23"},"nodeType":"YulExpressionStatement","src":"1659:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1631:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1642:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1649:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1638:3:23"},"nodeType":"YulFunctionCall","src":"1638:16:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1628:2:23"},"nodeType":"YulFunctionCall","src":"1628:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1621:6:23"},"nodeType":"YulFunctionCall","src":"1621:35:23"},"nodeType":"YulIf","src":"1618:55:23"},{"nodeType":"YulAssignment","src":"1682:15:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1692:5:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1682:6:23"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1074:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1085:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1097:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1105:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1113:6:23","type":""}],"src":"991:712:23"},{"body":{"nodeType":"YulBlock","src":"1763:325:23","statements":[{"nodeType":"YulAssignment","src":"1773:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1787:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1790:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1783:3:23"},"nodeType":"YulFunctionCall","src":"1783:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1773:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1804:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1834:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1840:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1830:3:23"},"nodeType":"YulFunctionCall","src":"1830:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1808:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1881:31:23","statements":[{"nodeType":"YulAssignment","src":"1883:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1897:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1905:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1893:3:23"},"nodeType":"YulFunctionCall","src":"1893:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1883:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1861:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1854:6:23"},"nodeType":"YulFunctionCall","src":"1854:26:23"},"nodeType":"YulIf","src":"1851:61:23"},{"body":{"nodeType":"YulBlock","src":"1971:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1992:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1999:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2004:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1995:3:23"},"nodeType":"YulFunctionCall","src":"1995:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1985:6:23"},"nodeType":"YulFunctionCall","src":"1985:31:23"},"nodeType":"YulExpressionStatement","src":"1985:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2036:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2039:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2029:6:23"},"nodeType":"YulFunctionCall","src":"2029:15:23"},"nodeType":"YulExpressionStatement","src":"2029:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2064:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2067:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2057:6:23"},"nodeType":"YulFunctionCall","src":"2057:15:23"},"nodeType":"YulExpressionStatement","src":"2057:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1927:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1950:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1958:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1947:2:23"},"nodeType":"YulFunctionCall","src":"1947:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1924:2:23"},"nodeType":"YulFunctionCall","src":"1924:38:23"},"nodeType":"YulIf","src":"1921:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1743:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1752:6:23","type":""}],"src":"1708:380:23"},{"body":{"nodeType":"YulBlock","src":"2149:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2166:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2169:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2159:6:23"},"nodeType":"YulFunctionCall","src":"2159:14:23"},"nodeType":"YulExpressionStatement","src":"2159:14:23"},{"nodeType":"YulAssignment","src":"2182:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2200:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2203:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2190:9:23"},"nodeType":"YulFunctionCall","src":"2190:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2182:4:23"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2132:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2140:4:23","type":""}],"src":"2093:121:23"},{"body":{"nodeType":"YulBlock","src":"2300:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"2333:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2347:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2357:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2351:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2378:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"2382:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:23"},"nodeType":"YulFunctionCall","src":"2371:17:23"},"nodeType":"YulExpressionStatement","src":"2371:17:23"},{"nodeType":"YulVariableDeclaration","src":"2401:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2423:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"2427:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2413:9:23"},"nodeType":"YulFunctionCall","src":"2413:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2405:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2445:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2468:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2478:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2485:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2497:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:23"},"nodeType":"YulFunctionCall","src":"2481:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2474:3:23"},"nodeType":"YulFunctionCall","src":"2474:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2464:3:23"},"nodeType":"YulFunctionCall","src":"2464:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2449:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2539:23:23","statements":[{"nodeType":"YulAssignment","src":"2541:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"2556:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2541:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2521:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2533:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2518:2:23"},"nodeType":"YulFunctionCall","src":"2518:20:23"},"nodeType":"YulIf","src":"2515:47:23"},{"nodeType":"YulVariableDeclaration","src":"2575:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2589:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2599:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2606:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2611:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:23"},"nodeType":"YulFunctionCall","src":"2602:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2595:3:23"},"nodeType":"YulFunctionCall","src":"2595:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2585:3:23"},"nodeType":"YulFunctionCall","src":"2585:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2579:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2629:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2642:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2633:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2727:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2736:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"2743:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2729:6:23"},"nodeType":"YulFunctionCall","src":"2729:17:23"},"nodeType":"YulExpressionStatement","src":"2729:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2677:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"2684:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2674:2:23"},"nodeType":"YulFunctionCall","src":"2674:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2688:26:23","statements":[{"nodeType":"YulAssignment","src":"2690:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2703:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2710:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2699:3:23"},"nodeType":"YulFunctionCall","src":"2699:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2690:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"2670:3:23","statements":[]},"src":"2666:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2316:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2321:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2313:2:23"},"nodeType":"YulFunctionCall","src":"2313:11:23"},"nodeType":"YulIf","src":"2310:448:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2272:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"2279:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2284:10:23","type":""}],"src":"2219:545:23"},{"body":{"nodeType":"YulBlock","src":"2854:81:23","statements":[{"nodeType":"YulAssignment","src":"2864:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2879:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2897:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2900:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2893:3:23"},"nodeType":"YulFunctionCall","src":"2893:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2910:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2906:3:23"},"nodeType":"YulFunctionCall","src":"2906:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2889:3:23"},"nodeType":"YulFunctionCall","src":"2889:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2885:3:23"},"nodeType":"YulFunctionCall","src":"2885:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2875:3:23"},"nodeType":"YulFunctionCall","src":"2875:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2924:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2917:3:23"},"nodeType":"YulFunctionCall","src":"2917:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2872:2:23"},"nodeType":"YulFunctionCall","src":"2872:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2864:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2831:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"2837:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2845:4:23","type":""}],"src":"2769:166:23"},{"body":{"nodeType":"YulBlock","src":"3036:1256:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3046:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3066:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3060:5:23"},"nodeType":"YulFunctionCall","src":"3060:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3050:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3113:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3115:16:23"},"nodeType":"YulFunctionCall","src":"3115:18:23"},"nodeType":"YulExpressionStatement","src":"3115:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3085:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3101:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3105:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3097:3:23"},"nodeType":"YulFunctionCall","src":"3097:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"3109:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3093:3:23"},"nodeType":"YulFunctionCall","src":"3093:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3082:2:23"},"nodeType":"YulFunctionCall","src":"3082:30:23"},"nodeType":"YulIf","src":"3079:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3188:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3226:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3220:5:23"},"nodeType":"YulFunctionCall","src":"3220:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3194:25:23"},"nodeType":"YulFunctionCall","src":"3194:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"3234:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3144:43:23"},"nodeType":"YulFunctionCall","src":"3144:97:23"},"nodeType":"YulExpressionStatement","src":"3144:97:23"},{"nodeType":"YulVariableDeclaration","src":"3250:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3267:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3254:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3277:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3296:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3281:11:23","type":""}]},{"nodeType":"YulAssignment","src":"3309:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3322:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3309:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3379:656:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3393:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3412:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3424:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3420:3:23"},"nodeType":"YulFunctionCall","src":"3420:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3408:3:23"},"nodeType":"YulFunctionCall","src":"3408:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3397:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3441:49:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3485:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3455:29:23"},"nodeType":"YulFunctionCall","src":"3455:35:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3445:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3503:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3512:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3507:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3590:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3615:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3633:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3638:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3629:3:23"},"nodeType":"YulFunctionCall","src":"3629:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3623:5:23"},"nodeType":"YulFunctionCall","src":"3623:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3608:6:23"},"nodeType":"YulFunctionCall","src":"3608:42:23"},"nodeType":"YulExpressionStatement","src":"3608:42:23"},{"nodeType":"YulAssignment","src":"3667:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3681:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3689:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3677:3:23"},"nodeType":"YulFunctionCall","src":"3677:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3667:6:23"}]},{"nodeType":"YulAssignment","src":"3708:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3725:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3736:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3721:3:23"},"nodeType":"YulFunctionCall","src":"3721:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3708:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3537:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3540:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3534:2:23"},"nodeType":"YulFunctionCall","src":"3534:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3549:28:23","statements":[{"nodeType":"YulAssignment","src":"3551:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3560:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3563:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:23"},"nodeType":"YulFunctionCall","src":"3556:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3551:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3530:3:23","statements":[]},"src":"3526:236:23"},{"body":{"nodeType":"YulBlock","src":"3810:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3828:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3855:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3860:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:23"},"nodeType":"YulFunctionCall","src":"3851:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3845:5:23"},"nodeType":"YulFunctionCall","src":"3845:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3832:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3895:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3907:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3934:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3937:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3930:3:23"},"nodeType":"YulFunctionCall","src":"3930:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"3946:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3926:3:23"},"nodeType":"YulFunctionCall","src":"3926:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3956:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3952:3:23"},"nodeType":"YulFunctionCall","src":"3952:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3922:3:23"},"nodeType":"YulFunctionCall","src":"3922:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3918:3:23"},"nodeType":"YulFunctionCall","src":"3918:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3903:3:23"},"nodeType":"YulFunctionCall","src":"3903:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3888:6:23"},"nodeType":"YulFunctionCall","src":"3888:74:23"},"nodeType":"YulExpressionStatement","src":"3888:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3781:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"3790:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3778:2:23"},"nodeType":"YulFunctionCall","src":"3778:19:23"},"nodeType":"YulIf","src":"3775:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3996:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4013:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4006:3:23"},"nodeType":"YulFunctionCall","src":"4006:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"4022:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4002:3:23"},"nodeType":"YulFunctionCall","src":"4002:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3989:6:23"},"nodeType":"YulFunctionCall","src":"3989:36:23"},"nodeType":"YulExpressionStatement","src":"3989:36:23"}]},"nodeType":"YulCase","src":"3372:663:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3377:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4052:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4066:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4079:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4070:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4115:67:23","statements":[{"nodeType":"YulAssignment","src":"4133:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4152:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4157:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:23"},"nodeType":"YulFunctionCall","src":"4148:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4142:5:23"},"nodeType":"YulFunctionCall","src":"4142:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4133:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4096:6:23"},"nodeType":"YulIf","src":"4093:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4202:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4261:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"4268:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4208:52:23"},"nodeType":"YulFunctionCall","src":"4208:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4195:6:23"},"nodeType":"YulFunctionCall","src":"4195:81:23"},"nodeType":"YulExpressionStatement","src":"4195:81:23"}]},"nodeType":"YulCase","src":"4044:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3352:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3360:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:23"},"nodeType":"YulFunctionCall","src":"3349:14:23"},"nodeType":"YulSwitch","src":"3342:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3021:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"3027:3:23","type":""}],"src":"2940:1352:23"},{"body":{"nodeType":"YulBlock","src":"4329:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4346:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4353:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4358:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4349:3:23"},"nodeType":"YulFunctionCall","src":"4349:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4339:6:23"},"nodeType":"YulFunctionCall","src":"4339:31:23"},"nodeType":"YulExpressionStatement","src":"4339:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4386:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4389:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4379:6:23"},"nodeType":"YulFunctionCall","src":"4379:15:23"},"nodeType":"YulExpressionStatement","src":"4379:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4410:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4413:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4403:6:23"},"nodeType":"YulFunctionCall","src":"4403:15:23"},"nodeType":"YulExpressionStatement","src":"4403:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4297:127:23"},{"body":{"nodeType":"YulBlock","src":"4493:358:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4503:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4518:1:23","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"4507:7:23","type":""}]},{"nodeType":"YulAssignment","src":"4528:16:23","value":{"name":"power_1","nodeType":"YulIdentifier","src":"4537:7:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4528:5:23"}]},{"nodeType":"YulAssignment","src":"4553:13:23","value":{"name":"_base","nodeType":"YulIdentifier","src":"4561:5:23"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4553:4:23"}]},{"body":{"nodeType":"YulBlock","src":"4617:228:23","statements":[{"body":{"nodeType":"YulBlock","src":"4662:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4664:16:23"},"nodeType":"YulFunctionCall","src":"4664:18:23"},"nodeType":"YulExpressionStatement","src":"4664:18:23"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4637:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4651:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4647:3:23"},"nodeType":"YulFunctionCall","src":"4647:6:23"},{"name":"base","nodeType":"YulIdentifier","src":"4655:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4643:3:23"},"nodeType":"YulFunctionCall","src":"4643:17:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4634:2:23"},"nodeType":"YulFunctionCall","src":"4634:27:23"},"nodeType":"YulIf","src":"4631:53:23"},{"body":{"nodeType":"YulBlock","src":"4723:29:23","statements":[{"nodeType":"YulAssignment","src":"4725:25:23","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"4738:5:23"},{"name":"base","nodeType":"YulIdentifier","src":"4745:4:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4734:3:23"},"nodeType":"YulFunctionCall","src":"4734:16:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4725:5:23"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4704:8:23"},{"name":"power_1","nodeType":"YulIdentifier","src":"4714:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4700:3:23"},"nodeType":"YulFunctionCall","src":"4700:22:23"},"nodeType":"YulIf","src":"4697:55:23"},{"nodeType":"YulAssignment","src":"4765:23:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4777:4:23"},{"name":"base","nodeType":"YulIdentifier","src":"4783:4:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4773:3:23"},"nodeType":"YulFunctionCall","src":"4773:15:23"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4765:4:23"}]},{"nodeType":"YulAssignment","src":"4801:34:23","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4817:7:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"4826:8:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4813:3:23"},"nodeType":"YulFunctionCall","src":"4813:22:23"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"4801:8:23"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4586:8:23"},{"name":"power_1","nodeType":"YulIdentifier","src":"4596:7:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4583:2:23"},"nodeType":"YulFunctionCall","src":"4583:21:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4605:3:23","statements":[]},"pre":{"nodeType":"YulBlock","src":"4579:3:23","statements":[]},"src":"4575:270:23"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"4457:5:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4464:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4477:5:23","type":""},{"name":"base","nodeType":"YulTypedName","src":"4484:4:23","type":""}],"src":"4429:422:23"},{"body":{"nodeType":"YulBlock","src":"4915:747:23","statements":[{"body":{"nodeType":"YulBlock","src":"4953:52:23","statements":[{"nodeType":"YulAssignment","src":"4967:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4976:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4967:5:23"}]},{"nodeType":"YulLeave","src":"4990:5:23"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4935:8:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4928:6:23"},"nodeType":"YulFunctionCall","src":"4928:16:23"},"nodeType":"YulIf","src":"4925:80:23"},{"body":{"nodeType":"YulBlock","src":"5038:52:23","statements":[{"nodeType":"YulAssignment","src":"5052:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5061:1:23","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5052:5:23"}]},{"nodeType":"YulLeave","src":"5075:5:23"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5024:4:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5017:6:23"},"nodeType":"YulFunctionCall","src":"5017:12:23"},"nodeType":"YulIf","src":"5014:76:23"},{"cases":[{"body":{"nodeType":"YulBlock","src":"5126:52:23","statements":[{"nodeType":"YulAssignment","src":"5140:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5149:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5140:5:23"}]},{"nodeType":"YulLeave","src":"5163:5:23"}]},"nodeType":"YulCase","src":"5119:59:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5124:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5194:123:23","statements":[{"body":{"nodeType":"YulBlock","src":"5229:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5231:16:23"},"nodeType":"YulFunctionCall","src":"5231:18:23"},"nodeType":"YulExpressionStatement","src":"5231:18:23"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5214:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"5224:3:23","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5211:2:23"},"nodeType":"YulFunctionCall","src":"5211:17:23"},"nodeType":"YulIf","src":"5208:43:23"},{"nodeType":"YulAssignment","src":"5264:25:23","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5277:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"5287:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5273:3:23"},"nodeType":"YulFunctionCall","src":"5273:16:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5264:5:23"}]},{"nodeType":"YulLeave","src":"5302:5:23"}]},"nodeType":"YulCase","src":"5187:130:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5192:1:23","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"5106:4:23"},"nodeType":"YulSwitch","src":"5099:218:23"},{"body":{"nodeType":"YulBlock","src":"5415:70:23","statements":[{"nodeType":"YulAssignment","src":"5429:28:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5442:4:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"5448:8:23"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5438:3:23"},"nodeType":"YulFunctionCall","src":"5438:19:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5429:5:23"}]},{"nodeType":"YulLeave","src":"5470:5:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5339:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"5345:2:23","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5336:2:23"},"nodeType":"YulFunctionCall","src":"5336:12:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5353:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"5363:2:23","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5350:2:23"},"nodeType":"YulFunctionCall","src":"5350:16:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5332:3:23"},"nodeType":"YulFunctionCall","src":"5332:35:23"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5376:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"5382:3:23","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5373:2:23"},"nodeType":"YulFunctionCall","src":"5373:13:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5391:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"5401:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5388:2:23"},"nodeType":"YulFunctionCall","src":"5388:16:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5369:3:23"},"nodeType":"YulFunctionCall","src":"5369:36:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5329:2:23"},"nodeType":"YulFunctionCall","src":"5329:77:23"},"nodeType":"YulIf","src":"5326:159:23"},{"nodeType":"YulVariableDeclaration","src":"5494:57:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5536:4:23"},{"name":"exponent","nodeType":"YulIdentifier","src":"5542:8:23"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"5517:18:23"},"nodeType":"YulFunctionCall","src":"5517:34:23"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"5498:7:23","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"5507:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5596:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5598:16:23"},"nodeType":"YulFunctionCall","src":"5598:18:23"},"nodeType":"YulExpressionStatement","src":"5598:18:23"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5566:7:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5583:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5579:3:23"},"nodeType":"YulFunctionCall","src":"5579:6:23"},{"name":"base_1","nodeType":"YulIdentifier","src":"5587:6:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5575:3:23"},"nodeType":"YulFunctionCall","src":"5575:19:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5563:2:23"},"nodeType":"YulFunctionCall","src":"5563:32:23"},"nodeType":"YulIf","src":"5560:58:23"},{"nodeType":"YulAssignment","src":"5627:29:23","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5640:7:23"},{"name":"base_1","nodeType":"YulIdentifier","src":"5649:6:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5636:3:23"},"nodeType":"YulFunctionCall","src":"5636:20:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5627:5:23"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4886:4:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4892:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4905:5:23","type":""}],"src":"4856:806:23"},{"body":{"nodeType":"YulBlock","src":"5735:72:23","statements":[{"nodeType":"YulAssignment","src":"5745:56:23","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5775:4:23"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5785:8:23"},{"kind":"number","nodeType":"YulLiteral","src":"5795:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5781:3:23"},"nodeType":"YulFunctionCall","src":"5781:19:23"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"5754:20:23"},"nodeType":"YulFunctionCall","src":"5754:47:23"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5745:5:23"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"5706:4:23","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5712:8:23","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5725:5:23","type":""}],"src":"5667:140:23"},{"body":{"nodeType":"YulBlock","src":"5864:116:23","statements":[{"nodeType":"YulAssignment","src":"5874:20:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5889:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"5892:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5885:3:23"},"nodeType":"YulFunctionCall","src":"5885:9:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5874:7:23"}]},{"body":{"nodeType":"YulBlock","src":"5952:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5954:16:23"},"nodeType":"YulFunctionCall","src":"5954:18:23"},"nodeType":"YulExpressionStatement","src":"5954:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5923:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5916:6:23"},"nodeType":"YulFunctionCall","src":"5916:9:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5930:1:23"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5937:7:23"},{"name":"x","nodeType":"YulIdentifier","src":"5946:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5933:3:23"},"nodeType":"YulFunctionCall","src":"5933:15:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5927:2:23"},"nodeType":"YulFunctionCall","src":"5927:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5913:2:23"},"nodeType":"YulFunctionCall","src":"5913:37:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5906:6:23"},"nodeType":"YulFunctionCall","src":"5906:45:23"},"nodeType":"YulIf","src":"5903:71:23"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5843:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"5846:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5852:7:23","type":""}],"src":"5812:168:23"},{"body":{"nodeType":"YulBlock","src":"6159:181:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6176:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6187:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6169:6:23"},"nodeType":"YulFunctionCall","src":"6169:21:23"},"nodeType":"YulExpressionStatement","src":"6169:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6210:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6221:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6206:3:23"},"nodeType":"YulFunctionCall","src":"6206:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"6226:2:23","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6199:6:23"},"nodeType":"YulFunctionCall","src":"6199:30:23"},"nodeType":"YulExpressionStatement","src":"6199:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6249:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6260:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6245:3:23"},"nodeType":"YulFunctionCall","src":"6245:18:23"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"6265:33:23","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6238:6:23"},"nodeType":"YulFunctionCall","src":"6238:61:23"},"nodeType":"YulExpressionStatement","src":"6238:61:23"},{"nodeType":"YulAssignment","src":"6308:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6320:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6331:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6316:3:23"},"nodeType":"YulFunctionCall","src":"6316:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6308:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6136:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6150:4:23","type":""}],"src":"5985:355:23"},{"body":{"nodeType":"YulBlock","src":"6393:77:23","statements":[{"nodeType":"YulAssignment","src":"6403:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6414:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"6417:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6410:3:23"},"nodeType":"YulFunctionCall","src":"6410:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6403:3:23"}]},{"body":{"nodeType":"YulBlock","src":"6442:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6444:16:23"},"nodeType":"YulFunctionCall","src":"6444:18:23"},"nodeType":"YulExpressionStatement","src":"6444:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6434:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"6437:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6431:2:23"},"nodeType":"YulFunctionCall","src":"6431:10:23"},"nodeType":"YulIf","src":"6428:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6376:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"6379:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6385:3:23","type":""}],"src":"6345:125:23"},{"body":{"nodeType":"YulBlock","src":"6576:76:23","statements":[{"nodeType":"YulAssignment","src":"6586:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6609:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6594:3:23"},"nodeType":"YulFunctionCall","src":"6594:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6586:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6628:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"6639:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:23"},"nodeType":"YulFunctionCall","src":"6621:25:23"},"nodeType":"YulExpressionStatement","src":"6621:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6545:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6556:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6567:4:23","type":""}],"src":"6475:177:23"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000ea638038062000ea6833981016040819052620000349162000229565b828260036200004483826200033c565b5060046200005382826200033c565b50506005805460ff191660ff841690811790915562000090915033906200007c90600a6200051d565b6200008a9061271062000535565b62000099565b50505062000565565b6001600160a01b038216620000f45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010891906200054f565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018c57600080fd5b81516001600160401b0380821115620001a957620001a962000164565b604051601f8301601f19908116603f01168101908282118183101715620001d457620001d462000164565b81604052838152602092508683858801011115620001f157600080fd5b600091505b83821015620002155785820183015181830184015290820190620001f6565b600093810190920192909252949350505050565b6000806000606084860312156200023f57600080fd5b83516001600160401b03808211156200025757600080fd5b62000265878388016200017a565b945060208601519150808211156200027c57600080fd5b506200028b868287016200017a565b925050604084015160ff81168114620002a357600080fd5b809150509250925092565b600181811c90821680620002c357607f821691505b602082108103620002e457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015f57600081815260208120601f850160051c81016020861015620003135750805b601f850160051c820191505b8181101562000334578281556001016200031f565b505050505050565b81516001600160401b0381111562000358576200035862000164565b6200037081620003698454620002ae565b84620002ea565b602080601f831160018114620003a857600084156200038f5750858301515b600019600386901b1c1916600185901b17855562000334565b600085815260208120601f198616915b82811015620003d957888601518255948401946001909101908401620003b8565b5085821015620003f85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200045f57816000190482111562000443576200044362000408565b808516156200045157918102915b93841c939080029062000423565b509250929050565b600082620004785750600162000517565b81620004875750600062000517565b8160018114620004a05760028114620004ab57620004cb565b600191505062000517565b60ff841115620004bf57620004bf62000408565b50506001821b62000517565b5060208310610133831016604e8410600b8410161715620004f0575081810a62000517565b620004fc83836200041e565b806000190482111562000513576200051362000408565b0290505b92915050565b60006200052e60ff84168362000467565b9392505050565b808202811582820484141762000517576200051762000408565b8082018082111562000517576200051762000408565b61093180620005756000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806306fdde03146100a9578063095ea7b3146100c757806318160ddd146100ea57806323b872dd146100fc578063313ce5671461010f578063395093511461012457806340c10f191461013757806370a082311461014c57806395d89b4114610175578063a457c2d71461017d578063a9059cbb14610190578063dd62ed3e146101a3575b600080fd5b6100b16101b6565b6040516100be919061075b565b60405180910390f35b6100da6100d53660046107c5565b610248565b60405190151581526020016100be565b6002545b6040519081526020016100be565b6100da61010a3660046107ef565b610262565b60055460405160ff90911681526020016100be565b6100da6101323660046107c5565b610286565b61014a6101453660046107c5565b6102a8565b005b6100ee61015a36600461082b565b6001600160a01b031660009081526020819052604090205490565b6100b16102b6565b6100da61018b3660046107c5565b6102c5565b6100da61019e3660046107c5565b610345565b6100ee6101b136600461084d565b610353565b6060600380546101c590610880565b80601f01602080910402602001604051908101604052809291908181526020018280546101f190610880565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b5050505050905090565b60003361025681858561037e565b60019150505b92915050565b6000336102708582856104a2565b61027b85858561051c565b506001949350505050565b6000336102568185856102998383610353565b6102a391906108ba565b61037e565b6102b282826106ae565b5050565b6060600480546101c590610880565b600033816102d38286610353565b9050838110156103385760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61027b828686840361037e565b60003361025681858561051c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166104415760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ae8484610353565b9050600019811461051657818110156105095760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032f565b610516848484840361037e565b50505050565b6001600160a01b0383166105805760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166105e25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b0383166000908152602081905260409020548181101561065a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290926000805160206108dc833981519152910160405180910390a3610516565b6001600160a01b0382166107045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161032f565b806002600082825461071691906108ba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481526000805160206108dc833981519152910160405180910390a35050565b600060208083528351808285015260005b818110156107885785810183015185820160400152820161076c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107c057600080fd5b919050565b600080604083850312156107d857600080fd5b6107e1836107a9565b946020939093013593505050565b60008060006060848603121561080457600080fd5b61080d846107a9565b925061081b602085016107a9565b9150604084013590509250925092565b60006020828403121561083d57600080fd5b610846826107a9565b9392505050565b6000806040838503121561086057600080fd5b610869836107a9565b9150610877602084016107a9565b90509250929050565b600181811c9082168061089457607f821691505b6020821081036108b457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025c57634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122087bc1be0efbd00a6fd52b8dd65f857af28c57b2237c1dcc5490e4893d52b259264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEA6 CODESIZE SUB DUP1 PUSH3 0xEA6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x229 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x33C JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x33C JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x90 SWAP2 POP CALLER SWAP1 PUSH3 0x7C SWAP1 PUSH1 0xA PUSH3 0x51D JUMP JUMPDEST PUSH3 0x8A SWAP1 PUSH2 0x2710 PUSH3 0x535 JUMP JUMPDEST PUSH3 0x99 JUMP JUMPDEST POP POP POP PUSH3 0x565 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x108 SWAP2 SWAP1 PUSH3 0x54F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1A9 JUMPI PUSH3 0x1A9 PUSH3 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1D4 JUMPI PUSH3 0x1D4 PUSH3 0x164 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x215 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1F6 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x265 DUP8 DUP4 DUP9 ADD PUSH3 0x17A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x28B DUP7 DUP3 DUP8 ADD PUSH3 0x17A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x15F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x313 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x334 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x31F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x358 JUMPI PUSH3 0x358 PUSH3 0x164 JUMP JUMPDEST PUSH3 0x370 DUP2 PUSH3 0x369 DUP5 SLOAD PUSH3 0x2AE JUMP JUMPDEST DUP5 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3A8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x38F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x334 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3D9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3B8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3F8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x45F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x443 JUMPI PUSH3 0x443 PUSH3 0x408 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x451 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x423 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x478 JUMPI POP PUSH1 0x1 PUSH3 0x517 JUMP JUMPDEST DUP2 PUSH3 0x487 JUMPI POP PUSH1 0x0 PUSH3 0x517 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x4A0 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x4AB JUMPI PUSH3 0x4CB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x517 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x4BF JUMPI PUSH3 0x4BF PUSH3 0x408 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x517 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x4F0 JUMPI POP DUP2 DUP2 EXP PUSH3 0x517 JUMP JUMPDEST PUSH3 0x4FC DUP4 DUP4 PUSH3 0x41E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x513 JUMPI PUSH3 0x513 PUSH3 0x408 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x52E PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x467 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x517 JUMPI PUSH3 0x517 PUSH3 0x408 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x517 JUMPI PUSH3 0x517 PUSH3 0x408 JUMP JUMPDEST PUSH2 0x931 DUP1 PUSH3 0x575 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH2 0xD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0xDA PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0xDA PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x82B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0xDA PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0xDA PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x880 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F1 SWAP1 PUSH2 0x880 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x213 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x221 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x256 DUP2 DUP6 DUP6 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x270 DUP6 DUP3 DUP6 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x27B DUP6 DUP6 DUP6 PUSH2 0x51C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x256 DUP2 DUP6 DUP6 PUSH2 0x299 DUP4 DUP4 PUSH2 0x353 JUMP JUMPDEST PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST PUSH2 0x2B2 DUP3 DUP3 PUSH2 0x6AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2D3 DUP3 DUP7 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x256 DUP2 DUP6 DUP6 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AE DUP5 DUP5 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x516 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32F JUMP JUMPDEST PUSH2 0x516 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x37E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x8DC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x8DC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x788 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x76C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E1 DUP4 PUSH2 0x7A9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80D DUP5 PUSH2 0x7A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x81B PUSH1 0x20 DUP6 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x846 DUP3 PUSH2 0x7A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x869 DUP4 PUSH2 0x7A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x877 PUSH1 0x20 DUP5 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x894 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xBC SHL 0xE0 0xEF 0xBD STOP 0xA6 REVERT MSTORE 0xB8 0xDD PUSH6 0xF857AF28C57B 0x22 CALLDATACOPY 0xC1 0xDC 0xC5 0x49 0xE BASEFEE SWAP4 0xD5 0x2B 0x25 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"127:478:21:-:0;;;181:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;294:5;301:7;2046:5:10;:13;294:5:21;2046::10;:13;:::i;:::-;-1:-1:-1;2069:7:10;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;321:8:21::1;:20:::0;;-1:-1:-1;;321:20:21::1;;::::0;::::1;::::0;;::::1;::::0;;;352:39:::1;::::0;-1:-1:-1;358:10:21::1;::::0;378:12:::1;::::0;:2:::1;:12;:::i;:::-;370:20;::::0;:5:::1;:20;:::i;:::-;352:5;:39::i;:::-;181:218:::0;;;127:478;;8520:535:10;-1:-1:-1;;;;;8603:21:10;;8595:65;;;;-1:-1:-1;;;8595:65:10;;6187:2:23;8595:65:10;;;6169:21:23;6226:2;6206:18;;;6199:30;6265:33;6245:18;;;6238:61;6316:18;;8595:65:10;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:10;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;6621:25:23;;;8952:37:10;;6594:18:23;8952:37:10;;;;;;;8520:535;;:::o;12073:91::-;;;;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:23:o;991:712::-;1097:6;1105;1113;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1209:16;;-1:-1:-1;;;;;1274:14:23;;;1271:34;;;1301:1;1298;1291:12;1271:34;1324:61;1377:7;1368:6;1357:9;1353:22;1324:61;:::i;:::-;1314:71;;1431:2;1420:9;1416:18;1410:25;1394:41;;1460:2;1450:8;1447:16;1444:36;;;1476:1;1473;1466:12;1444:36;;1499:63;1554:7;1543:8;1532:9;1528:24;1499:63;:::i;:::-;1489:73;;;1605:2;1594:9;1590:18;1584:25;1649:4;1642:5;1638:16;1631:5;1628:27;1618:55;;1669:1;1666;1659:12;1618:55;1692:5;1682:15;;;991:712;;;;;:::o;1708:380::-;1787:1;1783:12;;;;1830;;;1851:61;;1905:4;1897:6;1893:17;1883:27;;1851:61;1958:2;1950:6;1947:14;1927:18;1924:38;1921:161;;2004:10;1999:3;1995:20;1992:1;1985:31;2039:4;2036:1;2029:15;2067:4;2064:1;2057:15;1921:161;;1708:380;;;:::o;2219:545::-;2321:2;2316:3;2313:11;2310:448;;;2357:1;2382:5;2378:2;2371:17;2427:4;2423:2;2413:19;2497:2;2485:10;2481:19;2478:1;2474:27;2468:4;2464:38;2533:4;2521:10;2518:20;2515:47;;;-1:-1:-1;2556:4:23;2515:47;2611:2;2606:3;2602:12;2599:1;2595:20;2589:4;2585:31;2575:41;;2666:82;2684:2;2677:5;2674:13;2666:82;;;2729:17;;;2710:1;2699:13;2666:82;;;2670:3;;;2219:545;;;:::o;2940:1352::-;3060:10;;-1:-1:-1;;;;;3082:30:23;;3079:56;;;3115:18;;:::i;:::-;3144:97;3234:6;3194:38;3226:4;3220:11;3194:38;:::i;:::-;3188:4;3144:97;:::i;:::-;3296:4;;3360:2;3349:14;;3377:1;3372:663;;;;4079:1;4096:6;4093:89;;;-1:-1:-1;4148:19:23;;;4142:26;4093:89;-1:-1:-1;;2897:1:23;2893:11;;;2889:24;2885:29;2875:40;2921:1;2917:11;;;2872:57;4195:81;;3342:944;;3372:663;2166:1;2159:14;;;2203:4;2190:18;;-1:-1:-1;;3408:20:23;;;3526:236;3540:7;3537:1;3534:14;3526:236;;;3629:19;;;3623:26;3608:42;;3721:27;;;;3689:1;3677:14;;;;3556:19;;3526:236;;;3530:3;3790:6;3781:7;3778:19;3775:201;;;3851:19;;;3845:26;-1:-1:-1;;3934:1:23;3930:14;;;3946:3;3926:24;3922:37;3918:42;3903:58;3888:74;;3775:201;-1:-1:-1;;;;;4022:1:23;4006:14;;;4002:22;3989:36;;-1:-1:-1;2940:1352:23:o;4297:127::-;4358:10;4353:3;4349:20;4346:1;4339:31;4389:4;4386:1;4379:15;4413:4;4410:1;4403:15;4429:422;4518:1;4561:5;4518:1;4575:270;4596:7;4586:8;4583:21;4575:270;;;4655:4;4651:1;4647:6;4643:17;4637:4;4634:27;4631:53;;;4664:18;;:::i;:::-;4714:7;4704:8;4700:22;4697:55;;;4734:16;;;;4697:55;4813:22;;;;4773:15;;;;4575:270;;;4579:3;4429:422;;;;;:::o;4856:806::-;4905:5;4935:8;4925:80;;-1:-1:-1;4976:1:23;4990:5;;4925:80;5024:4;5014:76;;-1:-1:-1;5061:1:23;5075:5;;5014:76;5106:4;5124:1;5119:59;;;;5192:1;5187:130;;;;5099:218;;5119:59;5149:1;5140:10;;5163:5;;;5187:130;5224:3;5214:8;5211:17;5208:43;;;5231:18;;:::i;:::-;-1:-1:-1;;5287:1:23;5273:16;;5302:5;;5099:218;;5401:2;5391:8;5388:16;5382:3;5376:4;5373:13;5369:36;5363:2;5353:8;5350:16;5345:2;5339:4;5336:12;5332:35;5329:77;5326:159;;;-1:-1:-1;5438:19:23;;;5470:5;;5326:159;5517:34;5542:8;5536:4;5517:34;:::i;:::-;5587:6;5583:1;5579:6;5575:19;5566:7;5563:32;5560:58;;;5598:18;;:::i;:::-;5636:20;;-1:-1:-1;4856:806:23;;;;;:::o;5667:140::-;5725:5;5754:47;5795:4;5785:8;5781:19;5775:4;5754:47;:::i;:::-;5745:56;5667:140;-1:-1:-1;;;5667:140:23:o;5812:168::-;5885:9;;;5916;;5933:15;;;5927:22;;5913:37;5903:71;;5954:18;;:::i;6345:125::-;6410:9;;;6431:10;;;6428:36;;;6444:18;;:::i;6475:177::-;127:478:21;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2391":{"entryPoint":null,"id":2391,"parameterSlots":3,"returnSlots":0},"@_approve_2326":{"entryPoint":894,"id":2326,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2380":{"entryPoint":null,"id":2380,"parameterSlots":3,"returnSlots":0},"@_mint_2209":{"entryPoint":1710,"id":2209,"parameterSlots":2,"returnSlots":0},"@_msgSender_3249":{"entryPoint":null,"id":3249,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2369":{"entryPoint":1186,"id":2369,"parameterSlots":3,"returnSlots":0},"@_transfer_2152":{"entryPoint":1308,"id":2152,"parameterSlots":3,"returnSlots":0},"@allowance_1947":{"entryPoint":851,"id":1947,"parameterSlots":2,"returnSlots":1},"@approve_1972":{"entryPoint":584,"id":1972,"parameterSlots":2,"returnSlots":1},"@balanceOf_1904":{"entryPoint":null,"id":1904,"parameterSlots":1,"returnSlots":1},"@decimals_4917":{"entryPoint":null,"id":4917,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2075":{"entryPoint":709,"id":2075,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2034":{"entryPoint":646,"id":2034,"parameterSlots":2,"returnSlots":1},"@mint_4908":{"entryPoint":680,"id":4908,"parameterSlots":2,"returnSlots":0},"@name_1860":{"entryPoint":438,"id":1860,"parameterSlots":0,"returnSlots":1},"@symbol_1870":{"entryPoint":694,"id":1870,"parameterSlots":0,"returnSlots":1},"@totalSupply_1890":{"entryPoint":null,"id":1890,"parameterSlots":0,"returnSlots":1},"@transferFrom_2005":{"entryPoint":610,"id":2005,"parameterSlots":3,"returnSlots":1},"@transfer_1929":{"entryPoint":837,"id":1929,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2125,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2031,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1989,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2234,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2176,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6114:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:23","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:23"},"nodeType":"YulFunctionCall","src":"166:21:23"},"nodeType":"YulExpressionStatement","src":"166:21:23"},{"nodeType":"YulVariableDeclaration","src":"196:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:23"},"nodeType":"YulFunctionCall","src":"210:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:23"},"nodeType":"YulFunctionCall","src":"239:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:23"},"nodeType":"YulFunctionCall","src":"232:34:23"},"nodeType":"YulExpressionStatement","src":"232:34:23"},{"nodeType":"YulVariableDeclaration","src":"275:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:23"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:23"},"nodeType":"YulFunctionCall","src":"369:17:23"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:23"},"nodeType":"YulFunctionCall","src":"365:26:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:23"},"nodeType":"YulFunctionCall","src":"403:14:23"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:23"},"nodeType":"YulFunctionCall","src":"399:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:23"},"nodeType":"YulFunctionCall","src":"393:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:23"},"nodeType":"YulFunctionCall","src":"358:66:23"},"nodeType":"YulExpressionStatement","src":"358:66:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:23"},"nodeType":"YulFunctionCall","src":"302:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:23","statements":[{"nodeType":"YulAssignment","src":"318:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:23"},"nodeType":"YulFunctionCall","src":"323:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:23","statements":[]},"src":"294:140:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:23"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:23"},"nodeType":"YulFunctionCall","src":"454:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:23"},"nodeType":"YulFunctionCall","src":"450:31:23"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:23"},"nodeType":"YulFunctionCall","src":"443:42:23"},"nodeType":"YulExpressionStatement","src":"443:42:23"},{"nodeType":"YulAssignment","src":"494:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:23"},"nodeType":"YulFunctionCall","src":"525:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:23"},"nodeType":"YulFunctionCall","src":"542:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:23"},"nodeType":"YulFunctionCall","src":"521:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:23"},"nodeType":"YulFunctionCall","src":"506:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:23"},"nodeType":"YulFunctionCall","src":"502:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:23","type":""}],"src":"14:548:23"},{"body":{"nodeType":"YulBlock","src":"616:124:23","statements":[{"nodeType":"YulAssignment","src":"626:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:23"},"nodeType":"YulFunctionCall","src":"635:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:23"}]},{"body":{"nodeType":"YulBlock","src":"718:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:23"},"nodeType":"YulFunctionCall","src":"720:12:23"},"nodeType":"YulExpressionStatement","src":"720:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:23"},"nodeType":"YulFunctionCall","src":"699:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:23"},"nodeType":"YulFunctionCall","src":"695:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:23"},"nodeType":"YulFunctionCall","src":"684:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:23"},"nodeType":"YulFunctionCall","src":"674:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:23"},"nodeType":"YulFunctionCall","src":"667:50:23"},"nodeType":"YulIf","src":"664:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:23","type":""}],"src":"567:173:23"},{"body":{"nodeType":"YulBlock","src":"832:167:23","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:23"},"nodeType":"YulFunctionCall","src":"880:12:23"},"nodeType":"YulExpressionStatement","src":"880:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:23"},"nodeType":"YulFunctionCall","src":"849:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:23"},"nodeType":"YulFunctionCall","src":"845:32:23"},"nodeType":"YulIf","src":"842:52:23"},{"nodeType":"YulAssignment","src":"903:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:23"},"nodeType":"YulFunctionCall","src":"913:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:23"}]},{"nodeType":"YulAssignment","src":"951:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:23"},"nodeType":"YulFunctionCall","src":"974:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:23"},"nodeType":"YulFunctionCall","src":"961:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:23","type":""}],"src":"745:254:23"},{"body":{"nodeType":"YulBlock","src":"1099:92:23","statements":[{"nodeType":"YulAssignment","src":"1109:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:23"},"nodeType":"YulFunctionCall","src":"1117:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:23"},"nodeType":"YulFunctionCall","src":"1169:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:23"},"nodeType":"YulFunctionCall","src":"1162:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:23"},"nodeType":"YulFunctionCall","src":"1144:41:23"},"nodeType":"YulExpressionStatement","src":"1144:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:23","type":""}],"src":"1004:187:23"},{"body":{"nodeType":"YulBlock","src":"1297:76:23","statements":[{"nodeType":"YulAssignment","src":"1307:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:23"},"nodeType":"YulFunctionCall","src":"1315:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:23"},"nodeType":"YulFunctionCall","src":"1342:25:23"},"nodeType":"YulExpressionStatement","src":"1342:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:23","type":""}],"src":"1196:177:23"},{"body":{"nodeType":"YulBlock","src":"1482:224:23","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:23"},"nodeType":"YulFunctionCall","src":"1530:12:23"},"nodeType":"YulExpressionStatement","src":"1530:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:23"},"nodeType":"YulFunctionCall","src":"1499:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:23"},"nodeType":"YulFunctionCall","src":"1495:32:23"},"nodeType":"YulIf","src":"1492:52:23"},{"nodeType":"YulAssignment","src":"1553:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:23"},"nodeType":"YulFunctionCall","src":"1563:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:23"}]},{"nodeType":"YulAssignment","src":"1601:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:23"},"nodeType":"YulFunctionCall","src":"1630:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:23"},"nodeType":"YulFunctionCall","src":"1611:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:23"}]},{"nodeType":"YulAssignment","src":"1658:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:23"},"nodeType":"YulFunctionCall","src":"1681:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:23"},"nodeType":"YulFunctionCall","src":"1668:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:23","type":""}],"src":"1378:328:23"},{"body":{"nodeType":"YulBlock","src":"1808:87:23","statements":[{"nodeType":"YulAssignment","src":"1818:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:23"},"nodeType":"YulFunctionCall","src":"1826:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:23"},"nodeType":"YulFunctionCall","src":"1871:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:23"},"nodeType":"YulFunctionCall","src":"1853:36:23"},"nodeType":"YulExpressionStatement","src":"1853:36:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:23","type":""}],"src":"1711:184:23"},{"body":{"nodeType":"YulBlock","src":"1970:116:23","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:23"},"nodeType":"YulFunctionCall","src":"2018:12:23"},"nodeType":"YulExpressionStatement","src":"2018:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:23"},"nodeType":"YulFunctionCall","src":"1987:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:23"},"nodeType":"YulFunctionCall","src":"1983:32:23"},"nodeType":"YulIf","src":"1980:52:23"},{"nodeType":"YulAssignment","src":"2041:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:23"},"nodeType":"YulFunctionCall","src":"2051:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:23","type":""}],"src":"1900:186:23"},{"body":{"nodeType":"YulBlock","src":"2178:173:23","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:23"},"nodeType":"YulFunctionCall","src":"2226:12:23"},"nodeType":"YulExpressionStatement","src":"2226:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:23"},"nodeType":"YulFunctionCall","src":"2195:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:23"},"nodeType":"YulFunctionCall","src":"2191:32:23"},"nodeType":"YulIf","src":"2188:52:23"},{"nodeType":"YulAssignment","src":"2249:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:23"},"nodeType":"YulFunctionCall","src":"2259:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:23"}]},{"nodeType":"YulAssignment","src":"2297:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:23"},"nodeType":"YulFunctionCall","src":"2326:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:23"},"nodeType":"YulFunctionCall","src":"2307:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:23","type":""}],"src":"2091:260:23"},{"body":{"nodeType":"YulBlock","src":"2411:325:23","statements":[{"nodeType":"YulAssignment","src":"2421:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:23"},"nodeType":"YulFunctionCall","src":"2431:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:23"},"nodeType":"YulFunctionCall","src":"2478:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:23","statements":[{"nodeType":"YulAssignment","src":"2531:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:23"},"nodeType":"YulFunctionCall","src":"2541:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:23"},"nodeType":"YulFunctionCall","src":"2502:26:23"},"nodeType":"YulIf","src":"2499:61:23"},{"body":{"nodeType":"YulBlock","src":"2619:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:23"},"nodeType":"YulFunctionCall","src":"2643:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:23"},"nodeType":"YulFunctionCall","src":"2633:31:23"},"nodeType":"YulExpressionStatement","src":"2633:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:23"},"nodeType":"YulFunctionCall","src":"2677:15:23"},"nodeType":"YulExpressionStatement","src":"2677:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:23"},"nodeType":"YulFunctionCall","src":"2705:15:23"},"nodeType":"YulExpressionStatement","src":"2705:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:23"},"nodeType":"YulFunctionCall","src":"2595:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:23"},"nodeType":"YulFunctionCall","src":"2572:38:23"},"nodeType":"YulIf","src":"2569:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:23","type":""}],"src":"2356:380:23"},{"body":{"nodeType":"YulBlock","src":"2789:174:23","statements":[{"nodeType":"YulAssignment","src":"2799:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:23"},"nodeType":"YulFunctionCall","src":"2806:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:23"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:23"},"nodeType":"YulFunctionCall","src":"2870:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:23"},"nodeType":"YulFunctionCall","src":"2860:31:23"},"nodeType":"YulExpressionStatement","src":"2860:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:23"},"nodeType":"YulFunctionCall","src":"2904:15:23"},"nodeType":"YulExpressionStatement","src":"2904:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:23"},"nodeType":"YulFunctionCall","src":"2932:15:23"},"nodeType":"YulExpressionStatement","src":"2932:15:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:23"},"nodeType":"YulFunctionCall","src":"2827:10:23"},"nodeType":"YulIf","src":"2824:133:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:23","type":""}],"src":"2741:222:23"},{"body":{"nodeType":"YulBlock","src":"3142:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:23"},"nodeType":"YulFunctionCall","src":"3152:21:23"},"nodeType":"YulExpressionStatement","src":"3152:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:23"},"nodeType":"YulFunctionCall","src":"3189:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:23"},"nodeType":"YulFunctionCall","src":"3182:30:23"},"nodeType":"YulExpressionStatement","src":"3182:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:23"},"nodeType":"YulFunctionCall","src":"3228:18:23"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:23","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:23"},"nodeType":"YulFunctionCall","src":"3221:62:23"},"nodeType":"YulExpressionStatement","src":"3221:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:23"},"nodeType":"YulFunctionCall","src":"3299:18:23"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:23","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:23"},"nodeType":"YulFunctionCall","src":"3292:35:23"},"nodeType":"YulExpressionStatement","src":"3292:35:23"},{"nodeType":"YulAssignment","src":"3336:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:23"},"nodeType":"YulFunctionCall","src":"3344:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:23","type":""}],"src":"2968:401:23"},{"body":{"nodeType":"YulBlock","src":"3548:226:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:23"},"nodeType":"YulFunctionCall","src":"3558:21:23"},"nodeType":"YulExpressionStatement","src":"3558:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:23"},"nodeType":"YulFunctionCall","src":"3595:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:23","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:23"},"nodeType":"YulFunctionCall","src":"3588:30:23"},"nodeType":"YulExpressionStatement","src":"3588:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:23"},"nodeType":"YulFunctionCall","src":"3634:18:23"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:23","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:23"},"nodeType":"YulFunctionCall","src":"3627:62:23"},"nodeType":"YulExpressionStatement","src":"3627:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:23"},"nodeType":"YulFunctionCall","src":"3705:18:23"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:23","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:23"},"nodeType":"YulFunctionCall","src":"3698:34:23"},"nodeType":"YulExpressionStatement","src":"3698:34:23"},{"nodeType":"YulAssignment","src":"3741:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:23"},"nodeType":"YulFunctionCall","src":"3749:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:23","type":""}],"src":"3374:400:23"},{"body":{"nodeType":"YulBlock","src":"3953:224:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:23"},"nodeType":"YulFunctionCall","src":"3963:21:23"},"nodeType":"YulExpressionStatement","src":"3963:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:23"},"nodeType":"YulFunctionCall","src":"4000:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:23","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:23"},"nodeType":"YulFunctionCall","src":"3993:30:23"},"nodeType":"YulExpressionStatement","src":"3993:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:23"},"nodeType":"YulFunctionCall","src":"4039:18:23"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:23","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:23"},"nodeType":"YulFunctionCall","src":"4032:62:23"},"nodeType":"YulExpressionStatement","src":"4032:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:23"},"nodeType":"YulFunctionCall","src":"4110:18:23"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:23","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:23"},"nodeType":"YulFunctionCall","src":"4103:32:23"},"nodeType":"YulExpressionStatement","src":"4103:32:23"},{"nodeType":"YulAssignment","src":"4144:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:23"},"nodeType":"YulFunctionCall","src":"4152:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:23","type":""}],"src":"3779:398:23"},{"body":{"nodeType":"YulBlock","src":"4356:179:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:23"},"nodeType":"YulFunctionCall","src":"4366:21:23"},"nodeType":"YulExpressionStatement","src":"4366:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:23"},"nodeType":"YulFunctionCall","src":"4403:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:23","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:23"},"nodeType":"YulFunctionCall","src":"4396:30:23"},"nodeType":"YulExpressionStatement","src":"4396:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:23"},"nodeType":"YulFunctionCall","src":"4442:18:23"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:23","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:23"},"nodeType":"YulFunctionCall","src":"4435:59:23"},"nodeType":"YulExpressionStatement","src":"4435:59:23"},{"nodeType":"YulAssignment","src":"4503:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:23"},"nodeType":"YulFunctionCall","src":"4511:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:23","type":""}],"src":"4182:353:23"},{"body":{"nodeType":"YulBlock","src":"4714:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:23"},"nodeType":"YulFunctionCall","src":"4724:21:23"},"nodeType":"YulExpressionStatement","src":"4724:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:23"},"nodeType":"YulFunctionCall","src":"4761:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:23"},"nodeType":"YulFunctionCall","src":"4754:30:23"},"nodeType":"YulExpressionStatement","src":"4754:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:23"},"nodeType":"YulFunctionCall","src":"4800:18:23"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:23","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:23"},"nodeType":"YulFunctionCall","src":"4793:62:23"},"nodeType":"YulExpressionStatement","src":"4793:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:23"},"nodeType":"YulFunctionCall","src":"4871:18:23"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:23","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:23"},"nodeType":"YulFunctionCall","src":"4864:35:23"},"nodeType":"YulExpressionStatement","src":"4864:35:23"},{"nodeType":"YulAssignment","src":"4908:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:23"},"nodeType":"YulFunctionCall","src":"4916:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:23","type":""}],"src":"4540:401:23"},{"body":{"nodeType":"YulBlock","src":"5120:225:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:23"},"nodeType":"YulFunctionCall","src":"5130:21:23"},"nodeType":"YulExpressionStatement","src":"5130:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:23"},"nodeType":"YulFunctionCall","src":"5167:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:23","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:23"},"nodeType":"YulFunctionCall","src":"5160:30:23"},"nodeType":"YulExpressionStatement","src":"5160:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:23"},"nodeType":"YulFunctionCall","src":"5206:18:23"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:23","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:23"},"nodeType":"YulFunctionCall","src":"5199:62:23"},"nodeType":"YulExpressionStatement","src":"5199:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:23"},"nodeType":"YulFunctionCall","src":"5277:18:23"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:23","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:23"},"nodeType":"YulFunctionCall","src":"5270:33:23"},"nodeType":"YulExpressionStatement","src":"5270:33:23"},{"nodeType":"YulAssignment","src":"5312:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:23"},"nodeType":"YulFunctionCall","src":"5320:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:23","type":""}],"src":"4946:399:23"},{"body":{"nodeType":"YulBlock","src":"5524:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:23"},"nodeType":"YulFunctionCall","src":"5534:21:23"},"nodeType":"YulExpressionStatement","src":"5534:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:23"},"nodeType":"YulFunctionCall","src":"5571:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:23"},"nodeType":"YulFunctionCall","src":"5564:30:23"},"nodeType":"YulExpressionStatement","src":"5564:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:23"},"nodeType":"YulFunctionCall","src":"5610:18:23"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:23","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:23"},"nodeType":"YulFunctionCall","src":"5603:62:23"},"nodeType":"YulExpressionStatement","src":"5603:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:23"},"nodeType":"YulFunctionCall","src":"5681:18:23"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:23","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:23"},"nodeType":"YulFunctionCall","src":"5674:36:23"},"nodeType":"YulExpressionStatement","src":"5674:36:23"},{"nodeType":"YulAssignment","src":"5719:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:23"},"nodeType":"YulFunctionCall","src":"5727:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:23","type":""}],"src":"5350:402:23"},{"body":{"nodeType":"YulBlock","src":"5931:181:23","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5959:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5941:6:23"},"nodeType":"YulFunctionCall","src":"5941:21:23"},"nodeType":"YulExpressionStatement","src":"5941:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5993:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5978:3:23"},"nodeType":"YulFunctionCall","src":"5978:18:23"},{"kind":"number","nodeType":"YulLiteral","src":"5998:2:23","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5971:6:23"},"nodeType":"YulFunctionCall","src":"5971:30:23"},"nodeType":"YulExpressionStatement","src":"5971:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6021:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6032:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6017:3:23"},"nodeType":"YulFunctionCall","src":"6017:18:23"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"6037:33:23","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6010:6:23"},"nodeType":"YulFunctionCall","src":"6010:61:23"},"nodeType":"YulExpressionStatement","src":"6010:61:23"},{"nodeType":"YulAssignment","src":"6080:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6092:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6088:3:23"},"nodeType":"YulFunctionCall","src":"6088:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6080:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5908:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5922:4:23","type":""}],"src":"5757:355:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a45760003560e01c806306fdde03146100a9578063095ea7b3146100c757806318160ddd146100ea57806323b872dd146100fc578063313ce5671461010f578063395093511461012457806340c10f191461013757806370a082311461014c57806395d89b4114610175578063a457c2d71461017d578063a9059cbb14610190578063dd62ed3e146101a3575b600080fd5b6100b16101b6565b6040516100be919061075b565b60405180910390f35b6100da6100d53660046107c5565b610248565b60405190151581526020016100be565b6002545b6040519081526020016100be565b6100da61010a3660046107ef565b610262565b60055460405160ff90911681526020016100be565b6100da6101323660046107c5565b610286565b61014a6101453660046107c5565b6102a8565b005b6100ee61015a36600461082b565b6001600160a01b031660009081526020819052604090205490565b6100b16102b6565b6100da61018b3660046107c5565b6102c5565b6100da61019e3660046107c5565b610345565b6100ee6101b136600461084d565b610353565b6060600380546101c590610880565b80601f01602080910402602001604051908101604052809291908181526020018280546101f190610880565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b5050505050905090565b60003361025681858561037e565b60019150505b92915050565b6000336102708582856104a2565b61027b85858561051c565b506001949350505050565b6000336102568185856102998383610353565b6102a391906108ba565b61037e565b6102b282826106ae565b5050565b6060600480546101c590610880565b600033816102d38286610353565b9050838110156103385760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61027b828686840361037e565b60003361025681858561051c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166104415760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ae8484610353565b9050600019811461051657818110156105095760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032f565b610516848484840361037e565b50505050565b6001600160a01b0383166105805760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166105e25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b0383166000908152602081905260409020548181101561065a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290926000805160206108dc833981519152910160405180910390a3610516565b6001600160a01b0382166107045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161032f565b806002600082825461071691906108ba565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481526000805160206108dc833981519152910160405180910390a35050565b600060208083528351808285015260005b818110156107885785810183015185820160400152820161076c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107c057600080fd5b919050565b600080604083850312156107d857600080fd5b6107e1836107a9565b946020939093013593505050565b60008060006060848603121561080457600080fd5b61080d846107a9565b925061081b602085016107a9565b9150604084013590509250925092565b60006020828403121561083d57600080fd5b610846826107a9565b9392505050565b6000806040838503121561086057600080fd5b610869836107a9565b9150610877602084016107a9565b90509250929050565b600181811c9082168061089457607f821691505b6020821081036108b457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025c57634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122087bc1be0efbd00a6fd52b8dd65f857af28c57b2237c1dcc5490e4893d52b259264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH2 0xD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0xDA PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0xDA PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x82B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1 PUSH2 0x2B6 JUMP JUMPDEST PUSH2 0xDA PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0xDA PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x880 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F1 SWAP1 PUSH2 0x880 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x213 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x221 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x256 DUP2 DUP6 DUP6 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x270 DUP6 DUP3 DUP6 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x27B DUP6 DUP6 DUP6 PUSH2 0x51C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x256 DUP2 DUP6 DUP6 PUSH2 0x299 DUP4 DUP4 PUSH2 0x353 JUMP JUMPDEST PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST PUSH2 0x2B2 DUP3 DUP3 PUSH2 0x6AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2D3 DUP3 DUP7 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x256 DUP2 DUP6 DUP6 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AE DUP5 DUP5 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x516 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32F JUMP JUMPDEST PUSH2 0x516 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x37E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x65A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x8DC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x8DC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x788 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x76C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E1 DUP4 PUSH2 0x7A9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80D DUP5 PUSH2 0x7A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x81B PUSH1 0x20 DUP6 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x846 DUP3 PUSH2 0x7A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x869 DUP4 PUSH2 0x7A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x877 PUSH1 0x20 DUP5 ADD PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x894 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xBC SHL 0xE0 0xEF 0xBD STOP 0xA6 REVERT MSTORE 0xB8 0xDD PUSH6 0xF857AF28C57B 0x22 CALLDATACOPY 0xC1 0xDC 0xC5 0x49 0xE BASEFEE SWAP4 0xD5 0x2B 0x25 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"127:478:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:23;;1162:22;1144:41;;1132:2;1117:18;4444:197:10;1004:187:23;3255:106:10;3342:12;;3255:106;;;1342:25:23;;;1330:2;1315:18;3255:106:10;1196:177:23;5203:256:10;;;;;;:::i;:::-;;:::i;511:91:21:-;586:8;;511:91;;586:8;;;;1853:36:23;;1841:2;1826:18;511:91:21;1711:184:23;5854:234:10;;;;;;:::i;:::-;;:::i;407:96:21:-;;;;;;:::i;:::-;;:::i;:::-;;3419:125:10;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:10;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:16;4581:32:10;719:10:16;4597:7:10;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:16;5356:38:10;5372:4;719:10:16;5387:6:10;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:10;;5203:256;-1:-1:-1;;;;5203:256:10:o;5854:234::-;5942:4;719:10:16;5996:64:10;719:10:16;6012:7:10;6049:10;6021:25;719:10:16;6012:7:10;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;407:96:21:-;471:24;477:8;487:7;471:5;:24::i;:::-;407:96;;:::o;2369:102:10:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:16;6668:4:10;6749:25;719:10:16;6766:7:10;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:10;;3170:2:23;6784:85:10;;;3152:21:23;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:23;;;3292:35;3344:19;;6784:85:10;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:16;3873:28:10;719:10:16;3890:2:10;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:10;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:10;;10550:68;;;;-1:-1:-1;;;10550:68:10;;3576:2:23;10550:68:10;;;3558:21:23;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:23;;;3698:34;3749:19;;10550:68:10;3374:400:23;10550:68:10;-1:-1:-1;;;;;10636:21:10;;10628:68;;;;-1:-1:-1;;;10628:68:10;;3981:2:23;10628:68:10;;;3963:21:23;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:23;;;4103:32;4152:19;;10628:68:10;3779:398:23;10628:68:10;-1:-1:-1;;;;;10707:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:23;;;10758:32:10;;1315:18:23;10758:32:10;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:10;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:10;;4384:2:23;11297:68:10;;;4366:21:23;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:10;4182:353:23;11297:68:10;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:10;;7544:68;;;;-1:-1:-1;;;7544:68:10;;4742:2:23;7544:68:10;;;4724:21:23;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:23;;;4864:35;4916:19;;7544:68:10;4540:401:23;7544:68:10;-1:-1:-1;;;;;7630:16:10;;7622:64;;;;-1:-1:-1;;;7622:64:10;;5148:2:23;7622:64:10;;;5130:21:23;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:23;;;5270:33;5320:19;;7622:64:10;4946:399:23;7622:64:10;-1:-1:-1;;;;;7768:15:10;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:10;;5552:2:23;7793:72:10;;;5534:21:23;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:23;;;5674:36;5727:19;;7793:72:10;5350:402:23;7793:72:10;-1:-1:-1;;;;;7899:15:10;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:23;;;8114:13:10;;-1:-1:-1;;;;;;;;;;;8163:26:10;1315:18:23;8163:26:10;;;;;;;8200:37;12073:91;8520:535;-1:-1:-1;;;;;8603:21:10;;8595:65;;;;-1:-1:-1;;;8595:65:10;;5959:2:23;8595:65:10;;;5941:21:23;5998:2;5978:18;;;5971:30;6037:33;6017:18;;;6010:61;6088:18;;8595:65:10;5757:355:23;8595:65:10;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:10;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:23;;;-1:-1:-1;;;;;;;;;;;8952:37:10;1315:18:23;8952:37:10;;;;;;;407:96:21;;:::o;14:548:23:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:23;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:23:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:23:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"470600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24605","balanceOf(address)":"2672","decimals()":"2355","decreaseAllowance(address,uint256)":"27126","increaseAllowance(address,uint256)":"infinite","mint(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2303","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/Token.sol\":\"Token\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/mocks/Token.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract Token is ERC20 {\\r\\n    uint8 DECIMALS;\\r\\n\\r\\n    constructor(\\r\\n        string memory _name,\\r\\n        string memory _symbol,\\r\\n        uint8 _decimals\\r\\n    ) ERC20(_name, _symbol) {\\r\\n        DECIMALS = _decimals;\\r\\n        _mint(msg.sender, 10000 * 10**DECIMALS);\\r\\n    }\\r\\n\\r\\n    function mint(address _account, uint _amount) public {\\r\\n        _mint(_account, _amount);\\r\\n    }\\r\\n\\r\\n    function decimals() public view override returns (uint8) {\\r\\n        return DECIMALS;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe24fd30c1e41bb1f62cefa823657546a45ef1cec25e6f0a91a488ab98a496043\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1821,"contract":"contracts/mocks/Token.sol:Token","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1827,"contract":"contracts/mocks/Token.sol:Token","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1829,"contract":"contracts/mocks/Token.sol:Token","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1831,"contract":"contracts/mocks/Token.sol:Token","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1833,"contract":"contracts/mocks/Token.sol:Token","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4867,"contract":"contracts/mocks/Token.sol:Token","label":"DECIMALS","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mocks/WETH.sol":{"WETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":197,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":276,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":139,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":117,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2732:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:23"},"nodeType":"YulFunctionCall","src":"66:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:23"},"nodeType":"YulFunctionCall","src":"56:31:23"},"nodeType":"YulExpressionStatement","src":"56:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:23"},"nodeType":"YulFunctionCall","src":"96:15:23"},"nodeType":"YulExpressionStatement","src":"96:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:23"},"nodeType":"YulFunctionCall","src":"120:15:23"},"nodeType":"YulExpressionStatement","src":"120:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:23"},{"body":{"nodeType":"YulBlock","src":"201:325:23","statements":[{"nodeType":"YulAssignment","src":"211:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:23"},"nodeType":"YulFunctionCall","src":"221:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:23"},"nodeType":"YulFunctionCall","src":"268:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:23","statements":[{"nodeType":"YulAssignment","src":"321:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:23"},"nodeType":"YulFunctionCall","src":"331:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:23"},"nodeType":"YulFunctionCall","src":"292:26:23"},"nodeType":"YulIf","src":"289:61:23"},{"body":{"nodeType":"YulBlock","src":"409:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:23"},"nodeType":"YulFunctionCall","src":"433:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:23"},"nodeType":"YulFunctionCall","src":"423:31:23"},"nodeType":"YulExpressionStatement","src":"423:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:23"},"nodeType":"YulFunctionCall","src":"467:15:23"},"nodeType":"YulExpressionStatement","src":"467:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:23"},"nodeType":"YulFunctionCall","src":"495:15:23"},"nodeType":"YulExpressionStatement","src":"495:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:23"},"nodeType":"YulFunctionCall","src":"385:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:23"},"nodeType":"YulFunctionCall","src":"362:38:23"},"nodeType":"YulIf","src":"359:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:23","type":""}],"src":"146:380:23"},{"body":{"nodeType":"YulBlock","src":"587:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:23"},"nodeType":"YulFunctionCall","src":"597:14:23"},"nodeType":"YulExpressionStatement","src":"597:14:23"},{"nodeType":"YulAssignment","src":"620:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:23"},"nodeType":"YulFunctionCall","src":"628:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:23"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:23","type":""}],"src":"531:121:23"},{"body":{"nodeType":"YulBlock","src":"738:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:23","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:23","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:23","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:23"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:23"},"nodeType":"YulFunctionCall","src":"809:17:23"},"nodeType":"YulExpressionStatement","src":"809:17:23"},{"nodeType":"YulVariableDeclaration","src":"839:31:23","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:23"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:23"},"nodeType":"YulFunctionCall","src":"851:19:23"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:23"},"nodeType":"YulFunctionCall","src":"919:19:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:23"},"nodeType":"YulFunctionCall","src":"912:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:23"},"nodeType":"YulFunctionCall","src":"902:38:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:23","statements":[{"nodeType":"YulAssignment","src":"979:19:23","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:23"},"nodeType":"YulFunctionCall","src":"956:20:23"},"nodeType":"YulIf","src":"953:47:23"},{"nodeType":"YulVariableDeclaration","src":"1013:41:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:23"},"nodeType":"YulFunctionCall","src":"1040:12:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:23"},"nodeType":"YulFunctionCall","src":"1033:20:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:23"},"nodeType":"YulFunctionCall","src":"1023:31:23"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:23","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:23"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:23"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:23"},"nodeType":"YulFunctionCall","src":"1167:17:23"},"nodeType":"YulExpressionStatement","src":"1167:17:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:23"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:23"},"nodeType":"YulFunctionCall","src":"1112:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:23","statements":[{"nodeType":"YulAssignment","src":"1128:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:23"},"nodeType":"YulFunctionCall","src":"1137:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:23","statements":[]},"src":"1104:82:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:23"},"nodeType":"YulFunctionCall","src":"751:11:23"},"nodeType":"YulIf","src":"748:448:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:23","type":""}],"src":"657:545:23"},{"body":{"nodeType":"YulBlock","src":"1292:81:23","statements":[{"nodeType":"YulAssignment","src":"1302:65:23","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:23","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:23"},"nodeType":"YulFunctionCall","src":"1331:11:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:23"},"nodeType":"YulFunctionCall","src":"1344:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:23"},"nodeType":"YulFunctionCall","src":"1327:24:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:23"},"nodeType":"YulFunctionCall","src":"1323:29:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:23"},"nodeType":"YulFunctionCall","src":"1313:40:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:23","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:23"},"nodeType":"YulFunctionCall","src":"1355:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:23"},"nodeType":"YulFunctionCall","src":"1310:57:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:23","type":""}],"src":"1207:166:23"},{"body":{"nodeType":"YulBlock","src":"1474:1256:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:23"},"nodeType":"YulFunctionCall","src":"1498:10:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:23"},"nodeType":"YulFunctionCall","src":"1553:18:23"},"nodeType":"YulExpressionStatement","src":"1553:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:23","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:23"},"nodeType":"YulFunctionCall","src":"1535:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:23"},"nodeType":"YulFunctionCall","src":"1531:18:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:23"},"nodeType":"YulFunctionCall","src":"1520:30:23"},"nodeType":"YulIf","src":"1517:56:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:23"},"nodeType":"YulFunctionCall","src":"1658:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:23"},"nodeType":"YulFunctionCall","src":"1632:38:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:23"},"nodeType":"YulFunctionCall","src":"1582:97:23"},"nodeType":"YulExpressionStatement","src":"1582:97:23"},{"nodeType":"YulVariableDeclaration","src":"1688:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:23","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:23","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:23"},"nodeType":"YulFunctionCall","src":"1858:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:23"},"nodeType":"YulFunctionCall","src":"1846:20:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:23"},"nodeType":"YulFunctionCall","src":"1893:35:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:23"},"nodeType":"YulFunctionCall","src":"2067:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:23"},"nodeType":"YulFunctionCall","src":"2061:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:23"},"nodeType":"YulFunctionCall","src":"2046:42:23"},"nodeType":"YulExpressionStatement","src":"2046:42:23"},{"nodeType":"YulAssignment","src":"2105:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:23"},"nodeType":"YulFunctionCall","src":"2115:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:23"}]},{"nodeType":"YulAssignment","src":"2146:40:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:23"},"nodeType":"YulFunctionCall","src":"2159:27:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:23"},"nodeType":"YulFunctionCall","src":"1972:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:23","statements":[{"nodeType":"YulAssignment","src":"1989:24:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:23"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:23"},"nodeType":"YulFunctionCall","src":"1994:19:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:23","statements":[]},"src":"1964:236:23"},{"body":{"nodeType":"YulBlock","src":"2248:166:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:23"},"nodeType":"YulFunctionCall","src":"2289:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:23"},"nodeType":"YulFunctionCall","src":"2283:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:23","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:23"},"nodeType":"YulFunctionCall","src":"2368:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:23","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:23"},"nodeType":"YulFunctionCall","src":"2364:24:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:23"},"nodeType":"YulFunctionCall","src":"2390:6:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:23"},"nodeType":"YulFunctionCall","src":"2360:37:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:23"},"nodeType":"YulFunctionCall","src":"2356:42:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:23"},"nodeType":"YulFunctionCall","src":"2341:58:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:23"},"nodeType":"YulFunctionCall","src":"2326:74:23"},"nodeType":"YulExpressionStatement","src":"2326:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:23"},"nodeType":"YulFunctionCall","src":"2216:19:23"},"nodeType":"YulIf","src":"2213:201:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:23","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:23"},"nodeType":"YulFunctionCall","src":"2444:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:23"},"nodeType":"YulFunctionCall","src":"2440:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:23"},"nodeType":"YulFunctionCall","src":"2427:36:23"},"nodeType":"YulExpressionStatement","src":"2427:36:23"}]},"nodeType":"YulCase","src":"1810:663:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:23","statements":[{"nodeType":"YulAssignment","src":"2571:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:23"},"nodeType":"YulFunctionCall","src":"2586:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:23"},"nodeType":"YulFunctionCall","src":"2580:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:23"},"nodeType":"YulIf","src":"2531:89:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:23"},"nodeType":"YulFunctionCall","src":"2646:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:23"},"nodeType":"YulFunctionCall","src":"2633:81:23"},"nodeType":"YulExpressionStatement","src":"2633:81:23"}]},"nodeType":"YulCase","src":"2482:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:23"},"nodeType":"YulFunctionCall","src":"1787:14:23"},"nodeType":"YulSwitch","src":"1780:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:23","type":""}],"src":"1378:1352:23"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052600d60809081526c2bb930b83832b21022ba3432b960991b60a05260009061002c9082610114565b506040805180820190915260048152630ae8aa8960e31b60208201526001906100559082610114565b506002805460ff1916601217905534801561006f57600080fd5b506101d3565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009f57607f821691505b6020821081036100bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010f57600081815260208120601f850160051c810160208610156100ec5750805b601f850160051c820191505b8181101561010b578281556001016100f8565b5050505b505050565b81516001600160401b0381111561012d5761012d610075565b6101418161013b845461008b565b846100c5565b602080601f831160018114610176576000841561015e5750858301515b600019600386901b1c1916600185901b17855561010b565b600085815260208120601f198616915b828110156101a557888601518255948401946001909101908401610186565b50858210156101c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6107ae806101e26000396000f3fe6080604052600436106100905760003560e01c806306fdde03146100a4578063095ea7b3146100cf57806318160ddd146100ff57806323b872dd1461011c5780632e1a7d4d1461013c578063313ce5671461015c57806370a082311461018857806395d89b41146101b5578063a9059cbb146101ca578063d0e30db0146101ea578063dd62ed3e146101f257600080fd5b3661009f5761009d61022a565b005b600080fd5b3480156100b057600080fd5b506100b9610285565b6040516100c691906105cb565b60405180910390f35b3480156100db57600080fd5b506100ef6100ea366004610635565b610313565b60405190151581526020016100c6565b34801561010b57600080fd5b50475b6040519081526020016100c6565b34801561012857600080fd5b506100ef61013736600461065f565b610380565b34801561014857600080fd5b5061009d61015736600461069b565b610504565b34801561016857600080fd5b506002546101769060ff1681565b60405160ff90911681526020016100c6565b34801561019457600080fd5b5061010e6101a33660046106b4565b60036020526000908152604090205481565b3480156101c157600080fd5b506100b96105aa565b3480156101d657600080fd5b506100ef6101e5366004610635565b6105b7565b61009d61022a565b3480156101fe57600080fd5b5061010e61020d3660046106cf565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610249908490610718565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102929061072b565b80601f01602080910402602001604051908101604052809291908181526020018280546102be9061072b565b801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061036e9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600360205260408120548211156103a557600080fd5b6001600160a01b03841633148015906103e357506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610451576001600160a01b038416600090815260046020908152604080832033845290915290205482111561041857600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061044b908490610765565b90915550505b6001600160a01b03841660009081526003602052604081208054849290610479908490610765565b90915550506001600160a01b038316600090815260036020526040812080548492906104a6908490610718565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104f291815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561052057600080fd5b336000908152600360205260408120805483929061053f908490610765565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610571573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102929061072b565b60006105c4338484610380565b9392505050565b600060208083528351808285015260005b818110156105f8578581018301518582016040015282016105dc565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063057600080fd5b919050565b6000806040838503121561064857600080fd5b61065183610619565b946020939093013593505050565b60008060006060848603121561067457600080fd5b61067d84610619565b925061068b60208501610619565b9150604084013590509250925092565b6000602082840312156106ad57600080fd5b5035919050565b6000602082840312156106c657600080fd5b6105c482610619565b600080604083850312156106e257600080fd5b6106eb83610619565b91506106f960208401610619565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037a5761037a610702565b600181811c9082168061073f57607f821691505b60208210810361075f57634e487b7160e01b600052602260045260246000fd5b50919050565b8181038181111561037a5761037a61070256fea26469706673582212202671c4941cd99435776cda9adea5ccbc58fdf57d495af0f317e2f886a5d1964f64736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xD PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH13 0x2BB930B83832B21022BA3432B9 PUSH1 0x99 SHL PUSH1 0xA0 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2C SWAP1 DUP3 PUSH2 0x114 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0xAE8AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 PUSH2 0x55 SWAP1 DUP3 PUSH2 0x114 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xEC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12D JUMPI PUSH2 0x12D PUSH2 0x75 JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x13B DUP5 SLOAD PUSH2 0x8B JUMP JUMPDEST DUP5 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x15E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x10B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x186 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C3 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x7AE DUP1 PUSH2 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x9F JUMPI PUSH2 0x9D PUSH2 0x22A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x176 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x5AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x9D PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x249 SWAP1 DUP5 SWAP1 PUSH2 0x718 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x292 SWAP1 PUSH2 0x72B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BE SWAP1 PUSH2 0x72B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x36E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT EQ ISZERO JUMPDEST ISZERO PUSH2 0x451 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x44B SWAP1 DUP5 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x479 SWAP1 DUP5 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x53F SWAP1 DUP5 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x292 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C4 CALLER DUP5 DUP5 PUSH2 0x380 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5DC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x651 DUP4 PUSH2 0x619 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67D DUP5 PUSH2 0x619 JUMP JUMPDEST SWAP3 POP PUSH2 0x68B PUSH1 0x20 DUP6 ADD PUSH2 0x619 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C4 DUP3 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6EB DUP4 PUSH2 0x619 JUMP JUMPDEST SWAP2 POP PUSH2 0x6F9 PUSH1 0x20 DUP5 ADD PUSH2 0x619 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37A JUMPI PUSH2 0x37A PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x73F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37A JUMPI PUSH2 0x37A PUSH2 0x702 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH18 0xC4941CD99435776CDA9ADEA5CCBC58FDF57D 0x49 GAS CREATE RETURN OR 0xE2 0xF8 DUP7 0xA5 0xD1 SWAP7 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"90:36:22:-:0;69:1857;90:36;;69:1857;90:36;;;-1:-1:-1;;;90:36:22;;-1:-1:-1;;90:36:22;;-1:-1:-1;90:36:22;:::i;:::-;-1:-1:-1;133:29:22;;;;;;;;;;;;-1:-1:-1;;;133:29:22;;;;;;;;;;:::i;:::-;-1:-1:-1;169:26:22;;;-1:-1:-1;;169:26:22;193:2;169:26;;;69:1857;;;;;;;;;;;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:23;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:23;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:23;;;2580:26;2531:89;-1:-1:-1;;1335:1:23;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:23;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:23;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:23;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:23:o;:::-;69:1857:22;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_4974":{"entryPoint":null,"id":4974,"parameterSlots":0,"returnSlots":0},"@allowance_4967":{"entryPoint":null,"id":4967,"parameterSlots":0,"returnSlots":0},"@approve_5070":{"entryPoint":787,"id":5070,"parameterSlots":2,"returnSlots":1},"@balanceOf_4961":{"entryPoint":null,"id":4961,"parameterSlots":0,"returnSlots":0},"@decimals_4929":{"entryPoint":null,"id":4929,"parameterSlots":0,"returnSlots":0},"@deposit_4993":{"entryPoint":554,"id":4993,"parameterSlots":0,"returnSlots":0},"@name_4923":{"entryPoint":645,"id":4923,"parameterSlots":0,"returnSlots":0},"@symbol_4926":{"entryPoint":1450,"id":4926,"parameterSlots":0,"returnSlots":0},"@totalSupply_5042":{"entryPoint":null,"id":5042,"parameterSlots":0,"returnSlots":1},"@transferFrom_5166":{"entryPoint":896,"id":5166,"parameterSlots":3,"returnSlots":1},"@transfer_5087":{"entryPoint":1463,"id":5087,"parameterSlots":2,"returnSlots":1},"@withdraw_5030":{"entryPoint":1284,"id":5030,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1561,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1716,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1743,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1631,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1589,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1816,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1893,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1835,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1794,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3318:23","statements":[{"nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:23","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:23","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:23","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:23"},"nodeType":"YulFunctionCall","src":"166:21:23"},"nodeType":"YulExpressionStatement","src":"166:21:23"},{"nodeType":"YulVariableDeclaration","src":"196:27:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:23"},"nodeType":"YulFunctionCall","src":"210:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:23"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:23"},"nodeType":"YulFunctionCall","src":"239:18:23"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:23"},"nodeType":"YulFunctionCall","src":"232:34:23"},"nodeType":"YulExpressionStatement","src":"232:34:23"},{"nodeType":"YulVariableDeclaration","src":"275:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:23"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:23"},"nodeType":"YulFunctionCall","src":"369:17:23"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:23"},"nodeType":"YulFunctionCall","src":"365:26:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:23"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:23"},"nodeType":"YulFunctionCall","src":"403:14:23"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:23"},"nodeType":"YulFunctionCall","src":"399:23:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:23"},"nodeType":"YulFunctionCall","src":"393:30:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:23"},"nodeType":"YulFunctionCall","src":"358:66:23"},"nodeType":"YulExpressionStatement","src":"358:66:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:23"},"nodeType":"YulFunctionCall","src":"302:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:23","statements":[{"nodeType":"YulAssignment","src":"318:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:23"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:23"},"nodeType":"YulFunctionCall","src":"323:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:23","statements":[]},"src":"294:140:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:23"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:23"},"nodeType":"YulFunctionCall","src":"454:22:23"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:23"},"nodeType":"YulFunctionCall","src":"450:31:23"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:23"},"nodeType":"YulFunctionCall","src":"443:42:23"},"nodeType":"YulExpressionStatement","src":"443:42:23"},{"nodeType":"YulAssignment","src":"494:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:23"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:23"},"nodeType":"YulFunctionCall","src":"525:15:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:23"},"nodeType":"YulFunctionCall","src":"542:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:23"},"nodeType":"YulFunctionCall","src":"521:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:23"},"nodeType":"YulFunctionCall","src":"506:45:23"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:23"},"nodeType":"YulFunctionCall","src":"502:54:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:23","type":""}],"src":"14:548:23"},{"body":{"nodeType":"YulBlock","src":"616:124:23","statements":[{"nodeType":"YulAssignment","src":"626:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:23"},"nodeType":"YulFunctionCall","src":"635:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:23"}]},{"body":{"nodeType":"YulBlock","src":"718:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:23"},"nodeType":"YulFunctionCall","src":"720:12:23"},"nodeType":"YulExpressionStatement","src":"720:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:23","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:23"},"nodeType":"YulFunctionCall","src":"699:11:23"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:23"},"nodeType":"YulFunctionCall","src":"695:19:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:23"},"nodeType":"YulFunctionCall","src":"684:31:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:23"},"nodeType":"YulFunctionCall","src":"674:42:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:23"},"nodeType":"YulFunctionCall","src":"667:50:23"},"nodeType":"YulIf","src":"664:70:23"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:23","type":""}],"src":"567:173:23"},{"body":{"nodeType":"YulBlock","src":"832:167:23","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:23"},"nodeType":"YulFunctionCall","src":"880:12:23"},"nodeType":"YulExpressionStatement","src":"880:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:23"},"nodeType":"YulFunctionCall","src":"849:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:23"},"nodeType":"YulFunctionCall","src":"845:32:23"},"nodeType":"YulIf","src":"842:52:23"},{"nodeType":"YulAssignment","src":"903:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:23"},"nodeType":"YulFunctionCall","src":"913:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:23"}]},{"nodeType":"YulAssignment","src":"951:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:23"},"nodeType":"YulFunctionCall","src":"974:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:23"},"nodeType":"YulFunctionCall","src":"961:32:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:23","type":""}],"src":"745:254:23"},{"body":{"nodeType":"YulBlock","src":"1099:92:23","statements":[{"nodeType":"YulAssignment","src":"1109:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:23"},"nodeType":"YulFunctionCall","src":"1117:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:23"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:23"},"nodeType":"YulFunctionCall","src":"1169:14:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:23"},"nodeType":"YulFunctionCall","src":"1162:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:23"},"nodeType":"YulFunctionCall","src":"1144:41:23"},"nodeType":"YulExpressionStatement","src":"1144:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:23","type":""}],"src":"1004:187:23"},{"body":{"nodeType":"YulBlock","src":"1297:76:23","statements":[{"nodeType":"YulAssignment","src":"1307:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:23"},"nodeType":"YulFunctionCall","src":"1315:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:23"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:23"},"nodeType":"YulFunctionCall","src":"1342:25:23"},"nodeType":"YulExpressionStatement","src":"1342:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:23","type":""}],"src":"1196:177:23"},{"body":{"nodeType":"YulBlock","src":"1482:224:23","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:23"},"nodeType":"YulFunctionCall","src":"1530:12:23"},"nodeType":"YulExpressionStatement","src":"1530:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:23"},"nodeType":"YulFunctionCall","src":"1499:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:23"},"nodeType":"YulFunctionCall","src":"1495:32:23"},"nodeType":"YulIf","src":"1492:52:23"},{"nodeType":"YulAssignment","src":"1553:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:23"},"nodeType":"YulFunctionCall","src":"1563:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:23"}]},{"nodeType":"YulAssignment","src":"1601:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:23"},"nodeType":"YulFunctionCall","src":"1630:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:23"},"nodeType":"YulFunctionCall","src":"1611:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:23"}]},{"nodeType":"YulAssignment","src":"1658:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:23"},"nodeType":"YulFunctionCall","src":"1681:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:23"},"nodeType":"YulFunctionCall","src":"1668:32:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:23","type":""}],"src":"1378:328:23"},{"body":{"nodeType":"YulBlock","src":"1781:110:23","statements":[{"body":{"nodeType":"YulBlock","src":"1827:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1836:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1829:6:23"},"nodeType":"YulFunctionCall","src":"1829:12:23"},"nodeType":"YulExpressionStatement","src":"1829:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1802:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1811:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1798:3:23"},"nodeType":"YulFunctionCall","src":"1798:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"1823:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1794:3:23"},"nodeType":"YulFunctionCall","src":"1794:32:23"},"nodeType":"YulIf","src":"1791:52:23"},{"nodeType":"YulAssignment","src":"1852:33:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1875:9:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1862:12:23"},"nodeType":"YulFunctionCall","src":"1862:23:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1852:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1747:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1758:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1770:6:23","type":""}],"src":"1711:180:23"},{"body":{"nodeType":"YulBlock","src":"1993:87:23","statements":[{"nodeType":"YulAssignment","src":"2003:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2015:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2026:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2011:3:23"},"nodeType":"YulFunctionCall","src":"2011:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2003:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2045:9:23"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2060:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2068:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2056:3:23"},"nodeType":"YulFunctionCall","src":"2056:17:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2038:6:23"},"nodeType":"YulFunctionCall","src":"2038:36:23"},"nodeType":"YulExpressionStatement","src":"2038:36:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1962:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1973:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1984:4:23","type":""}],"src":"1896:184:23"},{"body":{"nodeType":"YulBlock","src":"2155:116:23","statements":[{"body":{"nodeType":"YulBlock","src":"2201:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2210:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2213:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2203:6:23"},"nodeType":"YulFunctionCall","src":"2203:12:23"},"nodeType":"YulExpressionStatement","src":"2203:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2176:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:23"},"nodeType":"YulFunctionCall","src":"2172:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2197:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2168:3:23"},"nodeType":"YulFunctionCall","src":"2168:32:23"},"nodeType":"YulIf","src":"2165:52:23"},{"nodeType":"YulAssignment","src":"2226:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2236:18:23"},"nodeType":"YulFunctionCall","src":"2236:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2226:6:23"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2121:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2132:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2144:6:23","type":""}],"src":"2085:186:23"},{"body":{"nodeType":"YulBlock","src":"2363:173:23","statements":[{"body":{"nodeType":"YulBlock","src":"2409:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2418:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2421:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2411:6:23"},"nodeType":"YulFunctionCall","src":"2411:12:23"},"nodeType":"YulExpressionStatement","src":"2411:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2384:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2393:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2380:3:23"},"nodeType":"YulFunctionCall","src":"2380:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2405:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2376:3:23"},"nodeType":"YulFunctionCall","src":"2376:32:23"},"nodeType":"YulIf","src":"2373:52:23"},{"nodeType":"YulAssignment","src":"2434:39:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2444:18:23"},"nodeType":"YulFunctionCall","src":"2444:29:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2434:6:23"}]},{"nodeType":"YulAssignment","src":"2482:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2515:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2526:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2511:3:23"},"nodeType":"YulFunctionCall","src":"2511:18:23"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2492:18:23"},"nodeType":"YulFunctionCall","src":"2492:38:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2482:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2321:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2332:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2344:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2352:6:23","type":""}],"src":"2276:260:23"},{"body":{"nodeType":"YulBlock","src":"2573:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2590:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2597:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2602:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2593:3:23"},"nodeType":"YulFunctionCall","src":"2593:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2583:6:23"},"nodeType":"YulFunctionCall","src":"2583:31:23"},"nodeType":"YulExpressionStatement","src":"2583:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2630:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2633:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2623:6:23"},"nodeType":"YulFunctionCall","src":"2623:15:23"},"nodeType":"YulExpressionStatement","src":"2623:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2654:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2657:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2647:6:23"},"nodeType":"YulFunctionCall","src":"2647:15:23"},"nodeType":"YulExpressionStatement","src":"2647:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2541:127:23"},{"body":{"nodeType":"YulBlock","src":"2721:77:23","statements":[{"nodeType":"YulAssignment","src":"2731:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2742:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2745:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2738:3:23"},"nodeType":"YulFunctionCall","src":"2738:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2731:3:23"}]},{"body":{"nodeType":"YulBlock","src":"2770:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2772:16:23"},"nodeType":"YulFunctionCall","src":"2772:18:23"},"nodeType":"YulExpressionStatement","src":"2772:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2762:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"2765:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2759:2:23"},"nodeType":"YulFunctionCall","src":"2759:10:23"},"nodeType":"YulIf","src":"2756:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2704:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"2707:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2713:3:23","type":""}],"src":"2673:125:23"},{"body":{"nodeType":"YulBlock","src":"2858:325:23","statements":[{"nodeType":"YulAssignment","src":"2868:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2882:1:23","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2885:4:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2878:3:23"},"nodeType":"YulFunctionCall","src":"2878:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2868:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"2899:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2929:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"2935:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2925:3:23"},"nodeType":"YulFunctionCall","src":"2925:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2903:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2976:31:23","statements":[{"nodeType":"YulAssignment","src":"2978:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2992:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3000:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2988:3:23"},"nodeType":"YulFunctionCall","src":"2988:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2978:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2956:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2949:6:23"},"nodeType":"YulFunctionCall","src":"2949:26:23"},"nodeType":"YulIf","src":"2946:61:23"},{"body":{"nodeType":"YulBlock","src":"3066:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3087:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3094:3:23","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3099:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3090:3:23"},"nodeType":"YulFunctionCall","src":"3090:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3080:6:23"},"nodeType":"YulFunctionCall","src":"3080:31:23"},"nodeType":"YulExpressionStatement","src":"3080:31:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3131:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3134:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3124:6:23"},"nodeType":"YulFunctionCall","src":"3124:15:23"},"nodeType":"YulExpressionStatement","src":"3124:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3159:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3162:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3152:6:23"},"nodeType":"YulFunctionCall","src":"3152:15:23"},"nodeType":"YulExpressionStatement","src":"3152:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3022:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3045:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3053:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3042:2:23"},"nodeType":"YulFunctionCall","src":"3042:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3019:2:23"},"nodeType":"YulFunctionCall","src":"3019:38:23"},"nodeType":"YulIf","src":"3016:161:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2838:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2847:6:23","type":""}],"src":"2803:380:23"},{"body":{"nodeType":"YulBlock","src":"3237:79:23","statements":[{"nodeType":"YulAssignment","src":"3247:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3259:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"3262:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3255:3:23"},"nodeType":"YulFunctionCall","src":"3255:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3247:4:23"}]},{"body":{"nodeType":"YulBlock","src":"3288:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3290:16:23"},"nodeType":"YulFunctionCall","src":"3290:18:23"},"nodeType":"YulExpressionStatement","src":"3290:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"3279:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"3285:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3276:2:23"},"nodeType":"YulFunctionCall","src":"3276:11:23"},"nodeType":"YulIf","src":"3273:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3219:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"3222:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3228:4:23","type":""}],"src":"3188:128:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100905760003560e01c806306fdde03146100a4578063095ea7b3146100cf57806318160ddd146100ff57806323b872dd1461011c5780632e1a7d4d1461013c578063313ce5671461015c57806370a082311461018857806395d89b41146101b5578063a9059cbb146101ca578063d0e30db0146101ea578063dd62ed3e146101f257600080fd5b3661009f5761009d61022a565b005b600080fd5b3480156100b057600080fd5b506100b9610285565b6040516100c691906105cb565b60405180910390f35b3480156100db57600080fd5b506100ef6100ea366004610635565b610313565b60405190151581526020016100c6565b34801561010b57600080fd5b50475b6040519081526020016100c6565b34801561012857600080fd5b506100ef61013736600461065f565b610380565b34801561014857600080fd5b5061009d61015736600461069b565b610504565b34801561016857600080fd5b506002546101769060ff1681565b60405160ff90911681526020016100c6565b34801561019457600080fd5b5061010e6101a33660046106b4565b60036020526000908152604090205481565b3480156101c157600080fd5b506100b96105aa565b3480156101d657600080fd5b506100ef6101e5366004610635565b6105b7565b61009d61022a565b3480156101fe57600080fd5b5061010e61020d3660046106cf565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610249908490610718565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102929061072b565b80601f01602080910402602001604051908101604052809291908181526020018280546102be9061072b565b801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061036e9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600360205260408120548211156103a557600080fd5b6001600160a01b03841633148015906103e357506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610451576001600160a01b038416600090815260046020908152604080832033845290915290205482111561041857600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061044b908490610765565b90915550505b6001600160a01b03841660009081526003602052604081208054849290610479908490610765565b90915550506001600160a01b038316600090815260036020526040812080548492906104a6908490610718565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104f291815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561052057600080fd5b336000908152600360205260408120805483929061053f908490610765565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610571573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102929061072b565b60006105c4338484610380565b9392505050565b600060208083528351808285015260005b818110156105f8578581018301518582016040015282016105dc565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063057600080fd5b919050565b6000806040838503121561064857600080fd5b61065183610619565b946020939093013593505050565b60008060006060848603121561067457600080fd5b61067d84610619565b925061068b60208501610619565b9150604084013590509250925092565b6000602082840312156106ad57600080fd5b5035919050565b6000602082840312156106c657600080fd5b6105c482610619565b600080604083850312156106e257600080fd5b6106eb83610619565b91506106f960208401610619565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037a5761037a610702565b600181811c9082168061073f57607f821691505b60208210810361075f57634e487b7160e01b600052602260045260246000fd5b50919050565b8181038181111561037a5761037a61070256fea26469706673582212202671c4941cd99435776cda9adea5ccbc58fdf57d495af0f317e2f886a5d1964f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x9F JUMPI PUSH2 0x9D PUSH2 0x22A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x176 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH2 0x5AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x9D PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x249 SWAP1 DUP5 SWAP1 PUSH2 0x718 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x292 SWAP1 PUSH2 0x72B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BE SWAP1 PUSH2 0x72B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x36E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT EQ ISZERO JUMPDEST ISZERO PUSH2 0x451 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x44B SWAP1 DUP5 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x479 SWAP1 DUP5 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x53F SWAP1 DUP5 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x292 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C4 CALLER DUP5 DUP5 PUSH2 0x380 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5DC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x651 DUP4 PUSH2 0x619 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67D DUP5 PUSH2 0x619 JUMP JUMPDEST SWAP3 POP PUSH2 0x68B PUSH1 0x20 DUP6 ADD PUSH2 0x619 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C4 DUP3 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6EB DUP4 PUSH2 0x619 JUMP JUMPDEST SWAP2 POP PUSH2 0x6F9 PUSH1 0x20 DUP5 ADD PUSH2 0x619 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37A JUMPI PUSH2 0x37A PUSH2 0x702 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x73F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37A JUMPI PUSH2 0x37A PUSH2 0x702 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH18 0xC4941CD99435776CDA9ADEA5CCBC58FDF57D 0x49 GAS CREATE RETURN OR 0xE2 0xF8 DUP7 0xA5 0xD1 SWAP7 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"69:1857:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:9;:7;:9::i;:::-;69:1857;;;;;90:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1109:181;;;;;;;;;;-1:-1:-1;1109:181:22;;;;;:::i;:::-;;:::i;:::-;;;1169:14:23;;1162:22;1144:41;;1132:2;1117:18;1109:181:22;1004:187:23;:97:22;;;;;;;;;;-1:-1:-1;1072:21:22;1004:97;;;1342:25:23;;;1330:2;1315:18;1004:97:22;1196:177:23;1429:494:22;;;;;;;;;;-1:-1:-1;1429:494:22;;;;;:::i;:::-;;:::i;779:217::-;;;;;;;;;;-1:-1:-1;779:217:22;;;;;:::i;:::-;;:::i;169:26::-;;;;;;;;;;-1:-1:-1;169:26:22;;;;;;;;;;;2068:4:23;2056:17;;;2038:36;;2026:2;2011:18;169:26:22;1896:184:23;457:41:22;;;;;;;;;;-1:-1:-1;457:41:22;;;;;:::i;:::-;;;;;;;;;;;;;;133:29;;;;;;;;;;;;;:::i;1298:123::-;;;;;;;;;;-1:-1:-1;1298:123:22;;;;;:::i;:::-;;:::i;638:133::-;;;:::i;505:61::-;;;;;;;;;;-1:-1:-1;505:61:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;638:133;693:10;683:21;;;;:9;:21;;;;;:34;;708:9;;683:21;:34;;708:9;;683:34;:::i;:::-;;;;-1:-1:-1;;733:30:22;;753:9;1342:25:23;;741:10:22;;733:30;;1330:2:23;1315:18;733:30:22;;;;;;;638:133::o;90:36::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1109:181::-;1192:10;1165:4;1182:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1182:26:22;;;;;;;;;;:32;;;1230:30;1165:4;;1182:26;;1230:30;;;;1211:3;1342:25:23;;1330:2;1315:18;;1196:177;1230:30:22;;;;;;;;-1:-1:-1;1278:4:22;1109:181;;;;;:::o;1429:494::-;-1:-1:-1;;;;;1562:14:22;;1537:4;1562:14;;;:9;:14;;;;;;:21;-1:-1:-1;1562:21:22;1554:30;;;;;;-1:-1:-1;;;;;1601:17:22;;1608:10;1601:17;;;;:65;;-1:-1:-1;;;;;;1622:14:22;;;;;;:9;:14;;;;;;;;1637:10;1622:26;;;;;;;;-1:-1:-1;;1622:44:22;;1601:65;1597:188;;;-1:-1:-1;;;;;1691:14:22;;;;;;:9;:14;;;;;;;;1706:10;1691:26;;;;;;;;:33;-1:-1:-1;1691:33:22;1683:42;;;;;;-1:-1:-1;;;;;1740:14:22;;;;;;:9;:14;;;;;;;;1755:10;1740:26;;;;;;;:33;;1770:3;;1740:14;:33;;1770:3;;1740:33;:::i;:::-;;;;-1:-1:-1;;1597:188:22;-1:-1:-1;;;;;1797:14:22;;;;;;:9;:14;;;;;:21;;1815:3;;1797:14;:21;;1815:3;;1797:21;:::i;:::-;;;;-1:-1:-1;;;;;;;1829:14:22;;;;;;:9;:14;;;;;:21;;1847:3;;1829:14;:21;;1847:3;;1829:21;:::i;:::-;;;;;;;;1882:3;-1:-1:-1;;;;;1868:23:22;1877:3;-1:-1:-1;;;;;1868:23:22;;1887:3;1868:23;;;;1342:25:23;;1330:2;1315:18;;1196:177;1868:23:22;;;;;;;;-1:-1:-1;1911:4:22;1429:494;;;;;:::o;779:217::-;843:10;833:21;;;;:9;:21;;;;;;:28;-1:-1:-1;833:28:22;825:37;;;;;;883:10;873:21;;;;:9;:21;;;;;:28;;898:3;;873:21;:28;;898:3;;873:28;:::i;:::-;;;;-1:-1:-1;;912:33:22;;920:10;;912:33;;;;;941:3;;912:33;;;;941:3;920:10;912:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;961:27:22;;1342:25:23;;;972:10:22;;961:27;;1330:2:23;1315:18;961:27:22;;;;;;;779:217;:::o;133:29::-;;;;;;;:::i;1298:123::-;1355:4;1379:34;1392:10;1404:3;1409;1379:12;:34::i;:::-;1372:41;1298:123;-1:-1:-1;;;1298:123:22:o;14:548:23:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:23;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:23:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1711:180::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;-1:-1:-1;1862:23:23;;1711:180;-1:-1:-1;1711:180:23:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:127::-;2602:10;2597:3;2593:20;2590:1;2583:31;2633:4;2630:1;2623:15;2657:4;2654:1;2647:15;2673:125;2738:9;;;2759:10;;;2756:36;;;2772:18;;:::i;2803:380::-;2882:1;2878:12;;;;2925;;;2946:61;;3000:4;2992:6;2988:17;2978:27;;2946:61;3053:2;3045:6;3042:14;3022:18;3019:38;3016:161;;3099:10;3094:3;3090:20;3087:1;3080:31;3134:4;3131:1;3124:15;3162:4;3159:1;3152:15;3016:161;;2803:380;;;:::o;3188:128::-;3255:9;;;3276:11;;;3273:37;;;3290:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"393200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24500","balanceOf(address)":"2629","decimals()":"2401","deposit()":"26102","name()":"infinite","symbol()":"infinite","totalSupply()":"205","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","withdraw(uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","deposit()":"d0e30db0","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/WETH.sol\":\"WETH\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/mocks/WETH.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n\\r\\npragma solidity >=0.4.22;\\r\\n\\r\\ncontract WETH {\\r\\n    string public name = \\\"Wrapped Ether\\\";\\r\\n    string public symbol = \\\"WETH\\\";\\r\\n    uint8 public decimals = 18;\\r\\n\\r\\n    event Approval(address indexed src, address indexed guy, uint wad);\\r\\n    event Transfer(address indexed src, address indexed dst, uint wad);\\r\\n    event Deposit(address indexed dst, uint wad);\\r\\n    event Withdrawal(address indexed src, uint wad);\\r\\n\\r\\n    mapping(address => uint) public balanceOf;\\r\\n    mapping(address => mapping(address => uint)) public allowance;\\r\\n\\r\\n    receive() external payable {\\r\\n        deposit();\\r\\n    }\\r\\n\\r\\n    function deposit() public payable {\\r\\n        balanceOf[msg.sender] += msg.value;\\r\\n        emit Deposit(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function withdraw(uint wad) public {\\r\\n        require(balanceOf[msg.sender] >= wad);\\r\\n        balanceOf[msg.sender] -= wad;\\r\\n        payable(msg.sender).transfer(wad);\\r\\n        emit Withdrawal(msg.sender, wad);\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view returns (uint) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function approve(address guy, uint wad) public returns (bool) {\\r\\n        allowance[msg.sender][guy] = wad;\\r\\n        emit Approval(msg.sender, guy, wad);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transfer(address dst, uint wad) public returns (bool) {\\r\\n        return transferFrom(msg.sender, dst, wad);\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint wad\\r\\n    ) public returns (bool) {\\r\\n        require(balanceOf[src] >= wad);\\r\\n\\r\\n        if (src != msg.sender && allowance[src][msg.sender] != type(uint).max) {\\r\\n            require(allowance[src][msg.sender] >= wad);\\r\\n            allowance[src][msg.sender] -= wad;\\r\\n        }\\r\\n\\r\\n        balanceOf[src] -= wad;\\r\\n        balanceOf[dst] += wad;\\r\\n\\r\\n        emit Transfer(src, dst, wad);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5c687418144dc136f93f6638663bc15d0f68fdb6d01b4d5c700c520875f41782\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4923,"contract":"contracts/mocks/WETH.sol:WETH","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4926,"contract":"contracts/mocks/WETH.sol:WETH","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":4929,"contract":"contracts/mocks/WETH.sol:WETH","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":4961,"contract":"contracts/mocks/WETH.sol:WETH","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":4967,"contract":"contracts/mocks/WETH.sol:WETH","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}